{
  "version": 3,
  "sources": ["../js/pp/index.js", "../js/pp/plugin/js/extensions/array_extension.js", "../js/pp/plugin/utils/extension_utils.js", "../js/pp/plugin/js/extensions/math_extension.js", "../js/pp/plugin/js/extensions/number_extension.js", "../js/pp/plugin/js/extensions/init_js_extentions.js", "../js/pp/plugin/js/init_js_plugins.js", "../js/pp/plugin/wl/extensions/object_extension.js", "../js/pp/plugin/wl/extensions/scene_extension.js", "../js/pp/plugin/wl/extensions/init_wl_extentions.js", "../js/pp/plugin/wl/mods/components/component_clone_mod.js", "../js/pp/cauldron/utils/mesh_utils.js", "../js/pp/cauldron/wl/engine_globals.js", "../js/pp/plugin/wl/mods/components/cursor_component_mod.js", "../js/pp/cauldron/utils/xr_utils.js", "../js/pp/input/cauldron/input_types.js", "../js/pp/input/cauldron/input_utils.js", "../js/pp/plugin/wl/mods/components/cursor_target_component_mod.js", "../js/pp/plugin/wl/mods/components/mouse_look_component_mod.js", "../js/pp/cauldron/cauldron/timer.js", "../js/pp/plugin/wl/mods/components/init_component_mods.js", "../js/pp/plugin/wl/mods/init_wl_mods.js", "../js/pp/plugin/wl/init_wl_plugins.js", "../js/pp/plugin/init_plugins.js", "../js/pp/cauldron/wl/register_wl_components.js", "../js/pp/pp/register_pp_components.js", "../js/pp/pp/init_pp.js", "../js/pp/pp/player_objects.js", "../js/pp/pp/player_objects_global.js", "../js/pp/pp/default_resources.js", "../js/pp/pp/default_resources_global.js", "../js/pp/pp/components/pp_gateway_component.js", "../js/pp/pp/components/add_pp_to_window_component.js", "../js/pp/audio/components/audio_manager_component.js", "../js/pp/audio/audio_manager.js", "../js/pp/audio/audio_player.js", "../js/pp/audio/audio_setup.js", "../js/pp/audio/audio_manager_global.js", "../js/pp/cauldron/visual/components/visual_manager_component.js", "../js/pp/cauldron/visual/visual_data.js", "../js/pp/cauldron/visual/visual_globals.js", "../js/pp/cauldron/cauldron/object_pool.js", "../js/pp/cauldron/cauldron/object_pools_manager.js", "../js/pp/cauldron/visual/elements/visual_element_types.js", "../js/pp/cauldron/visual/elements/visual_line.js", "../js/pp/cauldron/visual/elements/visual_arrow.js", "../js/pp/cauldron/visual/elements/visual_mesh.js", "../js/pp/cauldron/visual/elements/visual_point.js", "../js/pp/cauldron/physics/physics_utils.js", "../js/pp/cauldron/physics/physics_layer_flags.js", "../js/pp/cauldron/physics/physics_raycast_data.js", "../js/pp/cauldron/visual/elements/visual_raycast.js", "../js/pp/cauldron/visual/elements/visual_text.js", "../js/pp/cauldron/visual/elements/visual_torus.js", "../js/pp/cauldron/visual/elements/visual_transform.js", "../js/pp/cauldron/visual/visual_manager.js", "../js/pp/cauldron/wl/components/add_wl_to_window_component.js", "../js/pp/debug/components/debug_manager_component.js", "../js/pp/debug/debug_globals.js", "../js/pp/debug/debug_visual_manager.js", "../js/pp/debug/debug_manager.js", "../js/pp/input/cauldron/components/input_manager_component.js", "../js/pp/input/pose/base_pose.js", "../js/pp/input/pose/hand_pose.js", "../js/pp/input/gamepad/gamepad_buttons.js", "../js/pp/input/gamepad/gamepad_cores/gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/classic_gamepad_core.js", "../js/pp/input/cauldron/input_globals.js", "../js/pp/input/cauldron/keyboard.js", "../js/pp/input/gamepad/gamepad_cores/keyboard_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/xr_gamepad_core.js", "../js/pp/input/gamepad/base_gamepad.js", "../js/pp/input/gamepad/universal_gamepad.js", "../js/pp/input/gamepad/cauldron/gamepads_manager.js", "../js/pp/input/cauldron/mouse.js", "../js/pp/input/cauldron/input_manager.js", "../js/pp/tool/cauldron/components/enable_tools_component.js", "../js/pp/tool/cauldron/tool_globals.js", "../js/pp/debug/components/enable_debugs_component.js", "../js/pp/pp/components/get_default_resources_component.js", "../js/pp/pp/components/get_player_objects_component.js", "../js/pp/tool/easy_tune/components/init_easy_tune_variables_component.js", "../js/pp/tool/easy_tune/easy_tune_globals.js", "../js/pp/tool/easy_tune/easy_tune_variables.js", "../js/pp/audio/audio_utils.js", "../js/pp/audio/howler/howler_audio_player.js", "../js/pp/audio/components/mute_everything_component.js", "../js/pp/audio/components/spatial_audio_listener_component.js", "../js/pp/cauldron/benchmarks/benchmark_max_physx_component.js", "../js/pp/cauldron/physics/physics_collision_collector.js", "../js/pp/cauldron/benchmarks/benchmark_max_visible_triangles_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_transform_component.js", "../js/pp/tool/easy_tune/easy_tune_utils.js", "../js/pp/tool/easy_tune/easy_tune_variable_types.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_object_tuner.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_transform.js", "../js/pp/cauldron/utils/save_utils.js", "../js/pp/cauldron/cauldron/save_manager.js", "../js/pp/cauldron/components/clear_console_on_xr_session_start_component.js", "../js/pp/cauldron/components/set_active_component.js", "../js/pp/cauldron/components/adjust_hierarchy_physx_scale_component.js", "../js/pp/cauldron/components/show_fps_component.js", "../js/pp/cauldron/fsm/fsm.js", "../js/pp/cauldron/fsm/state.js", "../js/pp/cauldron/fsm/transition.js", "../js/pp/cauldron/fsm/states/timer_state.js", "../js/pp/cauldron/utils/color_utils.js", "../js/pp/cauldron/utils/material_utils.js", "../js/pp/cauldron/utils/text_utils.js", "../js/pp/cauldron/utils/browser_utils.js", "../js/pp/cauldron/utils/js_utils.js", "../js/pp/debug/components/debug_transform_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_overwriter.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js", "../js/pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter.js", "../js/pp/gameplay/cauldron/cauldron/number_over_value.js", "../js/pp/gameplay/grab_throw/grabbable_component.js", "../js/pp/gameplay/grab_throw/grabber_hand_component.js", "../js/pp/gameplay/integrations/construct_arcade/ca_utils.js", "../js/pp/gameplay/integrations/construct_arcade/ca_dummy_server.js", "../js/pp/gameplay/integrations/construct_arcade/ca_display_leaderboard_component.js", "../js/pp/gameplay/experimental/cauldron/player/player_head_controller.js", "../js/pp/gameplay/experimental/cauldron/player/player_view_occlusion.js", "../js/pp/gameplay/experimental/cauldron/player/components/player_head_controller_component.js", "../js/pp/gameplay/experimental/cauldron/player/components/player_view_occlusion_component.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_results.js", "../js/pp/gameplay/experimental/character_controller/collision/collision_check_bridge.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_setup.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_utils.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_system.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_system_global.js", "../js/pp/gameplay/experimental/character_controller/collision/components/character_collision_system_component.js", "../js/pp/gameplay/experimental/character_controller/character_controller.js", "../js/pp/gameplay/experimental/character_controller/synced_character_controller.js", "../js/pp/gameplay/experimental/character_controller/character_controller_utils.js", "../js/pp/gameplay/experimental/character_controller/components/character_controller_component.js", "../js/pp/gameplay/experimental/character_controller/player/player_character_controller.js", "../js/pp/gameplay/experimental/character_controller/player/player_head_character_controller.js", "../js/pp/gameplay/experimental/character_controller/player/player_hand_character_controller.js", "../js/pp/gameplay/experimental/character_controller/player/components/player_character_controller_component.js", "../js/pp/gameplay/experimental/character_controller/player/components/player_head_character_controller_component.js", "../js/pp/gameplay/experimental/character_controller/player/components/player_hand_character_controller_component.js", "../js/pp/gameplay/experimental/locomotion/cauldron/global_gravity_globals.js", "../js/pp/gameplay/experimental/locomotion/cauldron/components/global_gravity_component.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_smooth.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_rotate.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_gravity.js", "../js/pp/gameplay/experimental/locomotion/player/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/experimental/locomotion/player/components/player_locomotion_teleport_component.js", "../js/pp/gameplay/experimental/locomotion/player/components/player_locomotion_smooth_component.js", "../js/pp/gameplay/experimental/locomotion/player/components/player_locomotion_rotate_component.js", "../js/pp/gameplay/experimental/locomotion/player/components/player_locomotion_gravity_component.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/locomotion_utils.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_head_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_cleaned.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_smooth_cleaned.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_transform_manager_cleaned.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility.js", "../js/pp/input/cauldron/components/finger_cursor_component.js", "../js/pp/input/cauldron/components/switch_hand_object_component.js", "../js/pp/input/cauldron/components/tracked_hand_draw_joint_component.js", "../js/pp/input/pose/tracked_hand_joint_pose.js", "../js/pp/input/cauldron/components/tracked_hand_draw_all_joints_component.js", "../js/pp/input/cauldron/components/tracked_hand_draw_skin_component.js", "../js/pp/input/pose/tracked_hand_pose.js", "../js/pp/input/gamepad/cauldron/gamepad_mesh_animator_component.js", "../js/pp/input/gamepad/cauldron/gamepad_utils.js", "../js/pp/input/gamepad/cauldron/gamepad_control_scheme_component.js", "../js/pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_params.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_component.js", "../js/pp/input/pose/head_pose.js", "../js/pp/input/pose/components/set_player_height_component.js", "../js/pp/input/pose/components/set_hand_local_transform_component.js", "../js/pp/input/pose/components/set_head_local_transform_component.js", "../js/pp/input/pose/components/set_head_vr_local_transform_component.js", "../js/pp/input/pose/components/set_head_non_vr_local_transform_component.js", "../js/pp/input/pose/components/set_tracked_hand_joint_local_transform_component.js", "../js/pp/input/pose/components/copy_hand_transform_component.js", "../js/pp/input/pose/components/copy_head_transform_component.js", "../js/pp/input/pose/components/copy_player_transform_component.js", "../js/pp/input/pose/components/copy_player_pivot_transform_component.js", "../js/pp/tool/cauldron/tool_types.js", "../js/pp/tool/cauldron/components/tool_cursor_component.js", "../js/pp/tool/console_vr/console_vr_widget_setup.js", "../js/pp/tool/console_vr/console_vr_types.js", "../js/pp/tool/console_vr/console_vr_widget_ui.js", "../js/pp/tool/widget_frame/widget_frame_setup.js", "../js/pp/tool/widget_frame/widget_frame_ui.js", "../js/pp/tool/widget_frame/widget_frame.js", "../js/pp/tool/console_vr/console_original_functions.js", "../js/pp/tool/console_vr/console_vr_global.js", "../js/pp/tool/console_vr/console_vr_widget.js", "../js/pp/tool/console_vr/console_vr.js", "../js/pp/tool/console_vr/components/console_vr_tool_component.js", "../js/pp/tool/console_vr/components/init_console_vr_component.js", "../js/pp/tool/easy_tune/components/easy_tune_tool_component.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget.js", "../js/pp/tool/easy_tune/components/easy_tune_import_variables_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_scale.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_text_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_light_attenuation_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_light_color_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_mesh_ambient_factor_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_mesh_color_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_scale_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_child_number_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_grab_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_text_color_component.js"],
  "sourcesContent": ["//  PP\r\nexport * from \"./pp/init_pp\";\r\nexport * from \"./pp/register_pp_components\";\r\nexport * from \"./pp/player_objects\";\r\nexport * from \"./pp/player_objects_global\";\r\nexport * from \"./pp/default_resources\";\r\nexport * from \"./pp/default_resources_global\";\r\n\r\nexport * from \"./pp/components/pp_gateway_component\";\r\nexport * from \"./pp/components/get_player_objects_component\";\r\nexport * from \"./pp/components/get_default_resources_component\";\r\nexport * from \"./pp/components/add_pp_to_window_component\";\r\n\r\n//\tPLUGIN\r\nexport * from \"./plugin/init_plugins\";\r\n\r\nexport * from \"./plugin/utils/extension_utils\";\r\n\r\nexport * from \"./plugin/js/init_js_plugins\";\r\nexport * from \"./plugin/js/extensions/init_js_extentions\";\r\nexport * from \"./plugin/js/extensions/array_extension\";\r\nexport * from \"./plugin/js/extensions/math_extension\";\r\nexport * from \"./plugin/js/extensions/number_extension\";\r\n\r\nexport * from \"./plugin/wl/init_wl_plugins\";\r\nexport * from \"./plugin/wl/extensions/init_wl_extentions\";\r\nexport * from \"./plugin/wl/extensions/object_extension\";\r\nexport * from \"./plugin/wl/extensions/scene_extension\";\r\nexport * from \"./plugin/wl/mods/init_wl_mods\";\r\nexport * from \"./plugin/wl/mods/components/init_component_mods\";\r\nexport * from \"./plugin/wl/mods/components/component_clone_mod\";\r\nexport * from \"./plugin/wl/mods/components/cursor_component_mod\";\r\nexport * from \"./plugin/wl/mods/components/cursor_target_component_mod\";\r\nexport * from \"./plugin/wl/mods/components/mouse_look_component_mod\";\r\n\r\n//\tAUDIO\r\nexport * from \"./audio/audio_manager\";\r\nexport * from \"./audio/audio_manager_global\";\r\nexport * from \"./audio/audio_player\";\r\nexport * from \"./audio/audio_setup\";\r\nexport * from \"./audio/audio_utils\";\r\n\r\nexport * from \"./audio/howler/howler_audio_player\";\r\n\r\nexport * from \"./audio/components/audio_manager_component\";\r\nexport * from \"./audio/components/mute_everything_component\";\r\nexport * from \"./audio/components/spatial_audio_listener_component\";\r\n\r\n//\tCAULDRON\r\nexport * from \"./cauldron/benchmarks/benchmark_max_physx_component\";\r\nexport * from \"./cauldron/benchmarks/benchmark_max_visible_triangles_component\";\r\n\r\nexport * from \"./cauldron/cauldron/object_pool\";\r\nexport * from \"./cauldron/cauldron/object_pools_manager\";\r\nexport * from \"./cauldron/cauldron/save_manager\";\r\nexport * from \"./cauldron/cauldron/timer\";\r\n\r\nexport * from \"./cauldron/components/clear_console_on_xr_session_start_component\";\r\nexport * from \"./cauldron/components/set_active_component\";\r\nexport * from \"./cauldron/components/adjust_hierarchy_physx_scale_component\";\r\nexport * from \"./cauldron/components/show_fps_component\";\r\n\r\nexport * from \"./cauldron/fsm/fsm\";\r\nexport * from \"./cauldron/fsm/state\";\r\nexport * from \"./cauldron/fsm/transition\";\r\nexport * from \"./cauldron/fsm/states/timer_state\";\r\n\r\nexport * from \"./cauldron/utils/color_utils\";\r\nexport * from \"./cauldron/utils/material_utils\";\r\nexport * from \"./cauldron/utils/mesh_utils\";\r\nexport * from \"./cauldron/utils/save_utils\";\r\nexport * from \"./cauldron/utils/text_utils\";\r\nexport * from \"./cauldron/utils/xr_utils\";\r\nexport * from \"./cauldron/utils/browser_utils\";\r\nexport * from \"./cauldron/utils/js_utils\";\r\n\r\nexport * from \"./cauldron/physics/physics_utils\";\r\nexport * from \"./cauldron/physics/physics_raycast_data\";\r\nexport * from \"./cauldron/physics/physics_layer_flags\";\r\nexport * from \"./cauldron/physics/physics_collision_collector\";\r\n\r\nexport * from \"./cauldron/visual/visual_manager\";\r\nexport * from \"./cauldron/visual/visual_data\";\r\nexport * from \"./cauldron/visual/visual_globals\";\r\n\r\nexport * from \"./cauldron/visual/elements/visual_element_types\";\r\nexport * from \"./cauldron/visual/elements/visual_line\";\r\nexport * from \"./cauldron/visual/elements/visual_mesh\";\r\nexport * from \"./cauldron/visual/elements/visual_point\";\r\nexport * from \"./cauldron/visual/elements/visual_arrow\";\r\nexport * from \"./cauldron/visual/elements/visual_text\";\r\nexport * from \"./cauldron/visual/elements/visual_transform\";\r\nexport * from \"./cauldron/visual/elements/visual_raycast\";\r\nexport * from \"./cauldron/visual/elements/visual_torus\";\r\n\r\nexport * from \"./cauldron/visual/components/visual_manager_component\";\r\n\r\nexport * from \"./cauldron/wl/engine_globals\";\r\nexport * from \"./cauldron/wl/register_wl_components\";\r\nexport * from \"./cauldron/wl/components/add_wl_to_window_component\";\r\n\r\n//\tDEBUG\r\nexport * from \"./debug/debug_manager\";\r\nexport * from \"./debug/debug_visual_manager\";\r\nexport * from \"./debug/debug_globals\";\r\n\r\nexport * from \"./debug/components/debug_transform_component\";\r\nexport * from \"./debug/components/debug_manager_component\";\r\nexport * from \"./debug/components/enable_debugs_component\";\r\n\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_overwriter\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js\";\r\n\r\n//\tGAMEPLAY\r\n\r\n//    CAULDRON\r\nexport * from \"./gameplay/cauldron/cauldron/direction_2D_to_3D_converter\";\r\nexport * from \"./gameplay/cauldron/cauldron/number_over_value\";\r\n\r\n//    GRAB & THROW\r\nexport * from \"./gameplay/grab_throw/grabbable_component\";\r\nexport * from \"./gameplay/grab_throw/grabber_hand_component\";\r\n\r\n//    INTEGRATIONS\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_utils\";\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_dummy_server\";\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_display_leaderboard_component\";\r\n\r\n//    EXPERIMENTAL\r\n\r\n//          CAULDRON\r\nexport * from \"./gameplay/experimental/cauldron/player/player_head_controller\";\r\nexport * from \"./gameplay/experimental/cauldron/player/player_view_occlusion\";\r\nexport * from \"./gameplay/experimental/cauldron/player/components/player_head_controller_component\";\r\nexport * from \"./gameplay/experimental/cauldron/player/components/player_view_occlusion_component\";\r\n\r\n//          CHARACTER CONTROLLER\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/collision/collision_check_bridge\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collider_setup\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collider_utils\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_results\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_system\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_system_global\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/components/character_collision_system_component\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/character_controller\";\r\nexport * from \"./gameplay/experimental/character_controller/synced_character_controller\";\r\nexport * from \"./gameplay/experimental/character_controller/character_controller_utils\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/components/character_controller_component\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/player/player_character_controller\";\r\nexport * from \"./gameplay/experimental/character_controller/player/player_head_character_controller\";\r\nexport * from \"./gameplay/experimental/character_controller/player/player_hand_character_controller\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/player/components/player_character_controller_component\";\r\nexport * from \"./gameplay/experimental/character_controller/player/components/player_head_character_controller_component\";\r\nexport * from \"./gameplay/experimental/character_controller/player/components/player_hand_character_controller_component\";\r\n\r\n//          LOCOMOTION\r\nexport * from \"./gameplay/experimental/locomotion/cauldron/global_gravity_globals\";\r\nexport * from \"./gameplay/experimental/locomotion/cauldron/components/global_gravity_component\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/player/player_locomotion_smooth\";\r\nexport * from \"./gameplay/experimental/locomotion/player/player_locomotion_rotate\";\r\nexport * from \"./gameplay/experimental/locomotion/player/player_locomotion_gravity\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/player/teleport/player_locomotion_teleport\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/player/components/player_locomotion_teleport_component\";\r\nexport * from \"./gameplay/experimental/locomotion/player/components/player_locomotion_smooth_component\";\r\nexport * from \"./gameplay/experimental/locomotion/player/components/player_locomotion_rotate_component\";\r\nexport * from \"./gameplay/experimental/locomotion/player/components/player_locomotion_gravity_component\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/locomotion_utils\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_head_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_cleaned\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_smooth_cleaned\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_transform_manager_cleaned\";\r\n\r\n//\tINPUT\r\nexport * from \"./input/cauldron/input_types\";\r\nexport * from \"./input/cauldron/input_utils\";\r\nexport * from \"./input/cauldron/keyboard\";\r\nexport * from \"./input/cauldron/mouse\";\r\nexport * from \"./input/cauldron/input_globals\";\r\nexport * from \"./input/cauldron/input_manager\";\r\n\r\nexport * from \"./input/cauldron/components/finger_cursor_component\";\r\nexport * from \"./input/cauldron/components/input_manager_component\";\r\nexport * from \"./input/cauldron/components/switch_hand_object_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_joint_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_all_joints_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_skin_component\";\r\n\r\nexport * from \"./input/gamepad/gamepad_buttons\";\r\nexport * from \"./input/gamepad/base_gamepad\";\r\nexport * from \"./input/gamepad/universal_gamepad\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_mesh_animator_component\";\r\nexport * from \"./input/gamepad/cauldron/gamepads_manager\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_utils\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_control_scheme_component\";\r\nexport * from \"./input/gamepad/gamepad_cores/gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/xr_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/keyboard_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/classic_gamepad_core\";\r\n\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_component\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_params\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_icon\";\r\n\r\nexport * from \"./input/pose/base_pose.js\";\r\nexport * from \"./input/pose/hand_pose\";\r\nexport * from \"./input/pose/head_pose\";\r\nexport * from \"./input/pose/tracked_hand_joint_pose\";\r\nexport * from \"./input/pose/tracked_hand_pose\";\r\n\r\nexport * from \"./input/pose/components/set_player_height_component\";\r\nexport * from \"./input/pose/components/set_hand_local_transform_component\";\r\nexport * from \"./input/pose/components/set_head_local_transform_component\";\r\nexport * from \"./input/pose/components/set_head_vr_local_transform_component\";\r\nexport * from \"./input/pose/components/set_head_non_vr_local_transform_component\";\r\nexport * from \"./input/pose/components/set_tracked_hand_joint_local_transform_component\";\r\nexport * from \"./input/pose/components/copy_hand_transform_component\";\r\nexport * from \"./input/pose/components/copy_head_transform_component\";\r\nexport * from \"./input/pose/components/copy_player_transform_component\";\r\nexport * from \"./input/pose/components/copy_player_pivot_transform_component\";\r\n\r\n//\tTOOL\r\nexport * from \"./tool/cauldron/tool_types\";\r\nexport * from \"./tool/cauldron/tool_globals\";\r\nexport * from \"./tool/cauldron/components/tool_cursor_component\";\r\nexport * from \"./tool/cauldron/components/enable_tools_component\";\r\n\r\nexport * from \"./tool/console_vr/console_vr_widget_setup\";\r\nexport * from \"./tool/console_vr/console_vr_widget_ui\";\r\nexport * from \"./tool/console_vr/console_vr_widget\";\r\nexport * from \"./tool/console_vr/console_vr\";\r\nexport * from \"./tool/console_vr/console_vr_types\";\r\nexport * from \"./tool/console_vr/console_vr_global\";\r\nexport * from \"./tool/console_vr/console_original_functions\";\r\n\r\nexport * from \"./tool/console_vr/components/console_vr_tool_component\";\r\nexport * from \"./tool/console_vr/components/init_console_vr_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_tune_variables\";\r\nexport * from \"./tool/easy_tune/easy_tune_variable_types\";\r\nexport * from \"./tool/easy_tune/easy_tune_globals\";\r\nexport * from \"./tool/easy_tune/easy_tune_utils\";\r\n\r\nexport * from \"./tool/easy_tune/components/easy_tune_tool_component\";\r\nexport * from \"./tool/easy_tune/components/easy_tune_import_variables_component\";\r\nexport * from \"./tool/easy_tune/components/init_easy_tune_variables_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_object_tuner\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_light_attenuation\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_light_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_mesh_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_scale\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_transform\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_text_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_light_attenuation_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_light_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_mesh_ambient_factor_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_mesh_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_scale_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_child_number_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_grab_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_text_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_transform_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/easy_tune_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_array_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup\";\r\n\r\nexport * from \"./tool/widget_frame/widget_frame_setup\";\r\nexport * from \"./tool/widget_frame/widget_frame_ui\";\r\nexport * from \"./tool/widget_frame/widget_frame\";", "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the functions are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 functions let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_addRotationDegrees       -> returns a rotation in quat\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - If a group of functions starts with \u25CB it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - vec2_create\r\n\r\n            - vec3_create\r\n\r\n            - vec4_create\r\n\r\n            - quat_create\r\n\r\n            - quat2_create\r\n            - quat2_fromPositionRotation\r\n\r\n            - mat3_create\r\n\r\n            - mat4_create\r\n            - mat4_fromPositionRotation     / mat4_fromPositionRotationScale\r\n\r\n        ARRAY:\r\n            - pp_first      / pp_last\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findIndex      / pp_findAll            / pp_findAllIndexes / pp_findEqual      / pp_findAllEqual   / pp_findIndexEqual / pp_findAllIndexesEqual\r\n            \u25CB pp_remove     / pp_removeIndex    / pp_removeAllIndexes   / pp_removeAll      / pp_removeEqual    / pp_removeAllEqual\r\n            \u25CB pp_pushUnique / pp_unshiftUnique\r\n            \u25CB pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n            \u25CB pp_clear      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn   \r\n            - vec_equals   \r\n\r\n        VECTOR 2:\r\n            \u25CB vec2_set      / vec2_copy     / vec2_zero\r\n            - vec2_clone \r\n            - vec2_normalize\r\n            - vec2_length\r\n            - vec2_isZero\r\n\r\n        VECTOR 3:\r\n            \u25CB vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized / vec3_isZero\r\n            - vec3_length       / vec3_lengthSquared        / vec3_lengthSigned\r\n            - vec3_distance     / vec3_distanceSquared\r\n            - vec3_add              / vec3_sub              / vec3_mul      / vec3_div      / vec3_scale    / vec3_dot\r\n            - vec3_equals\r\n            - vec3_transformQuat    / vec3_transformMat3    / vec3_transformMat4\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis / vec3_copyComponentAlongAxis   / vec3_valueAlongAxis  \r\n            - vec3_isConcordant\r\n            - vec3_isFartherAlongAxis\r\n            - vec3_isToTheRight\r\n            - vec3_isOnAxis\r\n            - vec3_isOnPlane\r\n            - vec3_signTo\r\n            - vec3_projectOnAxis                / vec3_projectOnAxisAlongAxis\r\n            - vec3_projectOnPlane               / vec3_projectOnPlaneAlongAxis\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_rotationTo       / vec3_rotationToPivoted\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_addRotation\r\n            - vec3_log       / vec3_error         / vec3_warn    \r\n            - vec3_lerp      / vec3_interpolate \r\n            \r\n        VECTOR 4:\r\n            \u25CB vec4_set      / vec4_copy\r\n            - vec4_clone \r\n\r\n        QUAT:\r\n            \u25CB quat_set          / quat_copy     / quat_identity\r\n            - quat_clone \r\n            - quat_normalize    / quat_invert   / quat_conjugate\r\n            - quat_isNormalized\r\n            - quat_length       / quat_lengthSquared\r\n            - quat_mul\r\n            - quat_getAxis          / quat_getAngle         / quat_getAxisScaled\r\n            - quat_getAxes          / quat_getRight         / quat_getUp    / quat_getForward   / quat_getLeft  / quat_getDown  / quat_getBackward\r\n            \u25CB quat_setAxes          / quat_setRight         / quat_setUp    / quat_setForward   / quat_setLeft  / quat_setDown  / quat_setBackward\r\n            - quat_toWorld          / quat_toLocal\r\n            - quat_rotate           / quat_rotateAxis  \r\n            - quat_rotationTo     \r\n            - quat_getTwist         / quat_getSwing         / quat_getTwistFromSwing    / quat_getSwingFromTwist    / quat_fromTwistSwing\r\n            \u25CB quat_fromRadians      / quat_fromDegrees      / quat_fromAxis / quat_fromAxes\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_lerp             / quat_interpolate      / quat_slerp    / quat_sinterpolate\r\n\r\n        QUAT 2:\r\n            \u25CB quat2_set             / quat2_copy        / quat2_identity\r\n            - quat2_normalize       / quat2_invert      / quat2_conjugate\r\n            - quat2_isNormalized\r\n            - quat2_length          / quat2_lengthSquared\r\n            - quat2_mul\r\n            - quat2_getPosition     / quat2_getRotation\r\n            \u25CB quat2_setPosition     / quat2_setRotation     / quat2_setPositionRotation\r\n            - quat2_getAxes     / quat2_getRight    / quat2_getUp   / quat2_getForward  / quat2_getLeft    / quat2_getDown   / quat2_getBackward\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_rotateAxis  \r\n            - quat2_toMatrix\r\n            \u25CB quat2_fromMatrix\r\n            - quat2_lerp        / quat2_interpolate\r\n\r\n        MATRIX 3:\r\n            \u25CB mat3_set\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n            - mat3_fromAxes\r\n\r\n        MATRIX 4:\r\n            \u25CB mat4_set          / mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat_mul           / mat4_scale\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            \u25CB mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            \u25CB mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes     / mat4_getRight    / mat4_getUp   / mat4_getForward  / mat4_getLeft    / mat4_getDown   / mat4_getBackward\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            \u25CB mat4_fromQuat\r\n*/\r\n\r\nimport * as glMatrix from \"gl-matrix\";\r\nimport { ExtensionUtils } from \"../../utils/extension_utils\";\r\n\r\nexport function initArrayExtension() {\r\n    initArrayExtensionProtoype();\r\n}\r\n\r\nexport function vec2_create(x, y) {\r\n    let out = glMatrix.vec2.create();\r\n    if (x !== undefined) {\r\n        _vec2_set(out, x, y);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function vec3_create(x, y, z) {\r\n    let out = glMatrix.vec3.create();\r\n    if (x !== undefined) {\r\n        _vec3_set(out, x, y, z);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function vec4_create(x, y, z, w) {\r\n    let out = glMatrix.vec4.create();\r\n    if (x !== undefined) {\r\n        _vec4_set(out, x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function quat_create(x, y, z, w) {\r\n    let out = glMatrix.quat.create();\r\n    if (x !== undefined) {\r\n        _quat_set(out, x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function quat2_create(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    let out = glMatrix.quat2.create();\r\n    if (x1 !== undefined) {\r\n        _quat2_set(out, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function mat3_create(\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    let out = glMatrix.mat3.create();\r\n    if (m00 !== undefined) {\r\n        _mat3_set(\r\n            out,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function mat4_create(\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    let out = glMatrix.mat4.create();\r\n    if (m00 !== undefined) {\r\n        _mat4_set(\r\n            out,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return out;\r\n};\r\n\r\nexport function quat2_fromPositionRotation(position, rotation) {\r\n    return quat2_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nexport function quat2_fromPositionRotationDegrees(position, rotation) {\r\n    let out = quat2_create();\r\n    out.quat2_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function quat2_fromPositionRotationRadians(position, rotation) {\r\n    let out = quat2_create();\r\n    out.quat2_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function quat2_fromPositionRotationQuat(position, rotation) {\r\n    let out = quat2_create();\r\n    out.quat2_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotation(position, rotation) {\r\n    return mat4_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nexport function mat4_fromPositionRotationDegrees(position, rotation) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotationRadians(position, rotation) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotationQuat(position, rotation) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotationScale(position, rotation, scale) {\r\n    return mat4_fromPositionRotationDegreesScale(position, rotation, scale);\r\n};\r\n\r\nexport function mat4_fromPositionRotationDegreesScale(position, rotation, scale) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotationRadiansScale(position, rotation, scale) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationRadiansScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nexport function mat4_fromPositionRotationQuatScale(position, rotation, scale) {\r\n    let out = mat4_create();\r\n    out.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nexport function initArrayExtensionProtoype() {\r\n\r\n    // SETTER\r\n\r\n    let arrayExtension = {};\r\n\r\n    arrayExtension.vec2_set = function vec2_set(x, y) {\r\n        return _vec2_set(this, x, y);\r\n    };\r\n\r\n    arrayExtension.vec3_set = function vec3_set(x, y, z) {\r\n        return _vec3_set(this, x, y, z);\r\n    };\r\n\r\n    arrayExtension.vec4_set = function vec4_set(x, y, z, w) {\r\n        return _vec4_set(this, x, y, z, w);\r\n    };\r\n\r\n    arrayExtension.quat_set = function quat_set(x, y, z, w) {\r\n        return _quat_set(this, x, y, z, w);\r\n    };\r\n\r\n    arrayExtension.quat2_set = function quat2_set(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n        return _quat2_set(this, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    };\r\n\r\n    arrayExtension.mat3_set = function mat3_set(\r\n        m00, m01, m02,\r\n        m10, m11, m12,\r\n        m20, m21, m22) {\r\n        return _mat3_set(\r\n            this,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    };\r\n\r\n    arrayExtension.mat4_set = function mat4_set(\r\n        m00, m01, m02, m03,\r\n        m10, m11, m12, m13,\r\n        m20, m21, m22, m23,\r\n        m30, m31, m32, m33) {\r\n        return _mat4_set(\r\n            this,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    };\r\n\r\n    // ARRAY\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.pp_first = function pp_first() {\r\n        return this.length > 0 ? this[0] : undefined;\r\n    };\r\n\r\n    arrayExtension.pp_last = function pp_last() {\r\n        return this.length > 0 ? this[this.length - 1] : undefined;\r\n    };\r\n\r\n    arrayExtension.pp_has = function pp_has(callback) {\r\n        return this.pp_find(callback) != undefined;\r\n    };\r\n\r\n    arrayExtension.pp_hasEqual = function pp_hasEqual(elementToFind, elementsEqualCallback = null) {\r\n        return this.pp_findEqual(elementToFind, elementsEqualCallback) != undefined;\r\n    };\r\n\r\n    arrayExtension.pp_find = function pp_find(callback) {\r\n        let elementFound = undefined;\r\n\r\n        let index = this.findIndex(callback);\r\n        if (index >= 0) {\r\n            elementFound = this[index];\r\n        }\r\n\r\n        return elementFound;\r\n    };\r\n\r\n    arrayExtension.pp_findIndex = function pp_findIndex(callback) {\r\n        return this.findIndex(callback);\r\n    };\r\n\r\n    arrayExtension.pp_findAll = function pp_findAll(callback) {\r\n        let elementsFound = this.filter(callback);\r\n\r\n        return elementsFound;\r\n    };\r\n\r\n    arrayExtension.pp_findAllIndexes = function pp_findAllIndexes(callback) {\r\n        let indexes = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            let element = this[i];\r\n            if (callback(element)) {\r\n                indexes.push(i);\r\n            }\r\n        }\r\n        return indexes;\r\n    };\r\n\r\n    arrayExtension.pp_findEqual = function pp_findEqual(elementToFind, elementsEqualCallback = null) {\r\n        if (elementsEqualCallback == null) {\r\n            let index = this.pp_findIndexEqual(elementToFind);\r\n            return index < 0 ? undefined : this[index];\r\n        }\r\n\r\n        let elementFound = undefined\r\n        for (let i = 0; i < this.length; i++) {\r\n            let currentElement = this[i];\r\n            if (elementsEqualCallback(currentElement, elementToFind)) {\r\n                elementFound = currentElement;\r\n                break;\r\n            }\r\n        }\r\n        return elementFound;\r\n    };\r\n\r\n    arrayExtension.pp_findAllEqual = function pp_findAllEqual(elementToFind, elementsEqualCallback = null) {\r\n        if (elementsEqualCallback == null) {\r\n            return _findAllEqualOptimized(this, elementToFind, false);\r\n        }\r\n\r\n        let elementsFound = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            let currentElement = this[i];\r\n            if (elementsEqualCallback(currentElement, elementToFind)) {\r\n                elementsFound.push(currentElement);\r\n            }\r\n        }\r\n        return elementsFound;\r\n    };\r\n\r\n    arrayExtension.pp_findIndexEqual = function pp_findIndexEqual(elementToFind, elementsEqualCallback = null) {\r\n        if (elementsEqualCallback == null) {\r\n            return this.indexOf(elementToFind);\r\n        }\r\n\r\n        let indexFound = -1;\r\n        for (let i = 0; i < this.length; i++) {\r\n            let currentElement = this[i];\r\n            if (elementsEqualCallback(currentElement, elementToFind)) {\r\n                indexFound = i;\r\n                break;\r\n            }\r\n        }\r\n        return indexFound;\r\n    };\r\n\r\n    arrayExtension.pp_findAllIndexesEqual = function pp_findAllIndexesEqual(elementToFind, elementsEqualCallback = null) {\r\n        if (elementsEqualCallback == null) {\r\n            return _findAllEqualOptimized(this, elementToFind, true);\r\n        }\r\n\r\n        let indexesFound = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            let currentElement = this[i];\r\n            if (elementsEqualCallback(currentElement, elementToFind)) {\r\n                indexesFound.push(i);\r\n            }\r\n        }\r\n        return indexesFound;\r\n    };\r\n\r\n    arrayExtension.pp_removeIndex = function pp_removeIndex(index) {\r\n        let elementRemoved = undefined;\r\n\r\n        if (index >= 0 && index < this.length) {\r\n            let arrayRemoved = this.splice(index, 1);\r\n            if (arrayRemoved.length == 1) {\r\n                elementRemoved = arrayRemoved[0];\r\n            }\r\n        }\r\n\r\n        return elementRemoved;\r\n    };\r\n\r\n    arrayExtension.pp_removeAllIndexes = function pp_removeAllIndexes(indexes) {\r\n        let elementsRemoved = [];\r\n\r\n        for (let index of indexes) {\r\n            let elementRemoved = this.pp_removeIndex(index);\r\n            if (elementRemoved !== undefined) {\r\n                elementsRemoved.push(elementRemoved);\r\n            }\r\n        }\r\n\r\n        return elementsRemoved;\r\n    };\r\n\r\n    arrayExtension.pp_remove = function pp_remove(callback) {\r\n        let elementRemoved = undefined;\r\n\r\n        let index = this.findIndex(callback);\r\n        if (index >= 0) {\r\n            elementRemoved = this.pp_removeIndex(index);\r\n        }\r\n\r\n        return elementRemoved;\r\n    };\r\n\r\n    arrayExtension.pp_removeAll = function pp_removeAll(callback) {\r\n        let elementsRemoved = [];\r\n\r\n        let currentElement = undefined;\r\n        do {\r\n            currentElement = this.pp_remove(callback);\r\n            if (currentElement !== undefined) {\r\n                elementsRemoved.push(currentElement);\r\n            }\r\n        } while (currentElement !== undefined);\r\n\r\n        return elementsRemoved;\r\n    };\r\n\r\n    arrayExtension.pp_removeEqual = function pp_removeEqual(elementToRemove, elementsEqualCallback = null) {\r\n        return this.pp_removeIndex(this.pp_findIndexEqual(elementToRemove, elementsEqualCallback));\r\n    };\r\n\r\n    arrayExtension.pp_removeAllEqual = function pp_removeAllEqual(elementToRemove, elementsEqualCallback = null) {\r\n        return this.pp_removeAllIndexes(this.pp_findAllIndexesEqual(elementToRemove, elementsEqualCallback));\r\n    };\r\n\r\n    arrayExtension.pp_pushUnique = function pp_pushUnique(element, elementsEqualCallback = null) {\r\n        let length = this.length;\r\n\r\n        let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n        if (!hasElement) {\r\n            length = this.push(element);\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    arrayExtension.pp_unshiftUnique = function pp_unshiftUnique(element, elementsEqualCallback = null) {\r\n        let length = this.length;\r\n\r\n        let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n        if (!hasElement) {\r\n            length = this.unshift(element);\r\n        }\r\n\r\n        return length;\r\n    };\r\n\r\n    arrayExtension.pp_copy = function pp_copy(array, copyCallback = null) {\r\n        while (this.length > array.length) {\r\n            this.pop();\r\n        }\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (copyCallback == null) {\r\n                this[i] = array[i];\r\n            } else {\r\n                this[i] = copyCallback(this[i], array[i]);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.pp_clone = function pp_clone(cloneCallback = null) {\r\n        if (cloneCallback == null) {\r\n            return this.slice(0);\r\n        }\r\n\r\n        let clone = null;\r\n        switch (this.constructor.name) {\r\n            case \"Array\":\r\n                clone = new Array(this.length);\r\n                break;\r\n            case \"Uint8ClampedArray\":\r\n                clone = new Uint8ClampedArray(this.length);\r\n                break;\r\n            case \"Uint8Array\":\r\n                clone = new Uint8Array(this.length);\r\n                break;\r\n            case \"Uint16Array\":\r\n                clone = new Uint16Array(this.length);\r\n                break;\r\n            case \"Uint32Array\":\r\n                clone = new Uint32Array(this.length);\r\n                break;\r\n            case \"Int8Array\":\r\n                clone = new Int8Array(this.length);\r\n                break;\r\n            case \"Int16Array\":\r\n                clone = new Int16Array(this.length);\r\n                break;\r\n            case \"Int32Array\":\r\n                clone = new Int32Array(this.length);\r\n                break;\r\n            case \"Float32Array\":\r\n                clone = new Float32Array(this.length);\r\n                break;\r\n            case \"Float64Array\":\r\n                clone = new Float64Array(this.length);\r\n                break;\r\n            default:\r\n                clone = new Array(this.length);\r\n                console.error(\"Cloned array type not supported!\");\r\n                break;\r\n        }\r\n\r\n        for (let i = 0; i < this.length; i++) {\r\n            clone[i] = cloneCallback(this[i]);\r\n        }\r\n\r\n        return clone;\r\n    };\r\n\r\n    arrayExtension.pp_equals = function pp_equals(array, elementsEqualCallback = null) {\r\n        let equals = true;\r\n\r\n        if (array != null && this.length == array.length) {\r\n            for (let i = 0; i < this.length; i++) {\r\n                if ((elementsEqualCallback != null && !elementsEqualCallback(this[i], array[i])) ||\r\n                    (elementsEqualCallback == null && this[i] != array[i])) {\r\n                    equals = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            equals = false;\r\n        }\r\n\r\n        return equals;\r\n    };\r\n\r\n    arrayExtension.pp_clear = function pp_clear() {\r\n        this.length = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    // GENERIC VECTOR\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.vec_toString = function vec_toString(decimalPlaces = null) {\r\n        let message = _vec_buildConsoleMessage(this, decimalPlaces);\r\n        return message;\r\n    };\r\n\r\n    arrayExtension.vec_log = function vec_log(decimalPlaces = 4) {\r\n        let message = _vec_buildConsoleMessage(this, decimalPlaces);\r\n        console.log(message);\r\n    };\r\n\r\n    arrayExtension.vec_error = function vec_error(decimalPlaces = 4) {\r\n        let message = _vec_buildConsoleMessage(this, decimalPlaces);\r\n        console.error(message);\r\n    };\r\n\r\n    arrayExtension.vec_warn = function vec_warn(decimalPlaces = 4) {\r\n        let message = _vec_buildConsoleMessage(this, decimalPlaces);\r\n        console.warn(message);\r\n    };\r\n\r\n    arrayExtension.vec_scale = function vec_scale(value, out = null) {\r\n        out = _vec_prepareOut(this, out);\r\n\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = out[i] * value;\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec_round = function vec_round(out = null) {\r\n        out = _vec_prepareOut(this, out);\r\n\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = Math.round(out[i]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec_floor = function vec_floor(out = null) {\r\n        out = _vec_prepareOut(this, out);\r\n\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = Math.floor(out[i]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec_ceil = function vec_ceil(out = null) {\r\n        out = _vec_prepareOut(this, out);\r\n\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = Math.ceil(out[i]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec_clamp = function vec_clamp(start, end, out = null) {\r\n        out = _vec_prepareOut(this, out);\r\n\r\n        let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n        let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n        let min = Math.min(fixedStart, fixedEnd);\r\n        let max = Math.max(fixedStart, fixedEnd);\r\n\r\n        for (let i = 0; i < out.length; i++) {\r\n            out[i] = Math.pp_clamp(out[i], min, max);\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec_equals = function vec_equals(vector, epsilon = 0) {\r\n        let equals = this.length == vector.length;\r\n\r\n        for (let i = 0; i < this.length && equals; i++) {\r\n            equals = equals && (Math.abs(this[i] - vector[i]) <= epsilon);\r\n        }\r\n\r\n        return equals;\r\n    };\r\n\r\n    // VECTOR 2\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.vec2_length = function vec2_length() {\r\n        return glMatrix.vec2.length(this);\r\n    };\r\n\r\n    arrayExtension.vec2_normalize = function vec2_normalize(out = vec2_create()) {\r\n        glMatrix.vec2.normalize(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec2_copy = function vec2_copy(vector) {\r\n        glMatrix.vec2.copy(this, vector);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.vec2_clone = function vec2_clone(out = vec2_create()) {\r\n        glMatrix.vec2.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec2_zero = function vec2_zero() {\r\n        glMatrix.vec2.zero(this);\r\n        return this;\r\n    };\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.vec2_isZero = function vec2_isZero(epsilon = 0) {\r\n        return this.vec2_length() <= epsilon;\r\n    };\r\n\r\n    // VECTOR 3\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.vec3_normalize = function vec3_normalize(out = vec3_create()) {\r\n        glMatrix.vec3.normalize(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_copy = function vec3_copy(vector) {\r\n        glMatrix.vec3.copy(this, vector);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.vec3_clone = function vec3_clone(out = vec3_create()) {\r\n        glMatrix.vec3.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_zero = function vec3_zero() {\r\n        glMatrix.vec3.zero(this);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.vec3_angle = function vec3_angle(vector) {\r\n        return this.vec3_angleDegrees(vector);\r\n    };\r\n\r\n    arrayExtension.vec3_angleDegrees = function vec3_angleDegrees(vector) {\r\n        return Math.pp_toDegrees(this.vec3_angleRadians(vector));\r\n    };\r\n\r\n    arrayExtension.vec3_angleRadians = function vec3_angleRadians(vector) {\r\n        let thisX = this[0];\r\n        let thisY = this[1];\r\n        let thisZ = this[2];\r\n\r\n        let vectorX = vector[0];\r\n        let vectorY = vector[1];\r\n        let vectorZ = vector[2];\r\n\r\n        let thisLengthSquared = (thisX * thisX + thisY * thisY + thisZ * thisZ);\r\n        let vectorLengthSquared = (vectorX * vectorX + vectorY * vectorY + vectorZ * vectorZ);\r\n\r\n        let lengthSquared = thisLengthSquared * vectorLengthSquared;\r\n\r\n        let angle = 0;\r\n        if (lengthSquared > Math.PP_EPSILON_SQUARED) {\r\n            let length = Math.sqrt(lengthSquared);\r\n\r\n            let cos = this.vec3_dot(vector) / length;\r\n            angle = Math.acos(Math.pp_clamp(cos, -1, 1));\r\n        }\r\n\r\n        return angle;\r\n    };\r\n\r\n    arrayExtension.vec3_equals = function vec3_equals(vector, epsilon = 0) {\r\n        let equals = this.length == vector.length;\r\n\r\n        if (equals) {\r\n            equals &&= (Math.abs(this[0] - vector[0]) <= epsilon);\r\n            equals &&= (Math.abs(this[1] - vector[1]) <= epsilon);\r\n            equals &&= (Math.abs(this[2] - vector[2]) <= epsilon);\r\n        }\r\n\r\n        return equals;\r\n    };\r\n\r\n    arrayExtension.vec3_length = function vec3_length() {\r\n        return glMatrix.vec3.length(this);\r\n    };\r\n\r\n    arrayExtension.vec3_lengthSquared = function vec3_lengthSquared() {\r\n        return glMatrix.vec3.squaredLength(this);\r\n    };\r\n\r\n    arrayExtension.vec3_distance = function vec3_distance(vector) {\r\n        return glMatrix.vec3.dist(this, vector);\r\n    };\r\n\r\n    arrayExtension.vec3_distanceSquared = function vec3_distanceSquared(vector) {\r\n        return glMatrix.vec3.squaredDistance(this, vector);\r\n    };\r\n\r\n    arrayExtension.vec3_add = function vec3_add(vector, out = vec3_create()) {\r\n        glMatrix.vec3.add(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_sub = function vec3_sub(vector, out = vec3_create()) {\r\n        glMatrix.vec3.sub(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_mul = function vec3_mul(vector, out = vec3_create()) {\r\n        glMatrix.vec3.mul(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_div = function vec3_div(vector, out = vec3_create()) {\r\n        glMatrix.vec3.div(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_scale = function vec3_scale(value, out = vec3_create()) {\r\n        glMatrix.vec3.scale(out, this, value);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_dot = function vec3_dot(vector) {\r\n        return glMatrix.vec3.dot(this, vector);\r\n    };\r\n\r\n    arrayExtension.vec3_negate = function vec3_negate(out = vec3_create()) {\r\n        glMatrix.vec3.negate(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_cross = function vec3_cross(vector, out = vec3_create()) {\r\n        glMatrix.vec3.cross(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_transformQuat = function vec3_transformQuat(quat, out = vec3_create()) {\r\n        glMatrix.vec3.transformQuat(out, this, quat);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_transformMat3 = function vec3_transformMat3(mat3, out = vec3_create()) {\r\n        glMatrix.vec3.transformMat3(out, this, mat3);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_transformMat4 = function vec3_transformMat4(mat4, out = vec3_create()) {\r\n        glMatrix.vec3.transformMat4(out, this, mat4);\r\n        return out;\r\n    };\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.vec3_lengthSigned = function vec3_lengthSigned(positiveDirection) {\r\n        let signedLength = this.vec3_length();\r\n        if (!this.vec3_isConcordant(positiveDirection)) {\r\n            signedLength *= -1;\r\n        }\r\n\r\n        return signedLength;\r\n    };\r\n\r\n    arrayExtension.vec3_angleSigned = function vec3_angleSigned(vector, upAxis) {\r\n        return this.vec3_angleSignedDegrees(vector, upAxis);\r\n    };\r\n\r\n    arrayExtension.vec3_angleSignedDegrees = function vec3_angleSignedDegrees(vector, upAxis) {\r\n        return Math.pp_toDegrees(this.vec3_angleSignedRadians(vector, upAxis));\r\n    };\r\n\r\n    arrayExtension.vec3_angleSignedRadians = function () {\r\n        let crossAxis = vec3_create();\r\n        return function vec3_angleSignedRadians(vector, upAxis) {\r\n            this.vec3_cross(vector, crossAxis);\r\n            let angle = this.vec3_angleRadians(vector);\r\n            if (!crossAxis.vec3_isConcordant(upAxis)) {\r\n                angle = -angle;\r\n            }\r\n\r\n            return angle;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_toRadians = function vec3_toRadians(out = vec3_create()) {\r\n        glMatrix.vec3.set(out, glMatrix.glMatrix.toRadian(this[0]), glMatrix.glMatrix.toRadian(this[1]), glMatrix.glMatrix.toRadian(this[2]));\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_toDegrees = function vec3_toDegrees(out = vec3_create()) {\r\n        glMatrix.vec3.set(out, Math.pp_toDegrees(this[0]), Math.pp_toDegrees(this[1]), Math.pp_toDegrees(this[2]));\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_toQuat = function vec3_toQuat(out) {\r\n        return this.vec3_degreesToQuat(out);\r\n    };\r\n\r\n    arrayExtension.vec3_radiansToQuat = function vec3_radiansToQuat(out = quat_create()) {\r\n        out.quat_fromRadians(this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_degreesToQuat = function vec3_degreesToQuat(out = quat_create()) {\r\n        out.quat_fromDegrees(this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_isNormalized = function vec3_isNormalized(epsilon = Math.PP_EPSILON) {\r\n        return Math.abs(this.vec3_lengthSquared() - 1) < epsilon;\r\n    };\r\n\r\n    arrayExtension.vec3_isZero = function vec3_isZero(epsilon = 0) {\r\n        return this.vec3_lengthSquared() <= (epsilon * epsilon);\r\n    };\r\n\r\n    arrayExtension.vec3_componentAlongAxis = function vec3_componentAlongAxis(axis, out = vec3_create()) {\r\n        let componentAlongAxisLength = this.vec3_dot(axis);\r\n\r\n        glMatrix.vec3.copy(out, axis);\r\n        glMatrix.vec3.scale(out, out, componentAlongAxisLength);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_valueAlongAxis = function vec3_valueAlongAxis(axis) {\r\n        let valueAlongAxis = this.vec3_dot(axis);\r\n        return valueAlongAxis;\r\n    };\r\n\r\n    arrayExtension.vec3_removeComponentAlongAxis = function () {\r\n        let componentAlong = vec3_create();\r\n        return function vec3_removeComponentAlongAxis(axis, out = vec3_create()) {\r\n            this.vec3_componentAlongAxis(axis, componentAlong);\r\n            glMatrix.vec3.sub(out, this, componentAlong);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_copyComponentAlongAxis = function () {\r\n        let componentAlong = vec3_create();\r\n        return function vec3_copyComponentAlongAxis(vector, axis, out = vec3_create()) {\r\n            this.vec3_removeComponentAlongAxis(axis, out);\r\n            vector.vec3_componentAlongAxis(axis, componentAlong);\r\n            out.vec3_add(componentAlong, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_isConcordant = function vec3_isConcordant(vector) {\r\n        return this.vec3_dot(vector) >= 0;\r\n    };\r\n\r\n    arrayExtension.vec3_isFartherAlongAxis = function vec3_isFartherAlongAxis(vector, axis) {\r\n        return this.vec3_valueAlongAxis(axis) > vector.vec3_valueAlongAxis(axis);\r\n    };\r\n\r\n    arrayExtension.vec3_isToTheRight = function vec3_isToTheRight(vector, upAxis) {\r\n        return this.vec3_signTo(vector, upAxis) >= 0;\r\n    };\r\n\r\n    arrayExtension.vec3_signTo = function () {\r\n        let componentAlongThis = vec3_create();\r\n        let componentAlongVector = vec3_create();\r\n        return function vec3_signTo(vector, upAxis, zeroSign = 1) {\r\n            this.vec3_removeComponentAlongAxis(upAxis, componentAlongThis);\r\n            vector.vec3_removeComponentAlongAxis(upAxis, componentAlongVector);\r\n\r\n            let angleSigned = this.vec3_angleSigned(vector, upAxis);\r\n            return angleSigned > 0 ? 1 : (angleSigned == 0 ? zeroSign : -1);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_projectOnAxis = function vec3_projectOnAxis(axis, out = vec3_create()) {\r\n        this.vec3_componentAlongAxis(axis, out);\r\n        return out;\r\n    };\r\n\r\n    // The result can easily be not 100% exact due to precision errors\r\n    arrayExtension.vec3_projectOnAxisAlongAxis = function () {\r\n        let up = vec3_create();\r\n\r\n        let thisToAxis = vec3_create();\r\n\r\n        let fixedProjectAlongAxis = vec3_create();\r\n        return function vec3_projectOnAxisAlongAxis(axis, projectAlongAxis, out = vec3_create()) {\r\n\r\n            if (this.vec3_isOnAxis(axis) || projectAlongAxis.vec3_isOnAxis(axis)) {\r\n                out.vec3_copy(this);\r\n            } else {\r\n                projectAlongAxis.vec3_cross(axis, up);\r\n                up.vec3_normalize(up);\r\n\r\n                this.vec3_removeComponentAlongAxis(up, out);\r\n                if (!out.vec3_isOnAxis(axis)) {\r\n                    out.vec3_projectOnAxis(axis, thisToAxis);\r\n                    thisToAxis.vec3_sub(out, thisToAxis);\r\n\r\n                    if (thisToAxis.vec3_isConcordant(projectAlongAxis)) {\r\n                        fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n                    } else {\r\n                        projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n                    }\r\n\r\n                    let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToAxis);\r\n                    let lengthToRemove = thisToAxis.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n                    fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n                    fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n                    out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n                    out.vec3_projectOnAxis(axis, out); // Snap on the axis, due to float precision error\r\n                }\r\n            }\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_projectOnPlane = function vec3_projectOnPlane(planeNormal, out = vec3_create()) {\r\n        this.vec3_removeComponentAlongAxis(planeNormal, out);\r\n        return out;\r\n    };\r\n\r\n    // The result can easily be not 100% exact due to precision errors\r\n    arrayExtension.vec3_projectOnPlaneAlongAxis = function () {\r\n        let thisToPlane = vec3_create();\r\n\r\n        let fixedProjectAlongAxis = vec3_create();\r\n        return function vec3_projectOnPlaneAlongAxis(planeNormal, projectAlongAxis, out = vec3_create()) {\r\n            if (this.vec3_isOnPlane(planeNormal) || projectAlongAxis.vec3_isOnPlane(planeNormal)) {\r\n                out.vec3_copy(this);\r\n            } else {\r\n                out.vec3_copy(this);\r\n\r\n                out.vec3_projectOnPlane(planeNormal, thisToPlane);\r\n                thisToPlane.vec3_sub(out, thisToPlane);\r\n\r\n                if (thisToPlane.vec3_isConcordant(projectAlongAxis)) {\r\n                    fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n                } else {\r\n                    projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n                }\r\n\r\n                let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToPlane);\r\n                let lengthToRemove = thisToPlane.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n                fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n                fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n                out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n                out.vec3_projectOnPlane(planeNormal, out); // Snap on the axis, due to float precision error\r\n            }\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_isOnAxis = function vec3_isOnAxis(axis) {\r\n        let angle = this.vec3_angle(axis);\r\n        return Math.abs(angle) < Math.PP_EPSILON_DEGREES || Math.abs(angle - 180) < Math.PP_EPSILON_DEGREES;\r\n    };\r\n\r\n    arrayExtension.vec3_isOnPlane = function vec3_isOnPlane(planeNormal) {\r\n        let angle = this.vec3_angle(planeNormal);\r\n        return Math.abs(angle - 90) < Math.PP_EPSILON_DEGREES;\r\n    };\r\n\r\n    arrayExtension.vec3_rotate = function vec3_rotate(rotation, out) {\r\n        return this.vec3_rotateDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotateDegrees = function () {\r\n        let zero = vec3_create();\r\n        return function vec3_rotateDegrees(rotation, out) {\r\n            return this.vec3_rotateAroundDegrees(rotation, zero, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateRadians = function () {\r\n        let zero = vec3_create();\r\n        return function vec3_rotateRadians(rotation, out) {\r\n            return this.vec3_rotateAroundRadians(rotation, zero, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateQuat = function () {\r\n        let zero = vec3_create();\r\n        return function vec3_rotateQuat(rotation, out) {\r\n            return this.vec3_rotateAroundQuat(rotation, zero, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateAxis = function vec3_rotateAxis(angle, axis, out) {\r\n        return this.vec3_rotateAxisDegrees(angle, axis, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotateAxisDegrees = function () {\r\n        let zero = vec3_create();\r\n        return function vec3_rotateAxisDegrees(angle, axis, out) {\r\n            return this.vec3_rotateAroundAxisDegrees(angle, axis, zero, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateAxisRadians = function () {\r\n        let zero = vec3_create();\r\n        return function vec3_rotateAxisRadians(angle, axis, out) {\r\n            return this.vec3_rotateAroundAxisRadians(angle, axis, zero, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateAround = function vec3_rotateAround(rotation, origin, out) {\r\n        return this.vec3_rotateAroundDegrees(rotation, origin, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotateAroundDegrees = function () {\r\n        let quat = quat_create();\r\n        return function vec3_rotateAroundDegrees(rotation, origin, out = vec3_create()) {\r\n            rotation.vec3_degreesToQuat(quat);\r\n            return this.vec3_rotateAroundQuat(quat, origin, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateAroundRadians = function () {\r\n        let quat = quat_create();\r\n        return function vec3_rotateAroundRadians(rotation, origin, out = vec3_create()) {\r\n            rotation.vec3_radiansToQuat(quat);\r\n            return this.vec3_rotateAroundQuat(quat, origin, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotateAroundQuat = function vec3_rotateAroundQuat(rotation, origin, out = vec3_create()) {\r\n        glMatrix.vec3.sub(out, this, origin);\r\n        glMatrix.vec3.transformQuat(out, out, rotation);\r\n        glMatrix.vec3.add(out, out, origin);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_rotateAroundAxis = function vec3_rotateAroundAxis(angle, axis, origin, out) {\r\n        return this.vec3_rotateAroundAxisDegrees(angle, axis, origin, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotateAroundAxisDegrees = function vec3_rotateAroundAxisDegrees(angle, axis, origin, out) {\r\n        return this.vec3_rotateAroundAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, origin, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotateAroundAxisRadians = function () {\r\n        let quat = quat_create();\r\n        return function vec3_rotateAroundAxisRadians(angle, axis, origin, out = vec3_create()) {\r\n            glMatrix.quat.setAxisAngle(quat, axis, angle);\r\n            return this.vec3_rotateAroundQuat(quat, origin, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertPositionToWorld = function vec3_convertPositionToWorld(parentTransform, out) {\r\n        return this.vec3_convertPositionToWorldMatrix(parentTransform, out);\r\n    };\r\n\r\n    arrayExtension.vec3_convertPositionToLocal = function vec3_convertPositionToLocal(parentTransform, out) {\r\n        return this.vec3_convertPositionToLocalMatrix(parentTransform, out);\r\n    };\r\n\r\n    arrayExtension.vec3_convertPositionToWorldMatrix = function vec3_convertPositionToWorldMatrix(parentTransform, out = vec3_create()) {\r\n        glMatrix.vec3.transformMat4(out, this, parentTransform);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_convertPositionToLocalMatrix = function () {\r\n        let inverse = mat4_create();\r\n        return function vec3_convertPositionToLocalMatrix(parentTransform, out = vec3_create()) {\r\n            glMatrix.mat4.invert(inverse, parentTransform);\r\n            glMatrix.vec3.transformMat4(out, this, inverse);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertPositionToWorldQuat = function () {\r\n        let parentTransformMatrix = mat4_create();\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        let one = vec3_create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function vec3_convertPositionToWorldQuat(parentTransform, out = vec3_create()) {\r\n            parentTransform.quat2_getPosition(position);\r\n            parentTransform.quat2_getRotationQuat(rotation);\r\n            parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n            return this.vec3_convertPositionToWorldMatrix(parentTransformMatrix, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertPositionToLocalQuat = function () {\r\n        let parentTransformMatrix = mat4_create();\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        let one = vec3_create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function vec3_convertPositionToLocalQuat(parentTransform, out = vec3_create()) {\r\n            parentTransform.quat2_getPosition(position);\r\n            parentTransform.quat2_getRotationQuat(rotation);\r\n            parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n            return this.vec3_convertPositionToLocalMatrix(parentTransformMatrix, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertDirectionToWorld = function vec3_convertDirectionToWorld(parentTransform, out) {\r\n        return this.vec3_convertDirectionToWorldMatrix(parentTransform, out);\r\n    };\r\n\r\n    arrayExtension.vec3_convertDirectionToLocal = function vec3_convertDirectionToLocal(parentTransform, out) {\r\n        return this.vec3_convertDirectionToLocalMatrix(parentTransform, out);\r\n    };\r\n\r\n    arrayExtension.vec3_convertDirectionToWorldMatrix = function () {\r\n        let rotation = quat_create();\r\n        return function vec3_convertDirectionToWorldMatrix(parentTransform, out = vec3_create()) {\r\n            parentTransform.mat4_getRotationQuat(rotation);\r\n            glMatrix.vec3.transformQuat(out, this, rotation);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertDirectionToLocalMatrix = function () {\r\n        let rotation = quat_create();\r\n        return function vec3_convertDirectionToLocalMatrix(parentTransform, out = vec3_create()) {\r\n            parentTransform.mat4_getRotationQuat(rotation);\r\n            glMatrix.quat.conjugate(rotation, rotation);\r\n            glMatrix.vec3.transformQuat(out, this, rotation);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n\r\n    arrayExtension.vec3_convertDirectionToWorldQuat = function () {\r\n        let rotation = quat_create();\r\n        return function vec3_convertDirectionToWorldQuat(parentTransform, out = vec3_create()) {\r\n            parentTransform.quat2_getRotationQuat(rotation);\r\n            glMatrix.vec3.transformQuat(out, this, rotation);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_convertDirectionToLocalQuat = function () {\r\n        let rotation = quat_create();\r\n        return function vec3_convertDirectionToLocalQuat(parentTransform, out = vec3_create()) {\r\n            parentTransform.quat2_getRotationQuat(rotation);\r\n            glMatrix.quat.conjugate(rotation, rotation);\r\n            glMatrix.vec3.transformQuat(out, this, rotation);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_log = function vec3_log(decimalPlaces = 4) {\r\n        this.vec_log(decimalPlaces);\r\n    };\r\n\r\n    arrayExtension.vec3_error = function vec3_error(decimalPlaces = 4) {\r\n        this.vec_error(decimalPlaces);\r\n    };\r\n\r\n    arrayExtension.vec3_warn = function vec3_warn(decimalPlaces = 4) {\r\n        this.vec_warn(decimalPlaces);\r\n    };\r\n\r\n    arrayExtension.vec3_addRotation = function vec3_addRotation(rotation, out) {\r\n        return this.vec3_degreesAddRotation(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_addRotationDegrees = function vec3_addRotationDegrees(rotation, out) {\r\n        return quat.vec3_degreesAddRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_addRotationRadians = function vec3_addRotationRadians(rotation, out) {\r\n        return quat.vec3_degreesAddRotationRadians(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_addRotationQuat = function vec3_addRotationQuat(rotation, out) {\r\n        return quat.vec3_degreesAddRotationQuat(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_degreesAddRotation = function vec3_degreesAddRotation(rotation, out) {\r\n        return this.vec3_degreesAddRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_degreesAddRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function vec3_degreesAddRotationDegrees(rotation, out = vec3_create()) {\r\n            this.vec3_degreesToQuat(quat);\r\n            return quat.quat_addRotationDegrees(rotation, quat).quat_toDegrees(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_degreesAddRotationRadians = function () {\r\n        let quat = quat_create();\r\n        return function vec3_degreesAddRotationRadians(rotation, out = vec3_create()) {\r\n            this.vec3_degreesToQuat(quat);\r\n            return quat.quat_addRotationRadians(rotation, quat).quat_toDegrees(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_degreesAddRotationQuat = function () {\r\n        let quat = quat_create();\r\n        return function vec3_degreesAddRotationQuat(rotation, out = vec3_create()) {\r\n            this.vec3_degreesToQuat(quat);\r\n            return quat.quat_addRotationQuat(rotation, quat).quat_toDegrees(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_radiansAddRotation = function vec3_radiansAddRotation(rotation, out) {\r\n        return this.vec3_radiansAddRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.vec3_radiansAddRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function vec3_radiansAddRotationDegrees(rotation, out = vec3_create()) {\r\n            this.vec3_radiansToQuat(quat);\r\n            return quat.quat_addRotationDegrees(rotation, quat).quat_toRadians(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_radiansAddRotationRadians = function () {\r\n        let quat = quat_create();\r\n        return function vec3_radiansAddRotationRadians(rotation, out = vec3_create()) {\r\n            this.vec3_radiansToQuat(quat);\r\n            return quat.quat_addRotationRadians(rotation, quat).quat_toRadians(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_radiansAddRotationQuat = function () {\r\n        let quat = quat_create();\r\n        return function vec3_radiansAddRotationQuat(rotation, out = vec3_create()) {\r\n            this.vec3_radiansToQuat(quat);\r\n            return quat.quat_addRotationQuat(rotation, quat).quat_toRadians(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_toMatrix = function vec3_toMatrix(out = mat3_create()) {\r\n        return this.vec3_degreesToMatrix(out);\r\n    };\r\n\r\n    arrayExtension.vec3_degreesToMatrix = function () {\r\n        let quat = quat_create();\r\n        return function vec3_degreesToMatrix(out = mat3_create()) {\r\n            this.vec3_degreesToQuat(quat);\r\n            return quat.quat_toMatrix(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_radiansToMatrix = function () {\r\n        let quat = quat_create();\r\n        return function vec3_radiansToMatrix(out = mat3_create()) {\r\n            this.vec3_radiansToQuat(quat);\r\n            return quat.quat_toMatrix(out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationTo = function vec3_rotationTo(direction, out) {\r\n        return this.vec3_rotationToDegrees(direction, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotationToDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function vec3_rotationToDegrees(direction, out = vec3_create()) {\r\n            this.vec3_rotationToQuat(direction, rotationQuat);\r\n            rotationQuat.quat_toDegrees(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationToRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function vec3_rotationToRadians(direction, out = vec3_create()) {\r\n            this.vec3_rotationToQuat(direction, rotationQuat);\r\n            rotationQuat.quat_toRadians(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationToQuat = function () {\r\n        let rotationAxis = vec3_create();\r\n        return function vec3_rotationToQuat(direction, out = quat_create()) {\r\n            this.vec3_cross(direction, rotationAxis);\r\n            rotationAxis.vec3_normalize(rotationAxis);\r\n            let signedAngle = this.vec3_angleSigned(direction, rotationAxis);\r\n            out.quat_fromAxis(signedAngle, rotationAxis);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationToPivoted = function vec3_rotationToPivoted(direction, pivotAxis, out) {\r\n        return this.vec3_rotationToPivotedDegrees(direction, pivotAxis, out);\r\n    };\r\n\r\n    arrayExtension.vec3_rotationToPivotedDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function vec3_rotationToPivotedDegrees(direction, pivotAxis, out = vec3_create()) {\r\n            this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n            rotationQuat.quat_toDegrees(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationToPivotedRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function vec3_rotationToPivotedRadians(direction, pivotAxis, out = vec3_create()) {\r\n            this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n            rotationQuat.quat_toRadians(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_rotationToPivotedQuat = function () {\r\n        let thisFlat = vec3_create();\r\n        let directionFlat = vec3_create();\r\n        let rotationAxis = vec3_create();\r\n        return function vec3_rotationToPivotedQuat(direction, pivotAxis, out = quat_create()) {\r\n            this.vec3_removeComponentAlongAxis(pivotAxis, thisFlat);\r\n            direction.vec3_removeComponentAlongAxis(pivotAxis, directionFlat);\r\n\r\n            thisFlat.vec3_cross(directionFlat, rotationAxis);\r\n            rotationAxis.vec3_normalize(rotationAxis);\r\n            let signedAngle = thisFlat.vec3_angleSigned(directionFlat, rotationAxis);\r\n            out.quat_fromAxis(signedAngle, rotationAxis);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.vec3_lerp = function vec3_lerp(to, interpolationValue, out = vec3_create()) {\r\n        if (interpolationValue <= 0) {\r\n            out.vec3_copy(this);\r\n            return out;\r\n        } else if (interpolationValue >= 1) {\r\n            out.vec3_copy(to);\r\n            return out;\r\n        }\r\n\r\n        glMatrix.vec3.lerp(out, this, to, interpolationValue);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.vec3_interpolate = function vec3_interpolate(to, interpolationValue, easingFunction = EasingFunction.linear, out = vec3_create()) {\r\n        let lerpValue = easingFunction(interpolationValue);\r\n        return this.vec3_lerp(to, lerpValue, out);\r\n    };\r\n\r\n    // VECTOR 4\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.vec4_copy = function vec4_copy(vector) {\r\n        glMatrix.vec4.copy(this, vector);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.vec4_clone = function vec4_clone(out = vec4_create()) {\r\n        glMatrix.vec4.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    // QUAT\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.quat_normalize = function quat_normalize(out = quat_create()) {\r\n        glMatrix.quat.normalize(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_copy = function quat_copy(quat) {\r\n        glMatrix.quat.copy(this, quat);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat_clone = function quat_clone(out = quat_create()) {\r\n        glMatrix.quat.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_identity = function quat_identity() {\r\n        glMatrix.quat.identity(this);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat_length = function quat_length() {\r\n        return glMatrix.quat.length(this);\r\n    };\r\n\r\n    arrayExtension.quat_lengthSquared = function quat_lengthSquared() {\r\n        return glMatrix.quat.squaredLength(this);\r\n    };\r\n\r\n    arrayExtension.quat_invert = function quat_invert(out = quat_create()) {\r\n        glMatrix.quat.invert(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_conjugate = function quat_conjugate(out = quat_create()) {\r\n        glMatrix.quat.conjugate(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_mul = function quat_mul(rotation, out = quat_create()) {\r\n        glMatrix.quat.mul(out, this, rotation);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_getAxis = function () {\r\n        let zero = vec3_create(0, 0, 0);\r\n        return function quat_getAxis(out = vec3_create()) {\r\n            let angle = glMatrix.quat.getAxisAngle(out, this);\r\n            if (angle <= Math.PP_EPSILON) {\r\n                out.vec3_copy(zero);\r\n            }\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getAngle = function quat_getAngle() {\r\n        return this.quat_getAngleDegrees();\r\n    };\r\n\r\n\r\n    arrayExtension.quat_getAngleDegrees = function quat_getAngleDegrees() {\r\n        let angle = this.quat_getAngleRadians();\r\n        return Math.pp_toDegrees(angle);\r\n    };\r\n\r\n    arrayExtension.quat_getAngleRadians = function () {\r\n        let vector = vec3_create();\r\n        return function quat_getAngleRadians() {\r\n            let angle = glMatrix.quat.getAxisAngle(vector, this);\r\n            return angle;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getAxisScaled = function quat_getAxisScaled(out = vec3_create()) {\r\n        return this.quat_getAxisScaledDegrees(out);\r\n    };\r\n\r\n    arrayExtension.quat_getAxisScaledDegrees = function quat_getAxisScaledDegrees(out = vec3_create()) {\r\n        this.quat_getAxis(out);\r\n        let angle = this.quat_getAngleDegrees();\r\n        out.vec3_scale(angle, out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_getAxisScaledRadians = function () {\r\n        let zero = vec3_create(0, 0, 0);\r\n        return function quat_getAxisScaledRadians(out = vec3_create()) {\r\n            this.quat_getAxis(out);\r\n            let angle = this.quat_getAngleRadians();\r\n            if (angle <= Math.PP_EPSILON) {\r\n                out.vec3_copy(zero);\r\n            } else {\r\n                out.vec3_scale(angle, out);\r\n            }\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getAxes = function quat_getAxes(out = [vec3_create(), vec3_create(), vec3_create()]) {\r\n        this.quat_getLeft(out[0]);\r\n        this.quat_getUp(out[1]);\r\n        this.quat_getForward(out[2]);\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_getForward = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat_getForward(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getBackward = function quat_getBackward(out) {\r\n        out = this.quat_getForward(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_getLeft = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat_getLeft(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getRight = function quat_getRight(out) {\r\n        out = this.quat_getLeft(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_getUp = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat_getUp(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getDown = function quat_getDown(out) {\r\n        out = this.quat_getUp(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_setAxes = function quat_setAxes(left, up, forward) {\r\n        if (forward != null) {\r\n            return this.quat_setForward(forward, up, left);\r\n        } else if (up != null) {\r\n            return this.quat_setUp(up, forward, left);\r\n        } else {\r\n            return this.quat_setLeft(left, up, forward);\r\n        }\r\n    };\r\n\r\n    arrayExtension.quat_setForward = function quat_setForward(forward, up = null, left = null) {\r\n        return _quat_setAxes(this, [left, up, forward], [2, 1, 0]);\r\n    };\r\n\r\n    arrayExtension.quat_setBackward = function () {\r\n        let forward = vec3_create();\r\n        return function quat_setBackward(backward, up = null, left = null) {\r\n            backward.vec3_negate(forward);\r\n            return _quat_setAxes(this, [left, up, forward], [2, 1, 0]);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_setUp = function quat_setUp(up, forward = null, left = null) {\r\n        return _quat_setAxes(this, [left, up, forward], [1, 2, 0]);\r\n    };\r\n\r\n    arrayExtension.quat_setDown = function () {\r\n        let up = vec3_create();\r\n        return function quat_setDown(down, forward = null, left = null) {\r\n            down.vec3_negate(up);\r\n            return _quat_setAxes(this, [left, up, forward], [1, 2, 0]);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_setLeft = function quat_setLeft(left, up = null, forward = null) {\r\n        return _quat_setAxes(this, [left, up, forward], [0, 1, 2]);\r\n    };\r\n\r\n    arrayExtension.quat_setRight = function () {\r\n        let left = vec3_create();\r\n        return function quat_setRight(right, up = null, forward = null) {\r\n            right.vec3_negate(left);\r\n            return _quat_setAxes(this, [left, up, forward], [0, 1, 2]);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_toWorld = function quat_toWorld(parentQuat, out = quat_create()) {\r\n        glMatrix.quat.mul(out, parentQuat, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_toLocal = function () {\r\n        let invertQuat = quat_create();\r\n        return function quat_toLocal(parentQuat, out = quat_create()) {\r\n            glMatrix.quat.conjugate(invertQuat, parentQuat);\r\n            glMatrix.quat.mul(out, invertQuat, this);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_fromAxis = function quat_fromAxis(angle, axis) {\r\n        return this.quat_fromAxisDegrees(angle, axis);\r\n    };\r\n\r\n    arrayExtension.quat_fromAxisDegrees = function quat_fromAxisDegrees(angle, axis) {\r\n        glMatrix.quat.setAxisAngle(this, axis, glMatrix.glMatrix.toRadian(angle));\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat_fromAxisRadians = function quat_fromAxisRadians(angle, axis) {\r\n        glMatrix.quat.setAxisAngle(this, axis, angle);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat_fromAxes = function () {\r\n        let mat3 = mat3_create();\r\n        return function quat_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n            mat3.mat3_fromAxes(leftAxis, upAxis, forwardAxis);\r\n            return mat3.mat3_toQuat(this);\r\n        };\r\n    }();\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.quat_fromRadians = function () {\r\n        let vector = vec3_create();\r\n        return function quat_fromRadians(radiansRotation) {\r\n            radiansRotation.vec3_toDegrees(vector);\r\n            return this.quat_fromDegrees(vector);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_fromDegrees = function quat_fromDegrees(degreesRotation) {\r\n        glMatrix.quat.fromEuler(this, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat_toRadians = function () {\r\n        let mat3 = mat3_create();\r\n        return function quat_toRadians(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(mat3, this);\r\n\r\n            // Rotation order is ZYX \r\n            out[1] = Math.asin(-Math.pp_clamp(mat3[2], -1, 1));\r\n\r\n            if (Math.abs(mat3[2]) < (1 - Math.PP_EPSILON)) {\r\n                out[0] = Math.atan2(mat3[5], mat3[8]);\r\n                out[2] = Math.atan2(mat3[1], mat3[0]);\r\n            } else {\r\n                out[0] = 0;\r\n                out[2] = Math.atan2(-mat3[3], mat3[4]);\r\n            }\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_toDegrees = function quat_toDegrees(out = vec3_create()) {\r\n        this.quat_toRadians(out);\r\n        out.vec3_toDegrees(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_isNormalized = function quat_isNormalized(epsilon = Math.PP_EPSILON) {\r\n        return Math.abs(this.quat_lengthSquared() - 1) < epsilon;\r\n    };\r\n\r\n    arrayExtension.quat_addRotation = function quat_addRotation(rotation, out) {\r\n        return this.quat_addRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_addRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function quat_addRotationDegrees(rotation, out) {\r\n            rotation.vec3_degreesToQuat(quat);\r\n            return this.quat_addRotationQuat(quat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_addRotationRadians = function () {\r\n        let quat = quat_create();\r\n        return function quat_addRotationRadians(rotation, out) {\r\n            rotation.vec3_radiansToQuat(quat);\r\n            return this.quat_addRotationQuat(quat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_addRotationQuat = function quat_addRotationQuat(rotation, out = quat_create()) {\r\n        rotation.quat_mul(this, out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_subRotation = function quat_subRotation(rotation, out) {\r\n        return this.quat_subRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_subRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function quat_subRotationDegrees(rotation, out) {\r\n            rotation.vec3_degreesToQuat(quat);\r\n            return this.quat_subRotationQuat(quat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_subRotationRadians = function () {\r\n        let quat = quat_create();\r\n        return function quat_subRotationRadians(rotation, out) {\r\n            rotation.vec3_radiansToQuat(quat);\r\n            return this.quat_subRotationQuat(quat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_subRotationQuat = function () {\r\n        let inverse = quat_create();\r\n        return function quat_subRotationQuat(rotation, out = quat_create()) {\r\n            rotation.quat_invert(inverse);\r\n            this.quat_mul(inverse, out);\r\n\r\n            if (this.quat_isNormalized() && rotation.quat_isNormalized()) {\r\n                // I would normally not normalize this result since you may want the untouched sub\r\n                // But for normalized params it should be normalized\r\n                // It seems though that for some small error the quat will not be exactly normalized, so I fix it\r\n                out.quat_normalize(out);\r\n            }\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_rotationTo = function quat_rotationTo(rotation, out) {\r\n        return this.quat_rotationToDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotationToDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat_rotationToDegrees(rotation, out) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            return this.quat_rotationToQuat(rotationQuat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_rotationToRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat_rotationToRadians(rotation, out) {\r\n            rotation.vec3_radiansToQuat(rotationQuat);\r\n            return this.quat_rotationToQuat(rotationQuat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_rotationToQuat = function quat_rotationToQuat(rotation, out) {\r\n        return rotation.quat_subRotationQuat(this, out);\r\n    };\r\n\r\n    arrayExtension.quat_getTwist = function () {\r\n        let rotationAxis = vec3_create();\r\n        let projection = vec3_create();\r\n        let rotationAlongAxis = quat_create();\r\n        return function quat_getTwist(axis, out = quat_create()) {\r\n            rotationAxis[0] = this[0];\r\n            rotationAxis[1] = this[1];\r\n            rotationAxis[2] = this[2];\r\n\r\n            let dotProd = glMatrix.vec3.dot(axis, rotationAxis);\r\n            axis.vec3_scale(dotProd, projection);\r\n            rotationAlongAxis[0] = projection[0];\r\n            rotationAlongAxis[1] = projection[1];\r\n            rotationAlongAxis[2] = projection[2];\r\n            rotationAlongAxis[3] = this[3];\r\n            rotationAlongAxis.quat_normalize(rotationAlongAxis);\r\n            if (dotProd < 0) {\r\n                rotationAlongAxis[0] = -rotationAlongAxis[0];\r\n                rotationAlongAxis[1] = -rotationAlongAxis[1];\r\n                rotationAlongAxis[2] = -rotationAlongAxis[2];\r\n                rotationAlongAxis[3] = -rotationAlongAxis[3];\r\n            }\r\n\r\n            return out.quat_copy(rotationAlongAxis);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getSwing = function () {\r\n        let twist = quat_create();\r\n        return function quat_getSwing(axis, out = quat_create()) {\r\n            this.quat_getTwist(axis, twist);\r\n            this.quat_getSwingFromTwist(twist, out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_getSwingFromTwist = function quat_getSwingFromTwist(twist, out = quat_create()) {\r\n        return this.quat_subRotationQuat(twist, out);\r\n    };\r\n\r\n    arrayExtension.quat_getTwistFromSwing = function () {\r\n        let inverse = quat_create();\r\n        return function quat_getTwistFromSwing(swing, out = quat_create()) {\r\n            swing.quat_invert(inverse);\r\n            this.quat_addRotationQuat(inverse, out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_fromTwistSwing = function quat_fromTwistSwing(twist, swing) {\r\n        return twist.quat_addRotationQuat(swing, this);\r\n    };\r\n\r\n    arrayExtension.quat_toMatrix = function quat_toMatrix(out = mat3_create()) {\r\n        glMatrix.mat3.fromQuat(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_rotate = function quat_rotate(rotation, out) {\r\n        return this.quat_rotateDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotateDegrees = function quat_rotateDegrees(rotation, out) {\r\n        return this.quat_addRotationDegrees(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotateRadians = function quat_rotateRadians(rotation, out) {\r\n        return this.quat_addRotationRadians(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotateQuat = function quat_rotateQuat(rotation, out) {\r\n        return this.quat_addRotationQuat(rotation, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotateAxis = function quat_rotateAxis(angle, axis, out) {\r\n        return this.quat_rotateAxisDegrees(angle, axis, out);\r\n    };\r\n\r\n    arrayExtension.quat_rotateAxisDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat_rotateAxisDegrees(angle, axis, out) {\r\n            rotationQuat.quat_fromAxisDegrees(angle, axis);\r\n            return this.quat_rotateQuat(rotationQuat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_rotateAxisRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat_rotateAxisRadians(angle, axis, out) {\r\n            rotationQuat.quat_fromAxisRadians(angle, axis);\r\n            return this.quat_rotateQuat(rotationQuat, out);\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat_lerp = function quat_lerp(to, interpolationValue, out = quat_create()) {\r\n        if (interpolationValue <= 0) {\r\n            out.quat_copy(this);\r\n            return out;\r\n        } else if (interpolationValue >= 1) {\r\n            out.quat_copy(to);\r\n            return out;\r\n        }\r\n\r\n        glMatrix.quat.lerp(out, this, to, interpolationValue);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_interpolate = function quat_interpolate(to, interpolationValue, easingFunction = EasingFunction.linear, out = quat_create()) {\r\n        let lerpValue = easingFunction(interpolationValue);\r\n        return this.quat_lerp(to, lerpValue, out);\r\n    };\r\n\r\n    arrayExtension.quat_slerp = function quat_slerp(to, interpolationValue, out = quat_create()) {\r\n        if (interpolationValue <= 0) {\r\n            out.quat_copy(this);\r\n            return out;\r\n        } else if (interpolationValue >= 1) {\r\n            out.quat_copy(to);\r\n            return out;\r\n        }\r\n\r\n        glMatrix.quat.slerp(out, this, to, interpolationValue);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat_sinterpolate = function quat_sinterpolate(to, interpolationValue, easingFunction = EasingFunction.linear, out = quat_create()) {\r\n        let lerpValue = easingFunction(interpolationValue);\r\n        return this.quat_slerp(to, lerpValue, out);\r\n    };\r\n\r\n    // QUAT 2\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.quat2_normalize = function quat2_normalize(out = quat2_create()) {\r\n        glMatrix.quat2.normalize(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_invert = function quat2_invert(out = quat2_create()) {\r\n        glMatrix.quat2.invert(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_conjugate = function quat2_conjugate(out = quat2_create()) {\r\n        glMatrix.quat2.conjugate(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_copy = function quat2_copy(quat2) {\r\n        glMatrix.quat2.copy(this, quat2);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat2_identity = function quat2_identity() {\r\n        glMatrix.quat2.identity(this);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat2_getPosition = function quat2_getPosition(out = vec3_create()) {\r\n        glMatrix.quat2.getTranslation(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_getRotation = function quat2_getRotation(out) {\r\n        return this.quat2_getRotationDegrees(out);\r\n    };\r\n    arrayExtension.quat2_getRotationDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_getRotationDegrees(out = vec3_create()) {\r\n            this.quat2_getRotationQuat(rotationQuat).quat_toDegrees(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_getRotationRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_getRotationRadians(out = vec3_create()) {\r\n            this.quat2_getRotationQuat(rotationQuat).quat_toRadians(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_getRotationQuat = function quat2_getRotationQuat(out = quat_create()) {\r\n        glMatrix.quat.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_setPosition = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_setPosition(position) {\r\n            this.quat2_getRotationQuat(rotationQuat);\r\n            this.quat2_setPositionRotationQuat(position, rotationQuat);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setRotation = function quat2_setRotation(rotation) {\r\n        return this.quat2_setRotationDegrees(rotation);\r\n    };\r\n\r\n    arrayExtension.quat2_setRotationDegrees = function () {\r\n        let position = vec3_create();\r\n        return function quat2_setRotationDegrees(rotation) {\r\n            this.quat2_getPosition(position);\r\n            this.quat2_setPositionRotationDegrees(position, rotation);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setRotationRadians = function () {\r\n        let position = vec3_create();\r\n        return function quat2_setRotationRadians(rotation) {\r\n            this.quat2_getPosition(position);\r\n            this.quat2_setPositionRotationRadians(position, rotation);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setRotationQuat = function () {\r\n        let position = vec3_create();\r\n        return function quat2_setRotationQuat(rotation) {\r\n            this.quat2_getPosition(position);\r\n            this.quat2_setPositionRotationQuat(position, rotation);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setPositionRotation = function quat2_setPositionRotation(position, rotation) {\r\n        return this.quat2_setPositionRotationDegrees(position, rotation);\r\n    };\r\n\r\n    arrayExtension.quat2_setPositionRotationDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_setPositionRotationDegrees(position, rotation) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setPositionRotationRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_setPositionRotationRadians(position, rotation) {\r\n            rotation.vec3_radiansToQuat(rotationQuat);\r\n            glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_setPositionRotationQuat = function quat2_setPositionRotationQuat(position, rotation) {\r\n        glMatrix.quat2.fromRotationTranslation(this, rotation, position);\r\n        return this;\r\n    };\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.quat2_isNormalized = function quat2_isNormalized(epsilon = Math.PP_EPSILON) {\r\n        return Math.abs(this.quat2_lengthSquared() - 1) < epsilon;\r\n    };\r\n\r\n    arrayExtension.quat2_length = function quat2_length() {\r\n        return glMatrix.quat2.length(this);\r\n    };\r\n\r\n    arrayExtension.quat2_lengthSquared = function quat2_lengthSquared() {\r\n        return glMatrix.quat2.squaredLength(this);\r\n    };\r\n\r\n    arrayExtension.quat2_mul = function quat2_mul(quat2, out = quat2_create()) {\r\n        glMatrix.quat2.mul(out, this, quat2);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_getAxes = function quat2_getAxes(out = [vec3_create(), vec3_create(), vec3_create()]) {\r\n        this.quat2_getLeft(out[0]);\r\n        this.quat2_getUp(out[1]);\r\n        this.quat2_getForward(out[2]);\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_getForward = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat2_getForward(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_getBackward = function quat2_getBackward(out) {\r\n        out = this.quat2_getForward(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_getLeft = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat2_getLeft(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_getRight = function quat2_getRight(out) {\r\n        out = this.quat2_getLeft(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_getUp = function () {\r\n        let rotationMatrix = mat3_create();\r\n        return function quat2_getUp(out = vec3_create()) {\r\n            glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n            glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n            glMatrix.vec3.normalize(out, out);\r\n\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_getDown = function quat2_getDown(out) {\r\n        out = this.quat2_getUp(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_toWorld = function quat2_toWorld(parentTransformQuat, out = quat2_create()) {\r\n        glMatrix.quat2.mul(out, parentTransformQuat, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_toLocal = function () {\r\n        let invertQuat = quat2_create();\r\n        return function quat2_toLocal(parentTransformQuat, out = quat2_create()) {\r\n            glMatrix.quat2.conjugate(invertQuat, parentTransformQuat);\r\n            glMatrix.quat2.mul(out, invertQuat, this);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_rotateAxis = function quat2_rotateAxis(angle, axis, out) {\r\n        return this.quat2_rotateAxisDegrees(angle, axis, out);\r\n    };\r\n\r\n    arrayExtension.quat2_rotateAxisDegrees = function quat2_rotateAxisDegrees(angle, axis, out) {\r\n        return this.quat2_rotateAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, out);\r\n    };\r\n\r\n    arrayExtension.quat2_rotateAxisRadians = function () {\r\n        let rotationQuat = quat_create();\r\n        return function quat2_rotateAxisRadians(angle, axis, out) {\r\n            this.quat2_getRotationQuat(rotationQuat);\r\n            rotationQuat.quat_rotateAxisRadians(angle, axis, rotationQuat);\r\n            out.quat2_copy(this);\r\n            out.quat2_setRotationQuat(rotationQuat);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.quat2_toMatrix = function quat2_toMatrix(out = mat4_create()) {\r\n        glMatrix.mat4.fromQuat2(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_fromMatrix = function quat2_fromMatrix(mat4) {\r\n        mat4.mat4_toQuat(this);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.quat2_lerp = function quat2_lerp(to, interpolationValue, out = quat2_create()) {\r\n        if (interpolationValue <= 0) {\r\n            out.quat2_copy(this);\r\n            return out;\r\n        } else if (interpolationValue >= 1) {\r\n            out.quat2_copy(to);\r\n            return out;\r\n        }\r\n\r\n        glMatrix.quat2.lerp(out, this, to, interpolationValue);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.quat2_interpolate = function quat2_interpolate(to, interpolationValue, easingFunction = EasingFunction.linear, out = quat2_create()) {\r\n        let lerpValue = easingFunction(interpolationValue);\r\n        return this.quat2_lerp(to, lerpValue, out);\r\n    };\r\n\r\n    // MATRIX 3\r\n\r\n    // glMatrix Bridge\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.mat3_toDegrees = function () {\r\n        let quat = quat_create();\r\n        return function mat3_toDegrees(out = vec3_create()) {\r\n            this.mat3_toQuat(quat);\r\n            quat.quat_toDegrees(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat3_toRadians = function () {\r\n        let quat = quat_create();\r\n        return function mat3_toRadians(out = vec3_create()) {\r\n            this.mat3_toQuat(quat);\r\n            quat.quat_toRadians(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat3_toQuat = function mat3_toQuat(out = quat_create()) {\r\n        glMatrix.quat.fromMat3(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat3_fromAxes = function mat3_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n        glMatrix.mat3.set(this,\r\n            leftAxis[0], leftAxis[1], leftAxis[2],\r\n            upAxis[0], upAxis[1], upAxis[2],\r\n            forwardAxis[0], forwardAxis[1], forwardAxis[2]);\r\n        return this;\r\n    };\r\n\r\n    // MATRIX 4\r\n\r\n    // glMatrix Bridge\r\n\r\n    arrayExtension.mat4_copy = function mat4_copy(mat4) {\r\n        glMatrix.mat4.copy(this, mat4);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_identity = function mat4_identity() {\r\n        glMatrix.mat4.identity(this);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_invert = function mat4_invert(out = mat4_create()) {\r\n        glMatrix.mat4.invert(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_mul = function mat4_mul(mat4, out = mat4_create()) {\r\n        glMatrix.mat4.mul(out, this, mat4);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_scale = function mat4_scale(vector, out = mat4_create()) {\r\n        glMatrix.mat4.scale(out, this, vector);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_clone = function mat4_clone(out = mat4_create()) {\r\n        glMatrix.mat4.copy(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getPosition = function mat4_getPosition(out = vec3_create()) {\r\n        glMatrix.mat4.getTranslation(out, this);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getRotation = function mat4_getRotation(out = vec3_create()) {\r\n        return this.mat4_getRotationDegrees(out);\r\n    };\r\n\r\n    arrayExtension.mat4_getRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function mat4_getRotationDegrees(out = vec3_create()) {\r\n            this.mat4_getRotationQuat(quat);\r\n            quat.quat_toDegrees(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_getRotationRadians = function () {\r\n        let quat = quat_create();\r\n        return function mat4_getRotationRadians(out = vec3_create()) {\r\n            this.mat4_getRotationQuat(quat);\r\n            quat.quat_toRadians(out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_getRotationQuat = function () {\r\n        let scale = vec3_create();\r\n        let transformMatrixNoScale = mat4_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function mat4_getRotationQuat(out = quat_create()) {\r\n            glMatrix.mat4.getScaling(scale, this);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(transformMatrixNoScale, this, inverseScale);\r\n            glMatrix.mat4.getRotation(out, transformMatrixNoScale);\r\n            glMatrix.quat.normalize(out, out);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_getScale = function mat4_getScale(out = vec3_create()) {\r\n        glMatrix.mat4.getScaling(out, this);\r\n        return out;\r\n    };\r\n\r\n    // New Functions\r\n\r\n    arrayExtension.mat4_setPosition = function mat4_setPosition(position) {\r\n        this[12] = position[0];\r\n        this[13] = position[1];\r\n        this[14] = position[2];\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_setRotation = function mat4_setRotation(rotation) {\r\n        this.mat4_setRotationDegrees(rotation);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_setRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function mat4_setRotationDegrees(rotation) {\r\n            this.mat4_setRotationQuat(rotation.vec3_degreesToQuat(quat));\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setRotationRadians = function () {\r\n        let vector = vec3_create();\r\n        return function mat4_setRotationRadians(rotation) {\r\n            this.mat4_setRotationDegrees(rotation.vec3_toDegrees(vector));\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setRotationQuat = function () {\r\n        let position = vec3_create();\r\n        let scale = vec3_create();\r\n        return function mat4_setRotationQuat(rotation) {\r\n            this.mat4_getPosition(position);\r\n            this.mat4_getScale(scale);\r\n            this.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setScale = function () {\r\n        let tempScale = vec3_create();\r\n        return function mat4_setScale(scale) {\r\n            glMatrix.mat4.getScaling(tempScale, this);\r\n            glMatrix.vec3.divide(tempScale, scale, tempScale);\r\n            glMatrix.mat4.scale(this, this, tempScale);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setPositionRotationScale = function mat4_setPositionRotationScale(position, rotation, scale) {\r\n        this.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_setPositionRotationDegreesScale = function () {\r\n        let quat = quat_create();\r\n        return function mat4_setPositionRotationDegreesScale(position, rotation, scale) {\r\n            this.mat4_setPositionRotationQuatScale(position, rotation.vec3_degreesToQuat(quat), scale);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setPositionRotationRadiansScale = function () {\r\n        let vector = vec3_create();\r\n        return function mat4_setPositionRotationRadiansScale(position, rotation, scale) {\r\n            this.mat4_setPositionRotationDegreesScale(position, rotation.vec3_toDegrees(vector), scale);\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setPositionRotationQuatScale = function mat4_setPositionRotationQuatScale(position, rotation, scale) {\r\n        glMatrix.mat4.fromRotationTranslationScale(this, rotation, position, scale);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_setPositionRotation = function mat4_setPositionRotation(position, rotation) {\r\n        this.mat4_setPositionRotationDegrees(position, rotation);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_setPositionRotationDegrees = function () {\r\n        let quat = quat_create();\r\n        return function mat4_setPositionRotationDegrees(position, rotation) {\r\n            this.mat4_setPositionRotationQuat(position, rotation.vec3_degreesToQuat(quat));\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setPositionRotationRadians = function () {\r\n        let vector = vec3_create();\r\n        return function mat4_setPositionRotationRadians(position, rotation) {\r\n            this.mat4_setPositionRotationDegrees(position, rotation.vec3_toDegrees(vector));\r\n            return this;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_setPositionRotationQuat = function mat4_setPositionRotationQuat(position, rotation) {\r\n        glMatrix.mat4.fromRotationTranslation(this, rotation, position);\r\n        return this;\r\n    };\r\n\r\n    arrayExtension.mat4_getAxes = function mat4_getAxes(out = [vec3_create(), vec3_create(), vec3_create()]) {\r\n        this.mat4_getLeft(out[0]);\r\n        this.mat4_getUp(out[1]);\r\n        this.mat4_getForward(out[2]);\r\n\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getForward = function mat4_getForward(out = vec3_create()) {\r\n        glMatrix.vec3.set(out, this[8], this[9], this[10]);\r\n        glMatrix.vec3.normalize(out, out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getBackward = function mat4_getBackward(out) {\r\n        out = this.mat4_getForward(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getLeft = function mat4_getLeft(out = vec3_create()) {\r\n        glMatrix.vec3.set(out, this[0], this[1], this[2]);\r\n        glMatrix.vec3.normalize(out, out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getRight = function mat4_getRight(out) {\r\n        out = this.mat4_getLeft(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getUp = function mat4_getUp(out = vec3_create()) {\r\n        glMatrix.vec3.set(out, this[4], this[5], this[6]);\r\n        glMatrix.vec3.normalize(out, out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_getDown = function mat4_getDown(out) {\r\n        out = this.mat4_getUp(out);\r\n        out.vec3_negate(out);\r\n        return out;\r\n    };\r\n\r\n    arrayExtension.mat4_toWorld = function () {\r\n        let convertTransform = mat4_create();\r\n        let position = vec3_create();\r\n        let scale = vec3_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function mat4_toWorld(parentTransformMatrix, out = mat4_create()) {\r\n            if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n                glMatrix.mat4.mul(out, parentTransformMatrix, this);\r\n            } else {\r\n                glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n                position.vec3_convertPositionToWorldMatrix(parentTransformMatrix, position);\r\n\r\n                glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n                glMatrix.vec3.divide(inverseScale, one, scale);\r\n                glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n                glMatrix.mat4.mul(out, convertTransform, this);\r\n                glMatrix.mat4.scale(out, out, scale);\r\n\r\n                out[12] = position[0];\r\n                out[13] = position[1];\r\n                out[14] = position[2];\r\n                out[15] = 1;\r\n            }\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_toLocal = function () {\r\n        let convertTransform = mat4_create();\r\n        let position = vec3_create();\r\n        let scale = vec3_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create();\r\n        glMatrix.vec3.set(one, 1, 1, 1);\r\n        return function mat4_toLocal(parentTransformMatrix, out = mat4_create()) {\r\n            if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n                glMatrix.mat4.invert(convertTransform, parentTransformMatrix);\r\n                glMatrix.mat4.mul(out, convertTransform, this);\r\n            } else {\r\n                glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n                position.vec3_convertPositionToLocalMatrix(parentTransformMatrix, position);\r\n\r\n                glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n                glMatrix.vec3.divide(inverseScale, one, scale);\r\n                glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n                glMatrix.mat4.invert(convertTransform, convertTransform);\r\n                glMatrix.mat4.mul(out, convertTransform, this);\r\n                glMatrix.mat4.scale(out, out, inverseScale);\r\n\r\n                out[12] = position[0];\r\n                out[13] = position[1];\r\n                out[14] = position[2];\r\n                out[15] = 1;\r\n            }\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_hasUniformScale = function () {\r\n        let scale = vec3_create();\r\n        return function mat4_hasUniformScale() {\r\n            glMatrix.mat4.getScaling(scale, this);\r\n            return Math.abs(scale[0] - scale[1]) < Math.PP_EPSILON && Math.abs(scale[1] - scale[2]) < Math.PP_EPSILON && Math.abs(scale[0] - scale[2]) < Math.PP_EPSILON;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_toQuat = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        return function mat4_toQuat(out = quat2_create()) {\r\n            glMatrix.mat4.getTranslation(position, this);\r\n            this.mat4_getRotationQuat(rotation);\r\n            glMatrix.quat2.fromRotationTranslation(out, rotation, position);\r\n            return out;\r\n        };\r\n    }();\r\n\r\n    arrayExtension.mat4_fromQuat = function mat4_fromQuat(quat2) {\r\n        quat2.quat2_toMatrix(this);\r\n        return this;\r\n    };\r\n\r\n\r\n\r\n    let arrayPrototypesToExtend = [\r\n        Array.prototype, Uint8ClampedArray.prototype, Uint8Array.prototype, Uint16Array.prototype, Uint32Array.prototype, Int8Array.prototype,\r\n        Int16Array.prototype, Int32Array.prototype, Float32Array.prototype, Float64Array.prototype];\r\n\r\n    for (let arrayPrototypeToExtend of arrayPrototypesToExtend) {\r\n        ExtensionUtils.assignProperties(arrayExtension, arrayPrototypeToExtend, false, true, true);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction _vec_buildConsoleMessage(vector, decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < vector.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        if (decimalPlaces != null) {\r\n            message = message.concat(vector[i].toFixed(decimalPlaces));\r\n        } else {\r\n            message = message.concat(vector[i].toString());\r\n        }\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n};\r\n\r\nfunction _vec_prepareOut(vector, out) {\r\n    if (out == null) {\r\n        out = vector.pp_clone();\r\n    } else if (out != vector) {\r\n        out.pp_copy(vector);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nfunction _findAllEqualOptimized(array, elementToFind, getIndexes) {\r\n    // Adapted from: https:// stackoverflow.com/a/20798567\r\n\r\n    let elementsFound = [];\r\n    let index = -1;\r\n    while ((index = array.indexOf(elementToFind, index + 1)) >= 0) {\r\n        elementsFound.push(getIndexes ? index : array[index]);\r\n    }\r\n\r\n    return elementsFound;\r\n};\r\n\r\nlet _quat_setAxes = function () {\r\n    let fixedAxes = [vec3_create(), vec3_create(), vec3_create()];\r\n\r\n    let fixedAxesFixSignMap = [\r\n        [1, -1, 1],\r\n        [1, 1, -1],\r\n        [-1, 1, -1]\r\n    ];\r\n\r\n    let fixedLeft = vec3_create();\r\n    let fixedUp = vec3_create();\r\n    let fixedForward = vec3_create();\r\n\r\n    let currentAxis = vec3_create();\r\n\r\n    let rotationAxis = vec3_create();\r\n    let rotationMat = mat3_create();\r\n    let rotationQuat = quat_create();\r\n    return function _quat_setAxes(vector, axes, priority) {\r\n        let firstAxis = axes[priority[0]];\r\n        let secondAxis = axes[priority[1]];\r\n        let thirdAxis = axes[priority[2]];\r\n\r\n        if (firstAxis == null || firstAxis.vec3_isZero(Math.PP_EPSILON)) {\r\n            return;\r\n        }\r\n\r\n        let secondAxisValid = false;\r\n        if (secondAxis != null) {\r\n            let angleBetween = firstAxis.vec3_angleRadians(secondAxis);\r\n            if (angleBetween > Math.PP_EPSILON) {\r\n                secondAxisValid = true;\r\n            }\r\n        }\r\n\r\n        let thirdAxisValid = false;\r\n        if (thirdAxis != null) {\r\n            let angleBetween = firstAxis.vec3_angleRadians(thirdAxis);\r\n            if (angleBetween > Math.PP_EPSILON) {\r\n                thirdAxisValid = true;\r\n            }\r\n        }\r\n\r\n        if (secondAxisValid || thirdAxisValid) {\r\n            let crossAxis = null;\r\n            let secondAxisIndex = null;\r\n            let thirdAxisIndex = null;\r\n            if (secondAxisValid) {\r\n                crossAxis = secondAxis;\r\n                secondAxisIndex = 1;\r\n                thirdAxisIndex = 2;\r\n            } else {\r\n                crossAxis = thirdAxis;\r\n                secondAxisIndex = 2;\r\n                thirdAxisIndex = 1;\r\n            }\r\n\r\n            let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n            glMatrix.vec3.cross(fixedAxes[thirdAxisIndex], firstAxis, crossAxis);\r\n            glMatrix.vec3.scale(fixedAxes[thirdAxisIndex], fixedAxes[thirdAxisIndex], fixSignMap[priority[thirdAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[secondAxisIndex], firstAxis, fixedAxes[thirdAxisIndex]);\r\n            glMatrix.vec3.scale(fixedAxes[secondAxisIndex], fixedAxes[secondAxisIndex], fixSignMap[priority[secondAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[0], fixedAxes[1], fixedAxes[2]);\r\n            glMatrix.vec3.scale(fixedAxes[0], fixedAxes[0], fixSignMap[priority[0]]);\r\n\r\n            glMatrix.vec3.normalize(fixedLeft, fixedAxes[priority.pp_findIndexEqual(0)]);\r\n            glMatrix.vec3.normalize(fixedUp, fixedAxes[priority.pp_findIndexEqual(1)]);\r\n            glMatrix.vec3.normalize(fixedForward, fixedAxes[priority.pp_findIndexEqual(2)]);\r\n\r\n            glMatrix.mat3.set(rotationMat,\r\n                fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                fixedUp[0], fixedUp[1], fixedUp[2],\r\n                fixedForward[0], fixedForward[1], fixedForward[2]\r\n            );\r\n\r\n            glMatrix.quat.fromMat3(rotationQuat, rotationMat);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n\r\n            vector.quat_copy(rotationQuat);\r\n        } else {\r\n            if (priority[0] == 0) {\r\n                vector.quat_getLeft(currentAxis);\r\n            } else if (priority[0] == 1) {\r\n                vector.quat_getUp(currentAxis);\r\n            } else {\r\n                vector.quat_getForward(currentAxis);\r\n            }\r\n\r\n            let angleBetween = firstAxis.vec3_angleRadians(currentAxis);\r\n            if (angleBetween > Math.PP_EPSILON) {\r\n                glMatrix.vec3.cross(rotationAxis, currentAxis, firstAxis);\r\n                glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n                glMatrix.quat.setAxisAngle(rotationQuat, rotationAxis, angleBetween);\r\n\r\n                vector.quat_rotateQuat(rotationQuat, vector);\r\n            }\r\n        }\r\n\r\n        return vector;\r\n    };\r\n}();\r\n\r\n\r\nfunction _vec2_set(vector, x, y) {\r\n    if (y === undefined) {\r\n        glMatrix.vec2.set(vector, x, x);\r\n    } else {\r\n        glMatrix.vec2.set(vector, x, y);\r\n    }\r\n    return vector;\r\n};\r\n\r\nfunction _vec3_set(vector, x, y, z) {\r\n    if (y === undefined) {\r\n        glMatrix.vec3.set(vector, x, x, x);\r\n    } else {\r\n        glMatrix.vec3.set(vector, x, y, z);\r\n    }\r\n    return vector;\r\n};\r\n\r\nfunction _vec4_set(vector, x, y, z, w) {\r\n    if (y === undefined) {\r\n        glMatrix.vec4.set(vector, x, x, x, x);\r\n    } else {\r\n        glMatrix.vec4.set(vector, x, y, z, w);\r\n    }\r\n    return vector;\r\n};\r\n\r\nfunction _quat_set(vector, x, y, z, w) {\r\n    if (y === undefined) {\r\n        glMatrix.quat.set(vector, x, x, x, x);\r\n    } else {\r\n        glMatrix.quat.set(vector, x, y, z, w);\r\n    }\r\n    return vector;\r\n};\r\n\r\nfunction _quat2_set(vector, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    if (y1 === undefined) {\r\n        glMatrix.quat2.set(vector, x1, x1, x1, x1, x1, x1, x1, x1);\r\n    } else {\r\n        glMatrix.quat2.set(vector, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n    return vector;\r\n}\r\n\r\nfunction _mat3_set(\r\n    vector,\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    if (m01 === undefined) {\r\n        glMatrix.mat3.set(vector,\r\n            m00, m00, m00,\r\n            m00, m00, m00,\r\n            m00, m00, m00);\r\n    } else {\r\n        glMatrix.mat3.set(vector,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n    return vector;\r\n}\r\n\r\nfunction _mat4_set(\r\n    vector,\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    if (m01 === undefined) {\r\n        glMatrix.mat4.set(vector,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00);\r\n    } else {\r\n        glMatrix.mat4.set(vector,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return vector;\r\n}", "export function assignProperties(fromReference, toReference, enumerable = false, writable = true, configurable = true) {\r\n    let ownPropertyNames = Object.getOwnPropertyNames(fromReference);\r\n    for (let ownPropertyName of ownPropertyNames) {\r\n        Object.defineProperty(toReference, ownPropertyName, {\r\n            value: fromReference[ownPropertyName],\r\n            enumerable: enumerable,\r\n            writable: writable,\r\n            configurable: configurable\r\n        });\r\n    }\r\n}\r\n\r\nexport let ExtensionUtils = {\r\n    assignProperties\r\n};", "/*\r\n    How to use\r\n\r\n    By default the rotations are in Degrees\r\n\r\n    For rotations u can add a suffix like Degrees/Radians to use a specific version, example:\r\n        - pp_angleDistanceSignedDegrees\r\n        - pp_isInsideAngleRangeRadians\r\n        \r\n    List of constants:\r\n        - PP_EPSILON / PP_EPSILON_SQUARED / PP_EPSILON_DEGREES\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like Degrees or Radians) are omitted \r\n\r\n        - pp_clamp\r\n        - pp_sign\r\n        - pp_toDegrees      / pp_toRadians\r\n        - pp_roundDecimal\r\n        - pp_mapToRange\r\n        - pp_random         / pp_randomInt    / pp_randomInt        / pp_randomSign / pp_randomPick\r\n        - pp_lerp           / pp_interpolate  / EasingFunction\r\n        - pp_angleDistance  / pp_angleDistanceSigned\r\n        - pp_angleClamp\r\n        - pp_isInsideAngleRange\r\n*/\r\n\r\nimport { ExtensionUtils } from \"../../utils/extension_utils\";\r\n\r\nexport function initMathExtension() {\r\n    initMathExtensionStatic();\r\n}\r\n\r\nexport let EasingFunction = {\r\n    linear: t => t,\r\n    easeIn: t => t * t * t,\r\n    easeOut: t => (t - 1) * (t - 1) * (t - 1) + 1,\r\n    easeInOut: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n};\r\n\r\nexport function initMathExtensionStatic() {\r\n\r\n    let mathExtension = {};\r\n\r\n    mathExtension.PP_EPSILON = 0.000001;\r\n    mathExtension.PP_EPSILON_SQUARED = mathExtension.PP_EPSILON * mathExtension.PP_EPSILON;\r\n    mathExtension.PP_EPSILON_DEGREES = 0.00001;\r\n\r\n    mathExtension.pp_clamp = function pp_clamp(value, start, end) {\r\n        let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n        let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n\r\n        let min = Math.min(fixedStart, fixedEnd);\r\n        let max = Math.max(fixedStart, fixedEnd);\r\n        return Math.min(Math.max(value, min), max);\r\n    };\r\n\r\n    mathExtension.pp_sign = function pp_sign(value, zeroSign = 1) {\r\n        let sign = Math.sign(value);\r\n        if (sign == 0) {\r\n            sign = Math.sign(zeroSign);\r\n        }\r\n        return sign;\r\n    };\r\n\r\n    mathExtension.pp_toDegrees = function pp_toDegrees(angle) {\r\n        return angle * (180 / Math.PI);\r\n    };\r\n\r\n    mathExtension.pp_toRadians = function pp_toRadians(angle) {\r\n        return angle * (Math.PI / 180);\r\n    };\r\n\r\n    mathExtension.pp_roundDecimal = function pp_roundDecimal(number, decimalPlaces) {\r\n        let factor = Math.pow(10, decimalPlaces);\r\n        number = Math.round(number * factor) / factor;\r\n\r\n        return number;\r\n    };\r\n\r\n    // Start range value doesn't need to be lower than the end one, so you can map from [0,1] to [3,2], where 3 is greater than 2\r\n    mathExtension.pp_mapToRange = function pp_mapToRange(value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n        if (originRangeStart == originRangeEnd) {\r\n            return newRangeStart;\r\n        }\r\n\r\n        let clampedValue = this.pp_clamp(value, originRangeStart, originRangeEnd);\r\n\r\n        if (clampedValue == originRangeStart) {\r\n            return newRangeStart;\r\n        } else if (clampedValue == originRangeEnd) {\r\n            return newRangeEnd;\r\n        }\r\n\r\n        let newValue = newRangeStart + ((newRangeEnd - newRangeStart) / (originRangeEnd - originRangeStart)) * (clampedValue - originRangeStart);\r\n        let clampedNewValue = this.pp_clamp(newValue, newRangeStart, newRangeEnd);\r\n        return clampedNewValue;\r\n    };\r\n\r\n    // Range is [start, end)\r\n    mathExtension.pp_random = function pp_random(start = 0, end = 1) {\r\n        return Math.random() * (end - start) + start;\r\n    };\r\n\r\n    // Range is [start, end]\r\n    mathExtension.pp_randomInt = function pp_randomInt(start, end) {\r\n        let min = Math.min(start, end);\r\n        let max = Math.max(start, end);\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    };\r\n\r\n    mathExtension.pp_randomBool = function pp_randomBool() {\r\n        return this.pp_randomInt(0, 1) == 0;\r\n    };\r\n\r\n    // Return 1 or -1\r\n    mathExtension.pp_randomSign = function pp_randomSign() {\r\n        return (Math.random() < 0.5) ? 1 : -1;\r\n    };\r\n\r\n    // You give it a list of parameters and returns one\r\n    mathExtension.pp_randomPick = function pp_randomPick(...args) {\r\n        let random = null;\r\n\r\n        if (args.length > 0) {\r\n            if (args.length == 1 && args[0].length != null) {\r\n                if (args[0].length > 0) {\r\n                    let randomIndex = this.pp_randomInt(0, args[0].length - 1);\r\n                    random = args[0][randomIndex];\r\n                }\r\n            } else {\r\n                let randomIndex = this.pp_randomInt(0, args.length - 1);\r\n                random = args[randomIndex];\r\n            }\r\n        }\r\n\r\n        return random;\r\n    };\r\n\r\n    mathExtension.pp_lerp = function pp_lerp(from, to, interpolationValue) {\r\n        if (interpolationValue <= 0) {\r\n            return from;\r\n        } else if (interpolationValue >= 1) {\r\n            return to;\r\n        }\r\n\r\n        return interpolationValue * (to - from) + from;\r\n    };\r\n\r\n    mathExtension.pp_interpolate = function pp_interpolate(from, to, interpolationValue, easingFunction = EasingFunction.linear) {\r\n        let lerpValue = easingFunction(interpolationValue);\r\n        return this.pp_lerp(from, to, lerpValue);\r\n    };\r\n\r\n    mathExtension.pp_angleDistance = function pp_angleDistance(from, to) {\r\n        return this.pp_angleDistanceDegrees(from, to);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceDegrees = function pp_angleDistanceDegrees(from, to) {\r\n        return Math.abs(this.pp_angleDistanceSignedDegrees(from, to));\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceRadians = function pp_angleDistanceRadians(from, to) {\r\n        return Math.abs(this.pp_angleDistanceSignedRadians(from, to));\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSigned = function pp_angleDistanceSigned(from, to) {\r\n        return this.pp_angleDistanceSignedDegrees(from, to);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSignedDegrees = function pp_angleDistanceSignedDegrees(from, to) {\r\n        let clampedFrom = this.pp_angleClampDegrees(from, true);\r\n        let clampedTo = this.pp_angleClampDegrees(to, true);\r\n\r\n        let distance = clampedTo - clampedFrom;\r\n        if (clampedTo - clampedFrom > 180) {\r\n            distance = (clampedTo - clampedFrom) - 360;\r\n        } else if (clampedTo - clampedFrom < -180) {\r\n            distance = (clampedTo - clampedFrom) + 360;\r\n        }\r\n\r\n        return distance;\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSignedRadians = function pp_angleDistanceSignedRadians(from, to) {\r\n        return this.pp_toRadians(this.pp_angleDistanceSignedDegrees(this.pp_toDegrees(from), this.pp_toDegrees(to)));\r\n    };\r\n\r\n    // Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n    // If usePositiveRange is true, the angle will be clamped to 0/360\r\n    mathExtension.pp_angleClamp = function pp_angleClamp(angle, usePositiveRange = false) {\r\n        return this.pp_angleClampDegrees(angle, usePositiveRange);\r\n    };\r\n\r\n    // Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n    // If usePositiveRange is true, the angle will be clamped to 0/360\r\n    mathExtension.pp_angleClampDegrees = function pp_angleClampDegrees(angle, usePositiveRange = false) {\r\n        let clampedAngle = angle % 360;\r\n\r\n        if (clampedAngle < 0) {\r\n            clampedAngle += 360;\r\n        }\r\n\r\n        if (!usePositiveRange) {\r\n            if (clampedAngle > 180) {\r\n                clampedAngle -= 360;\r\n            }\r\n        }\r\n\r\n        return clampedAngle;\r\n    };\r\n\r\n    // Clamp the angle to -Pi/+Pi, so that, for example, 270 will be -90\r\n    // If usePositiveRange is true, the angle will be clamped to 0/2Pi\r\n    mathExtension.pp_angleClampRadians = function pp_angleClampRadians(angle, usePositiveRange = false) {\r\n        return this.pp_toRadians(this.pp_angleClampDegrees(this.pp_toDegrees(angle), usePositiveRange));\r\n    };\r\n\r\n    // The range goes from start to end by going toward the positive direction (if useShortestAngle is false)\r\n    // [20,300] is a 280 degrees range, [300, 20] is an 80 degrees range, [-150,-170] = [210, 190] is a 240 degrees range, [0, -10] = [0, 350] is a 350 degrees range\r\n    mathExtension.pp_isInsideAngleRange = function pp_isInsideAngleRange(angle, start, end, useShortestAngle = false) {\r\n        return this.pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle);\r\n    };\r\n\r\n    mathExtension.pp_isInsideAngleRangeDegrees = function pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle = false) {\r\n        let isInside = false;\r\n\r\n        let anglePositive = this.pp_angleClampDegrees(angle, true);\r\n        let startPositive = this.pp_angleClampDegrees(start, true);\r\n        let endPositive = this.pp_angleClampDegrees(end, true);\r\n\r\n        if (useShortestAngle) {\r\n            if (this.pp_angleDistanceSignedDegrees(startPositive, endPositive) < 0) {\r\n                let temp = startPositive;\r\n                startPositive = endPositive;\r\n                endPositive = temp;\r\n            }\r\n        }\r\n\r\n        if (startPositive < endPositive) {\r\n            isInside = anglePositive >= startPositive && anglePositive <= endPositive;\r\n        } else {\r\n            isInside = anglePositive >= startPositive || anglePositive <= endPositive;\r\n        }\r\n\r\n        return isInside;\r\n    };\r\n\r\n    mathExtension.pp_isInsideAngleRangeRadians = function pp_isInsideAngleRangeRadians(angle, start, end, useShortestAngle = false) {\r\n        return this.pp_isInsideAngleRangeDegrees(this.pp_toDegrees(angle), this.pp_toDegrees(start), this.pp_toDegrees(end), useShortestAngle);\r\n    };\r\n\r\n\r\n\r\n    ExtensionUtils.assignProperties(mathExtension, Math, false, true, true);\r\n\r\n}", "import { ExtensionUtils } from \"../../utils/extension_utils\";\r\n\r\nexport function initNumberExtension(engine) {\r\n    initNumberExtensionPrototype();\r\n}\r\n\r\nexport function initNumberExtensionPrototype() {\r\n\r\n    let numberExtension = {};\r\n\r\n    // Mostly added to make it easier to use plain numbers in combo with NumberOverValue\r\n    numberExtension.get = function get() {\r\n        return this.valueOf();\r\n    };\r\n\r\n\r\n\r\n    ExtensionUtils.assignProperties(numberExtension, Number.prototype, false, true, true);\r\n\r\n}", "import { initArrayExtension } from \"./array_extension\";\r\nimport { initMathExtension } from \"./math_extension\";\r\nimport { initNumberExtension } from \"./number_extension\";\r\n\r\nexport function initJSExtensions() {\r\n    initMathExtension();\r\n    initArrayExtension();\r\n    initNumberExtension();\r\n}", "import { initJSExtensions } from \"./extensions/init_js_extentions\";\r\n\r\nexport function initJSPlugins(engine) {\r\n    initJSExtensions(engine);\r\n}", "/*\r\n    How to use\r\n\r\n    By default the functions work on World space, rotations are in Degrees and transforms are Matrix (and not Quat 2) \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n\r\n    You can add a suffix like World/Local/Object at the end of some functions to specify the space, example:\r\n        - pp_getPositionLocal to get the position in local space (parent space)\r\n        - pp_translateObject to translate in object space\r\n\r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - pp_getRotationDegrees\r\n        - pp_setRotationLocalMatrix\r\n        - pp_rotateWorldQuat\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - pp_getTransformQuat\r\n        - pp_setTransformWorldMatrix\r\n        \r\n    Some functions let you specify if u want them to work on the Hierarchy/Descendants/Children/Self where:\r\n        - Self: the current object only\r\n        - Children: direct children of the object\r\n        - Descendants: all the children of the object, including child of child and so on \r\n        - Hierarchy: Descendants plus the current object\r\n    Examples:\r\n        - pp_getComponent\r\n        - pp_getComponentHierarchy\r\n        - pp_getComponentsAmountMapDescendants\r\n        - pp_setActiveChildren\r\n        - pp_setActiveSelf\r\n    By default the functions work on the Hierarchy\r\n    On some of the functions where u can specify Hierarchy/Descendants u can also specify \r\n    if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getComponentHierarchyBreadth\r\n        - pp_setActiveDescendantsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    For global functions the suffix Objects means it will work on a given object list, example:\r\n        - pp_getComponentsObjects\r\n        - pp_getObjectByNameObjects\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let position = this.object.pp_getPosition()\r\n        - this.object.pp_getPosition(position)\r\n        - the out parameter is always the last one\r\n\r\n    If a method require an engine parameter, u can always avoid specifying it and it will by default use the current main engine\r\n    If a method require a scene parameter, u can always avoid specifying it and it will by default use the scene from the current main engine\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like World or Radians) are omitted \r\n\r\n        - pp_getPosition    / pp_setPosition    / pp_resetPosition\r\n        - pp_getRotation    / pp_setRotation    / pp_resetRotation\r\n        - pp_getScale       / pp_setScale       (u can specify a single number instead of a vector to uniform scale easily) / pp_resetScale \r\n        - pp_getTransform   / pp_setTransform   / pp_resetTransform\r\n\r\n        - pp_getAxes        / pp_setAxes\r\n        - pp_getLeft        / pp_getRight       / pp_setLeft        / pp_setRight\r\n        - pp_getUp          / pp_getDown        / pp_setUp          / pp_setDown\r\n        - pp_getForward     / pp_getBackward    / pp_setForward     / pp_setBackward\r\n\r\n        - pp_translate      / pp_translateAxis\r\n        - pp_rotate         / pp_rotateAxis     / pp_rotateAround    / pp_rotateAroundAxis\r\n        - pp_scaleObject    (for now scale only have this variant) (u can specify a single number instead of a vector to uniform scale easily)\r\n\r\n        - pp_lookAt         / pp_lookTo (u can avoid to specify up and the function will pickup the object up by default)\r\n\r\n        - pp_getParent      / pp_setParent (let u specify if u want to keep the transform or not)\r\n\r\n        - pp_convertPositionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertDirectionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertTransformObjectToWorld (you can use all the combinations between Object/Local/World) (u also have Quat and Matrix version)\r\n\r\n        - pp_hasUniformScale\r\n\r\n        - pp_addComponent\r\n        - pp_getComponent   / pp_getComponentHierarchy  / pp_getComponentDescendants  / pp_getComponentChildren / pp_getComponentSelf\r\n        - pp_getComponents  / pp_getComponentsHierarchy / pp_getComponentsDescendants / pp_getComponentsChildren / pp_getComponentsSelf\r\n\r\n        - pp_setActive  / pp_setActiveHierarchy / pp_setActiveDescendants / pp_setActiveChildren / pp_setActiveSelf\r\n\r\n        - pp_clone      / pp_isCloneable\r\n        \r\n        - pp_toString   / pp_toStringCompact / pp_toStringExtended\r\n        \r\n        - pp_getObjectByName  / pp_getObjectByNameHierarchy / pp_getObjectByNameDescendants / pp_getObjectByNameChildren\r\n        - pp_getObjectsByName  / pp_getObjectsByNameHierarchy / pp_getObjectsByNameDescendants / pp_getObjectsByNameChildren\r\n        \r\n        - pp_getObjectByID  / pp_getObjectByIDHierarchy / pp_getObjectByIDDescendants / pp_getObjectByIDChildren\r\n\r\n        - pp_getHierarchy / pp_getHierarchyBreadth / pp_getHierarchyDepth \r\n        - pp_getDescendants / pp_getDescendantsBreadth / pp_getDescendantsDepth \r\n        - pp_getChildren\r\n        - pp_getSelf\r\n\r\n        - pp_addObject\r\n        - pp_getName    / pp_setName\r\n        - pp_getEngine\r\n        - pp_getID\r\n        - pp_reserveObjects / pp_reserveObjectsHierarchy / pp_reserveObjectsDescendants / pp_reserveObjectsChildren / pp_reserveObjectsSelf\r\n        - pp_getComponentsAmountMap / pp_getComponentsAmountMapHierarchy / pp_getComponentsAmountMapDescendants / pp_getComponentsAmountMapChildren / pp_getComponentsAmountMapSelf\r\n        - pp_markDirty\r\n        - pp_isChangedTransform\r\n        - pp_equals\r\n        - pp_destroy\r\n\r\n        GLOBAL FUNCTIONS:\r\n        - getComponentObjects\r\n        - getComponentsObjects\r\n        - setActiveObjects\r\n        - getObjectByNameObjects\r\n        - getObjectsByNameObjects\r\n        - getObjectByIDObjects\r\n        - getObjectsByIDObjects\r\n*/\r\n\r\nimport { Object as WLObject } from \"@wonderlandengine/api\";\r\nimport { ExtensionUtils } from \"../../utils/extension_utils\";\r\nimport { vec3_create, quat_create, quat2_create, mat3_create, mat4_create } from \"../../js/extensions/array_extension\";\r\n\r\nexport function initObjectExtension() {\r\n    initObjectExtensionProtoype();\r\n}\r\n\r\nexport function getComponentObjects(objects, type, index = 0) {\r\n    let component = null;\r\n\r\n    for (let object of objects) {\r\n        component = object.getComponent(type, index);\r\n        if (component != null) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return component;\r\n}\r\n\r\nexport function getComponentsObjects(objects, type) {\r\n    let components = [];\r\n\r\n    for (let object of objects) {\r\n        components.push(...object.getComponents(type));\r\n    }\r\n\r\n    return components;\r\n}\r\n\r\nexport function setActiveObjects(objects, active) {\r\n    for (let object of objects) {\r\n        object.active = active;\r\n    }\r\n}\r\n\r\nexport function getObjectByNameObjects(objects, name, index = 0) {\r\n    let objectFound = null;\r\n\r\n    let currentIndex = index;\r\n    for (let object of objects) {\r\n        if (object.pp_getName() == name) {\r\n            if (currentIndex == 0) {\r\n                objectFound = object;\r\n                break;\r\n            }\r\n\r\n            currentIndex--;\r\n        }\r\n    }\r\n\r\n    return objectFound;\r\n}\r\n\r\nexport function getObjectsByNameObjects(objects, name) {\r\n    let objectsFound = [];\r\n\r\n    for (let object of objects) {\r\n        if (object.pp_getName() == name) {\r\n            objectsFound.push(object);\r\n        }\r\n    }\r\n\r\n    return objectsFound;\r\n}\r\n\r\nexport function getObjectByIDObjects(objects, id, index = 0) {\r\n    let objectFound = null;\r\n\r\n    let currentIndex = index;\r\n    for (let object of objects) {\r\n        if (object.pp_getID() == id) {\r\n            if (currentIndex == 0) {\r\n                objectFound = object;\r\n                break;\r\n            }\r\n\r\n            currentIndex--;\r\n        }\r\n    }\r\n\r\n    return objectFound;\r\n}\r\n\r\nexport function getObjectsByIDObjects(objects, id) {\r\n    let objectsFound = [];\r\n\r\n    for (let object of objects) {\r\n        if (object.pp_getID() == id) {\r\n            objectsFound.push(object);\r\n        }\r\n    }\r\n\r\n    return objectsFound;\r\n}\r\n\r\nexport class CloneParams {\r\n\r\n    constructor() {\r\n        this.myIgnoreNonCloneable = false;  // Ignores components that are not clonable\r\n        this.myIgnoreComponents = false;    // All components are ignored, cloning only the object hierarchy\r\n        this.myIgnoreChildren = false;      // Clones only the given object without the children\r\n\r\n        this.myComponentsToIgnore = [];     // Ignores all component types in this list (example: \"mesh\"), has lower priority over myComponentsToInclude\r\n        this.myComponentsToInclude = [];    // Clones only the component types in this list (example: \"mesh\"), has higher priority over myComponentsToIgnore, if empty it's ignored\r\n        this.myIgnoreComponentCallback = null; // Signature: callback(component) returns true if the component must be ignored, it is called after the previous filters\r\n\r\n        this.myChildrenToIgnore = [];       // Ignores all the objects in this list (example: \"mesh\"), has lower priority over myChildrenToInclude\r\n        this.myChildrenToInclude = [];      // Clones only the objects in this list (example: \"mesh\"), has higher priority over myChildrenToIgnore, if empty it's ignored\r\n        this.myIgnoreChildCallback = null;  // Signature: callback(object) returns true if the object must be ignored, it is called after the previous filters\r\n\r\n        this.myUseWLClone = false;               // Use the WL component clone function \r\n        this.myUseWLCloneAsFallback = false;     // Use the WL component clone function as fallback only if pp_clone is not found on the component\r\n\r\n        this.myDeepCloneParams = new DeepCloneParams(); // Used to specify if the object must be deep cloned or not, you can also override the behavior for specific components and variables\r\n\r\n        this.myCustomCloneParams = new CustomCloneParams(); // This class can be filled with whatever custom paramater the component clone function could need\r\n    }\r\n}\r\n\r\nexport class DeepCloneParams {\r\n\r\n    constructor() {\r\n        this._myDeepCloneObject = false;\r\n        this._myOverrideDeepCloneComponentsMap = new Map();\r\n        this._myOverrideDeepCloneComponentsVariablesMap = new Map();\r\n    }\r\n\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    setDeepCloneObject(deepClone) {\r\n        this._myDeepCloneObject = deepClone;\r\n    }\r\n\r\n    // This value override the deep clone object value\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    setDeepCloneComponent(componentName, deepClone) {\r\n        this._myOverrideDeepCloneComponentsMap.set(componentName, deepClone);\r\n    }\r\n\r\n    // This value override both the deep clone object value and the deep clone component one\r\n    // The implementation is component dependant, not every component variable override is taken into consideration\r\n    setDeepCloneComponentVariable(componentName, variableName, deepClone) {\r\n        let componentsVariablesMap = null;\r\n\r\n        if (!this._myOverrideDeepCloneComponentsVariablesMap.has(componentName)) {\r\n            this._myOverrideDeepCloneComponentsVariablesMap.set(componentName, new Map());\r\n        }\r\n\r\n        componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n\r\n        componentsVariablesMap.set(variableName, deepClone);\r\n    }\r\n\r\n    isDeepCloneComponent(componentName) {\r\n        let overrideValue = this._myOverrideDeepCloneComponentsMap.get(componentName);\r\n\r\n        if (overrideValue != null) {\r\n            return overrideValue;\r\n        }\r\n\r\n        return this._myDeepCloneObject;\r\n    }\r\n\r\n    isDeepCloneComponentVariable(componentName, variableName) {\r\n        let componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n        if (componentsVariablesMap != null) {\r\n            let overrideValue = componentsVariablesMap.get(variableName);\r\n            if (overrideValue != null) {\r\n                return overrideValue;\r\n            }\r\n        }\r\n\r\n        return this.isDeepCloneComponent(componentName);\r\n    }\r\n}\r\n\r\nexport class CustomCloneParams {\r\n\r\n    constructor() {\r\n        this._myParams = new Map();\r\n    }\r\n\r\n    addParam(name, value) {\r\n        this._myParams.set(name, value);\r\n    }\r\n\r\n    removeParam(name) {\r\n        this._myParams.delete(name);\r\n    }\r\n\r\n    getParam(name) {\r\n        this._myParams.get(name);\r\n    }\r\n\r\n    hasParam(name) {\r\n        this._myParams.has(name);\r\n    }\r\n}\r\n\r\nexport function initObjectExtensionProtoype() {\r\n\r\n    let objectExtension = {};\r\n\r\n    // GETTER\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_getPosition = function pp_getPosition(position) {\r\n        return this.pp_getPositionWorld(position);\r\n    };\r\n\r\n    objectExtension.pp_getPositionWorld = function pp_getPositionWorld(position = vec3_create()) {\r\n        this.getTranslationWorld(position);\r\n        return position;\r\n    };\r\n\r\n    objectExtension.pp_getPositionLocal = function pp_getPositionLocal(position = vec3_create()) {\r\n        this.getTranslationLocal(position);\r\n        return position;\r\n    };\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_getRotation = function pp_getRotation(rotation) {\r\n        return this.pp_getRotationWorld(rotation);\r\n    };\r\n    objectExtension.pp_getRotationDegrees = function pp_getRotationDegrees(rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_getRotationRadians = function pp_getRotationRadians(rotation) {\r\n        return this.pp_getRotationWorldRadians(rotation);\r\n    };\r\n\r\n    objectExtension.pp_getRotationMatrix = function pp_getRotationMatrix(rotation) {\r\n        return this.pp_getRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    objectExtension.pp_getRotationQuat = function pp_getRotationQuat(rotation) {\r\n        return this.pp_getRotationWorldQuat(rotation);\r\n    };\r\n\r\n    // Rotation World\r\n\r\n    objectExtension.pp_getRotationWorld = function pp_getRotationWorld(rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldDegrees = function pp_getRotationWorldDegrees(rotation) {\r\n        rotation = this.pp_getRotationWorldRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = Math.pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldRadians = function () {\r\n        let quat = quat_create();\r\n        return function pp_getRotationWorldRadians(rotation = vec3_create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_toRadians(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getRotationWorldMatrix = function () {\r\n        let quat = quat_create();\r\n        return function pp_getRotationWorldMatrix(rotation = mat3_create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_toMatrix(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getRotationWorldQuat = function pp_getRotationWorldQuat(rotation = quat_create()) {\r\n        rotation.quat_copy(this.rotationWorld);\r\n        return rotation;\r\n    };\r\n\r\n    // Rotation Local\r\n\r\n    objectExtension.pp_getRotationLocal = function pp_getRotationLocal(rotation) {\r\n        return this.pp_getRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalDegrees = function pp_getRotationLocalDegrees(rotation) {\r\n        rotation = this.pp_getRotationLocalRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = Math.pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalRadians = function () {\r\n        let quat = quat_create();\r\n        return function pp_getRotationLocalRadians(rotation = vec3_create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_toRadians(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getRotationLocalMatrix = function () {\r\n        let quat = quat_create();\r\n        return function pp_getRotationLocalMatrix(rotation = mat3_create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_toMatrix(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getRotationLocalQuat = function pp_getRotationLocalQuat(rotation = quat_create()) {\r\n        rotation.quat_copy(this.rotationLocal);\r\n        return rotation;\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_getScale = function pp_getScale(scale) {\r\n        return this.pp_getScaleWorld(scale);\r\n    };\r\n\r\n    objectExtension.pp_getScaleWorld = function pp_getScaleWorld(scale = vec3_create()) {\r\n        scale.vec3_copy(this.scalingWorld);\r\n        return scale;\r\n    };\r\n\r\n    objectExtension.pp_getScaleLocal = function pp_getScaleLocal(scale = vec3_create()) {\r\n        scale.vec3_copy(this.scalingLocal);\r\n        return scale;\r\n    };\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_getTransform = function pp_getTransform(transform) {\r\n        return this.pp_getTransformWorld(transform);\r\n    };\r\n\r\n    objectExtension.pp_getTransformMatrix = function pp_getTransformMatrix(transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_getTransformQuat = function pp_getTransformQuat(transform) {\r\n        return this.pp_getTransformWorldQuat(transform);\r\n    };\r\n\r\n    // Transform World\r\n\r\n    objectExtension.pp_getTransformWorld = function pp_getTransformWorld(transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_getTransformWorldMatrix = function () {\r\n        let transformQuat = quat2_create();\r\n        let scale = vec3_create();\r\n        return function pp_getTransformWorldMatrix(transform = mat4_create()) {\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            this.pp_getScaleWorld(scale);\r\n            transform.mat4_fromQuat(transformQuat);\r\n            transform.mat4_scale(scale, transform);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getTransformWorldQuat = function pp_getTransformWorldQuat(transform = quat2_create()) {\r\n        transform.quat2_copy(this.transformWorld);\r\n        return transform;\r\n    };\r\n\r\n    // Transform Local\r\n\r\n    objectExtension.pp_getTransformLocal = function (transform) {\r\n        return this.pp_getTransformLocalMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_getTransformLocalMatrix = function pp_getTransformLocalMatrix() {\r\n        let transformQuat = quat2_create();\r\n        let scale = vec3_create();\r\n        return function pp_getTransformLocalMatrix(transform = mat4_create()) {\r\n            this.pp_getTransformLocalQuat(transformQuat);\r\n            this.pp_getScaleLocal(scale);\r\n            transform.mat4_fromQuat(transformQuat);\r\n            transform.mat4_scale(scale, transform);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getTransformLocalQuat = function pp_getTransformLocalQuat(transform = quat2_create()) {\r\n        transform.quat2_copy(this.transformLocal);\r\n        return transform;\r\n    };\r\n\r\n    // Axes\r\n\r\n    objectExtension.pp_getAxes = function pp_getAxes(axes) {\r\n        return this.pp_getAxesWorld(axes);\r\n    };\r\n\r\n    objectExtension.pp_getAxesWorld = function pp_getAxesWorld(axes = [vec3_create(), vec3_create(), vec3_create()]) {\r\n        this.pp_getLeftWorld(axes[0]);\r\n        this.pp_getUpWorld(axes[1]);\r\n        this.pp_getForwardWorld(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    objectExtension.pp_getAxesLocal = function pp_getAxesLocal(axes = [vec3_create(), vec3_create(), vec3_create()]) {\r\n        this.pp_getLeftLocal(axes[0]);\r\n        this.pp_getUpLocal(axes[1]);\r\n        this.pp_getForwardLocal(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    // Forward\r\n\r\n    objectExtension.pp_getForward = function pp_getForward(forward) {\r\n        return this.pp_getForwardWorld(forward);\r\n    };\r\n\r\n    objectExtension.pp_getForwardWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getForwardWorld(forward = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getForwardLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getForwardLocal(forward = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    // Backward\r\n\r\n    objectExtension.pp_getBackward = function pp_getBackward(backward) {\r\n        return this.pp_getBackwardWorld(backward);\r\n    };\r\n\r\n    objectExtension.pp_getBackwardWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getBackwardWorld(backward = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getBackwardLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getBackwardLocal(backward = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    // Up\r\n\r\n    objectExtension.pp_getUp = function pp_getUp(up) {\r\n        return this.pp_getUpWorld(up);\r\n    };\r\n\r\n    objectExtension.pp_getUpWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getUpWorld(up = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getUpLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getUpLocal(up = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    // Down\r\n\r\n    objectExtension.pp_getDown = function pp_getDown(down) {\r\n        return this.pp_getDownWorld(down);\r\n    };\r\n\r\n    objectExtension.pp_getDownWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getDownWorld(down = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getDownLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getDownLocal(down = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    // Left\r\n\r\n    objectExtension.pp_getLeft = function pp_getLeft(left) {\r\n        return this.pp_getLeftWorld(left);\r\n    };\r\n\r\n    objectExtension.pp_getLeftWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getLeftWorld(left = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getLeftLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getLeftLocal(left = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    // Right\r\n\r\n    objectExtension.pp_getRight = function pp_getRight(right) {\r\n        return this.pp_getRightWorld(right);\r\n    };\r\n\r\n    objectExtension.pp_getRightWorld = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getRightWorld(right = vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getRightLocal = function () {\r\n        let rotation = mat3_create();\r\n        return function pp_getRightLocal(right = vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    // SETTER\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_setPosition = function pp_setPosition(position) {\r\n        this.pp_setPositionWorld(position);\r\n    };\r\n\r\n    objectExtension.pp_setPositionWorld = function pp_setPositionWorld(position) {\r\n        this.setTranslationWorld(position);\r\n    };\r\n\r\n    objectExtension.pp_setPositionLocal = function pp_setPositionLocal(position) {\r\n        this.setTranslationLocal(position);\r\n    };\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_setRotation = function pp_setRotation(rotation) {\r\n        this.pp_setRotationWorld(rotation);\r\n    };\r\n    objectExtension.pp_setRotationDegrees = function pp_setRotationDegrees(rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_setRotationRadians = function pp_setRotationRadians(rotation) {\r\n        this.pp_setRotationWorldRadians(rotation);\r\n    };\r\n\r\n    objectExtension.pp_setRotationMatrix = function pp_setRotationMatrix(rotation) {\r\n        this.pp_setRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    objectExtension.pp_setRotationQuat = function pp_setRotationQuat(rotation) {\r\n        this.pp_setRotationWorldQuat(rotation);\r\n    };\r\n\r\n    // Rotation World\r\n\r\n    objectExtension.pp_setRotationWorld = function pp_setRotationWorld(rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_setRotationWorldDegrees = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRotationWorldDegrees(rotation) {\r\n            rotation.vec3_degreesToQuat(quat);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationWorldRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_setRotationWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationWorldMatrix = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRotationWorldMatrix(rotation) {\r\n            rotation.mat3_toQuat(quat);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationWorldQuat = function pp_setRotationWorldQuat(rotation) {\r\n        this.rotationWorld = rotation;\r\n    };\r\n\r\n    // Rotation Local\r\n\r\n    objectExtension.pp_setRotationLocal = function pp_setRotationLocal(rotation) {\r\n        this.pp_setRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_setRotationLocalDegrees = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRotationLocalDegrees(rotation) {\r\n            rotation.vec3_degreesToQuat(quat);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationLocalRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_setRotationLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationLocalMatrix = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRotationLocalMatrix(rotation) {\r\n            rotation.mat3_toQuat(quat);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRotationLocalQuat = function pp_setRotationLocalQuat(rotation) {\r\n        this.rotationLocal = rotation;\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_setScale = function pp_setScale(scale) {\r\n        this.pp_setScaleWorld(scale);\r\n    };\r\n\r\n    objectExtension.pp_setScaleWorld = function () {\r\n        let vector = vec3_create();\r\n        return function pp_setScaleWorld(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingWorld = scale;\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scalingWorld = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setScaleLocal = function () {\r\n        let vector = vec3_create();\r\n        return function pp_setScaleLocal(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingLocal = scale;\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scalingLocal = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    // Axes    \r\n\r\n    objectExtension.pp_setAxes = function pp_setAxes(left, up, forward) {\r\n        this.pp_setAxesWorld(left, up, forward);\r\n    };\r\n\r\n    objectExtension.pp_setAxesWorld = function pp_setAxesWorld(left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardWorld(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpWorld(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftWorld(left, up, forward);\r\n        }\r\n    };\r\n\r\n    objectExtension.pp_setAxesLocal = function pp_setAxesLocal(left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardLocal(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpLocal(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftLocal(left, up, forward);\r\n        }\r\n    };\r\n\r\n    // Forward\r\n\r\n    objectExtension.pp_setForward = function pp_setForward(forward, up, left) {\r\n        this.pp_setForwardWorld(forward, up, left);\r\n    };\r\n\r\n    objectExtension.pp_setForwardWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setForwardWorld(forward, up = null, left = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setForward(forward, up, left);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setForwardLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setForwardLocal(forward, up = null, left = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setForward(forward, up, left);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Backward\r\n\r\n    objectExtension.pp_setBackward = function pp_setBackward(backward, up, left) {\r\n        this.pp_setBackwardWorld(backward, up, left);\r\n    };\r\n\r\n    objectExtension.pp_setBackwardWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setBackwardWorld(backward, up = null, left = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setBackward(backward, up, left);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setBackwardLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setBackwardLocal(backward, up = null, left = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setBackward(backward, up, left);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Up\r\n\r\n    objectExtension.pp_setUp = function pp_setUp(up, forward, left) {\r\n        this.pp_setUpWorld(up, forward, left);\r\n    };\r\n\r\n    objectExtension.pp_setUpWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setUpWorld(up, forward = null, left = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setUp(up, forward, left);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setUpLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setUpLocal(up, forward = null, left = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setUp(up, forward, left);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Down\r\n\r\n    objectExtension.pp_setDown = function pp_setDown(down, forward, left) {\r\n        this.pp_setDownWorld(down, forward, left);\r\n    };\r\n\r\n    objectExtension.pp_setDownWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setDownWorld(down, forward = null, left = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setDown(down, forward, left);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setDownLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setDownLocal(down, forward = null, left = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setDown(down, forward, left);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Left\r\n\r\n    objectExtension.pp_setLeft = function pp_setLeft(left, up, forward) {\r\n        this.pp_setLeftWorld(left, up, forward);\r\n    };\r\n\r\n    objectExtension.pp_setLeftWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setLeftWorld(left, up = null, forward = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setLeft(left, up, forward);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setLeftLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setLeftLocal(left, up = null, forward = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setLeft(left, up, forward);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Right\r\n\r\n    objectExtension.pp_setRight = function pp_setRight(right, up, forward) {\r\n        this.pp_setRightWorld(right, up, forward);\r\n    };\r\n\r\n    objectExtension.pp_setRightWorld = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRightWorld(right, up = null, forward = null) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_setRight(right, up, forward);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setRightLocal = function () {\r\n        let quat = quat_create();\r\n        return function pp_setRightLocal(right, up = null, forward = null) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_setRight(right, up, forward);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_setTransform = function pp_setTransform(transform) {\r\n        this.pp_setTransformWorld(transform);\r\n    };\r\n\r\n    objectExtension.pp_setTransformMatrix = function pp_setTransformMatrix(transform) {\r\n        this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_setTransformQuat = function pp_setTransformQuat(transform) {\r\n        this.pp_setTransformWorldQuat(transform);\r\n    };\r\n\r\n    // Transform World\r\n\r\n    objectExtension.pp_setTransformWorld = function pp_setTransformWorld(transform) {\r\n        return this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_setTransformWorldMatrix = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        let scale = vec3_create();\r\n        let transformMatrixNoScale = mat4_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create(1);\r\n        return function pp_setTransformWorldMatrix(transform) {\r\n            transform.mat4_getPosition(position);\r\n            transform.mat4_getScale(scale);\r\n            one.vec3_div(scale, inverseScale);\r\n            transform.mat4_scale(inverseScale, transformMatrixNoScale);\r\n            transformMatrixNoScale.mat4_getRotationQuat(rotation);\r\n            rotation.quat_normalize(rotation);\r\n            this.pp_setScaleWorld(scale);\r\n            this.pp_setRotationWorldQuat(rotation);\r\n            this.pp_setPositionWorld(position);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setTransformWorldQuat = function pp_setTransformWorldQuat(transform) {\r\n        this.transformWorld = transform;\r\n    };\r\n\r\n    // Transform Local\r\n\r\n    objectExtension.pp_setTransformLocal = function pp_setTransformLocal(transform) {\r\n        return this.pp_setTransformLocalMatrix(transform);\r\n    };\r\n\r\n    objectExtension.pp_setTransformLocalMatrix = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        let scale = vec3_create();\r\n        let transformMatrixNoScale = mat4_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create(1);\r\n        return function pp_setTransformLocalMatrix(transform) {\r\n            transform.mat4_getPosition(position);\r\n            transform.mat4_getScale(scale);\r\n            one.vec3_div(scale, inverseScale);\r\n            transform.mat4_scale(inverseScale, transformMatrixNoScale);\r\n            transformMatrixNoScale.mat4_getRotationQuat(rotation);\r\n            rotation.quat_normalize(rotation);\r\n            this.pp_setScaleLocal(scale);\r\n            this.pp_setRotationLocalQuat(rotation);\r\n            this.pp_setPositionLocal(position);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_setTransformLocalQuat = function pp_setTransformLocalQuat(transform) {\r\n        this.transformLocal = transform;\r\n    };\r\n\r\n    // RESET\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_resetPosition = function pp_resetPosition() {\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    objectExtension.pp_resetPositionWorld = function () {\r\n        let zero = vec3_create();\r\n        return function pp_resetPositionWorld() {\r\n            this.pp_setPositionWorld(zero);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_resetPositionLocal = function () {\r\n        let zero = vec3_create();\r\n        return function pp_resetPositionLocal() {\r\n            this.pp_setPositionLocal(zero);\r\n        };\r\n    }();\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_resetRotation = function pp_resetRotation() {\r\n        this.pp_resetRotationWorld();\r\n    };\r\n\r\n    objectExtension.pp_resetRotationWorld = function () {\r\n        let identity = quat_create();\r\n        return function pp_resetRotationWorld() {\r\n            this.pp_setRotationWorldQuat(identity);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_resetRotationLocal = function () {\r\n        let identity = quat_create();\r\n        return function pp_resetRotationLocal() {\r\n            this.pp_setRotationLocalQuat(identity);\r\n        };\r\n    }();\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_resetScale = function pp_resetScale() {\r\n        this.pp_resetScaleWorld();\r\n    };\r\n\r\n    objectExtension.pp_resetScaleWorld = function () {\r\n        let one = vec3_create(1);\r\n        return function pp_resetScaleWorld() {\r\n            this.pp_setScaleWorld(one);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_resetScaleLocal = function () {\r\n        let one = vec3_create(1);\r\n        return function pp_resetScaleLocal() {\r\n            this.pp_setScaleLocal(one);\r\n        };\r\n    }();\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_resetTransform = function pp_resetTransform() {\r\n        this.pp_resetTransformWorld();\r\n    };\r\n\r\n    objectExtension.pp_resetTransformWorld = function pp_resetTransformWorld() {\r\n        this.pp_resetScaleWorld();\r\n        this.pp_resetRotationWorld();\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    objectExtension.pp_resetTransformLocal = function pp_resetTransformLocal() {\r\n        this.pp_resetScaleLocal();\r\n        this.pp_resetRotationLocal();\r\n        this.pp_resetPositionLocal();\r\n    };\r\n\r\n    // TRANSFORMATIONS\r\n\r\n    // Translate\r\n\r\n    objectExtension.pp_translate = function pp_translate(translation) {\r\n        this.pp_translateWorld(translation);\r\n    };\r\n\r\n    objectExtension.pp_translateWorld = function pp_translateWorld(translation) {\r\n        this.translateWorld(translation);\r\n    };\r\n\r\n    objectExtension.pp_translateLocal = function pp_translateLocal(translation) {\r\n        this.translate(translation);\r\n    };\r\n\r\n    objectExtension.pp_translateObject = function pp_translateObject(translation) {\r\n        this.translateObject(translation);\r\n    };\r\n\r\n    // Translate Axis\r\n\r\n    objectExtension.pp_translateAxis = function pp_translateAxis(amount, direction) {\r\n        this.pp_translateAxisWorld(amount, direction);\r\n    };\r\n\r\n    objectExtension.pp_translateAxisWorld = function () {\r\n        let translation = vec3_create();\r\n        return function pp_translateAxisWorld(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateWorld(translation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_translateAxisLocal = function () {\r\n        let translation = vec3_create();\r\n        return function pp_translateAxisLocal(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateLocal(translation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_translateAxisObject = function () {\r\n        let translation = vec3_create();\r\n        return function pp_translateAxisObject(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateObject(translation);\r\n        };\r\n    }();\r\n\r\n    // Rotate\r\n\r\n    objectExtension.pp_rotate = function pp_rotate(rotation) {\r\n        this.pp_rotateWorld(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateDegrees = function pp_rotateDegrees(rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateRadians = function pp_rotateRadians(rotation) {\r\n        this.pp_rotateWorldRadians(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateMatrix = function pp_rotateMatrix(rotation) {\r\n        this.pp_rotateWorldMatrix(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateQuat = function pp_rotateQuat(rotation) {\r\n        this.pp_rotateWorldQuat(rotation);\r\n    };\r\n\r\n    // Rotate World\r\n\r\n    objectExtension.pp_rotateWorld = function pp_rotateWorld(rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateWorldDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateWorldDegrees(rotation) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateWorldRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateWorldMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateWorldMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateWorldQuat = function () {\r\n        let currentRotationQuat = quat_create();\r\n        return function pp_rotateWorldQuat(rotation) {\r\n            this.pp_getRotationWorldQuat(currentRotationQuat);\r\n            rotation.quat_mul(currentRotationQuat, currentRotationQuat);\r\n            currentRotationQuat.quat_normalize(currentRotationQuat);\r\n            this.pp_setRotationWorldQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    // Rotate Local\r\n\r\n    objectExtension.pp_rotateLocal = function pp_rotateLocal(rotation) {\r\n        this.pp_rotateLocalDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateLocalDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateLocalDegrees(rotation) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateLocalRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateLocalMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateLocalMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateLocalQuat = function () {\r\n        let currentRotationQuat = quat_create();\r\n        return function pp_rotateLocalQuat(rotation) {\r\n            this.pp_getRotationLocalQuat(currentRotationQuat);\r\n            rotation.quat_mul(currentRotationQuat, currentRotationQuat);\r\n            currentRotationQuat.quat_normalize(currentRotationQuat);\r\n            this.pp_setRotationLocalQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    // Rotate Object\r\n\r\n    objectExtension.pp_rotateObject = function pp_rotateObject(rotation) {\r\n        this.pp_rotateObjectDegrees(rotation);\r\n    };\r\n\r\n    objectExtension.pp_rotateObjectDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateObjectDegrees(rotation) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateObjectRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateObjectRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateObjectDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateObjectMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateObjectMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateObjectQuat = function pp_rotateObjectQuat(rotation) {\r\n        this.rotateObject(rotation);\r\n    };\r\n\r\n    // Rotate Axis\r\n\r\n    objectExtension.pp_rotateAxis = function pp_rotateAxis(angle, axis) {\r\n        this.pp_rotateAxisWorld(angle, axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisDegrees = function pp_rotateAxisDegrees(angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisRadians = function pp_rotateAxisRadians(angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(angle, axis);\r\n    };\r\n\r\n    // Rotate Axis World\r\n\r\n    objectExtension.pp_rotateAxisWorld = function pp_rotateAxisWorld(angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisWorldDegrees = function pp_rotateAxisWorldDegrees(angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisWorldRadians = function () {\r\n        let rotation = quat_create();\r\n        return function pp_rotateAxisWorldRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateWorldQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    // Rotate Axis Local\r\n\r\n    objectExtension.pp_rotateAxisLocal = function pp_rotateAxisLocal(angle, axis) {\r\n        this.pp_rotateAxisLocalDegrees(angle, axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisLocalDegrees = function pp_rotateAxisLocalDegrees(angle, axis) {\r\n        this.pp_rotateAxisLocalRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisLocalRadians = function () {\r\n        let rotation = quat_create();\r\n        return function pp_rotateAxisLocalRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateLocalQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    // Rotate Axis Object\r\n\r\n    objectExtension.pp_rotateAxisObject = function pp_rotateAxisObject(angle, axis) {\r\n        this.pp_rotateAxisObjectDegrees(angle, axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisObjectDegrees = function pp_rotateAxisObjectDegrees(angle, axis) {\r\n        this.pp_rotateAxisObjectRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisObjectRadians = function () {\r\n        let rotation = quat_create();\r\n        return function pp_rotateAxisObjectRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateObjectQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around\r\n\r\n    objectExtension.pp_rotateAround = function pp_rotateAround(rotation, origin) {\r\n        this.pp_rotateAroundWorld(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundDegrees = function pp_rotateAroundDegrees(rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundRadians = function pp_rotateAroundRadians(rotation, origin) {\r\n        this.pp_rotateAroundWorldRadians(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundMatrix = function pp_rotateAroundMatrix(rotation, origin) {\r\n        this.pp_rotateAroundWorldMatrix(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundQuat = function pp_rotateAroundQuat(rotation, origin) {\r\n        this.pp_rotateAroundWorldQuat(rotation, origin);\r\n    };\r\n\r\n    // Rotate Around World\r\n\r\n    objectExtension.pp_rotateAroundWorld = function pp_rotateAroundWorld(rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundWorldDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundWorldDegrees(rotation, origin) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundWorldRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateAroundWorldRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundWorldDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundWorldMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundWorldMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundWorldQuat = function () {\r\n        let axis = vec3_create();\r\n        return function pp_rotateAroundWorldQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around Local\r\n\r\n    objectExtension.pp_rotateAroundLocal = function pp_rotateAroundLocal(rotation, origin) {\r\n        this.pp_rotateAroundLocalDegrees(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundLocalDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundLocalDegrees(rotation, origin) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundLocalRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateAroundLocalRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundLocalDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundLocalMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundLocalMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundLocalQuat = function () {\r\n        let axis = vec3_create();\r\n        return function pp_rotateAroundLocalQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisLocalRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around Object\r\n\r\n    objectExtension.pp_rotateAroundObject = function pp_rotateAroundObject(rotation, origin) {\r\n        this.pp_rotateAroundObjectDegrees(rotation, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundObjectDegrees = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundObjectDegrees(rotation, origin) {\r\n            rotation.vec3_degreesToQuat(rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundObjectRadians = function () {\r\n        let degreesRotation = vec3_create();\r\n        return function pp_rotateAroundObjectRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = Math.pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundObjectDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundObjectMatrix = function () {\r\n        let rotationQuat = quat_create();\r\n        return function pp_rotateAroundObjectMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_rotateAroundObjectQuat = function () {\r\n        let axis = vec3_create();\r\n        return function pp_rotateAroundObjectQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisObjectRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around Axis\r\n\r\n    objectExtension.pp_rotateAroundAxis = function pp_rotateAroundAxis(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorld(angle, axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisDegrees = function pp_rotateAroundAxisDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisRadians = function pp_rotateAroundAxisRadians(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n    };\r\n\r\n    // Rotate Around Axis World\r\n\r\n    objectExtension.pp_rotateAroundAxisWorld = function pp_rotateAroundAxisWorld(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisWorldDegrees = function pp_rotateAroundAxisWorldDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisWorldRadians = function () {\r\n        let transformToRotate = quat2_create();\r\n        let transformToRotateConjugate = quat2_create();\r\n        let transformQuat = quat2_create();\r\n        let defaultQuat = quat_create();\r\n        return function pp_rotateAroundAxisWorldRadians(angle, axis, origin) {\r\n            transformToRotate.quat2_setPositionRotationQuat(origin, defaultQuat);\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            transformToRotate.quat2_conjugate(transformToRotateConjugate);\r\n            transformToRotateConjugate.quat2_mul(transformQuat, transformQuat);\r\n            transformToRotate.quat2_rotateAxisRadians(angle, axis, transformToRotate);\r\n            transformToRotate.quat2_mul(transformQuat, transformQuat);\r\n            this.pp_setTransformWorldQuat(transformQuat);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around Axis Local\r\n\r\n    objectExtension.pp_rotateAroundAxisLocal = function pp_rotateAroundAxisLocal(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalDegrees(angle, axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisLocalDegrees = function pp_rotateAroundAxisLocalDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisLocalRadians = function () {\r\n        let convertedPosition = vec3_create();\r\n        let convertedAxis = vec3_create();\r\n        return function pp_rotateAroundAxisLocalRadians(angle, axis, origin) {\r\n            this.pp_convertPositionLocalToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionLocalToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    // Rotate Around Axis Object\r\n\r\n    objectExtension.pp_rotateAroundAxisObject = function pp_rotateAroundAxisObject(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectDegrees(angle, axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisObjectDegrees = function pp_rotateAroundAxisObjectDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisObjectRadians = function () {\r\n        let convertedPosition = vec3_create();\r\n        let convertedAxis = vec3_create();\r\n        return function pp_rotateAroundAxisObjectRadians(angle, axis, origin) {\r\n            this.pp_convertPositionObjectToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionObjectToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    // Scale\r\n\r\n    // For now it does not really make sense in wle to scale in world space or parent space\r\n    // so there is no pp_scale default function\r\n\r\n    objectExtension.pp_scaleObject = function () {\r\n        let vector = vec3_create();\r\n        return function pp_scaleObject(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scale(scale);\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scale(vector);\r\n            }\r\n        };\r\n    }();\r\n\r\n    // Look At\r\n\r\n    objectExtension.pp_lookAt = function pp_lookAt(position, up) {\r\n        this.pp_lookAtWorld(position, up);\r\n    };\r\n\r\n    objectExtension.pp_lookAtWorld = function () {\r\n        let direction = vec3_create();\r\n        return function pp_lookAtWorld(position, up) {\r\n            this.pp_getPositionWorld(direction);\r\n            position.vec3_sub(direction, direction);\r\n            this.pp_lookToWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_lookAtLocal = function () {\r\n        let direction = vec3_create();\r\n        return function pp_lookAtLocal(position, up) {\r\n            this.pp_getPositionLocal(direction);\r\n            position.vec3_sub(direction, direction);\r\n            this.pp_lookToLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_lookTo = function pp_lookTo(direction, up) {\r\n        this.pp_lookToWorld(direction, up);\r\n    };\r\n\r\n    objectExtension.pp_lookToWorld = function () {\r\n        let internalUp = vec3_create();\r\n        return function pp_lookToWorld(direction, up = this.pp_getUpWorld(internalUp)) {\r\n            this.pp_setForwardWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_lookToLocal = function () {\r\n        let internalUp = vec3_create();\r\n        return function pp_lookToLocal(direction, up = this.pp_getUpLocal(internalUp)) {\r\n            this.pp_setForwardLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    // EXTRA\r\n\r\n    // Parent\r\n\r\n    objectExtension.pp_setParent = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        let scale = vec3_create();\r\n        return function pp_setParent(newParent, keepTransform = true) {\r\n            if (!keepTransform) {\r\n                this.parent = newParent;\r\n            } else {\r\n                this.pp_getPositionWorld(position);\r\n                this.pp_getRotationWorldQuat(rotation);\r\n                this.pp_getScaleWorld(scale);\r\n                this.parent = newParent;\r\n                this.pp_setScaleWorld(scale);\r\n                this.pp_setRotationWorldQuat(rotation);\r\n                this.pp_setPositionWorld(position);\r\n            }\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_getParent = function pp_getParent() {\r\n        return this.parent;\r\n    };\r\n\r\n    // Convert Vector Object World\r\n\r\n    objectExtension.pp_convertPositionObjectToWorld = function () {\r\n        let matrix = mat4_create();\r\n        return function pp_convertPositionObjectToWorld(position, resultPosition = vec3_create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            position.vec3_transformMat4(matrix, resultPosition);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertDirectionObjectToWorld = function () {\r\n        let rotation = quat_create();\r\n        return function pp_convertDirectionObjectToWorld(direction, resultDirection = vec3_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            direction.vec3_transformQuat(rotation, resultDirection);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertPositionWorldToObject = function () {\r\n        let matrix = mat4_create();\r\n        return function pp_convertPositionWorldToObject(position, resultPosition = vec3_create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            matrix.mat4_invert(matrix);\r\n            position.vec3_transformMat4(matrix, resultPosition);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertDirectionWorldToObject = function () {\r\n        let rotation = quat_create();\r\n        return function pp_convertDirectionWorldToObject(direction, resultDirection = vec3_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_conjugate(rotation);\r\n            direction.vec3_transformQuat(rotation, resultDirection);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    // Convert Vector Local World\r\n\r\n    objectExtension.pp_convertPositionLocalToWorld = function pp_convertPositionLocalToWorld(position, resultPosition = vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionObjectToWorld(position, resultPosition);\r\n        } else {\r\n            resultPosition.vec3_copy(position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionLocalToWorld = function pp_convertDirectionLocalToWorld(direction, resultDirection = vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        } else {\r\n            resultDirection.vec3_copy(direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    objectExtension.pp_convertPositionWorldToLocal = function pp_convertPositionWorldToLocal(position, resultPosition = vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionWorldToObject(position, resultPosition);\r\n        } else {\r\n            resultPosition.vec3_copy(position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionWorldToLocal = function pp_convertDirectionWorldToLocal(direction, resultDirection = vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionWorldToObject(direction, resultDirection);\r\n        } else {\r\n            resultDirection.vec3_copy(direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    // Convert Vector Local Object\r\n\r\n    // I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    objectExtension.pp_convertPositionObjectToLocal = function pp_convertPositionObjectToLocal(position, resultPosition = vec3_create()) {\r\n        this.pp_convertPositionObjectToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToLocal(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionObjectToLocal = function pp_convertDirectionObjectToLocal(direction, resultDirection = vec3_create()) {\r\n        this.pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToLocal(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    objectExtension.pp_convertPositionLocalToObject = function pp_convertPositionLocalToObject(position, resultPosition = vec3_create()) {\r\n        this.pp_convertPositionLocalToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToObject(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionLocalToObject = function pp_convertDirectionLocalToObject(direction, resultDirection = vec3_create()) {\r\n        this.pp_convertDirectionLocalToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToObject(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    // Convert Transform Object World\r\n\r\n    objectExtension.pp_convertTransformObjectToWorld = function pp_convertTransformObjectToWorld(transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToWorldMatrix = function () {\r\n        let convertTransform = mat4_create();\r\n        let position = vec3_create();\r\n        let scale = vec3_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create(1);\r\n        return function pp_convertTransformObjectToWorldMatrix(transform, resultTransform = mat4_create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n            } else {\r\n                position.vec3_set(transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionObjectToWorld(position, position);\r\n\r\n                convertTransform.mat4_getScale(scale);\r\n                one.vec3_div(scale, inverseScale);\r\n                convertTransform.mat4_scale(inverseScale, convertTransform);\r\n\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n                resultTransform.mat4_scale(scale, resultTransform);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertTransformObjectToWorldQuat = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        return function pp_convertTransformObjectToWorldQuat(transform, resultTransform = quat2_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_mul(transform, rotation);\r\n            transform.quat2_getPosition(position);\r\n            this.pp_convertPositionObjectToWorld(position, position);\r\n            resultTransform.quat2_setPositionRotationQuat(position, rotation);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertTransformWorldToObject = function pp_convertTransformWorldToObject(transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToObjectMatrix = function () {\r\n        let convertTransform = mat4_create();\r\n        let position = vec3_create();\r\n        let scale = vec3_create();\r\n        let inverseScale = vec3_create();\r\n        let one = vec3_create(1);\r\n        return function pp_convertTransformWorldToObjectMatrix(transform, resultTransform = mat4_create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                convertTransform.mat4_invert(convertTransform);\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n            } else {\r\n                position.vec3_set(transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionWorldToObject(position, position);\r\n\r\n                convertTransform.mat4_getScale(scale);\r\n                one.vec3_div(scale, inverseScale);\r\n                convertTransform.mat4_scale(inverseScale, convertTransform);\r\n\r\n                convertTransform.mat4_invert(convertTransform);\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n                resultTransform.mat4_scale(inverseScale, resultTransform);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_convertTransformWorldToObjectQuat = function () {\r\n        let position = vec3_create();\r\n        let rotation = quat_create();\r\n        return function pp_convertTransformWorldToObjectQuat(transform, resultTransform = quat2_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_conjugate(rotation);\r\n            rotation.quat_mul(transform, rotation);\r\n            transform.quat2_getPosition(position);\r\n            this.pp_convertPositionWorldToObject(position, position);\r\n            resultTransform.quat2_setPositionRotationQuat(position, rotation);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    // Convert Transform Local World\r\n\r\n    objectExtension.pp_convertTransformLocalToWorld = function pp_convertTransformLocalToWorld(transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToWorldMatrix = function pp_convertTransformLocalToWorldMatrix(transform, resultTransform = mat4_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        } else {\r\n            resultTransform.mat4_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToWorldQuat = function pp_convertTransformLocalToWorldQuat(transform, resultTransform = quat2_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        } else {\r\n            resultTransform.quat2_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocal = function pp_convertTransformWorldToLocal(transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocalMatrix = function pp_convertTransformWorldToLocalMatrix(transform, resultTransform = mat4_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n        } else {\r\n            resultTransform.mat4_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocalQuat = function pp_convertTransformWorldToLocalQuat(transform, resultTransform = quat2_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectQuat(transform, resultTransform);\r\n        } else {\r\n            resultTransform.quat2_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    // Convert Transform Object Local\r\n\r\n    // I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    objectExtension.pp_convertTransformObjectToLocal = function pp_convertTransformObjectToLocal(transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToLocalMatrix = function pp_convertTransformObjectToLocalMatrix(transform, resultTransform = mat4_create()) {\r\n        this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToLocalQuat = function pp_convertTransformObjectToLocalQuat(transform, resultTransform = quat2_create()) {\r\n        this.pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObject = function pp_convertTransformLocalToObject(transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObjectMatrix = function pp_convertTransformLocalToObjectMatrix(transform, resultTransform = mat4_create()) {\r\n        this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObjectQuat = function pp_convertTransformLocalToObjectQuat(transform, resultTransform = quat2_create()) {\r\n        this.pp_convertTransformLocalToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    // Component\r\n\r\n    objectExtension.pp_addComponent = function pp_addComponent(type, paramsOrActive, active = null) {\r\n        let params = null;\r\n\r\n        if (typeof paramsOrActive == \"boolean\") {\r\n            params = {};\r\n            params[\"active\"] = paramsOrActive;\r\n        } else {\r\n            params = paramsOrActive;\r\n\r\n            if (active != null) {\r\n                if (params == null) {\r\n                    params = {};\r\n                }\r\n                params[\"active\"] = active;\r\n            }\r\n        }\r\n\r\n        return this.addComponent(type, params);\r\n    };\r\n\r\n    objectExtension.pp_getComponent = function pp_getComponent(type, index = 0) {\r\n        return this.pp_getComponentHierarchy(type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentSelf = function pp_getComponentSelf(type, index = 0) {\r\n        return this.getComponent(type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchy = function pp_getComponentHierarchy(type, index = 0) {\r\n        return this.pp_getComponentHierarchyBreadth(type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchyBreadth = function pp_getComponentHierarchyBreadth(type, index = 0) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchyDepth = function pp_getComponentHierarchyDepth(type, index = 0) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendants = function pp_getComponentDescendants(type, index = 0) {\r\n        return this.pp_getComponentDescendantsBreadth(type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendantsBreadth = function pp_getComponentDescendantsBreadth(type, index = 0) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendantsDepth = function pp_getComponentDescendantsDepth(type, index = 0) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponentChildren = function pp_getComponentChildren(type, index = 0) {\r\n        let objects = this.pp_getChildren();\r\n        return getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    objectExtension.pp_getComponents = function pp_getComponents(type) {\r\n        return this.pp_getComponentsHierarchy(type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsSelf = function pp_getComponentsSelf(type) {\r\n        return this.getComponents(type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchy = function pp_getComponentsHierarchy(type) {\r\n        return this.pp_getComponentsHierarchyBreadth(type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchyBreadth = function pp_getComponentsHierarchyBreadth(type) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return getComponentsObjects(objects, type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchyDepth = function pp_getComponentsHierarchyDepth(type) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return getComponentsObjects(objects, type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendants = function pp_getComponentsDescendants(type) {\r\n        return this.pp_getComponentsDescendantsBreadth(type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendantsBreadth = function pp_getComponentsDescendantsBreadth(type) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return getComponentsObjects(objects, type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendantsDepth = function pp_getComponentsDescendantsDepth(type) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return getComponentsObjects(objects, type);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsChildren = function pp_getComponentsChildren(type) {\r\n        let objects = this.pp_getChildren();\r\n        return getComponentsObjects(objects, type);\r\n    };\r\n\r\n    // Active\r\n\r\n    objectExtension.pp_setActive = function pp_setActive(active, applyToHierarchy = true) {\r\n        if (applyToHierarchy) {\r\n            this.pp_setActiveHierarchy(active);\r\n        } else {\r\n            this.active = active;\r\n        }\r\n    };\r\n\r\n    objectExtension.pp_setActiveSelf = function pp_setActiveSelf(active) {\r\n        this.pp_setActive(active, false);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchy = function pp_setActiveHierarchy(active) {\r\n        this.pp_setActiveHierarchyBreadth(active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchyBreadth = function pp_setActiveHierarchyBreadth(active) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        setActiveObjects(objects, active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchyDepth = function pp_setActiveHierarchyDepth(active) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        setActiveObjects(objects, active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendants = function pp_setActiveDescendants(active) {\r\n        this.pp_setActiveDescendantsBreadth(active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendantsBreadth = function pp_setActiveDescendantsBreadth(active) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        setActiveObjects(objects, active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendantsDepth = function pp_setActiveDescendantsDepth(active) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        setActiveObjects(objects, active);\r\n    };\r\n\r\n    objectExtension.pp_setActiveChildren = function pp_setActiveChildren(active) {\r\n        let objects = this.pp_getChildren();\r\n        setActiveObjects(objects, active);\r\n    };\r\n\r\n    // Uniform Scale\r\n\r\n    objectExtension.pp_hasUniformScale = function pp_hasUniformScale() {\r\n        return this.pp_hasUniformScaleWorld();\r\n    };\r\n\r\n    objectExtension.pp_hasUniformScaleWorld = function () {\r\n        let scale = vec3_create();\r\n        return function pp_hasUniformScaleWorld() {\r\n            this.pp_getScaleWorld(scale);\r\n            return Math.abs(scale[0] - scale[1]) < Math.PP_EPSILON && Math.abs(scale[1] - scale[2]) < Math.PP_EPSILON && Math.abs(scale[0] - scale[2]) < Math.PP_EPSILON;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_hasUniformScaleLocal = function () {\r\n        let scale = vec3_create();\r\n        return function pp_hasUniformScaleLocal() {\r\n            this.pp_getScaleLocal(scale);\r\n            return Math.abs(scale[0] - scale[1]) < Math.PP_EPSILON && Math.abs(scale[1] - scale[2]) < Math.PP_EPSILON && Math.abs(scale[0] - scale[2]) < Math.PP_EPSILON;\r\n        };\r\n    }();\r\n\r\n    // Clone\r\n\r\n    objectExtension.pp_clone = function () {\r\n        let scale = vec3_create();\r\n        let transformQuat = quat2_create();\r\n        return function pp_clone(params = new CloneParams()) {\r\n            let clonedObject = null;\r\n\r\n            if (this.pp_isCloneable(params)) {\r\n                let objectsToCloneData = [];\r\n                objectsToCloneData.push([this.pp_getParent(), this]);\r\n\r\n                // Create the object hierarchy\r\n                let objectsToCloneComponentsData = [];\r\n                while (objectsToCloneData.length > 0) {\r\n                    let cloneData = objectsToCloneData.shift();\r\n                    let parent = cloneData[0];\r\n                    let objectToClone = cloneData[1];\r\n\r\n                    let currentClonedObject = parent.pp_addObject();\r\n                    currentClonedObject.pp_setName(objectToClone.pp_getName());\r\n\r\n                    currentClonedObject.pp_setScaleLocal(objectToClone.pp_getScaleLocal(scale));\r\n                    currentClonedObject.pp_setTransformLocalQuat(objectToClone.pp_getTransformLocalQuat(transformQuat));\r\n\r\n                    if (!params.myIgnoreComponents) {\r\n                        objectsToCloneComponentsData.push([objectToClone, currentClonedObject]);\r\n                    }\r\n\r\n                    if (!params.myIgnoreChildren) {\r\n                        for (let child of objectToClone.pp_getChildren()) {\r\n                            let cloneChild = false;\r\n                            if (params.myChildrenToInclude.length > 0) {\r\n                                cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                            } else {\r\n                                cloneChild = params.myChildrenToIgnore.find(childToIgnore => childToIgnore.pp_equals(child)) == null;\r\n                            }\r\n\r\n                            if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                                cloneChild = !params.myIgnoreChildCallback(child);\r\n                            }\r\n\r\n                            if (cloneChild) {\r\n                                objectsToCloneData.push([currentClonedObject, child]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (clonedObject == null) {\r\n                        clonedObject = currentClonedObject;\r\n                    }\r\n                }\r\n\r\n                // Get the components to clone\r\n                let componentsToCloneData = [];\r\n                while (objectsToCloneComponentsData.length > 0) {\r\n                    let cloneData = objectsToCloneComponentsData.shift();\r\n                    let objectToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n\r\n                    let components = objectToClone.pp_getComponentsSelf();\r\n                    for (let component of components) {\r\n                        if (component.pp_clone != null || params.myUseWLClone || params.myUseWLCloneAsFallback) {\r\n                            let cloneComponent = false;\r\n                            if (params.myComponentsToInclude.length > 0) {\r\n                                cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                            } else {\r\n                                cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                            }\r\n\r\n                            if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                                cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                            }\r\n\r\n                            if (cloneComponent) {\r\n                                componentsToCloneData.push([component, currentClonedObject]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Clone the components\r\n                let componentsToPostProcessData = [];\r\n                while (componentsToCloneData.length > 0) {\r\n                    let cloneData = componentsToCloneData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n                    let clonedComponent = null;\r\n\r\n                    if (!params.myUseWLClone && componentToClone.pp_clone != null) {\r\n                        clonedComponent = componentToClone.pp_clone(currentClonedObject, params.myDeepCloneParams, params.myCustomCloneParams);\r\n                    } else if (params.myUseWLClone || params.myUseWLCloneAsFallback) {\r\n                        clonedComponent = currentClonedObject.pp_addComponent(componentToClone.type, componentToClone);\r\n                    }\r\n\r\n                    if (clonedComponent != null) {\r\n                        if (componentToClone.pp_clonePostProcess != null) {\r\n                            componentsToPostProcessData.push([componentToClone, clonedComponent]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Clone post process\r\n                // Can be useful if you have to get some data from other components in the hierarchy which have now been created\r\n                while (componentsToPostProcessData.length > 0) {\r\n                    let cloneData = componentsToPostProcessData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedComponent = cloneData[1];\r\n\r\n                    componentToClone.pp_clonePostProcess(currentClonedComponent, params.myDeepCloneParams, params.myCustomCloneParams);\r\n                }\r\n            }\r\n\r\n            return clonedObject;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_isCloneable = function pp_isCloneable(params = new CloneParams()) {\r\n        if (params.myIgnoreNonCloneable || params.myIgnoreComponents || params.myUseWLClone || params.myUseWLCloneAsFallback) {\r\n            return true;\r\n        }\r\n\r\n        let isCloneable = true;\r\n\r\n        let objects = [];\r\n        objects.push(this);\r\n\r\n        while (isCloneable && objects.length > 0) {\r\n            let object = objects.shift();\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            for (let component of components) {\r\n                let cloneComponent = false;\r\n                if (params.myComponentsToInclude.length > 0) {\r\n                    cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                } else {\r\n                    cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                }\r\n\r\n                if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                    cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                }\r\n\r\n                if (cloneComponent && component.pp_clone == null) {\r\n                    isCloneable = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isCloneable && !params.myIgnoreChildren) {\r\n                for (let child of object.pp_getChildren()) {\r\n                    let cloneChild = false;\r\n                    if (params.myChildrenToInclude.length > 0) {\r\n                        cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                    } else {\r\n                        cloneChild = params.myChildrenToIgnore.find(childToInclude => childToInclude.pp_equals(child)) == null;\r\n                    }\r\n\r\n                    if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                        cloneChild = !params.myIgnoreChildCallback(child);\r\n                    }\r\n\r\n                    if (cloneChild) {\r\n                        objects.push(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isCloneable;\r\n    };\r\n\r\n    // To String\r\n\r\n    objectExtension.pp_toString = function pp_toString() {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    objectExtension.pp_toStringExtended = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let startObject = \"{\";\r\n        let endObject = \"}\";\r\n        let nameLabel = \"name: \";\r\n        let idLabel = \"id: \";\r\n        let componentsLabel = \"components: \";\r\n        let typeLabel = \"type: \";\r\n        let childrenLabel = \"children: \";\r\n        let startComponents = \"[\";\r\n        let endComponents = \"]\";\r\n        let startChildren = startComponents;\r\n        let endChildren = endComponents;\r\n        let separator = \",\";\r\n        let newLineTab = newLine.concat(tab, tab);\r\n        return function pp_toStringExtended() {\r\n            let objectString = \"\";\r\n            objectString = objectString.concat(startObject, newLine);\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            let children = this.pp_getChildren();\r\n            let name = this.pp_getName();\r\n\r\n            if (components.length > 0 || children.length > 0 || name.length > 0) {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), separator, newLine);\r\n            } else {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), newLine);\r\n            }\r\n\r\n            if (name.length > 0) {\r\n                if (components.length > 0 || children.length > 0) {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), newLine);\r\n                }\r\n            }\r\n\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(tab, componentsLabel, newLine, tab, startComponents, newLine);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(tab, tab, startObject, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, typeLabel, component.type, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, idLabel, component._id, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, endObject);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n\r\n                if (children.length > 0) {\r\n                    objectString = objectString.concat(tab, endComponents, separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, endComponents, newLine);\r\n                }\r\n            }\r\n\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(tab, childrenLabel, newLine, tab, startChildren, newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringExtended();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(tab, childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n                objectString = objectString.concat(tab, endChildren, newLine);\r\n            }\r\n\r\n            objectString = objectString.concat(endObject);\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    objectExtension.pp_toStringCompact = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let emptyName = \"<none>\";\r\n        let nameLabel = \"name: \";\r\n        let componentsLabel = \"components: \";\r\n        let separator = \", \";\r\n        let newLineTab = newLine.concat(tab);\r\n        return function pp_toStringCompact() {\r\n            let objectString = \"\";\r\n\r\n            let name = this.pp_getName();\r\n            if (name.length > 0) {\r\n                objectString = objectString.concat(nameLabel, name);\r\n            } else {\r\n                objectString = objectString.concat(nameLabel, emptyName);\r\n            }\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(separator, componentsLabel);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(component.type);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let children = this.pp_getChildren();\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringCompact();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    // Get Object By Name\r\n\r\n    objectExtension.pp_getObjectByName = function pp_getObjectByName(name, index = 0) {\r\n        return this.pp_getObjectByNameHierarchy(name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameHierarchy = function pp_getObjectByNameHierarchy(name, index = 0) {\r\n        return this.pp_getObjectByNameHierarchyBreadth(name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameHierarchyBreadth = function pp_getObjectByNameHierarchyBreadth(name, index = 0) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return getObjectByNameObjects(objects, name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameHierarchyDepth = function pp_getObjectByNameHierarchyDepth(name, index = 0) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return getObjectByNameObjects(objects, name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameDescendants = function pp_getObjectByNameDescendants(name, index = 0) {\r\n        return this.pp_getObjectByNameDescendantsBreadth(name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameDescendantsBreadth = function pp_getObjectByNameDescendantsBreadth(name, index = 0) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return getObjectByNameObjects(objects, name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameDescendantsDepth = function pp_getObjectByNameDescendantsDepth(name, index = 0) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return getObjectByNameObjects(objects, name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByNameChildren = function pp_getObjectByNameChildren(name, index = 0) {\r\n        let objects = this.pp_getChildren();\r\n        return getObjectByNameObjects(objects, name, index);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByName = function pp_getObjectsByName(name) {\r\n        return this.pp_getObjectsByNameHierarchy(name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchy = function pp_getObjectsByNameHierarchy(name) {\r\n        return this.pp_getObjectsByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchyBreadth = function pp_getObjectsByNameHierarchyBreadth(name) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchyDepth = function pp_getObjectsByNameHierarchyDepth(name) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameDescendants = function pp_getObjectsByNameDescendants(name) {\r\n        return this.pp_getObjectsByNameDescendantsBreadth(name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameDescendantsBreadth = function pp_getObjectsByNameDescendantsBreadth(name) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameDescendantsDepth = function pp_getObjectsByNameDescendantsDepth(name) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    objectExtension.pp_getObjectsByNameChildren = function pp_getObjectsByNameChildren(name) {\r\n        let objects = this.pp_getChildren();\r\n        return getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    // Get Object By ID\r\n\r\n    objectExtension.pp_getObjectByID = function pp_getObjectByID(id) {\r\n        return this.pp_getObjectByIDHierarchy(id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDHierarchy = function pp_getObjectByIDHierarchy(id) {\r\n        return this.pp_getObjectByIDHierarchyBreadth(id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDHierarchyBreadth = function pp_getObjectByIDHierarchyBreadth(id) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return getObjectByIDObjects(objects, id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDHierarchyDepth = function pp_getObjectByIDHierarchyDepth(id) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return getObjectByIDObjects(objects, id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDDescendants = function pp_getObjectByIDDescendants(id) {\r\n        return this.pp_getObjectByIDDescendantsBreadth(id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDDescendantsBreadth = function pp_getObjectByIDDescendantsBreadth(id) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return getObjectByIDObjects(objects, id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDDescendantsDepth = function pp_getObjectByIDDescendantsDepth(id) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return getObjectByIDObjects(objects, id);\r\n    }\r\n\r\n    objectExtension.pp_getObjectByIDChildren = function pp_getObjectByIDChildren(id) {\r\n        let objects = this.pp_getChildren();\r\n        return getObjectByIDObjects(objects, id);\r\n    }\r\n\r\n    // Get Hierarchy\r\n\r\n    objectExtension.pp_getHierarchy = function pp_getHierarchy() {\r\n        return this.pp_getHierarchyBreadth();\r\n    };\r\n\r\n    objectExtension.pp_getHierarchyBreadth = function pp_getHierarchyBreadth() {\r\n        let hierarchy = this.pp_getDescendantsBreadth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    objectExtension.pp_getHierarchyDepth = function pp_getHierarchyDepth() {\r\n        let hierarchy = this.pp_getDescendantsDepth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    objectExtension.pp_getDescendants = function pp_getDescendants() {\r\n        return this.pp_getDescendantsBreadth();\r\n    };\r\n\r\n    objectExtension.pp_getDescendantsBreadth = function pp_getDescendantsBreadth() {\r\n        let descendants = [];\r\n\r\n        let descendantsQueue = this.pp_getChildren();\r\n\r\n        while (descendantsQueue.length > 0) {\r\n            let descendant = descendantsQueue.shift();\r\n            descendants.push(descendant);\r\n            for (let object of descendant.pp_getChildren()) {\r\n                descendantsQueue.push(object);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    objectExtension.pp_getDescendantsDepth = function pp_getDescendantsDepth() {\r\n        let descendants = [];\r\n\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let child of children) {\r\n            descendants.push(child);\r\n\r\n            let childDescendants = child.pp_getDescendantsDepth();\r\n            if (childDescendants.length > 0) {\r\n                descendants.push(...childDescendants);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    objectExtension.pp_getChildren = function pp_getChildren() {\r\n        return this.children;\r\n    };\r\n\r\n    objectExtension.pp_getSelf = function pp_getSelf() {\r\n        return this;\r\n    };\r\n\r\n    // Cauldron\r\n\r\n    objectExtension.pp_addObject = function pp_addObject() {\r\n        return this.pp_getEngine().scene.addObject(this);\r\n    };\r\n\r\n    objectExtension.pp_getName = function pp_getName() {\r\n        return this.name;\r\n    };\r\n\r\n    objectExtension.pp_setName = function pp_setName(name) {\r\n        this.name = name;\r\n    };\r\n\r\n    objectExtension.pp_getEngine = function pp_getEngine() {\r\n        return this.engine;\r\n    };\r\n\r\n    objectExtension.pp_getID = function pp_getID() {\r\n        return this.objectId;\r\n    };\r\n\r\n    objectExtension.pp_markDirty = function pp_markDirty() {\r\n        return this.setDirty();\r\n    };\r\n\r\n    objectExtension.pp_isChangedTransform = function pp_isChangedTransform() {\r\n        return this.changed;\r\n    };\r\n\r\n    objectExtension.pp_equals = function pp_equals(otherObject) {\r\n        return this.equals(otherObject);\r\n    };\r\n\r\n    objectExtension.pp_destroy = function pp_destroy() {\r\n        return this.destroy();\r\n    };\r\n\r\n    objectExtension.pp_reserveObjects = function pp_reserveObjects(count) {\r\n        this.pp_reserveObjectsHierarchy(count);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsSelf = function pp_reserveObjectsSelf(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapSelf();\r\n        _reserveObjects(count, componentsAmountMap, this.pp_getEngine().scene);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsHierarchy = function pp_reserveObjectsHierarchy(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapHierarchy();\r\n        _reserveObjects(count, componentsAmountMap, this.pp_getEngine().scene);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsDescendants = function pp_reserveObjectsDescendants(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapDescendants();\r\n        _reserveObjects(count, componentsAmountMap, this.pp_getEngine().scene);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsChildren = function pp_reserveObjectsChildren(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapChildren();\r\n        _reserveObjects(count, componentsAmountMap, this.pp_getEngine().scene);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return this.pp_getComponentsAmountMapHierarchy(amountMap);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapSelf = function pp_getComponentsAmountMapSelf(amountMap = new Map()) {\r\n        let objectsAmount = amountMap.get(\"object\");\r\n        if (objectsAmount == null) {\r\n            objectsAmount = 0;\r\n        }\r\n        objectsAmount += 1;\r\n        amountMap.set(\"object\", objectsAmount);\r\n\r\n        let components = this.pp_getComponentsSelf();\r\n        for (let component of components) {\r\n            let type = component.type;\r\n            let typeAmount = amountMap.get(type);\r\n            if (typeAmount == null) {\r\n                typeAmount = 0;\r\n            }\r\n            typeAmount += 1;\r\n            amountMap.set(type, typeAmount);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapHierarchy = function pp_getComponentsAmountMapHierarchy(amountMap = new Map()) {\r\n        let hierarchy = this.pp_getHierarchy();\r\n\r\n        for (let object of hierarchy) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapDescendants = function pp_getComponentsAmountMapDescendants(amountMap = new Map()) {\r\n        let descendants = this.pp_getDescendants();\r\n\r\n        for (let object of descendants) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapChildren = function pp_getComponentsAmountMapChildren(amountMap = new Map()) {\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let object of children) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n\r\n\r\n    ExtensionUtils.assignProperties(objectExtension, WLObject.prototype, false, true, true);\r\n\r\n}\r\n\r\n\r\n\r\nfunction _reserveObjects(count, componentsAmountMap, scene) {\r\n    let objectsToReserve = componentsAmountMap.get(\"object\") * count;\r\n    componentsAmountMap.delete(\"object\");\r\n\r\n    let componentsToReserve = {};\r\n    for (let [componentName, componentCount] of componentsAmountMap.entries()) {\r\n        componentsToReserve[componentName] = componentCount * count;\r\n    }\r\n\r\n    scene.reserveObjects(objectsToReserve, componentsToReserve);\r\n}", "/*\r\n    How to use\r\n\r\n    On some of the functions u can specify if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getObjectByNameBreadth\r\n        - pp_getComponentsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    List of functions:\r\n        - pp_getRoot\r\n        - pp_getObjects\r\n        \r\n        - pp_getComponent\r\n        - pp_getComponents\r\n        \r\n        - pp_getObjectByName\r\n        - pp_getObjectsByName\r\n        \r\n        - pp_getObjectByID\r\n        \r\n        - pp_toString / pp_toStringCompact / pp_toStringExtended\r\n\r\n        - pp_getComponentsAmountMap\r\n*/\r\n\r\nimport { Scene } from \"@wonderlandengine/api\";\r\nimport { ExtensionUtils } from \"../../utils/extension_utils\";\r\n\r\nexport function initSceneExtension(engine) {\r\n    initSceneExtensionPrototype();\r\n}\r\n\r\nexport function initSceneExtensionPrototype() {\r\n\r\n    let sceneExtension = {};\r\n\r\n    sceneExtension.pp_getRoot = function pp_getRoot() {\r\n        return this.engine.wrapObject(0);\r\n    }\r\n\r\n    sceneExtension.pp_addObject = function pp_addObject() {\r\n        return this.pp_getRoot().pp_addObject();\r\n    }\r\n\r\n    sceneExtension.pp_getObjects = function pp_getObjects() {\r\n        return this.pp_getObjectsBreadth();\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsBreadth = function pp_getObjectsBreadth() {\r\n        return this.pp_getRoot().pp_getHierarchyBreadth();\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsDepth = function pp_getObjectsDepth() {\r\n        return this.pp_getRoot().pp_getHierarchyDepth();\r\n    }\r\n\r\n    // Get Component    \r\n\r\n    sceneExtension.pp_getComponent = function pp_getComponent(type, index = 0) {\r\n        return this.pp_getComponentBreadth(type, index);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentBreadth = function pp_getComponentBreadth(type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyBreadth(type, index);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentDepth = function pp_getComponentDepth(type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyDepth(type, index);\r\n    }\r\n\r\n    sceneExtension.pp_getComponents = function pp_getComponents(type) {\r\n        return this.pp_getComponentsBreadth(type);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentsBreadth = function pp_getComponentsBreadth(type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyBreadth(type);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentsDepth = function pp_getComponentsDepth(type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyDepth(type);\r\n    }\r\n\r\n    // Get Object By Name\r\n\r\n    sceneExtension.pp_getObjectByName = function pp_getObjectByName(name, index = 0) {\r\n        return this.pp_getObjectByNameBreadth(name, index);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByNameBreadth = function pp_getObjectByNameBreadth(name, index = 0) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyBreadth(name, index);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByNameDepth = function pp_getObjectByNameDepth(name, index = 0) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyDepth(name, index);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByName = function pp_getObjectsByName(name, index = 0) {\r\n        return this.pp_getObjectsByNameBreadth(name, index);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByNameBreadth = function pp_getObjectsByNameBreadth(name, index = 0) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyBreadth(name, index);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByNameDepth = function pp_getObjectsByNameDepth(name, index = 0) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyDepth(name, index);\r\n    }\r\n\r\n    // Get Object By ID\r\n\r\n    sceneExtension.pp_getObjectByID = function pp_getObjectByID(id) {\r\n        return this.pp_getObjectByIDBreadth(id);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByIDBreadth = function pp_getObjectByIDBreadth(id) {\r\n        return this.pp_getRoot().pp_getObjectByIDHierarchyBreadth(id);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByIDDepth = function pp_getObjectByIDDepth(id) {\r\n        return this.pp_getRoot().pp_getObjectByIDHierarchyDepth(id);\r\n    }\r\n\r\n    // To String\r\n\r\n    sceneExtension.pp_toString = function pp_toString() {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    sceneExtension.pp_toStringCompact = function pp_toStringCompact() {\r\n        return this.pp_getRoot().pp_toStringCompact();\r\n    }\r\n\r\n    sceneExtension.pp_toStringExtended = function pp_toStringExtended() {\r\n        return this.pp_getRoot().pp_toStringExtended();\r\n    }\r\n\r\n    // Cauldron\r\n\r\n    sceneExtension.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return this.pp_getRoot().pp_getComponentsAmountMap(amountMap);\r\n    }\r\n\r\n\r\n\r\n    ExtensionUtils.assignProperties(sceneExtension, Scene.prototype, false, true, true);\r\n\r\n}", "import { initObjectExtension } from \"./object_extension\";\r\nimport { initSceneExtension } from \"./scene_extension\";\r\n\r\nexport function initWLExtensions(engine) {\r\n    initObjectExtension();\r\n    initSceneExtension(engine);\r\n}", "import { MeshComponent, CollisionComponent, TextComponent, PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { MeshUtils } from \"../../../../cauldron/utils/mesh_utils\";\r\nimport { DeepCloneParams } from \"../../extensions/object_extension\";\r\n\r\nexport function initComponentCloneMod() {\r\n\r\n    MeshComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(MeshComponent.TypeName, \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(MeshComponent.TypeName, \"mesh\")) {\r\n            clonedComponent.mesh = MeshUtils.cloneMesh(this.mesh);\r\n        } else {\r\n            clonedComponent.mesh = this.mesh;\r\n        }\r\n\r\n        clonedComponent.skin = this.skin;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    CollisionComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent.collider = this.collider;\r\n        clonedComponent.extents = this.extents.pp_clone();\r\n        clonedComponent.group = this.group;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    TextComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponent(TextComponent.TypeName)) {\r\n            clonedComponent.text = this.text.slice(0);\r\n        } else {\r\n            clonedComponent.text = this.text;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(TextComponent.TypeName, \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        clonedComponent.alignment = this.alignment;\r\n        clonedComponent.justification = this.justification;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    // #TODO Not completed, missing flags like gravity or groups\r\n    PhysXComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n        let componentParams = {\r\n            \"static\": this.static,\r\n            \"simulate\": this.simulate,\r\n            \"angularDamping\": this.angularDamping,\r\n            \"dynamicFriction\": this.dynamicFriction,\r\n            \"extents\": this.extents,\r\n            \"kinematic\": this.kinematic,\r\n            \"linearDamping\": this.linearDamping,\r\n            \"mass\": this.mass,\r\n            \"restituition\": this.restituition,\r\n            \"shape\": this.shape,\r\n            \"shapeData\": this.shapeData,\r\n            \"staticFriction\": this.staticFriction,\r\n            \"bounciness\": this.bounciness,\r\n            \"allowQuery\": this.allowQuery,\r\n            \"allowSimulation\": this.allowSimulation,\r\n            \"gravity\": this.gravity,\r\n            \"trigger\": this.trigger\r\n        };\r\n\r\n        if (!this.static) {\r\n            componentParams[\"angularVelocity\"] = this.angularVelocity;\r\n            componentParams[\"linearVelocity\"] = this.linearVelocity;\r\n        }\r\n\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, componentParams);\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n\r\n\r\n    Object.defineProperty(MeshComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(CollisionComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(TextComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(PhysXComponent.prototype, \"pp_clone\", { enumerable: false });\r\n\r\n}", "import { Mesh, MeshAttribute, MeshIndexType } from \"@wonderlandengine/api\";\r\nimport { vec2_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../wl/engine_globals\";\r\n\r\nexport class MeshCreationVertexParams {\r\n\r\n    constructor() {\r\n        this.myPosition = null;             // @Vec3\r\n        this.myTextureCoordinates = null;   // @Vec2\r\n        this.myNormal = null;               // @Vec3\r\n        this.myColor = null;                // @Vec4\r\n    }\r\n}\r\n\r\nexport class MeshCreationTriangleParams {\r\n\r\n    constructor() {\r\n        this.myIndexes = new Uint32Array(3);\r\n    }\r\n}\r\n\r\nexport class MeshCreationParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myVertexes = [];\r\n        this.myTriangles = [];\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport function createPlaneMesh() {\r\n    let vertexCount = 4;\r\n\r\n    let meshParams = new MeshCreationParams();\r\n\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        let vertexParams = new MeshCreationVertexParams();\r\n\r\n        vertexParams.myPosition = new vec3_create();\r\n        vertexParams.myPosition[0] = -1 + (i & 1) * 2;\r\n        vertexParams.myPosition[1] = -1 + ((i & 2) >> 1) * 2; // This is a quick way to have positions (-1,-1) (1,-1) (1,-1) (1,1)\r\n        vertexParams.myPosition[2] = 0;\r\n\r\n        vertexParams.myTextureCoordinates = new vec2_create();\r\n        vertexParams.myTextureCoordinates[0] = (i & 1);\r\n        vertexParams.myTextureCoordinates[1] = ((i & 2) >> 1);\r\n\r\n        vertexParams.myNormal = new vec3_create();\r\n        vertexParams.myNormal[0] = 0;\r\n        vertexParams.myNormal[1] = 0;\r\n        vertexParams.myNormal[2] = 1;\r\n\r\n        meshParams.myVertexes.push(vertexParams);\r\n    }\r\n\r\n    let firstTriangle = new MeshCreationTriangleParams();\r\n    firstTriangle.myIndexes[0] = 0;\r\n    firstTriangle.myIndexes[1] = 1;\r\n    firstTriangle.myIndexes[2] = 2;\r\n\r\n    let secondTriangle = new MeshCreationTriangleParams();\r\n    secondTriangle.myIndexes[0] = 2;\r\n    secondTriangle.myIndexes[1] = 1;\r\n    secondTriangle.myIndexes[2] = 3;\r\n\r\n    meshParams.myTriangles.push(firstTriangle);\r\n    meshParams.myTriangles.push(secondTriangle);\r\n\r\n    let mesh = createMesh(meshParams);\r\n\r\n    return mesh;\r\n}\r\n\r\nexport function createMesh(meshCreationParams) {\r\n    let indexData = [];\r\n    for (let triangle of meshCreationParams.myTriangles) {\r\n        indexData.push(triangle.myIndexes[0]);\r\n        indexData.push(triangle.myIndexes[1]);\r\n        indexData.push(triangle.myIndexes[2]);\r\n    }\r\n\r\n    let indexDataUnsignedInt = new Uint32Array(indexData.length);\r\n    indexDataUnsignedInt.pp_copy(indexData);\r\n\r\n    let vertexCount = meshCreationParams.myVertexes.length;\r\n    let mesh = new Mesh(meshCreationParams.myEngine, {\r\n        vertexCount: vertexCount,\r\n        indexData: indexDataUnsignedInt,\r\n        indexType: MeshIndexType.UnsignedInt,\r\n    });\r\n\r\n    let positionAttribute = null;\r\n    let textureCoordinatesAttribute = null;\r\n    let normalAttribute = null;\r\n    let colorAttribute = null;\r\n\r\n    try {\r\n        positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n    } catch (error) {\r\n        positionAttribute = null;\r\n    }\r\n\r\n    try {\r\n        textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n    } catch (error) {\r\n        textureCoordinatesAttribute = null;\r\n    }\r\n\r\n    try {\r\n        normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n    } catch (error) {\r\n        normalAttribute = null;\r\n    }\r\n\r\n    try {\r\n        colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n    } catch (error) {\r\n        colorAttribute = null;\r\n    }\r\n\r\n    for (let i = 0; i < meshCreationParams.myVertexes.length; i++) {\r\n        let vertex = meshCreationParams.myVertexes[i];\r\n        if (positionAttribute != null && vertex.myPosition) {\r\n            positionAttribute.set(i, vertex.myPosition);\r\n        }\r\n        if (textureCoordinatesAttribute != null && vertex.myTextureCoordinates) {\r\n            textureCoordinatesAttribute.set(i, vertex.myTextureCoordinates);\r\n        }\r\n        if (normalAttribute != null && vertex.myNormal) {\r\n            normalAttribute.set(i, vertex.myNormal);\r\n        }\r\n        if (colorAttribute != null && vertex.myColor) {\r\n            colorAttribute.set(i, vertex.myColor);\r\n        }\r\n    }\r\n\r\n    return mesh;\r\n}\r\n\r\nexport let cloneMesh = function () {\r\n    let position = vec3_create();\r\n    let textureCoordinates = vec2_create();\r\n    let normal = vec3_create();\r\n    let color = vec4_create();\r\n\r\n    return function cloneMesh(mesh) {\r\n        if (mesh == null) {\r\n            return null;\r\n        }\r\n\r\n        let clonedIndexData = new Uint32Array(mesh.indexData.length);\r\n        for (let i = 0; i < mesh.indexData.length; i++) {\r\n            clonedIndexData[i] = mesh.indexData[i];\r\n        }\r\n\r\n        let clonedMesh = new Mesh(mesh.engine, {\r\n            vertexCount: mesh.vertexCount,\r\n            indexData: clonedIndexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        let clonedPositionAttribute = null;\r\n        let clonedTextureCoordinatesAttribute = null;\r\n        let clonedNormalAttribute = null;\r\n        let clonedColorAttribute = null;\r\n\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n            clonedPositionAttribute = clonedMesh.attribute(MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n            clonedPositionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n            clonedTextureCoordinatesAttribute = clonedMesh.attribute(MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n            clonedTextureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n            clonedNormalAttribute = clonedMesh.attribute(MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n            clonedNormalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n            clonedColorAttribute = clonedMesh.attribute(MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n            clonedColorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < mesh.vertexCount; i++) {\r\n            if (positionAttribute != null && clonedPositionAttribute != null) {\r\n                clonedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n            }\r\n            if (textureCoordinatesAttribute != null && clonedTextureCoordinatesAttribute != null) {\r\n                clonedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n            }\r\n            if (normalAttribute != null && clonedNormalAttribute != null) {\r\n                clonedNormalAttribute.set(i, normalAttribute.get(i, normal));\r\n            }\r\n            if (colorAttribute != null && clonedColorAttribute != null) {\r\n                clonedColorAttribute.set(i, colorAttribute.get(i, color));\r\n            }\r\n        }\r\n\r\n        return clonedMesh;\r\n    };\r\n}();\r\n\r\nexport let invertMesh = function () {\r\n    let position = vec3_create();\r\n    let textureCoordinates = vec2_create();\r\n    let normal = vec3_create();\r\n    let color = vec4_create();\r\n\r\n    return function invertMesh(mesh) {\r\n        if (mesh == null) {\r\n            return null;\r\n        }\r\n\r\n        let invertedIndexData = new Uint32Array(mesh.indexData.length);\r\n        for (let i = 0; i < mesh.indexData.length / 3; i++) {\r\n            invertedIndexData[i * 3 + 0] = mesh.indexData[i * 3 + 2];\r\n            invertedIndexData[i * 3 + 1] = mesh.indexData[i * 3 + 1];\r\n            invertedIndexData[i * 3 + 2] = mesh.indexData[i * 3 + 0];\r\n        }\r\n\r\n        let invertedMesh = new Mesh(mesh.engine, {\r\n            vertexCount: mesh.vertexCount,\r\n            indexData: invertedIndexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        let invertedPositionAttribute = null;\r\n        let invertedTextureCoordinatesAttribute = null;\r\n        let invertedNormalAttribute = null;\r\n        let invertedColorAttribute = null;\r\n\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n            invertedPositionAttribute = invertedMesh.attribute(MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n            invertedPositionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n            invertedTextureCoordinatesAttribute = invertedMesh.attribute(MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n            invertedTextureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n            invertedNormalAttribute = invertedMesh.attribute(MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n            invertedNormalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n            invertedColorAttribute = invertedMesh.attribute(MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n            invertedColorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < mesh.vertexCount; i++) {\r\n            if (positionAttribute != null && invertedPositionAttribute != null) {\r\n                invertedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n            }\r\n            if (textureCoordinatesAttribute != null && invertedTextureCoordinatesAttribute != null) {\r\n                invertedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n            }\r\n            if (normalAttribute != null && invertedNormalAttribute != null) {\r\n                normalAttribute.get(i, normal)\r\n                normal.vec3_negate(normal);\r\n                invertedNormalAttribute.set(i, normal);\r\n            }\r\n            if (colorAttribute != null && invertedColorAttribute != null) {\r\n                invertedColorAttribute.set(i, colorAttribute.get(i, color));\r\n            }\r\n        }\r\n\r\n        return invertedMesh;\r\n    };\r\n}();\r\n\r\nexport let MeshUtils = {\r\n    createPlaneMesh,\r\n    createMesh,\r\n    cloneMesh,\r\n    invertMesh\r\n};", "let _myMainEngine = null;\r\nlet _myEngines = [];\r\n\r\nexport function initEngine(engine) {\r\n    if (engine != null) {\r\n        addEngine(engine);\r\n        if (getMainEngine() == null) {\r\n            setMainEngine(engine);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getMainEngine() {\r\n    return _myMainEngine;\r\n}\r\n\r\nexport function setMainEngine(engine) {\r\n    if (hasEngine(engine)) {\r\n        _myMainEngine = engine;\r\n    }\r\n}\r\n\r\nexport function getEngines() {\r\n    return _myEngines;\r\n}\r\n\r\nexport function addEngine(engine) {\r\n    removeEngine(engine);\r\n    _myEngines.push(engine);\r\n}\r\n\r\nexport function removeEngine(engine) {\r\n    let index = _myEngines.indexOf(engine);\r\n\r\n    if (index >= 0) {\r\n        _myEngines.splice(index, 1);\r\n    }\r\n}\r\n\r\nexport function hasEngine(engine) {\r\n    return _myEngines.indexOf(engine) >= 0;\r\n}", "import { InputComponent, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Cursor, CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../../cauldron/utils/xr_utils\";\r\nimport { InputUtils } from \"../../../../input/cauldron/input_utils\";\r\nimport { vec3_create, quat_create, quat2_create, mat4_create } from \"../../../js/extensions/array_extension\";\r\n\r\nexport function initCursorComponentMod() {\r\n    initCursorComponentModPrototype();\r\n}\r\n\r\nexport function initCursorComponentModPrototype() {\r\n    // Modified Functions\r\n\r\n    Cursor.prototype.init = function init() {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = (1 << this.collisionGroup);\r\n        this.maxDistance = 100;\r\n\r\n        this.doubleClickTimer = 0;\r\n        this.tripleClickTimer = 0;\r\n        this.multipleClickObject = null;\r\n        this.multipleClickDelay = 0.3;\r\n\r\n        this.visible = false;\r\n\r\n        this.onDestroyCallbacks = [];\r\n\r\n        this.prevHitLocationLocalToTarget = vec3_create();\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    Cursor.prototype.start = function start() {\r\n        if (this.handedness == 0) {\r\n            let inputComp = this.object.pp_getComponent(InputComponent);\r\n            if (!inputComp) {\r\n                console.warn(\"cursor component on object \" + this.object.pp_getName() + \" was configured with handedness \\\"input component\\\", \" + \"but object has no input component.\");\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = InputUtils.getHandednessByIndex(this.handedness - 1);\r\n        }\r\n\r\n        this.globalTarget = this.object.pp_addComponent(CursorTarget);\r\n\r\n        this.transformQuat = quat2_create();\r\n        this.rotationQuat = quat_create();\r\n        this.transformMatrix = mat4_create();\r\n        this.origin = vec3_create();\r\n        this.cursorObjScale = vec3_create();\r\n        this.direction = vec3_create();\r\n        this.tempQuat = quat_create();\r\n        this.setViewComponent(this.object.pp_getComponent(ViewComponent));\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n        this.isRealDown = false;\r\n\r\n        this.cursorPos = vec3_create();\r\n        this.hoveringObject = null;\r\n\r\n        XRUtils.registerSessionStartEventListener(this, this.setupVREvents.bind(this), this.engine);\r\n        this.onDestroyCallbacks.push(() => {\r\n            XRUtils.unregisterSessionStartEventListener(this, this.engine);\r\n        });\r\n\r\n        this.showRay = true;\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(true);\r\n            this.showRay = false;\r\n            this.cursorRayOrigin = vec3_create();\r\n            this.cursorRayScale = vec3_create();\r\n            this.cursorRayScale.set(this.cursorRayObject.pp_getScaleLocal());\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this._setCursorRayTransform(null);\r\n        }\r\n\r\n        this._setCursorVisibility(false);\r\n    };\r\n\r\n    Cursor.prototype.onViewportResize = function onViewportResize() {\r\n        if (!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        this.viewComponent.projectionMatrix.mat4_invert(this.projectionMatrix);\r\n    };\r\n\r\n    Cursor.prototype._setCursorRayTransform = function _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject) return;\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.pp_resetScaleLocal();\r\n\r\n            if (hitPosition != null) {\r\n                this.cursorRayObject.pp_getPosition(this.cursorRayOrigin);\r\n                let dist = this.cursorRayOrigin.vec3_distance(hitPosition);\r\n                this.cursorRayScale[this.cursorRayScalingAxis] = dist;\r\n                this.cursorRayObject.pp_scaleObject(this.cursorRayScale);\r\n            }\r\n        }\r\n    };\r\n\r\n    Cursor.prototype._setCursorVisibility = function _setCursorVisibility(visible) {\r\n        this.visible = visible;\r\n        if (!this.cursorObject) return;\r\n\r\n        this.cursorObject.pp_setActive(visible);\r\n    };\r\n\r\n    Cursor.prototype.update = function update(dt) {\r\n        if (this.doubleClickTimer > 0) {\r\n            this.doubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this.tripleClickTimer > 0) {\r\n            this.tripleClickTimer -= dt;\r\n        }\r\n\r\n        this.doUpdate(false);\r\n    };\r\n\r\n    Cursor.prototype.doUpdate = function () {\r\n        return function doUpdate(doClick) {\r\n            /* If in VR, set the cursor ray based on object transform */\r\n            if (this.session) {\r\n                /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n                if (this.arTouchDown && this.input && XRUtils.getSession(this.engine).inputSources[0].handedness === \"none\" && XRUtils.getSession(this.engine).inputSources[0].gamepad) {\r\n                    let p = XRUtils.getSession(this.engine).inputSources[0].gamepad.axes;\r\n                    /* Screenspace Y is inverted */\r\n                    this.direction.vec3_set(p[0], -p[1], -1.0);\r\n                    this.updateDirection();\r\n                } else {\r\n                    this.object.pp_getPosition(this.origin);\r\n                    this.object.pp_getForward(this.direction);\r\n                }\r\n                let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                    this.engine.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                    this.engine.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n                if (rayHit.hitCount > 0) {\r\n                    this.cursorPos.set(rayHit.locations[0]);\r\n                } else {\r\n                    this.cursorPos.fill(0);\r\n                }\r\n\r\n                this.hoverBehaviour(rayHit, doClick);\r\n            } else {\r\n                if (this.viewComponent != null && this.lastClientX != null) {\r\n                    let rayHit = this.updateMousePos(this.lastClientX, this.lastClientY, this.lastWidth, this.lastHeight);\r\n                    this.hoverBehaviour(rayHit, false);\r\n                }\r\n            }\r\n\r\n            if (this.cursorObject) {\r\n                if (this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                    this._setCursorVisibility(true);\r\n                    this.cursorObject.pp_setPosition(this.cursorPos);\r\n                    this.cursorObject.pp_setTransformLocalQuat(this.cursorObject.pp_getTransformLocalQuat(this.transformQuat).quat2_normalize(this.transformQuat));\r\n                    this._setCursorRayTransform(this.cursorPos);\r\n                } else {\r\n                    if (this.visible && this.cursorRayObject) {\r\n                        this._setCursorRayTransform(null);\r\n                    }\r\n\r\n                    this._setCursorVisibility(false);\r\n                }\r\n            }\r\n\r\n            if (this.cursorRayObject) {\r\n                this.cursorRayObject.pp_setActive(true);\r\n            }\r\n\r\n            if (this.hoveringObject == null) {\r\n                this.pointerId = null;\r\n            }\r\n        };\r\n    }();\r\n\r\n    Cursor.prototype.hoverBehaviour = function hoverBehaviour(rayHit, doClick, forceUnhover = false) {\r\n        if (!forceUnhover && rayHit.hitCount > 0) {\r\n            let hoveringObjectChanged = false;\r\n            if (!this.hoveringObject || !this.hoveringObject.pp_equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    let cursorTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n                    if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                hoveringObjectChanged = true;\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if (this.styleCursor) document.body.style.cursor = \"pointer\";\r\n\r\n                let cursorTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n                if (cursorTarget) {\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n\r\n                if (!this._isDown() && this.isRealDown) {\r\n                    this.isDown = false;\r\n                    this.lastIsDown = false;\r\n                    this.isUpWithNoDown = false;\r\n\r\n                    if (cursorTarget) cursorTarget.onDownOnHover(this.hoveringObject, this);\r\n                    this.globalTarget.onDownOnHover(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            let cursorTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n\r\n            if (!hoveringObjectChanged && this._isMoving(rayHit.locations[0])) {\r\n                if (cursorTarget) cursorTarget.onMove(this.hoveringObject, this);\r\n                this.globalTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            if (this._isDown()) {\r\n                /* Cursor down */\r\n                if (cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                this.globalTarget.onDown(this.hoveringObject, this);\r\n\r\n                /* Click */\r\n                if (this.tripleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.pp_equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onTripleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onTripleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                } else if (this.doubleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.pp_equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onDoubleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onDoubleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = this.multipleClickDelay;\r\n                    this.doubleClickTimer = 0;\r\n                } else {\r\n                    if (cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                    this.globalTarget.onClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                    this.doubleClickTimer = this.multipleClickDelay;\r\n                    this.multipleClickObject = this.hoveringObject;\r\n                }\r\n            } else {\r\n                /* Cursor up */\r\n                if (!this.isUpWithNoDown && !hoveringObjectChanged && this._isUp()) {\r\n                    if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                } else if (this.isUpWithNoDown || (hoveringObjectChanged && this._isUp())) {\r\n                    if (cursorTarget) cursorTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                    this.globalTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            this.prevHitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(rayHit.locations[0], this.prevHitLocationLocalToTarget);\r\n        } else if (this.hoveringObject && (forceUnhover || rayHit.hitCount == 0)) {\r\n            let cursorTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n\r\n            this.hoveringObject = null;\r\n            if (this.styleCursor) document.body.style.cursor = \"default\";\r\n        }\r\n\r\n        if (this.hoveringObject) {\r\n            this.lastIsDown = this.isDown;\r\n        } else {\r\n            this.isDown = false;\r\n            this.lastIsDown = false;\r\n        }\r\n\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    Cursor.prototype.setupVREvents = function setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        let onSessionEnd = function (e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this);\r\n        s.addEventListener(\"end\", onSessionEnd);\r\n\r\n        let onSelect = this.onSelect.bind(this);\r\n        s.addEventListener(\"select\", onSelect);\r\n        let onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener(\"selectstart\", onSelectStart);\r\n        let onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener(\"selectend\", onSelectEnd);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            if (!this.session) return;\r\n            s.removeEventListener(\"end\", onSessionEnd);\r\n            s.removeEventListener(\"select\", onSelect);\r\n            s.removeEventListener(\"selectstart\", onSelectStart);\r\n            s.removeEventListener(\"selectend\", onSelectEnd);\r\n        });\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    };\r\n\r\n    Cursor.prototype.onSelect = function onSelect(e) {\r\n    };\r\n\r\n    Cursor.prototype.onSelectStart = function onSelectStart(e) {\r\n        if (this.active) {\r\n            this.arTouchDown = true;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                this.isDown = true;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.onSelectEnd = function onSelectEnd(e) {\r\n        if (this.active) {\r\n            this.arTouchDown = false;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                if (!this.isDown) {\r\n                    this.isUpWithNoDown = true;\r\n                }\r\n                this.isDown = false;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.onPointerMove = function onPointerMove(e) {\r\n        if (this.active) {\r\n            /* Don't care about secondary pointers */\r\n            if (this.pointerId != null && this.pointerId != e.pointerId) return;\r\n\r\n            let bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.onClick = function onClick(e) {\r\n    };\r\n\r\n    Cursor.prototype.onPointerDown = function onPointerDown(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            let bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.isDown = true;\r\n            this.isRealDown = true;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.onPointerUp = function onPointerUp(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            let bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            if (!this.isDown) {\r\n                this.isUpWithNoDown = true;\r\n            }\r\n\r\n            this.isDown = false;\r\n            this.isRealDown = false;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.updateMousePos = function updateMousePos(clientX, clientY, w, h) {\r\n        this.lastClientX = clientX;\r\n        this.lastClientY = clientY;\r\n        this.lastWidth = w;\r\n        this.lastHeight = h;\r\n\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        let left = clientX / w;\r\n        let top = clientY / h;\r\n        this.direction.vec3_set(left * 2 - 1, -top * 2 + 1, -1.0);\r\n        return this.updateDirection();\r\n    };\r\n\r\n    Cursor.prototype.updateDirection = function () {\r\n        let transformWorld = quat2_create();\r\n        return function updateDirection() {\r\n            this.object.pp_getPosition(this.origin);\r\n\r\n            /* Reverse-project the direction into view space */\r\n            this.direction.vec3_transformMat4(this.projectionMatrix, this.direction);\r\n            this.direction.vec3_normalize(this.direction);\r\n            this.direction.vec3_transformQuat(this.object.pp_getTransformQuat(transformWorld), this.direction);\r\n            let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                this.engine.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                this.engine.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n            if (rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            return rayHit;\r\n        };\r\n    }();\r\n\r\n    Cursor.prototype.onDeactivate = function onDeactivate() {\r\n        if (this.hoveringObject) {\r\n            let cursorTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n\r\n        this.hoveringObject = null;\r\n        if (this.styleCursor) document.body.style.cursor = \"default\";\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n\r\n        this._setCursorVisibility(false);\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(false);\r\n        }\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    Cursor.prototype.onActivate = function onActivate() {\r\n        this.showRay = true;\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    Cursor.prototype.onDestroy = function onDestroy() {\r\n        for (let f of this.onDestroyCallbacks) f();\r\n    };\r\n\r\n    // New Functions \r\n\r\n    Cursor.prototype.setViewComponent = function setViewComponent(viewComponent) {\r\n        this.viewComponent = viewComponent;\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this.viewComponent != null) {\r\n            let onClick = this.onClick.bind(this);\r\n            this.engine.canvas.addEventListener(\"click\", onClick);\r\n            let onPointerDown = this.onPointerDown.bind(this);\r\n            this.engine.canvas.addEventListener(\"pointerdown\", onPointerDown);\r\n            let onPointerMove = this.onPointerMove.bind(this);\r\n            this.engine.canvas.addEventListener(\"pointermove\", onPointerMove);\r\n            let onPointerUp = this.onPointerUp.bind(this);\r\n            this.engine.canvas.addEventListener(\"pointerup\", onPointerUp);\r\n            let onPointerLeave = this.onPointerLeave.bind(this);\r\n            this.engine.canvas.addEventListener(\"pointerleave\", onPointerLeave);\r\n\r\n            this.projectionMatrix = mat4_create();\r\n            this.viewComponent.projectionMatrix.mat4_invert(this.projectionMatrix);\r\n            let onViewportResize = this.onViewportResize.bind(this);\r\n            window.addEventListener(\"resize\", onViewportResize);\r\n\r\n            this.onDestroyCallbacks.push(() => {\r\n                this.engine.canvas.removeEventListener(\"click\", onClick);\r\n                this.engine.canvas.removeEventListener(\"pointerdown\", onPointerDown);\r\n                this.engine.canvas.removeEventListener(\"pointermove\", onPointerMove);\r\n                this.engine.canvas.removeEventListener(\"pointerup\", onPointerUp);\r\n                this.engine.canvas.removeEventListener(\"pointerleave\", onPointerLeave);\r\n                window.removeEventListener(\"resize\", onViewportResize);\r\n            });\r\n        }\r\n    };\r\n\r\n    Cursor.prototype.onPointerLeave = function onPointerLeave(e) {\r\n        if (this.pointerId == null || this.pointerId == e.pointerId) {\r\n            if (this.active) {\r\n                this.hoverBehaviour(null, false, true); // Trigger unhover\r\n            }\r\n\r\n            this.pointerId = null;\r\n\r\n            this.lastClientX = null;\r\n            this.lastClientY = null;\r\n            this.lastWidth = null;\r\n            this.lastHeight = null;\r\n        }\r\n    };\r\n\r\n    Cursor.prototype._isDown = function _isDown() {\r\n        return this.isDown !== this.lastIsDown && this.isDown;\r\n    };\r\n\r\n    Cursor.prototype._isUp = function _isUp() {\r\n        return this.isDown !== this.lastIsDown && !this.isDown;\r\n    };\r\n\r\n    Cursor.prototype._isMoving = function () {\r\n        let hitLocationLocalToTarget = vec3_create();\r\n        return function _isMoving(hitLocation) {\r\n            let isMoving = false;\r\n\r\n            hitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(hitLocation, hitLocationLocalToTarget);\r\n\r\n            if (!hitLocationLocalToTarget.vec_equals(this.prevHitLocationLocalToTarget, 0.0001)) {\r\n                isMoving = true;\r\n            }\r\n\r\n            return isMoving;\r\n        };\r\n    }();\r\n\r\n\r\n\r\n    Object.defineProperty(Cursor.prototype, \"setViewComponent\", { enumerable: false });\r\n    Object.defineProperty(Cursor.prototype, \"onPointerLeave\", { enumerable: false });\r\n    Object.defineProperty(Cursor.prototype, \"_isDown\", { enumerable: false });\r\n    Object.defineProperty(Cursor.prototype, \"_isMoving\", { enumerable: false });\r\n    Object.defineProperty(Cursor.prototype, \"_isUp\", { enumerable: false });\r\n}", "import { getMainEngine } from \"../wl/engine_globals\";\r\n\r\nexport function getSession(engine = getMainEngine()) {\r\n    return engine.xrSession;\r\n}\r\n\r\nexport function isSessionActive(engine = getMainEngine()) {\r\n    return getSession(engine) != null;\r\n}\r\n\r\nexport function registerSessionStartEventListener(id, callback, engine = getMainEngine()) {\r\n    engine.onXRSessionStart.add(callback, { id: id });\r\n}\r\n\r\nexport function unregisterSessionStartEventListener(id, engine = getMainEngine()) {\r\n    engine.onXRSessionStart.remove(id);\r\n}\r\n\r\nexport function registerSessionEndEventListener(id, callback, engine = getMainEngine()) {\r\n    engine.onXRSessionEnd.add(callback, { id: id });\r\n}\r\n\r\nexport function unregisterSessionEndEventListener(id, engine = getMainEngine()) {\r\n    return engine.onXRSessionEnd.remove(id);\r\n}\r\n\r\nexport function registerSessionStartEndEventListeners(id, startCallback, endCallback, manuallyCallSessionStartIfSessionAlreadyActive = false, addManualCallFlagToStartCallback = false, engine = getMainEngine()) {\r\n    if (manuallyCallSessionStartIfSessionAlreadyActive && isSessionActive(engine)) {\r\n        if (addManualCallFlagToStartCallback) {\r\n            startCallback(true, getSession(engine));\r\n        } else {\r\n            startCallback(getSession(engine));\r\n        }\r\n    }\r\n\r\n    if (addManualCallFlagToStartCallback) {\r\n        registerSessionStartEventListener(id, startCallback.bind(undefined, false), engine);\r\n    } else {\r\n        registerSessionStartEventListener(id, startCallback, engine);\r\n    }\r\n\r\n    registerSessionEndEventListener(id, endCallback, engine);\r\n}\r\n\r\nexport function unregisterSessionStartEndEventListeners(id, engine = getMainEngine()) {\r\n    unregisterSessionStartEventListener(id, engine);\r\n    unregisterSessionEndEventListener(id, engine);\r\n}\r\n\r\nexport function isReferenceSpaceLocalFloor(engine = getMainEngine()) {\r\n    return ![\"local\", \"viewer\"].includes(getReferenceSpaceType(engine));\r\n}\r\n\r\nexport function getReferenceSpaceType(engine = getMainEngine()) {\r\n    let refSpace = \"local\";\r\n\r\n    try {\r\n        refSpace = getWebXR(engine).refSpace;;\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    return refSpace;\r\n}\r\n\r\nexport function getWebXR(engine = getMainEngine()) {\r\n    return engine.wasm.WebXR;\r\n}\r\n\r\nexport function getFrame(engine = getMainEngine()) {\r\n    return engine.xrFrame;\r\n}\r\n\r\nexport function isVRSupported(engine = getMainEngine()) {\r\n    return engine.vrSupported;\r\n}\r\n\r\nexport function isARSupported(engine = getMainEngine()) {\r\n    return engine.arSupported;\r\n}\r\n\r\nexport function isDeviceEmulated() {\r\n    let isEmulated = (\"CustomWebXRPolyfill\" in window);\r\n    return isEmulated;\r\n}\r\n\r\nexport let XRUtils = {\r\n    getSession,\r\n    isSessionActive,\r\n    registerSessionStartEventListener,\r\n    unregisterSessionStartEventListener,\r\n    registerSessionEndEventListener,\r\n    unregisterSessionEndEventListener,\r\n    registerSessionStartEndEventListeners,\r\n    unregisterSessionStartEndEventListeners,\r\n    isReferenceSpaceLocalFloor,\r\n    getReferenceSpaceType,\r\n    getFrame,\r\n    isVRSupported,\r\n    isARSupported,\r\n    isDeviceEmulated\r\n};", "\r\nexport let Handedness = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nexport let HandednessIndex = {\r\n    LEFT: 0,\r\n    RIGHT: 1\r\n};\r\n\r\nexport let InputSourceType = {\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};\r\n\r\nexport let TrackedHandJointID = {\r\n    WRIST: \"wrist\",\r\n\r\n    THUMB_METACARPAL: \"thumb-metacarpal\",\r\n    THUMB_PHALANX_PROXIMAL: \"thumb-phalanx-proximal\",\r\n    THUMB_PHALANX_DISTAL: \"thumb-phalanx-distal\",\r\n    THUMB_TIP: \"thumb-tip\",\r\n\r\n    INDEX_FINGER_METACARPAL: \"index-finger-metacarpal\",\r\n    INDEX_FINGER_PHALANX_PROXIMAL: \"index-finger-phalanx-proximal\",\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: \"index-finger-phalanx-intermediate\",\r\n    INDEX_FINGER_PHALANX_DISTAL: \"index-finger-phalanx-distal\",\r\n    INDEX_FINGER_TIP: \"index-finger-tip\",\r\n\r\n    MIDDLE_FINGER_METACARPAL: \"middle-finger-metacarpal\",\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: \"middle-finger-phalanx-proximal\",\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: \"middle-finger-phalanx-intermediate\",\r\n    MIDDLE_FINGER_PHALANX_DISTAL: \"middle-finger-phalanx-distal\",\r\n    MIDDLE_FINGER_TIP: \"middle-finger-tip\",\r\n\r\n    RING_FINGER_METACARPAL: \"ring-finger-metacarpal\",\r\n    RING_FINGER_PHALANX_PROXIMAL: \"ring-finger-phalanx-proximal\",\r\n    RING_FINGER_PHALANX_INTERMEDIATE: \"ring-finger-phalanx-intermediate\",\r\n    RING_FINGER_PHALANX_DISTAL: \"ring-finger-phalanx-distal\",\r\n    RING_FINGER_TIP: \"ring-finger-tip\",\r\n\r\n    PINKY_FINGER_METACARPAL: \"pinky-finger-metacarpal\",\r\n    PINKY_FINGER_PHALANX_PROXIMAL: \"pinky-finger-phalanx-proximal\",\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: \"pinky-finger-phalanx-intermediate\",\r\n    PINKY_FINGER_PHALANX_DISTAL: \"pinky-finger-phalanx-distal\",\r\n    PINKY_FINGER_TIP: \"pinky-finger-tip\",\r\n};\r\n\r\nexport let TrackedHandJointIDIndex = {\r\n    WRIST: 0,\r\n\r\n    THUMB_METACARPAL: 1,\r\n    THUMB_PHALANX_PROXIMAL: 2,\r\n    THUMB_PHALANX_DISTAL: 3,\r\n    THUMB_TIP: 4,\r\n\r\n    INDEX_FINGER_METACARPAL: 5,\r\n    INDEX_FINGER_PHALANX_PROXIMAL: 6,\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: 7,\r\n    INDEX_FINGER_PHALANX_DISTAL: 8,\r\n    INDEX_FINGER_TIP: 9,\r\n\r\n    MIDDLE_FINGER_METACARPAL: 10,\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: 11,\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: 12,\r\n    MIDDLE_FINGER_PHALANX_DISTAL: 13,\r\n    MIDDLE_FINGER_TIP: 14,\r\n\r\n    RING_FINGER_METACARPAL: 15,\r\n    RING_FINGER_PHALANX_PROXIMAL: 16,\r\n    RING_FINGER_PHALANX_INTERMEDIATE: 17,\r\n    RING_FINGER_PHALANX_DISTAL: 18,\r\n    RING_FINGER_TIP: 19,\r\n\r\n    PINKY_FINGER_METACARPAL: 20,\r\n    PINKY_FINGER_PHALANX_PROXIMAL: 21,\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: 22,\r\n    PINKY_FINGER_PHALANX_DISTAL: 23,\r\n    PINKY_FINGER_TIP: 24\r\n};", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { Handedness, HandednessIndex, InputSourceType, TrackedHandJointID, TrackedHandJointIDIndex } from \"./input_types\";\r\n\r\nexport function getHandednessByIndex(index) {\r\n    let handedness = null;\r\n\r\n    switch (index) {\r\n        case HandednessIndex.LEFT:\r\n            handedness = Handedness.LEFT;\r\n            break;\r\n        case HandednessIndex.RIGHT:\r\n            handedness = Handedness.RIGHT;\r\n            break;\r\n    }\r\n\r\n    return handedness;\r\n}\r\n\r\nexport function getInputSource(handedness, inputSourceType = null, engine = getMainEngine()) {\r\n    let inputSource = null;\r\n\r\n    let xrSession = XRUtils.getSession(engine);\r\n    if (xrSession != null && xrSession.inputSources) {\r\n        for (let i = 0; i < xrSession.inputSources.length; i++) {\r\n            let input = xrSession.inputSources[i];\r\n\r\n            let isCorrectType = (!inputSourceType) || (inputSourceType == InputSourceType.GAMEPAD && !input.hand) || (inputSourceType == InputSourceType.TRACKED_HAND && input.hand);\r\n            if (isCorrectType && input.handedness == handedness) {\r\n                inputSource = input;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return inputSource;\r\n}\r\n\r\nexport function getInputSourceTypeByHandedness(handedness, engine) {\r\n    let inputSource = getInputSource(handedness, undefined, engine);\r\n\r\n    return getInputSourceType(inputSource);\r\n}\r\n\r\nexport function getInputSourceType(inputSource) {\r\n    let inputSourceType = null;\r\n\r\n    if (inputSource) {\r\n        if (inputSource.hand) {\r\n            inputSourceType = InputSourceType.TRACKED_HAND;\r\n        } else {\r\n            inputSourceType = InputSourceType.GAMEPAD;\r\n        }\r\n    }\r\n\r\n    return inputSourceType;\r\n}\r\n\r\nexport function getOppositeHandedness(handedness) {\r\n    let oppositeHandedness = null;\r\n\r\n    switch (handedness) {\r\n        case Handedness.LEFT:\r\n            oppositeHandedness = Handedness.RIGHT;\r\n            break;\r\n        case Handedness.RIGHT:\r\n            oppositeHandedness = Handedness.LEFT;\r\n            break;\r\n    }\r\n\r\n    return oppositeHandedness;\r\n}\r\n\r\nexport function getJointIDByIndex(index) {\r\n    let jointID = null;\r\n\r\n    let jointIDKey = null;\r\n    for (let jointIDIndexKey in TrackedHandJointIDIndex) {\r\n        if (TrackedHandJointIDIndex[jointIDIndexKey] == index) {\r\n            jointIDKey = jointIDIndexKey;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (jointIDKey != null) {\r\n        jointID = TrackedHandJointID[jointIDKey];\r\n    }\r\n\r\n    return jointID;\r\n}\r\n\r\nexport let InputUtils = {\r\n    getHandednessByIndex,\r\n    getInputSource,\r\n    getInputSourceTypeByHandedness,\r\n    getInputSourceType,\r\n    getOppositeHandedness,\r\n    getJointIDByIndex\r\n};", "import { CursorTarget } from \"@wonderlandengine/components\";\r\n\r\nexport function initCursorTargetComponentMod() {\r\n    initCursorTargetComponentModPrototype();\r\n}\r\n\r\nexport function initCursorTargetComponentModPrototype() {\r\n    // Modified Functions \r\n\r\n    CursorTarget.prototype.init = function init() {\r\n        this.hoverFunctions = [];\r\n        this.unHoverFunctions = [];\r\n        this.clickFunctions = [];\r\n        this.doubleClickFunctions = [];\r\n        this.tripleClickFunctions = [];\r\n        this.moveFunctions = [];\r\n        this.downFunctions = [];\r\n        this.upFunctions = [];\r\n        this.downOnHoverFunctions = [];\r\n        this.upWithNoDownFunctions = [];\r\n\r\n        this.isSurface = false; // Just a way to specify if this target is just used as a surface between buttons \r\n    };\r\n\r\n    CursorTarget.prototype.onHover = function onHover(object, cursor) {\r\n        for (let f of this.hoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.onUnhover = function onUnhover(object, cursor) {\r\n        for (let f of this.unHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.onClick = function onClick(object, cursor) {\r\n        for (let f of this.clickFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.onMove = function onMove(object, cursor) {\r\n        for (let f of this.moveFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.onDown = function onDown(object, cursor) {\r\n        for (let f of this.downFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.onUp = function onUp(object, cursor) {\r\n        for (let f of this.upFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.addHoverFunction = function addHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.hoverFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeHoverFunction = function removeHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.hoverFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.addUnHoverFunction = function addUnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.unHoverFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeUnHoverFunction = function removeUnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.unHoverFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.addClickFunction = function addClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.clickFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeClickFunction = function removeClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.clickFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.addMoveFunction = function addMoveFunction(f) {\r\n        this._validateCallback(f);\r\n        this.moveFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeMoveFunction = function removeMoveFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.moveFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.addDownFunction = function addDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this.downFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeDownFunction = function removeDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.addUpFunction = function addUpFunction(f) {\r\n        this._validateCallback(f);\r\n        this.upFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeUpFunction = function removeUpFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upFunctions, f);\r\n    };\r\n\r\n\r\n    CursorTarget.prototype._removeItemOnce = function _removeItemOnce(arr, value) {\r\n        let index = arr.indexOf(value);\r\n        if (index > -1) arr.splice(index, 1);\r\n        return arr;\r\n    };\r\n\r\n    CursorTarget.prototype._validateCallback = function _validateCallback(f) {\r\n        if (typeof f !== \"function\") {\r\n            throw new TypeError(this.object.pp_getName() + \".cursor-target: Argument needs to be a function\");\r\n        }\r\n    };\r\n\r\n    // New Functions \r\n\r\n    CursorTarget.prototype.start = function start() { };\r\n    CursorTarget.prototype.update = function update(dt) { };\r\n    CursorTarget.prototype.onActivate = function onActivate() { };\r\n    CursorTarget.prototype.onDeactivate = function onDeactivate() { };\r\n    CursorTarget.prototype.onDestroy = function onDestroy() { };\r\n\r\n    CursorTarget.prototype.onDoubleClick = function onDoubleClick(object, cursor) {\r\n        for (let f of this.doubleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.addDoubleClickFunction = function addDoubleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.doubleClickFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeDoubleClickFunction = function removeDoubleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.doubleClickFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.onTripleClick = function onTripleClick(object, cursor) {\r\n        for (let f of this.tripleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.addTripleClickFunction = function addTripleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.tripleClickFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeTripleClickFunction = function removeTripleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.tripleClickFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.onDownOnHover = function onDownOnHover(object, cursor) {\r\n        for (let f of this.downOnHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.addDownOnHoverFunction = function addDownOnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.downOnHoverFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeDownOnHoverFunction = function removeDownOnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downOnHoverFunctions, f);\r\n    };\r\n\r\n    CursorTarget.prototype.onUpWithNoDown = function onUpWithNoDown(object, cursor) {\r\n        for (let f of this.upWithNoDownFunctions) f(object, cursor);\r\n    };\r\n\r\n    CursorTarget.prototype.addUpWithNoDownFunction = function addUpWithNoDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this.upWithNoDownFunctions.push(f);\r\n    };\r\n\r\n    CursorTarget.prototype.removeUpWithNoDownFunction = function removeUpWithNoDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upWithNoDownFunctions, f);\r\n    };\r\n\r\n\r\n\r\n    Object.defineProperty(CursorTarget.prototype, \"start\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"update\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onActivate\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onDeactivate\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onDestroy\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onDoubleClick\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"addDoubleClickFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"removeDoubleClickFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onTripleClick\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"addTripleClickFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"removeTripleClickFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onDownOnHover\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"addDownOnHoverFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"removeDownOnHoverFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"onUpWithNoDown\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"addUpWithNoDownFunction\", { enumerable: false });\r\n    Object.defineProperty(CursorTarget.prototype, \"removeUpWithNoDownFunction\", { enumerable: false });\r\n}", "import { MouseLookComponent } from \"@wonderlandengine/components\";\r\nimport { vec3_create } from \"../../../js/extensions/array_extension\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\n\r\nexport function initMouseLookComponentMod() {\r\n    initMouseLookComponentModPrototype();\r\n}\r\n\r\nexport function initMouseLookComponentModPrototype() {\r\n    // Modified Functions\r\n\r\n    MouseLookComponent.prototype.init = function init() {\r\n        this.pointerId = null;\r\n        this.prevMoveEvent = null;\r\n\r\n        this.resetMovingDelay = 0.15;\r\n        this.resetMovingTimer = new Timer(this.resetMovingDelay, false);\r\n        this.isMoving = false;\r\n\r\n        document.body.addEventListener(\"pointermove\", this._onMove.bind(this));\r\n\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex == 2) {\r\n                this.engine.canvas.addEventListener(\"contextmenu\", function (event) {\r\n                    event.preventDefault();\r\n                }, false);\r\n            }\r\n\r\n            this.engine.canvas.addEventListener(\"pointerdown\", function (event) {\r\n                if (this.pointerId != null) return;\r\n\r\n                if (!this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.pointerId = event.pointerId;\r\n                        this.mouseDown = true;\r\n                        document.body.style.cursor = \"grabbing\";\r\n                        if (event.button == 1) {\r\n                            event.preventDefault(); // Prevent scrolling\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }.bind(this));\r\n\r\n            document.body.addEventListener(\"pointerup\", function (event) {\r\n                if (event.pointerId != this.pointerId) return;\r\n\r\n                if (this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.mouseDown = false;\r\n                        document.body.style.cursor = \"initial\";\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        }\r\n\r\n        document.body.addEventListener(\"pointerleave\", function (event) {\r\n            if (event.pointerId != this.pointerId) return;\r\n\r\n            this.pointerId = null;\r\n            this.prevMoveEvent = null;\r\n\r\n            if (this.mouseDown) {\r\n                this.mouseDown = false;\r\n                document.body.style.cursor = \"initial\";\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n    // New Functions\r\n\r\n    MouseLookComponent.prototype.update = function update(dt) {\r\n        if (this.resetMovingTimer.isRunning()) {\r\n            this.resetMovingTimer.update(dt);\r\n            if (this.resetMovingTimer.isDone()) {\r\n                this.resetMovingTimer.reset();\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n\r\n        if (!this.isMoving) {\r\n            if (!this.requireMouseDown || !this.mouseDown) {\r\n                this.pointerId = null;\r\n            }\r\n\r\n            this.prevMoveEvent = null;\r\n        }\r\n    };\r\n\r\n    MouseLookComponent.prototype._onMove = function () {\r\n        let viewForward = vec3_create();\r\n        let viewUp = vec3_create();\r\n\r\n        let referenceUp = vec3_create();\r\n        let referenceUpNegate = vec3_create();\r\n        let referenceRight = vec3_create();\r\n\r\n        let newUp = vec3_create();\r\n        return function _onMove(event) {\r\n            if (this.pointerId != null && event.pointerId != this.pointerId) return;\r\n\r\n            if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n\r\n                viewForward = this.object.pp_getBackward(viewForward); // The view \"real\" forward is actually the backward\r\n                viewUp = this.object.pp_getUp(viewUp);\r\n\r\n                referenceUp.vec3_set(0, 1, 0);\r\n                if (this.object.pp_getParent() != null) {\r\n                    referenceUp = this.object.pp_getParent().pp_getUp(referenceUp);\r\n                }\r\n\r\n                referenceRight = viewForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n                let minAngle = 1;\r\n                if (viewForward.vec3_angle(referenceUp) < minAngle) {\r\n                    referenceRight = viewUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n                } else if (viewForward.vec3_angle(referenceUp.vec3_negate(referenceUpNegate)) < minAngle) {\r\n                    referenceRight = viewUp.vec3_cross(referenceUp, referenceRight);\r\n                } else if (!viewUp.vec3_isConcordant(referenceUp)) {\r\n                    referenceRight.vec3_negate(referenceRight);\r\n                }\r\n                referenceRight.vec3_normalize(referenceRight);\r\n\r\n                let movementX = event.movementX;\r\n                let movementY = event.movementY;\r\n\r\n                if (movementX == null || movementY == null) {\r\n                    if (this.prevMoveEvent != null) {\r\n                        movementX = event.pageX - this.prevMoveEvent.pageX;\r\n                        movementY = event.pageY - this.prevMoveEvent.pageY;\r\n                    } else {\r\n                        movementX = 0;\r\n                        movementY = 0;\r\n                    }\r\n                }\r\n\r\n                this.rotationX = -this.sensitity * movementX;\r\n                this.rotationY = -this.sensitity * movementY;\r\n\r\n                this.object.pp_rotateAxis(this.rotationY, referenceRight);\r\n\r\n                let maxVerticalAngle = 90 - 0.001;\r\n                newUp = this.object.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    this.object.pp_rotateAxis(fixAngle, referenceRight);\r\n                }\r\n\r\n                this.object.pp_rotateAxis(this.rotationX, referenceUp);\r\n\r\n                this.prevMoveEvent = event;\r\n                this.pointerId = event.pointerId;\r\n\r\n                this.resetMovingTimer.start(this.resetMovingDelay);\r\n                this.isMoving = true;\r\n            }\r\n        };\r\n    }();\r\n\r\n\r\n\r\n    Object.defineProperty(MouseLookComponent.prototype, \"update\", { enumerable: false });\r\n    Object.defineProperty(MouseLookComponent.prototype, \"_onMove\", { enumerable: false });\r\n}", "export class Timer {\r\n\r\n    constructor(duration, autoStart = true) {\r\n        this._myDuration = duration;\r\n        this._myOnEndCallbacks = new Map();     // Signature: callback()\r\n\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    start(duration = null) {\r\n        this.reset(duration);\r\n        this._myStarted = true;\r\n    }\r\n\r\n    end() {\r\n        this._done();\r\n    }\r\n\r\n    reset(duration = null) {\r\n        if (duration != null) {\r\n            this._myDuration = Math.max(0, duration);\r\n        }\r\n\r\n        this._myTimeLeft = this._myDuration;\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myJustDone = false;\r\n\r\n        if (this.isRunning()) {\r\n            this._myTimeLeft = Math.max(0, this._myTimeLeft - dt);\r\n            if (this._myTimeLeft == 0) {\r\n                this._done();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDone;\r\n    }\r\n\r\n    isJustDone() {\r\n        return this._myJustDone;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.isStarted() && !this.isDone();\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myDuration = Math.max(0, duration);\r\n    }\r\n\r\n    getTimeLeft() {\r\n        return this._myTimeLeft;\r\n    }\r\n\r\n    getPercentage() {\r\n        let percentage = 1;\r\n        if (this._myTimeLeft > 0 && this._myDuration > 0) {\r\n            percentage = (this._myDuration - this._myTimeLeft) / this._myDuration;\r\n        }\r\n        return Math.pp_clamp(percentage, 0, 1);\r\n    }\r\n\r\n    setPercentage(percentage) {\r\n        if (this.isRunning()) {\r\n            let durationPercentage = Math.pp_clamp(1 - percentage, 0, 1);\r\n            this._myTimeLeft = this._myDuration * durationPercentage;\r\n        }\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myOnEndCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myOnEndCallbacks.delete(id);\r\n    }\r\n\r\n    _done() {\r\n        this._myTimeLeft = 0;\r\n        this._myDone = true;\r\n        this._myJustDone = true;\r\n        if (this._myOnEndCallbacks.size > 0) {\r\n            for (let callback of this._myOnEndCallbacks.values()) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n}", "import { initComponentCloneMod } from \"./component_clone_mod\";\r\nimport { initCursorComponentMod } from \"./cursor_component_mod\";\r\nimport { initCursorTargetComponentMod } from \"./cursor_target_component_mod\";\r\nimport { initMouseLookComponentMod } from \"./mouse_look_component_mod\";\r\n\r\nexport function initComponentMods() {\r\n    initCursorComponentMod();\r\n    initCursorTargetComponentMod();\r\n    initMouseLookComponentMod();\r\n    initComponentCloneMod();\r\n}", "import { initComponentMods } from \"./components/init_component_mods\";\r\n\r\nexport function initWLMods() {\r\n    initComponentMods();\r\n}", "import { initWLExtensions } from \"./extensions/init_wl_extentions\";\r\nimport { initWLMods } from \"./mods/init_wl_mods\";\r\n\r\nexport function initWLPlugins(engine) {\r\n    initWLExtensions(engine);\r\n    initWLMods();\r\n}", "import { initJSPlugins } from \"./js/init_js_plugins\";\r\nimport { initWLPlugins } from \"./wl/init_wl_plugins\";\r\n\r\nexport function initPlugins(engine) {\r\n    initJSPlugins();\r\n    initWLPlugins(engine);\r\n}", "import { ARCamera8thwall, Cursor, CursorTarget, DebugObject, DeviceOrientationLook, FingerCursor, FixedFoveation, HandTracking, HitTestLocation, HowlerAudioListener, HowlerAudioSource, ImageTexture, MouseLookComponent, PlayerHeight, TargetFramerate, TeleportComponent, Trail, TwoJointIkSolver, VideoTexture, VrModeActiveSwitch, Vrm, WasdControlsComponent } from \"@wonderlandengine/components\";\r\n\r\nexport function registerWLComponents(engine) {\r\n    engine.registerComponent(ARCamera8thwall, Cursor, CursorTarget, DebugObject, DeviceOrientationLook, FingerCursor, FixedFoveation, HandTracking, HitTestLocation, HowlerAudioListener, HowlerAudioSource, ImageTexture, MouseLookComponent, PlayerHeight, TargetFramerate, TeleportComponent, Trail, TwoJointIkSolver, VideoTexture, VrModeActiveSwitch, Vrm, WasdControlsComponent);\r\n}", "import { AddPPToWindowComponent, AddWLToWindowComponent, AdjustHierarchyPhysXScaleComponent, AudioManagerComponent, BenchmarkMaxPhysXComponent, BenchmarkMaxVisibleTrianglesComponent, CADisplayLeaderboardComponent, CharacterCollisionSystemComponent, CharacterControllerComponent, ClearConsoleOnXRSessionStartComponent, ConsoleVRToolComponent, CopyHandTransformComponent, CopyHeadTransformComponent, CopyPlayerPivotTransformComponent, CopyPlayerTransformComponent, DebugArrayFunctionsPerformanceAnalyzerComponent, DebugFunctionsPerformanceAnalyzerComponent, DebugManagerComponent, DebugPPFunctionsPerformanceAnalyzerComponent, DebugTransformComponent, DebugWLComponentsFunctionsPerformanceAnalyzerComponent, DebugWLFunctionsPerformanceAnalyzerComponent, EasyLightAttenuationComponent, EasyLightColorComponent, EasyMeshAmbientFactorComponent, EasyMeshColorComponent, EasyScaleComponent, EasySetTuneTargeetGrabComponent, EasySetTuneTargetChildNumberComponent, EasyTextColorComponent, EasyTransformComponent, EasyTuneImportVariablesComponent, EasyTuneToolComponent, EnableDebugsComponent, EnableToolsComponent, FingerCursorComponent, GamepadControlSchemeComponent, GamepadMeshAnimatorComponent, GetDefaultResourcesComponent, GetPlayerObjectsComponent, GlobalGravityComponent, GrabbableComponent, GrabberHandComponent, InitConsoleVRComponent, InitEasyTuneVariablesComponent, InputManagerComponent, MuteEverythingComponent, PPGatewayComponent, PlayerCharacterControllerComponent, PlayerHandCharacterControllerComponent, PlayerHeadCharacterControllerComponent, PlayerHeadControllerComponent, PlayerLocomotionComponent, PlayerLocomotionGravityComponent, PlayerLocomotionRotateComponent, PlayerLocomotionSmoothComponent, PlayerLocomotionTeleportComponent, PlayerViewOcclusionComponent, SetActiveComponent, SetHandLocalTransformComponent, SetHeadLocalTransformComponent, SetHeadNonVRLocalTransformComponent, SetHeadVRLocalTransformComponent, SetPlayerHeightComponent, SetTrackedHandJointLocalTransformComponent, ShowFPSComponent, SpatialAudioListenerComponent, SwitchHandObjectComponent, ToolCursorComponent, TrackedHandDrawAllJointsComponent, TrackedHandDrawJointComponent, TrackedHandDrawSkinComponent, VirtualGamepadComponent, VisualManagerComponent } from \"../index\";\r\n\r\nexport function registerPPComponents(engine) {\r\n    engine.registerComponent(AddPPToWindowComponent, AddWLToWindowComponent, AdjustHierarchyPhysXScaleComponent, AudioManagerComponent, BenchmarkMaxPhysXComponent, BenchmarkMaxVisibleTrianglesComponent, CADisplayLeaderboardComponent, CharacterCollisionSystemComponent, CharacterControllerComponent, ClearConsoleOnXRSessionStartComponent, ConsoleVRToolComponent, CopyHandTransformComponent, CopyHeadTransformComponent, CopyPlayerPivotTransformComponent, CopyPlayerTransformComponent, DebugArrayFunctionsPerformanceAnalyzerComponent, DebugFunctionsPerformanceAnalyzerComponent, DebugManagerComponent, DebugPPFunctionsPerformanceAnalyzerComponent, DebugTransformComponent, DebugWLComponentsFunctionsPerformanceAnalyzerComponent, DebugWLFunctionsPerformanceAnalyzerComponent, EasyLightAttenuationComponent, EasyLightColorComponent, EasyMeshAmbientFactorComponent, EasyMeshColorComponent, EasyScaleComponent, EasySetTuneTargeetGrabComponent, EasySetTuneTargetChildNumberComponent, EasyTextColorComponent, EasyTransformComponent, EasyTuneImportVariablesComponent, EasyTuneToolComponent, EnableDebugsComponent, EnableToolsComponent, FingerCursorComponent, GamepadControlSchemeComponent, GamepadMeshAnimatorComponent, GetDefaultResourcesComponent, GetPlayerObjectsComponent, GlobalGravityComponent, GrabbableComponent, GrabberHandComponent, InitConsoleVRComponent, InitEasyTuneVariablesComponent, InputManagerComponent, MuteEverythingComponent, PPGatewayComponent, PlayerCharacterControllerComponent, PlayerHandCharacterControllerComponent, PlayerHeadCharacterControllerComponent, PlayerHeadControllerComponent, PlayerLocomotionComponent, PlayerLocomotionGravityComponent, PlayerLocomotionRotateComponent, PlayerLocomotionSmoothComponent, PlayerLocomotionTeleportComponent, PlayerViewOcclusionComponent, SetActiveComponent, SetHandLocalTransformComponent, SetHeadLocalTransformComponent, SetHeadNonVRLocalTransformComponent, SetHeadVRLocalTransformComponent, SetPlayerHeightComponent, SetTrackedHandJointLocalTransformComponent, ShowFPSComponent, SpatialAudioListenerComponent, SwitchHandObjectComponent, ToolCursorComponent, TrackedHandDrawAllJointsComponent, TrackedHandDrawJointComponent, TrackedHandDrawSkinComponent, VirtualGamepadComponent, VisualManagerComponent);\r\n}", "import { initPlugins } from \"../plugin/init_plugins\";\r\nimport { initEngine } from \"../cauldron/wl/engine_globals\";\r\nimport { registerWLComponents } from \"../cauldron/wl/register_wl_components\";\r\nimport { registerPPComponents } from \"./register_pp_components\";\r\n\r\nexport function initPP(engine) {\r\n    registerWLComponents(engine);\r\n    registerPPComponents(engine);\r\n\r\n    initEngine(engine);\r\n\r\n    initPlugins(engine);\r\n}", "export class PlayerObjects {\r\n\r\n    constructor() {\r\n        this.myPlayer = null;\r\n        this.myPlayerPivot = null;\r\n\r\n        this.myCameraNonVR = null;\r\n        this.myHeadNonVR = null;\r\n        this.myHeadVR = null;\r\n        this.myHead = null;\r\n\r\n        this.myEyeLeft = null;\r\n        this.myEyeRight = null;\r\n        this.myEyes = [];\r\n\r\n        this.myHandLeft = null;\r\n        this.myHandRight = null;\r\n        this.myHands = [];\r\n    }\r\n}", "import { getMainEngine } from \"../cauldron/wl/engine_globals\";\r\n\r\nlet _myPlayerObjectsContainer = new WeakMap();\r\n\r\nexport function getPlayerObjects(engine = getMainEngine()) {\r\n    return _myPlayerObjectsContainer.get(engine);\r\n}\r\n\r\nexport function setPlayerObjects(playerObjects, engine = getMainEngine()) {\r\n    _myPlayerObjectsContainer.set(engine, playerObjects);\r\n}\r\n\r\nexport function removePlayerObjects(engine = getMainEngine()) {\r\n    _myPlayerObjectsContainer.delete(engine);\r\n}\r\n\r\nexport function hasPlayerObjects(engine = getMainEngine()) {\r\n    return _myPlayerObjectsContainer.has(engine);\r\n}", "export class DefaultResources {\r\n\r\n    constructor() {\r\n        this.myMeshes = new DefaultResourcesMeshes();\r\n        this.myMaterials = new DefaultResourcesMaterials();\r\n    }\r\n}\r\n\r\nexport class DefaultResourcesMeshes {\r\n\r\n    constructor() {\r\n        this.myPlane = null;\r\n        this.myCube = null;\r\n        this.mySphere = null;\r\n        this.myCone = null;\r\n        this.myCylinder = null;\r\n        this.myCircle = null;\r\n\r\n        this.myInvertedCube = null;\r\n        this.myInvertedSphere = null;\r\n        this.myInvertedCone = null;\r\n        this.myInvertedCylinder = null;\r\n    }\r\n}\r\n\r\nexport class DefaultResourcesMaterials {\r\n\r\n    constructor() {\r\n        this.myFlatOpaque = null;\r\n        this.myFlatTransparentNoDepth = null; // For now the pipeline needs to be the last one to make this work properly\r\n        this.myPhongOpaque = null;\r\n        this.myText = null;\r\n    }\r\n}", "import { getMainEngine } from \"../cauldron/wl/engine_globals\";\r\n\r\nlet _myDefaultResourcesContainer = new WeakMap();\r\n\r\nexport function getDefaultResources(engine = getMainEngine()) {\r\n    return _myDefaultResourcesContainer.get(engine);\r\n}\r\n\r\nexport function setDefaultResources(defaultResources, engine = getMainEngine()) {\r\n    _myDefaultResourcesContainer.set(engine, defaultResources);\r\n}\r\n\r\nexport function removeDefaultResources(engine = getMainEngine()) {\r\n    _myDefaultResourcesContainer.delete(engine);\r\n}\r\n\r\nexport function hasDefaultResources(engine = getMainEngine()) {\r\n    return _myDefaultResourcesContainer.has(engine);\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { AddPPToWindowComponent } from \"./add_pp_to_window_component\";\r\nimport { AudioManagerComponent } from \"../../audio/components/audio_manager_component\";\r\nimport { VisualManagerComponent } from \"../../cauldron/visual/components/visual_manager_component\";\r\nimport { AddWLToWindowComponent } from \"../../cauldron/wl/components/add_wl_to_window_component\";\r\nimport { DebugManagerComponent } from \"../../debug/components/debug_manager_component\";\r\nimport { InputManagerComponent } from \"../../input/cauldron/components/input_manager_component\";\r\nimport { EnableToolsComponent } from \"../../tool/cauldron/components/enable_tools_component\";\r\nimport { EnableDebugsComponent } from \"../../debug/components/enable_debugs_component\";\r\nimport { GetDefaultResourcesComponent } from \"./get_default_resources_component\";\r\nimport { GetPlayerObjectsComponent } from \"./get_player_objects_component\";\r\nimport { InitEasyTuneVariablesComponent } from \"../../tool/easy_tune/components/init_easy_tune_variables_component\";\r\n\r\nexport class PPGatewayComponent extends Component {\r\n    static TypeName = \"pp-gateway\";\r\n    static Properties = {\r\n        _myEnableDebugs: Property.bool(true),\r\n        _myEnableTools: Property.bool(true),\r\n        _myAddPPToWindow: Property.bool(true),\r\n        _myAddWLToWindow: Property.bool(true),\r\n        _myInitEasyTuneVariables: Property.bool(true),\r\n        ...InputManagerComponent.Properties,\r\n        ...AudioManagerComponent.Properties,\r\n        ...VisualManagerComponent.Properties,\r\n        ...DebugManagerComponent.Properties,\r\n        ...GetPlayerObjectsComponent.Properties,\r\n        ...GetDefaultResourcesComponent.Properties\r\n    };\r\n\r\n    init() {\r\n        this._myEnableDebugsComponent = null;\r\n        if (this._myEnableDebugs) {\r\n            this._myEnableDebugsComponent = this.object.pp_addComponent(EnableDebugsComponent, false);\r\n        }\r\n\r\n        this._myEnableToolsComponent = null;\r\n        if (this._myEnableTools) {\r\n            this._myEnableToolsComponent = this.object.pp_addComponent(EnableToolsComponent, false);\r\n        }\r\n\r\n        this._myAddPPToWindowComponent = null;\r\n        if (this._myAddPPToWindow) {\r\n            this._myAddPPToWindowComponent = this.object.pp_addComponent(AddPPToWindowComponent, false);\r\n        }\r\n\r\n        this._myAddWLToWindowComponent = null;\r\n        if (this._myAddWLToWindow) {\r\n            this._myAddWLToWindowComponent = this.object.pp_addComponent(AddWLToWindowComponent, false);\r\n        }\r\n\r\n        this._myInitEasyTuneVariablesComponent = null;\r\n        if (this._myInitEasyTuneVariables) {\r\n            this._myInitEasyTuneVariablesComponent = this.object.pp_addComponent(InitEasyTuneVariablesComponent, false);\r\n        }\r\n\r\n        this._myInputManagerComponent = this.object.pp_addComponent(InputManagerComponent, this._getProperties(InputManagerComponent.Properties));\r\n        this._myAudioManagerComponent = this.object.pp_addComponent(AudioManagerComponent, false);\r\n        this._myVisualManagerComponent = this.object.pp_addComponent(VisualManagerComponent, false);\r\n        this._myDebugManagerComponent = this.object.pp_addComponent(DebugManagerComponent, false);\r\n\r\n        this._myGetDefaultResourcesComponent = this.object.pp_addComponent(GetDefaultResourcesComponent, this._getProperties(GetDefaultResourcesComponent.Properties));\r\n        this._myGetPlayerObjectsComponent = this.object.pp_addComponent(GetPlayerObjectsComponent, this._getProperties(GetPlayerObjectsComponent.Properties));\r\n    }\r\n\r\n    start() {\r\n        if (this._myEnableDebugsComponent != null) {\r\n            this._myEnableDebugsComponent.active = true;\r\n        }\r\n\r\n        if (this._myEnableToolsComponent != null) {\r\n            this._myEnableToolsComponent.active = true;\r\n        }\r\n\r\n        if (this._myAddPPToWindowComponent != null) {\r\n            this._myAddPPToWindowComponent.active = true;\r\n        }\r\n\r\n        if (this._myAddWLToWindowComponent != null) {\r\n            this._myAddWLToWindowComponent.active = true;\r\n        }\r\n\r\n        if (this._myInitEasyTuneVariablesComponent != null) {\r\n            this._myInitEasyTuneVariablesComponent.active = true;\r\n        }\r\n\r\n        this._myInputManagerComponent.active = true;\r\n        this._myAudioManagerComponent.active = true;\r\n        this._myVisualManagerComponent.active = true;\r\n        this._myDebugManagerComponent.active = true;\r\n\r\n        this._myGetDefaultResourcesComponent.active = true;\r\n        this._myGetPlayerObjectsComponent.active = true;\r\n    }\r\n\r\n    _getProperties(propertiesToGet, active = false) {\r\n        let properties = {};\r\n        properties[\"active\"] = active;\r\n        let propertyNames = Object.getOwnPropertyNames(propertiesToGet);\r\n\r\n        for (let propertyName of propertyNames) {\r\n            if (this[propertyName] != undefined) {\r\n                properties[propertyName] = this[propertyName];\r\n            }\r\n        }\r\n\r\n        return properties;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport * as PPAPI from \"../../index\";\r\n\r\nexport class AddPPToWindowComponent extends Component {\r\n    static TypeName = \"pp-add-pp-to-window\";\r\n    static Properties = {\r\n        _myAdd: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        if (this._myAdd) {\r\n            window.PP = {};\r\n            this._addProperties(PPAPI);\r\n        }\r\n    }\r\n\r\n    _addProperties(object) {\r\n        let propertyNames = Object.getOwnPropertyNames(object);\r\n        for (let propertyName of propertyNames) {\r\n            if (object[propertyName] != undefined) {\r\n                window.PP[propertyName] = object[propertyName];\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { AudioManager } from \"../audio_manager\";\r\nimport { getAudioManager, hasAudioManager, removeAudioManager, setAudioManager } from \"../audio_manager_global\";\r\n\r\nexport class AudioManagerComponent extends Component {\r\n    static TypeName = \"pp-audio-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myAudioManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasAudioManager(this.engine)) {\r\n            this._myAudioManager = new AudioManager();\r\n\r\n            setAudioManager(this._myAudioManager, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myAudioManager != null && getAudioManager(this.engine) == this._myAudioManager) {\r\n            removeAudioManager(this.engine);\r\n        }\r\n    }\r\n}", "import { Howler } from \"howler\";\r\nimport { AudioPlayer } from \"./audio_player\";\r\n\r\nexport class AudioManager {\r\n\r\n    constructor() {\r\n        this._myAudioSetups = new Map();\r\n    }\r\n\r\n    createAudioPlayer(audioSetupID) {\r\n        let audioSetup = this.getAudioSetup(audioSetupID);\r\n        if (audioSetup != null) {\r\n            return new AudioPlayer(this.getAudioSetup(audioSetupID));\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAudioSetup(id) {\r\n        return this._myAudioSetups.get(id);\r\n    }\r\n\r\n    addAudioSetup(id, audioSetup, preload = true) {\r\n        this._myAudioSetups.set(id, audioSetup);\r\n        if (preload) {\r\n            this.createAudioPlayer(id);\r\n        }\r\n    }\r\n\r\n    removeAudioSetup(id) {\r\n        this._myAudioSetups.delete(id);\r\n    }\r\n\r\n    setVolume(volume) {\r\n        Howler.volume(volume);\r\n    }\r\n\r\n    setMute(mute) {\r\n        Howler.mute(mute);\r\n    }\r\n\r\n    stop() {\r\n        Howler.stop();\r\n    }\r\n}", "import { Howl } from \"howler\";\r\nimport { AudioSetup } from \"./audio_setup\";\r\n\r\nexport let AudioEvent = {\r\n    END: \"end\",\r\n    STOP: \"stop\",\r\n    LOAD: \"load\",\r\n    LOAD_ERROR: \"loaderror\",\r\n    PLAY: \"play\",\r\n    PLAY_ERROR: \"playerror\",\r\n    PAUSE: \"pause\",\r\n    MUTE: \"mute\",\r\n    VOLUME: \"volume\",\r\n    RATE: \"rate\",\r\n    SEEK: \"seek\",\r\n    FADE: \"fade\",\r\n    UNLOCK: \"unlock\"\r\n};\r\n\r\nexport class AudioPlayer {\r\n\r\n    constructor(audioSetupOrAudioFilePath, createAudio = true) {\r\n        if (audioSetupOrAudioFilePath == null) {\r\n            this._myAudioSetup = new AudioSetup();\r\n        } else if (typeof audioSetupOrAudioFilePath === \"string\") {\r\n            this._myAudioSetup = new AudioSetup(audioSetupOrAudioFilePath);\r\n        } else {\r\n            this._myAudioSetup = audioSetupOrAudioFilePath.clone();\r\n        }\r\n\r\n        this._myAudio = null;\r\n\r\n        if (createAudio) {\r\n            this._myAudio = new Howl({\r\n                src: [this._myAudioSetup.myAudioFilePath],\r\n                loop: this._myAudioSetup.myLoop,\r\n                volume: this._myAudioSetup.myVolume,\r\n                autoplay: this._myAudioSetup.myAutoplay,\r\n                rate: this._myAudioSetup.myRate,\r\n                pool: this._myAudioSetup.myPool,\r\n                pos: (this._myAudioSetup.mySpatial) ? this._myAudioSetup.myPosition : null,\r\n                refDistance: this._myAudioSetup.myReferenceDistance,\r\n                preload: this._myAudioSetup.myPreload\r\n            });\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n        }\r\n\r\n        this._myLastAudioID = null;\r\n\r\n        this._myCallbacks = new Map();\r\n        for (let eventKey in AudioEvent) {\r\n            this._myCallbacks.set(AudioEvent[eventKey], new Map());    // Signature: callback(audioID)\r\n        }\r\n\r\n        if (createAudio) {\r\n            this._addListeners();\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return this._myAudio != null;\r\n    }\r\n\r\n    play() {\r\n        if (Howler.state != \"running\" && this._myAudioSetup.myPreventPlayWhenAudioContextNotRunning) {\r\n            return false;\r\n        }\r\n\r\n        let audioID = this._myAudio.play();\r\n        if (audioID != null) {\r\n            this._myLastAudioID = audioID;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition, true);\r\n            this.updatePitch(this._myAudioSetup.myPitch, true);\r\n            this.updateVolume(this._myAudioSetup.myVolume, true);\r\n        }\r\n\r\n        return audioID != null;\r\n    }\r\n\r\n    stop() {\r\n        this._myAudio.stop();\r\n    }\r\n\r\n    pause() {\r\n        this._myAudio.pause();\r\n    }\r\n\r\n    resume() {\r\n        this._myAudio.play();\r\n    }\r\n\r\n    isPlaying(checkOnlyLast = false) {\r\n        let isPlaying = false;\r\n\r\n        if (checkOnlyLast) {\r\n            isPlaying = this._myAudio.playing(this._myLastAudioID);\r\n        }\r\n        else {\r\n            isPlaying = this._myAudio.playing();\r\n        }\r\n\r\n        return isPlaying;\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._myAudio.state() == \"loaded\";\r\n    }\r\n\r\n    fade(fromVolume, toVolume, duration, updateOnlyLast = false) {\r\n        this.setVolume(toVolume);\r\n\r\n        if (updateOnlyLast) {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000, this._myLastAudioID);\r\n        } else {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000);\r\n        }\r\n    }\r\n\r\n    updatePosition(position, updateOnlyLast = false) {\r\n        this.setPosition(position);\r\n\r\n        if (this._myAudioSetup.mySpatial && position) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.pos(position[0], position[1], position[2], this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.pos(position[0], position[1], position[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePitch(pitch, updateOnlyLast = false) {\r\n        this.updateRate(pitch, updateOnlyLast);\r\n    }\r\n\r\n    updateRate(rate, updateOnlyLast = false) {\r\n        this.setRate(rate);\r\n\r\n        if (rate != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.rate(rate, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.rate(rate);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVolume(volume, updateOnlyLast = false) {\r\n        this.setVolume(volume);\r\n\r\n        if (volume != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.volume(volume, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.volume(volume);\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpatial(spatial) {\r\n        this._myAudioSetup.mySpatial = spatial;\r\n    }\r\n\r\n    setPosition(position) {\r\n        this._myAudioSetup.myPosition = position;\r\n    }\r\n\r\n    setPitch(pitch) {\r\n        this._myAudioSetup.myPitch = pitch;\r\n    }\r\n\r\n    setRate(rate) {\r\n        this._myAudioSetup.myRate = rate;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        this._myAudioSetup.myVolume = volume;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myAudio.duration();\r\n    }\r\n\r\n    getVolume() {\r\n        return this._myAudioSetup.myVolume;\r\n    }\r\n\r\n    getPitch() {\r\n        return this._myAudioSetup.myPitch;\r\n    }\r\n\r\n    getRate() {\r\n        return this._myAudioSetup.myRate;\r\n    }\r\n\r\n    registerAudioEventListener(audioEvent, listenerID, callback) {\r\n        this._myCallbacks.get(audioEvent).set(listenerID, callback);\r\n    }\r\n\r\n    unregisterAudioEventListener(audioEvent, listenerID) {\r\n        this._myCallbacks.get(audioEvent).delete(listenerID);\r\n    }\r\n\r\n    _addListeners() {\r\n        if (this._myAudio != null) {\r\n            for (let eventKey in AudioEvent) {\r\n                let event = AudioEvent[eventKey];\r\n                this._myAudio.on(event, function (audioID) {\r\n                    let callbacks = this._myCallbacks.get(event);\r\n                    for (let callback of callbacks.values()) {\r\n                        callback(audioID);\r\n                    }\r\n                }.bind(this));\r\n            }\r\n        }\r\n    }\r\n}", "export class AudioSetup {\r\n\r\n    constructor(audioFilePath = null) {\r\n        this.myAudioFilePath = (audioFilePath) ? audioFilePath.slice(0) : null;\r\n\r\n        this.myLoop = false;\r\n        this.myAutoplay = false;\r\n\r\n        this.myVolume = 1.0;\r\n        this._myRate = 1.0; // From 0.5 to 4.0\r\n\r\n        this.myPool = 5;\r\n        this.myPreload = true;\r\n\r\n        this.myPreventPlayWhenAudioContextNotRunning = false;\r\n\r\n        // Spatial Setup\r\n\r\n        this.myPosition = null;\r\n        this.mySpatial = true;\r\n        this.myReferenceDistance = 1.0; // At this distance (and closer) the volume is not reduced\r\n    }\r\n\r\n    clone() {\r\n        let audioSetup = new AudioSetup();\r\n\r\n        audioSetup.myAudioFilePath = this.myAudioFilePath.slice(0);\r\n\r\n        audioSetup.myLoop = this.myLoop;\r\n        audioSetup.myAutoplay = this.myAutoplay;\r\n\r\n        audioSetup.myVolume = this.myVolume;\r\n        audioSetup.myPitch = this.myPitch;\r\n        audioSetup.myRate = this.myRate;\r\n\r\n        audioSetup.myPool = this.myPool;\r\n        audioSetup.myPreload = this.myPreload;\r\n\r\n        audioSetup.myPreventPlayWhenAudioContextNotRunning = this.myPreventPlayWhenAudioContextNotRunning;\r\n\r\n        // Spatial\r\n\r\n        if (this.myPosition != null) {\r\n            audioSetup.myPosition = this.myPosition.vec3_clone();\r\n        } else {\r\n            audioSetup.myPosition = null;\r\n        }\r\n\r\n        audioSetup.mySpatial = this.mySpatial;\r\n        audioSetup.myReferenceDistance = this.myReferenceDistance;\r\n\r\n        return audioSetup;\r\n    }\r\n\r\n    get myPitch() {\r\n        return this._myRate;\r\n    }\r\n\r\n    get myRate() {\r\n        return this._myRate;\r\n    }\r\n\r\n    set myPitch(pitch) {\r\n        this._myRate = pitch;\r\n    }\r\n\r\n    set myRate(rate) {\r\n        this._myRate = rate;\r\n    }\r\n}", "import { getMainEngine } from \"../cauldron/wl/engine_globals\";\r\n\r\nlet _myAudioManagers = new WeakMap();\r\n\r\nexport function getAudioManager(engine = getMainEngine()) {\r\n    return _myAudioManagers.get(engine);\r\n}\r\n\r\nexport function setAudioManager(audioManager, engine = getMainEngine()) {\r\n    _myAudioManagers.set(engine, audioManager);\r\n}\r\n\r\nexport function removeAudioManager(engine = getMainEngine()) {\r\n    _myAudioManagers.delete(engine);\r\n}\r\n\r\nexport function hasAudioManager(engine = getMainEngine()) {\r\n    return _myAudioManagers.has(engine);\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { VisualData } from \"../visual_data\";\r\nimport { getVisualData, getVisualManager, hasVisualData, hasVisualManager, removeVisualData, removeVisualManager, setVisualData, setVisualManager } from \"../visual_globals\";\r\nimport { VisualManager } from \"../visual_manager\";\r\n\r\nexport class VisualManagerComponent extends Component {\r\n    static TypeName = \"pp-visual-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myVisualManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasVisualManager(this.engine)) {\r\n            this._myVisualManager = new VisualManager(this.engine);\r\n\r\n            setVisualManager(this._myVisualManager, this.engine);\r\n        }\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasVisualData(this.engine)) {\r\n            this._myVisualData = new VisualData();\r\n            this._myVisualData.myRootObject = this.engine.scene.pp_addObject();\r\n\r\n            setVisualData(this._myVisualData, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myVisualData != null) {\r\n            this._myVisualData.myDefaultMaterials.myMesh = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n\r\n            this._myVisualData.myDefaultMaterials.myText = getDefaultResources(this.engine).myMaterials.myText.clone();\r\n\r\n            this._myVisualData.myDefaultMaterials.myRight = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            this._myVisualData.myDefaultMaterials.myRight.color = vec4_create(1, 0, 0, 1);\r\n            this._myVisualData.myDefaultMaterials.myUp = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            this._myVisualData.myDefaultMaterials.myUp.color = vec4_create(0, 1, 0, 1);\r\n            this._myVisualData.myDefaultMaterials.myForward = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            this._myVisualData.myDefaultMaterials.myForward.color = vec4_create(0, 0, 1, 1);\r\n\r\n            this._myVisualData.myDefaultMaterials.myRay = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            this._myVisualData.myDefaultMaterials.myRay.color = vec4_create(0, 1, 0, 1);\r\n            this._myVisualData.myDefaultMaterials.myHitNormal = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            this._myVisualData.myDefaultMaterials.myHitNormal.color = vec4_create(1, 0, 0, 1);\r\n        }\r\n\r\n        if (this.myVisualManager != null) {\r\n            this.myVisualManager.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.myVisualManager != null) {\r\n            this.myVisualManager.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myVisualManager != null && getVisualManager(this.engine) == this._myVisualManager) {\r\n            removeVisualManager(this.engine);\r\n        }\r\n\r\n        if (this._myVisualData != null && getVisualData(this.engine) == this._myVisualData) {\r\n            removeVisualData(this.engine);\r\n        }\r\n    }\r\n}", "export class VisualData {\r\n\r\n    constructor() {\r\n        this.myRootObject = null;\r\n        this.myDefaultMaterials = new VisualDataMaterials();\r\n    }\r\n}\r\n\r\nexport class VisualDataMaterials {\r\n\r\n    constructor() {\r\n        this.myMesh = null;\r\n        this.myText = null;\r\n        this.myRight = null;\r\n        this.myUp = null;\r\n        this.myForward = null;\r\n        this.myRay = null;\r\n        this.myHitNormal = null;\r\n    }\r\n}", "import { getMainEngine } from \"../wl/engine_globals\";\r\n\r\nlet _myVisualDatas = new WeakMap();\r\nlet _myVisualManagers = new WeakMap();\r\n\r\nexport function getVisualData(engine = getMainEngineinEngine()) {\r\n    return _myVisualDatas.get(engine);\r\n}\r\n\r\nexport function setVisualData(visualData, engine = getMainEngine()) {\r\n    _myVisualDatas.set(engine, visualData);\r\n}\r\n\r\nexport function removeVisualData(engine = getMainEngine()) {\r\n    _myVisualDatas.delete(engine);\r\n}\r\n\r\nexport function hasVisualData(engine = getMainEngine()) {\r\n    return _myVisualDatas.has(engine);\r\n}\r\n\r\nexport function getVisualManager(engine = getMainEngine()) {\r\n    return _myVisualManagers.get(engine);\r\n}\r\n\r\nexport function setVisualManager(visualManager, engine = getMainEngine()) {\r\n    _myVisualManagers.set(engine, visualManager);\r\n}\r\n\r\nexport function removeVisualManager(engine = getMainEngine()) {\r\n    _myVisualManagers.delete(engine);\r\n}\r\n\r\nexport function hasVisualManager(engine = getMainEngine()) {\r\n    return _myVisualManagers.has(engine);\r\n}", "export class ObjectPoolParams {\r\n\r\n    constructor() {\r\n        this.myInitialPoolSize = 0;\r\n        this.myAmountToAddWhenEmpty = 0;        // If all the objects are busy, this amount will be added to the pool\r\n        this.myPercentageToAddWhenEmpty = 0;    // If all the objects are busy, this percentage of the current pool size will be added to the pool        \r\n\r\n        this.myCloneParams = undefined;\r\n\r\n        this.myOptimizeObjectsAllocation = true;    // If true it will pre-allocate the memory before adding new objects to the pool\r\n\r\n        // These extra functions can be used if u want to use the pool with objects that are not from WL (WL Object)\r\n        this.myCloneCallback = undefined;                       // Signature: callback(object, cloneParams) -> clonedObject\r\n        this.mySetActiveCallback = undefined;                   // Signature: callback(object, active)\r\n        this.myEqualCallback = undefined;                       // Signature: callback(firstObject, secondObject) -> bool\r\n        this.myOptimizeObjectsAllocationCallback = undefined;   // Signature: callback(object, numberOfObjectsToAllocate)\r\n\r\n        this.myDebugLogActive = false;\r\n    }\r\n}\r\n\r\nexport class ObjectPool {\r\n\r\n    constructor(poolObject, objectPoolParams) {\r\n        this._myObjectPoolParams = objectPoolParams;\r\n        this._myPrototype = this._clone(poolObject);\r\n\r\n        this._myAvailableObjects = [];\r\n        this._myBusyObjects = [];\r\n\r\n        this._addToPool(objectPoolParams.myInitialPoolSize, false);\r\n    }\r\n\r\n    get() {\r\n        let object = this._myAvailableObjects.shift();\r\n\r\n        if (object == null) {\r\n            let amountToAdd = Math.ceil(this._myBusyObjects.length * this._myObjectPoolParams.myPercentageToAddWhenEmpty);\r\n            amountToAdd += this._myObjectPoolParams.myAmountToAddWhenEmpty;\r\n            this._addToPool(amountToAdd, this._myObjectPoolParams.myDebugLogActive);\r\n            object = this._myAvailableObjects.shift();\r\n        }\r\n\r\n        // Object could still be null if the amountToAdd is 0\r\n        if (object != null) {\r\n            this._myBusyObjects.push(object);\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    release(object) {\r\n        let released = this._myBusyObjects.pp_remove(this._equals.bind(this, object));\r\n        if (released) {\r\n            this._setActive(released, false);\r\n            this._myAvailableObjects.push(released);\r\n        }\r\n    }\r\n\r\n    increase(amount) {\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    increasePercentage(percentage) {\r\n        let amount = Math.ceil((this.getSize()) * percentage);\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    getSize() {\r\n        return this._myBusyObjects.length + this._myAvailableObjects.length;\r\n    }\r\n\r\n    getAvailableSize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    getBusySize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    _addToPool(size, log) {\r\n        if (size <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._myObjectPoolParams.myOptimizeObjectsAllocation) {\r\n            if (this._myObjectPoolParams.myOptimizeObjectsAllocationCallback) {\r\n                this._myObjectPoolParams.myOptimizeObjectsAllocationCallback(this._myPrototype, size);\r\n            } else if (this._myPrototype.pp_reserveObjects != null) {\r\n                this._myPrototype.pp_reserveObjects(size);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            this._myAvailableObjects.push(this._clone(this._myPrototype));\r\n        }\r\n\r\n        if (log) {\r\n            console.warn(\"Added new elements to the pool:\", size);\r\n        }\r\n    }\r\n\r\n    _clone(object) {\r\n        let clone = null;\r\n\r\n        if (this._myObjectPoolParams.myCloneCallback != null) {\r\n            clone = this._myObjectPoolParams.myCloneCallback(object, this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.pp_clone != null) {\r\n            clone = object.pp_clone(this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.clone != null) {\r\n            clone = object.clone(this._myObjectPoolParams.myCloneParams);\r\n        }\r\n\r\n        if (clone == null) {\r\n            console.error(\"Object not cloneable, pool will return null\");\r\n        } else {\r\n            this._setActive(clone, false);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    _setActive(object, active) {\r\n        if (this._myObjectPoolParams.mySetActiveCallback != null) {\r\n            this._myObjectPoolParams.mySetActiveCallback(object, active);\r\n        } else if (object.pp_setActive != null) {\r\n            object.pp_setActive(active);\r\n        } else if (object.setActive != null) {\r\n            object.setActive(active);\r\n        }\r\n    }\r\n\r\n    _equals(first, second) {\r\n        let equals = false;\r\n\r\n        if (this._myObjectPoolParams.myEqualCallback != null) {\r\n            equals = this._myObjectPoolParams.myEqualCallback(first, second);\r\n        } else if (first.pp_equals != null) {\r\n            equals = first.pp_equals(second);\r\n        } else if (first.equals != null) {\r\n            equals = first.equals(second);\r\n        } else {\r\n            equals = first == second;\r\n        }\r\n\r\n        return equals;\r\n    }\r\n}", "import { ObjectPool, ObjectPoolParams } from \"./object_pool\";\r\n\r\nexport class ObjectPoolsManager {\r\n\r\n    constructor() {\r\n        this._myPools = new Map();\r\n    }\r\n\r\n    addPool(poolID, poolObject, objectPoolParams = new ObjectPoolParams()) {\r\n        if (!this._myPools.has(poolID)) {\r\n            let pool = new ObjectPool(poolObject, objectPoolParams);\r\n            this._myPools.set(poolID, pool);\r\n        } else {\r\n            console.error(\"Pool already created with this ID\");\r\n        }\r\n    }\r\n\r\n    increasePool(poolID, amount) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increase(amount);\r\n        }\r\n    }\r\n\r\n    increasePoolPercentage(poolID, percentage) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increasePercentage(percentage);\r\n        }\r\n    }\r\n\r\n    getPool(poolID) {\r\n        return this._myPools.get(poolID);\r\n    }\r\n\r\n    hasPool(poolID) {\r\n        return this._myPools.has(poolID);\r\n    }\r\n\r\n    getObject(poolID) {\r\n        if (this._myPools.has(poolID)) {\r\n            return this._myPools.get(poolID).get();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    releaseObject(poolIDOrObject, object) {\r\n        if (object === undefined) {\r\n            for (let pool of this._myPools.values()) {\r\n                pool.release(poolIDOrObject);\r\n            }\r\n        } else {\r\n            this._myPools.get(poolIDOrObject).release(object);\r\n        }\r\n    }\r\n}", "export let VisualElementType = {\r\n    MESH: 0,\r\n    LINE: 1,\r\n    POINT: 2,\r\n    TEXT: 3,\r\n    ARROW: 4,\r\n    TRANSFORM: 5,\r\n    RAYCAST: 6,\r\n    TORUS: 7\r\n};", "/*\r\nlet visualParams = new VisualLineParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualLine = new VisualLine(visualParams);\r\n*/\r\n\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\n\r\nexport class VisualLineParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myStart = vec3_create();\r\n        this.myDirection = vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myMesh = null;         // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.LINE;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualLine {\r\n\r\n    constructor(params = new VisualLineParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myLineRootObject = null;\r\n        this._myLineObject = null;\r\n        this._myLineMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myLineRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myLineRootObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n        this._myLineObject = this._myLineRootObject.pp_addObject();\r\n\r\n        this._myLineMeshComponent = this._myLineObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualLineParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualLine(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualLine.prototype._refresh = function () {\r\n    let scaleLine = vec3_create();\r\n    let translateLine = vec3_create();\r\n\r\n    let forward = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myLineRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineRootObject.pp_setPositionLocal(this._myParams.myStart);\r\n        } else {\r\n            this._myLineRootObject.pp_setPosition(this._myParams.myStart);\r\n        }\r\n\r\n        scaleLine.vec3_set(this._myParams.myThickness / 2, this._myParams.myLength / 2, this._myParams.myThickness / 2);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setScaleLocal(scaleLine);\r\n        } else {\r\n            this._myLineObject.pp_setScale(scaleLine);\r\n        }\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myLineObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        this._myLineObject.pp_resetPositionLocal();\r\n        translateLine.vec3_set(0, this._myParams.myLength / 2, 0);\r\n        this._myLineObject.pp_translateObject(translateLine);\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myLineMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myLineMeshComponent.mesh = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMeshes.myCylinder;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myLineMeshComponent.material = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myLineMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myLineMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    };\r\n}();\r\n\r\nVisualLineParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualArrowParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualArrow = new VisualArrow(visualParams);\r\n*/\r\n\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./visual_line\";\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\n\r\nexport class VisualArrowParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myStart = vec3_create();\r\n        this.myDirection = vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myLineMesh = null;     // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n        this.myArrowMesh = null;    // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCone\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.ARROW;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualArrow {\r\n\r\n    constructor(params = new VisualArrowParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualLine = new VisualLine(new VisualLineParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualLine.setAutoRefresh(false);\r\n\r\n        this._myArrowRootObject = null;\r\n        this._myArrowObject = null;\r\n        this._myArrowMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualLine.setVisible(visible);\r\n            this._myArrowRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualLine.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualLine.update(dt);\r\n    }\r\n\r\n    _build() {\r\n        this._myArrowRootObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n        this._myArrowObject = this._myArrowRootObject.pp_addObject();\r\n\r\n        this._myArrowMeshComponent = this._myArrowObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualArrowParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualArrow(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualArrow.prototype._refresh = function () {\r\n    let end = vec3_create();\r\n    let translateRoot = vec3_create();\r\n    let scaleArrow = vec3_create();\r\n    let direction = vec3_create();\r\n\r\n    let forward = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myArrowRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        this._myParams.myDirection.vec3_scale(Math.max(0.001, this._myParams.myLength - this._myParams.myThickness * 4), end);\r\n        end.vec3_add(this._myParams.myStart, end);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowRootObject.pp_setPositionLocal(end);\r\n            this._myArrowRootObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myArrowRootObject.pp_setPosition(end);\r\n            this._myArrowRootObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        translateRoot.vec3_set(0, this._myParams.myThickness * 2 - 0.00001, 0);\r\n        this._myArrowRootObject.pp_translateObject(translateRoot);\r\n\r\n        scaleArrow.vec3_set(this._myParams.myThickness * 1.25, this._myParams.myThickness * 2, this._myParams.myThickness * 1.25);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowObject.pp_setScaleLocal(scaleArrow);\r\n        } else {\r\n            this._myArrowObject.pp_setScale(scaleArrow);\r\n        }\r\n\r\n        if (this._myParams.myArrowMesh != null) {\r\n            this._myArrowMeshComponent.mesh = this._myParams.myArrowMesh;\r\n        } else {\r\n            this._myArrowMeshComponent.mesh = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMeshes.myCone;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myArrowMeshComponent.material = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myArrowMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myArrowMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        direction = end.vec3_sub(this._myParams.myStart, direction);\r\n        let visualLineParams = this._myVisualLine.getParams();\r\n        visualLineParams.myStart.vec3_copy(this._myParams.myStart);\r\n        visualLineParams.myDirection = direction.vec3_normalize(visualLineParams.myDirection);\r\n        visualLineParams.myLength = direction.vec3_length();\r\n        visualLineParams.myThickness = this._myParams.myThickness;\r\n        visualLineParams.myMesh = this._myParams.myLineMesh;\r\n\r\n        visualLineParams.myMaterial = this._myArrowMeshComponent.material;\r\n\r\n        visualLineParams.myParent = this._myParams.myParent;\r\n        visualLineParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        this._myVisualLine.paramsUpdated();\r\n    };\r\n}();\r\n\r\nVisualArrowParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myArrowMesh = other.myArrowMesh;\r\n    this.myLineMesh = other.myLineMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualMeshParams();\r\nvisualParams.myTransform = transform;\r\nvisualParams.myMesh = myDefaultResources.myMeshes.mySphere;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualMesh = new VisualMesh(visualParams);\r\n*/\r\n\r\nimport { mat4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualMeshParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n\r\n        this.myMesh = null;\r\n        this.myMaterial = null;\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.MESH;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualMesh {\r\n\r\n    constructor(params = new VisualMeshParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myMeshObject = null;\r\n        this._myMeshComponent = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myMeshObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myMeshObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myMeshObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myMeshObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMesh == null) {\r\n            this._myMeshComponent.mesh = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMeshes.mySphere;\r\n        } else {\r\n            this._myMeshComponent.mesh = this._myParams.myMesh;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            this._myMeshComponent.material = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n        } else {\r\n            this._myMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myMeshObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n\r\n        this._myMeshComponent = this._myMeshObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualMeshParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualMesh(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualMeshParams.prototype.copy = function copy(other) {\r\n    this.myTransform.pp_copy(other.myTransform);\r\n\r\n    if (other.myMesh != null) {\r\n        this.myMesh = other.myMesh;\r\n    } else {\r\n        this.myMesh = null;\r\n    }\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualPointParams();\r\nvisualParams.myPosition.vec3_copy(position);\r\nvisualParams.myRadius = 0.005;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualPoint = new VisualPoint(visualParams);\r\n*/\r\n\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\n\r\nexport class VisualPointParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPosition = vec3_create();\r\n        this.myRadius = 0.005;\r\n\r\n        this.myMesh = null;         // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.mySphere\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.POINT;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualPoint {\r\n\r\n    constructor(params = new VisualPointParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myPointObject = null;\r\n        this._myPointMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myPointObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myPointObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n\r\n        this._myPointMeshComponent = this._myPointObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualPointParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualPoint(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualPoint.prototype._refresh = function () {\r\n    let rotation = vec3_create(0, 0, 0);\r\n    return function _refresh() {\r\n        this._myPointObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myPointObject.pp_setPositionLocal(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotationLocal(rotation);\r\n            this._myPointObject.pp_setScaleLocal(this._myParams.myRadius);\r\n        } else {\r\n            this._myPointObject.pp_setPosition(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotation(rotation);\r\n            this._myPointObject.pp_setScale(this._myParams.myRadius);\r\n        }\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myPointMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myPointMeshComponent.mesh = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMeshes.mySphere;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myPointMeshComponent.material = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myPointMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myPointMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n}();\r\n\r\nVisualPointParams.prototype.copy = function copy(other) {\r\n    this.myPosition.vec3_copy(other.myPosition);\r\n    this.myRadius = other.myRadius;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "import { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { RaycastHit, RaycastResults, RaycastSetup } from \"./physics_raycast_data\";\r\n\r\nlet _myLayerFlagsNames = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\r\n\r\nexport function setLayerFlagsNames(layerFlagsNames) {\r\n    _myLayerFlagsNames = layerFlagsNames;\r\n}\r\n\r\nexport function getLayerFlagsNames() {\r\n    return _myLayerFlagsNames;\r\n}\r\n\r\nexport let raycast = function () {\r\n    let isInsideSubVector = vec3_create();\r\n    let invertedRaycastDirection = vec3_create();\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function raycast(raycastSetup, raycastResults = new RaycastResults()) {\r\n        let internalRaycastResults = raycastSetup.myPhysics.rayCast(raycastSetup.myOrigin, raycastSetup.myDirection, raycastSetup.myBlockLayerFlags.getMask(), raycastSetup.myDistance);\r\n\r\n        if (raycastResults.myRaycastSetup == null) {\r\n            raycastResults.myRaycastSetup = new RaycastSetup(raycastSetup.myPhysics);\r\n        }\r\n\r\n        raycastResults.myRaycastSetup.copy(raycastSetup);\r\n\r\n        let currentValidHitIndex = 0;\r\n        let validHitsCount = 0;\r\n\r\n        let hitCount = internalRaycastResults.hitCount;\r\n        if (hitCount != 0) {\r\n            let objects = null;\r\n            let distances = null;\r\n            let locations = null;\r\n            let normals = null;\r\n\r\n            invertedRaycastDirection = raycastSetup.myDirection.vec3_negate(invertedRaycastDirection);\r\n\r\n            for (let i = 0; i < hitCount; i++) {\r\n                if (raycastSetup.myObjectsToIgnore.length != 0) {\r\n                    if (objects == null) {\r\n                        objects = internalRaycastResults.objects;\r\n                    }\r\n\r\n                    if (raycastSetup.myObjectsToIgnore.pp_hasEqual(objects[i], objectsEqualCallback)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (distances == null) {\r\n                    distances = internalRaycastResults.distances;\r\n                }\r\n\r\n                let isHitInsideCollision = distances[i] == 0;\r\n                if (isHitInsideCollision) {\r\n                    if (locations == null) {\r\n                        locations = internalRaycastResults.locations;\r\n                    }\r\n\r\n                    isHitInsideCollision &&= raycastSetup.myOrigin.vec3_sub(locations[i], isInsideSubVector).vec3_isZero(Math.PP_EPSILON);\r\n\r\n                    if (isHitInsideCollision) {\r\n                        if (!normals) {\r\n                            normals = internalRaycastResults.normals;\r\n                        }\r\n\r\n                        isHitInsideCollision &&= invertedRaycastDirection.vec3_equals(normals[i], Math.PP_EPSILON_DEGREES);\r\n                    }\r\n                }\r\n\r\n                if (!raycastSetup.myIgnoreHitsInsideCollision || !isHitInsideCollision) {\r\n                    let hit = null;\r\n\r\n                    if (currentValidHitIndex < raycastResults.myHits.length) {\r\n                        hit = raycastResults.myHits[currentValidHitIndex];\r\n                    } else if (raycastResults._myUnusedHits != null && raycastResults._myUnusedHits.length > 0) {\r\n                        hit = raycastResults._myUnusedHits.pop();\r\n                        raycastResults.myHits.push(hit);\r\n                    } else {\r\n                        hit = new RaycastHit();\r\n                        raycastResults.myHits.push(hit);\r\n                    }\r\n\r\n                    if (objects == null) {\r\n                        objects = internalRaycastResults.objects;\r\n                    }\r\n\r\n                    if (locations == null) {\r\n                        locations = internalRaycastResults.locations;\r\n                    }\r\n\r\n                    if (normals == null) {\r\n                        normals = internalRaycastResults.normals;\r\n                    }\r\n\r\n                    hit.myPosition.vec3_copy(locations[i]);\r\n                    hit.myNormal.vec3_copy(normals[i]);\r\n                    hit.myDistance = distances[i];\r\n                    hit.myObject = objects[i];\r\n                    hit.myIsInsideCollision = isHitInsideCollision;\r\n\r\n                    validHitsCount++;\r\n                    currentValidHitIndex++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (raycastResults.myHits.length > validHitsCount) {\r\n            if (raycastResults._myUnusedHits == null) {\r\n                raycastResults._myUnusedHits = [];\r\n            }\r\n\r\n            let hitsToRemove = raycastResults.myHits.length - validHitsCount;\r\n            for (let i = 0; i < hitsToRemove; i++) {\r\n                raycastResults._myUnusedHits.push(raycastResults.myHits.pop());\r\n            }\r\n        }\r\n\r\n        return raycastResults;\r\n    };\r\n}();\r\n\r\nexport let PhysicsUtils = {\r\n    setLayerFlagsNames,\r\n    getLayerFlagsNames,\r\n    raycast\r\n};", "import { PhysicsUtils } from \"./physics_utils\";\r\n\r\nexport class PhysicsLayerFlags {\r\n\r\n    constructor() {\r\n        this._myLayerMask = 0;\r\n    }\r\n\r\n    setFlagActive(indexOrName, active) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        if (index >= 0 && index < PhysicsUtils.getLayerFlagsNames().length) {\r\n            let mask = 1 << index;\r\n\r\n            if (active) {\r\n                this._myLayerMask = this._myLayerMask | mask;\r\n            } else {\r\n                this._myLayerMask = this._myLayerMask & ~mask;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFlagActive(indexOrName) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        let isActive = false;\r\n\r\n        if (index >= 0 && index < PhysicsUtils.getLayerFlagsNames().length) {\r\n            let mask = 1 << index;\r\n            isActive = !!(this._myLayerMask & mask);\r\n        }\r\n\r\n        return isActive;\r\n    }\r\n\r\n    setAllFlagsActive(active) {\r\n        if (!active) {\r\n            this._myLayerMask = 0;\r\n        } else {\r\n            this._myLayerMask = Math.pow(2, PhysicsUtils.getLayerFlagsNames().length) - 1;\r\n        }\r\n    }\r\n\r\n    add(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask | layerFlags.getMask();\r\n    }\r\n\r\n    remove(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & ~(layerFlags.getMask());\r\n    }\r\n\r\n    intersect(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & layerFlags.getMask();\r\n    }\r\n\r\n    copy(layerFlags) {\r\n        this._myLayerMask = layerFlags._myLayerMask;\r\n    }\r\n\r\n    getMask() {\r\n        return this._myLayerMask;\r\n    }\r\n\r\n    setMask(layerMask) {\r\n        this._myLayerMask = layerMask;\r\n    }\r\n}", "/*\r\nlet raycastSetup = new RaycastSetup();\r\n\r\nraycastSetup.myOrigin.vec3_copy(origin);\r\nraycastSetup.myDirection.vec3_copy(direction);\r\nraycastSetup.myDistance = distance;\r\nraycastSetup.myBlockLayerFlags.setMask(flags);\r\nraycastSetup.myObjectsToIgnore.pp_clear();\r\nraycastSetup.myIgnoreHitsInsideCollision = false;\r\n\r\nlet raycastResults = PhysicsUtils.raycast(raycastSetup);\r\n*/\r\n\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../wl/engine_globals\";\r\nimport { PhysicsLayerFlags } from \"./physics_layer_flags\";\r\n\r\nexport class RaycastSetup {\r\n\r\n    constructor(physics = (getMainEngine() != null) ? getMainEngine().physics : null) {\r\n        this.myOrigin = vec3_create();\r\n        this.myDirection = vec3_create();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myObjectsToIgnore = [];\r\n        this.myIgnoreHitsInsideCollision = false;\r\n\r\n        this.myPhysics = physics;\r\n    }\r\n\r\n    copy(setup) {\r\n        this.myOrigin.vec3_copy(setup.myOrigin);\r\n        this.myDirection.vec3_copy(setup.myDirection);\r\n        this.myDistance = setup.myDistance;\r\n\r\n        this.myBlockLayerFlags.copy(setup.myBlockLayerFlags);\r\n\r\n        this.myObjectsToIgnore.pp_copy(setup.myObjectsToIgnore);\r\n        this.myIgnoreHitsInsideCollision = setup.myIgnoreHitsInsideCollision;\r\n\r\n        this.myPhysics = setup.myPhysics;\r\n    }\r\n\r\n    reset() {\r\n        this.myOrigin.vec3_zero();\r\n        this.myDirection.vec3_zero();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags.setAllFlagsActive(false);\r\n\r\n        this.myObjectsToIgnore.pp_clear();\r\n        this.myIgnoreHitsInsideCollision = false;\r\n    }\r\n}\r\n\r\nexport class RaycastResults {\r\n\r\n    constructor() {\r\n        this.myRaycastSetup = null;\r\n        this.myHits = [];\r\n\r\n        this._myUnusedHits = null;\r\n    }\r\n\r\n    isColliding(ignoreHitsInsideCollision = false) {\r\n        return ignoreHitsInsideCollision ? this.getFirstHitOutsideCollision() != null : this.myHits.length > 0;\r\n    }\r\n\r\n    getFirstHitInsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getFirstHitOutsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getHitsInsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    getHitsOutsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    removeHit(hitIndex) {\r\n        let removedHit = this.myHits.pp_removeIndex(hitIndex);\r\n\r\n        if (removedHit != null) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            this._myUnusedHits.push(removedHit);\r\n        }\r\n\r\n        return removedHit;\r\n    }\r\n\r\n    removeAllHits() {\r\n        if (this._myUnusedHits == null) {\r\n            this._myUnusedHits = [];\r\n        }\r\n\r\n        this._myUnusedHits.push(...this.myHits);\r\n\r\n        this.myHits.pp_clear();\r\n    }\r\n\r\n    copy(result) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    reset() {\r\n        if (this.myRaycastSetup != null) {\r\n            this.myRaycastSetup.reset();\r\n        }\r\n\r\n        this.removeAllHits();\r\n    }\r\n}\r\n\r\nexport class RaycastHit {\r\n\r\n    constructor() {\r\n        this.myPosition = vec3_create();\r\n        this.myNormal = vec3_create();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n\r\n        this.myIsInsideCollision = false;\r\n    }\r\n\r\n    isValid() {\r\n        return this.myObject != null;\r\n    }\r\n\r\n    copy(hit) {\r\n        this.myPosition.vec3_copy(hit.myPosition);\r\n        this.myNormal.vec3_copy(hit.myNormal);\r\n        this.myDistance = hit.myDistance;\r\n        this.myObject = hit.myObject;\r\n        this.myIsInsideCollision = hit.myIsInsideCollision;\r\n    }\r\n\r\n    reset() {\r\n        this.myPosition.vec3_zero();\r\n        this.myNormal.vec3_zero();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n        this.myIsInsideCollision = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nRaycastResults.prototype.copy = function () {\r\n    let copyHitCallback = function (currentElement, elementToCopy) {\r\n        if (currentElement == null) {\r\n            currentElement = new RaycastHit();\r\n        }\r\n\r\n        currentElement.copy(elementToCopy);\r\n\r\n        return currentElement;\r\n    };\r\n\r\n    return function copy(result) {\r\n        if (result.myRaycastSetup == null) {\r\n            this.myRaycastSetup = null;\r\n        } else {\r\n            if (this.myRaycastSetup == null) {\r\n                this.myRaycastSetup = new RaycastSetup(result.myRaycastSetup.myPhysics);\r\n            }\r\n\r\n            this.myRaycastSetup.copy(result.myRaycastSetup);\r\n        }\r\n\r\n        if (this.myHits.length > result.myHits.length) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            for (let i = 0; i < this.myHits.length - result.myHits.length; i++) {\r\n                this._myUnusedHits.push(this.myHits.pop());\r\n            }\r\n        } else if (this.myHits.length < result.myHits.length) {\r\n            if (this._myUnusedHits != null) {\r\n                let length = Math.min(this._myUnusedHits.length, result.myHits.length - this.myHits.length);\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    this.myHits.push(this._myUnusedHits.pop());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.myHits.pp_copy(result.myHits, copyHitCallback);\r\n    };\r\n}();", "/*\r\nlet visualParams = new VisualRaycastParams();\r\nvisualParams.myRaycastResults = raycastResults;\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualRaycast = new VisualRaycast(visualParams);\r\n*/\r\n\r\nimport { RaycastResults } from \"../../physics/physics_raycast_data\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { VisualArrow, VisualArrowParams } from \"./visual_arrow\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\n\r\nexport class VisualRaycastParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myRaycastResults = new RaycastResults();\r\n\r\n        this.myHitNormalLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myShowOnlyFirstHit = true;\r\n\r\n        this.myRayMaterial = null;\r\n        this.myHitNormalMaterial = null;\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.RAYCAST;\r\n    }\r\n\r\n    get myRaycastResults() {\r\n        return this._myRaycastResults;\r\n    }\r\n\r\n    set myRaycastResults(result) {\r\n        this._myRaycastResults.copy(result);\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualRaycast {\r\n\r\n    constructor(params = new VisualRaycastParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRaycast = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        this._myVisualRaycast.setAutoRefresh(false);\r\n\r\n        this._myVisualRaycastHitList = [];\r\n        this._addVisualRaycastHit();\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n                    this._myVisualRaycast.setVisible(true);\r\n                }\r\n\r\n                if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n                    let hitsToShow = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n                    for (let i = 0; i < hitsToShow; i++) {\r\n                        let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                        visualRaycastHit.setVisible(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._myVisualRaycast.setVisible(false);\r\n\r\n                for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n                    visualRaycastHit.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRaycast.forceRefresh();\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let hitsToRefresh = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n            for (let i = 0; i < hitsToRefresh; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                visualRaycastHit.forceRefresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRaycast.update(dt);\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.update(dt);\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.setVisible(false);\r\n        }\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let raycastDistance = this._myParams.myShowOnlyFirstHit ?\r\n                this._myParams.myRaycastResults.myHits.pp_first().myDistance :\r\n                this._myParams.myRaycastResults.myHits.pp_last().myDistance;\r\n\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = raycastDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRay;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n\r\n            let hitsToShow = this._myParams.myShowOnlyFirstHit ? 1 : this._myParams.myRaycastResults.myHits.length;\r\n            while (hitsToShow > this._myVisualRaycastHitList.length) {\r\n                this._addVisualRaycastHit();\r\n            }\r\n\r\n            for (let i = 0; i < hitsToShow; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n\r\n                {\r\n                    let visualRaycastHitParams = visualRaycastHit.getParams();\r\n                    visualRaycastHitParams.myStart.vec3_copy(this._myParams.myRaycastResults.myHits[i].myPosition);\r\n                    visualRaycastHitParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myHits[i].myNormal);\r\n                    visualRaycastHitParams.myLength = this._myParams.myHitNormalLength;\r\n                    visualRaycastHitParams.myThickness = this._myParams.myThickness;\r\n\r\n                    if (this._myParams.myHitNormalMaterial == null) {\r\n                        visualRaycastHitParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myHitNormal;\r\n                    } else {\r\n                        visualRaycastHitParams.myMaterial = this._myParams.myHitNormalMaterial;\r\n                    }\r\n\r\n                    visualRaycastHitParams.myParent = this._myParams.myParent;\r\n                    visualRaycastHitParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                    visualRaycastHit.paramsUpdated();\r\n\r\n                    visualRaycastHit.setVisible(this._myVisible);\r\n                }\r\n            }\r\n\r\n        } else if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = this._myParams.myRaycastResults.myRaycastSetup.myDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRay;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n        } else {\r\n            this._myVisualRaycast.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualRaycastParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualRaycast(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _addVisualRaycastHit() {\r\n        let visualRaycastHit = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        visualRaycastHit.setAutoRefresh(false);\r\n        visualRaycastHit.setVisible(false);\r\n\r\n        this._myVisualRaycastHitList.push(visualRaycastHit);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualRaycastParams.prototype.copy = function copy(other) {\r\n    this.myRaycastResults = other.myRaycastResults;\r\n    this.myHitNormalLength = other.myHitNormalLength;\r\n    this.myThickness = other.myThickness;\r\n    this.myShowOnlyFirstHit = other.myShowOnlyFirstHit;\r\n\r\n    if (other.myRayMaterial != null) {\r\n        this.myRayMaterial = other.myRayMaterial.clone();\r\n    } else {\r\n        this.myRayMaterial = null;\r\n    }\r\n\r\n    if (other.myHitNormalMaterial != null) {\r\n        this.myHitNormalMaterial = other.myHitNormalMaterial.clone();\r\n    } else {\r\n        this.myHitNormalMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualTextParams();\r\nvisualParams.myText = text;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myText.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualText = new VisualText(visualParams);\r\n*/\r\n\r\nimport { mat4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { Alignment, Justification, TextComponent } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualTextParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myText = \"\";\r\n        this.myAlignment = Alignment.Center;\r\n        this.myJustification = Justification.Middle;\r\n\r\n        this.myTransform = mat4_create();\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myDefaultTextMaterial\r\n\r\n        this.myColor = null;        // If this is set and material is null, it will use the default text material with this color\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.TEXT;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualText {\r\n\r\n    constructor(params = new VisualTextParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTextObject = null;\r\n        this._myTextComponent = null;\r\n\r\n        this._myTextMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myTextObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myTextObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTextObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTextObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myTextComponent.material = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myText;\r\n            } else {\r\n                if (this._myTextMaterial == null) {\r\n                    this._myTextMaterial = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMaterials.myText.clone();\r\n                }\r\n                this._myTextComponent.material = this._myTextMaterial;\r\n                this._myTextMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myTextComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        this._myTextComponent.text = this._myParams.myText;\r\n        this._myTextComponent.alignment = this._myParams.myAlignment;\r\n        this._myTextComponent.justification = this._myParams.myJustification;\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _build() {\r\n        this._myTextObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n        this._myTextComponent = this._myTextObject.pp_addComponent(TextComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTextParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualText(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTextParams.prototype.copy = function copy(other) {\r\n    this.myText = other.myText;\r\n    this.myAlignment = other.myAlignment;\r\n    this.myJustification = other.myJustification;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualTorusParams();\r\nvisualParams.myRadius = 1;\r\nvisualParams.mySegmentsAmount = 12;\r\nvisualParams.mySegmentThickness = 0.05;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTorus = new VisualTorus(visualParams);\r\n*/\r\n\r\nimport { mat4_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./visual_line\";\r\n\r\nexport class VisualTorusParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n        this.myRadius = 0;\r\n\r\n        this.mySegmentsAmount = 12;\r\n        this.mySegmentThickness = 0.05;\r\n\r\n        this.mySegmentMesh = null;  // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.TORUS;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualTorus {\r\n\r\n    constructor(params = new VisualTorusParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTorusRootObject = null;\r\n\r\n        this._myVisualSegmentList = [];\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                let segmentToShow = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n                for (let i = 0; i < segmentToShow; i++) {\r\n                    let visualSegment = this._myVisualSegmentList[i];\r\n                    visualSegment.setVisible(true);\r\n                }\r\n            } else {\r\n                for (let visualSegment of this._myVisualSegmentList) {\r\n                    visualSegment.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        let segmentToRefresh = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n        for (let i = 0; i < segmentToRefresh; i++) {\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n            visualSegment.forceRefresh();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.update(dt);\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myTorusRootObject = this._myParams.myParent.pp_getEngine().scene.pp_addObject();\r\n\r\n        this._fillSegmentList();\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    _fillSegmentList() {\r\n        while (this._myVisualSegmentList.length < this._myParams.mySegmentsAmount) {\r\n            let visualSegment = new VisualLine(new VisualLineParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n            visualSegment.setAutoRefresh(false);\r\n            visualSegment.setVisible(false);\r\n\r\n            visualSegment.getParams().myParent = this._myTorusRootObject;\r\n            visualSegment.getParams().myIsLocal = true;\r\n\r\n            this._myVisualSegmentList.push(visualSegment);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTorusParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualTorus(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTorus.prototype._refresh = function () {\r\n    let segmentStart = vec3_create();\r\n    let segmentEnd = vec3_create();\r\n\r\n    let segmentDirection = vec3_create();\r\n\r\n    let fixedSegmentStart = vec3_create();\r\n    let fixedSegmentEnd = vec3_create();\r\n\r\n    let up = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._fillSegmentList();\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.setVisible(false);\r\n        }\r\n\r\n        this._myTorusRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTorusRootObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTorusRootObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        let sliceAngle = 2 * Math.PI / this._myParams.mySegmentsAmount;\r\n        segmentStart.vec3_set(this._myParams.myRadius, 0, 0);\r\n        for (let i = 0; i < this._myParams.mySegmentsAmount; i++) {\r\n            segmentEnd = segmentStart.vec3_rotateAxisRadians(sliceAngle, up, segmentEnd);\r\n\r\n            segmentDirection = segmentEnd.vec3_sub(segmentStart, segmentDirection).vec3_normalize(segmentDirection);\r\n\r\n            let extraLength = Math.tan(sliceAngle / 2) * this._myParams.mySegmentThickness / 2;\r\n\r\n            fixedSegmentStart = segmentStart.vec3_sub(segmentDirection.vec3_scale(extraLength, fixedSegmentStart), fixedSegmentStart);\r\n            fixedSegmentEnd = segmentEnd.vec3_add(segmentDirection.vec3_scale(extraLength, fixedSegmentEnd), fixedSegmentEnd);\r\n\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n\r\n            let visualSegmentParams = visualSegment.getParams();\r\n            visualSegmentParams.setStartEnd(fixedSegmentStart, fixedSegmentEnd);\r\n            visualSegmentParams.myThickness = this._myParams.mySegmentThickness;\r\n\r\n            visualSegmentParams.myMesh = this._myParams.mySegmentMesh;\r\n\r\n            if (this._myParams.myMaterial == null) {\r\n                if (this._myParams.myColor == null) {\r\n                    visualSegmentParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n                } else {\r\n                    if (this._myFlatOpaqueMaterial == null) {\r\n                        this._myFlatOpaqueMaterial = getDefaultResources(this._myParams.myParent.pp_getEngine()).myMaterials.myFlatOpaque.clone();\r\n                    }\r\n                    visualSegmentParams.myMaterial = this._myFlatOpaqueMaterial;\r\n                    this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n                }\r\n            } else {\r\n                visualSegmentParams.myMaterial = this._myParams.myMaterial;\r\n            }\r\n\r\n            visualSegment.paramsUpdated();\r\n\r\n            visualSegment.setVisible(this._myVisible);\r\n\r\n            segmentStart.vec3_copy(segmentEnd);\r\n        }\r\n    };\r\n}();\r\n\r\nVisualTorusParams.prototype.copy = function copy(other) {\r\n    this.myRadius = other.myRadius;\r\n    this.mySegmentsAmount = other.mySegmentsAmount;\r\n    this.mySegmentThickness = other.mySegmentThickness;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    this.mySegmentMesh = other.mySegmentMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualTransformParams();\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myLength = 0.2;\r\ngetVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTransform = new VisualTransform(visualParams);\r\n*/\r\n\r\nimport { mat4_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../wl/engine_globals\";\r\nimport { getVisualData } from \"../visual_globals\";\r\nimport { VisualArrow, VisualArrowParams } from \"./visual_arrow\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualTransformParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n        this.myLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myForwardMaterial = null;\r\n        this.myUpMaterial = null;\r\n        this.myRightMaterial = null;\r\n\r\n        this.myParent = getVisualData(engine).myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = VisualElementType.TRANSFORM;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualTransform {\r\n\r\n    constructor(params = new VisualTransformParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRight = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualUp = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualForward = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        this._myVisualRight.setAutoRefresh(false);\r\n        this._myVisualUp.setAutoRefresh(false);\r\n        this._myVisualForward.setAutoRefresh(false);\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualRight.setVisible(visible);\r\n            this._myVisualUp.setVisible(visible);\r\n            this._myVisualForward.setVisible(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRight.forceRefresh();\r\n        this._myVisualUp.forceRefresh();\r\n        this._myVisualForward.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRight.update(dt);\r\n        this._myVisualUp.update(dt);\r\n        this._myVisualForward.update(dt);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTransformParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualTransform(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTransform.prototype._refresh = function () {\r\n    let axes = [vec3_create(), vec3_create(), vec3_create()];\r\n    let scale = vec3_create();\r\n    let position = vec3_create();\r\n    return function _refresh() {\r\n        axes = this._myParams.myTransform.mat4_getAxes(axes);\r\n        scale = this._myParams.myTransform.mat4_getScale(scale);\r\n        let maxValue = 0;\r\n        for (let value of scale) {\r\n            maxValue = Math.max(value, maxValue);\r\n        }\r\n\r\n        if (maxValue == 0) {\r\n            scale[0] = 1;\r\n            scale[1] = 1;\r\n            scale[2] = 1;\r\n        } else {\r\n            scale[0] = scale[0] / maxValue;\r\n            scale[1] = scale[1] / maxValue;\r\n            scale[2] = scale[2] / maxValue;\r\n        }\r\n\r\n        position = this._myParams.myTransform.mat4_getPosition(position);\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualRight.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[0].vec3_negate(visualArrowParams.myDirection).vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[0], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myRightMaterial == null) {\r\n                visualArrowParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRight;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myRightMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualRight.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualUp.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[1].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[1], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myUpMaterial == null) {\r\n                visualArrowParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myUp;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myUpMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualUp.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualForward.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[2].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[2], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myForwardMaterial == null) {\r\n                visualArrowParams.myMaterial = getVisualData(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myForward;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myForwardMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualForward.paramsUpdated();\r\n        }\r\n    };\r\n}();\r\n\r\nVisualTransformParams.prototype.copy = function copy(other) {\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    if (other.myRightMaterial != null) {\r\n        this.myRightMaterial = other.myRightMaterial.clone();\r\n    } else {\r\n        this.myRightMaterial = null;\r\n    }\r\n\r\n    if (other.myUpMaterial != null) {\r\n        this.myUpMaterial = other.myUpMaterial.clone();\r\n    } else {\r\n        this.myUpMaterial = null;\r\n    }\r\n\r\n    if (other.myForwardMaterial != null) {\r\n        this.myForwardMaterial = other.myForwardMaterial.clone();\r\n    } else {\r\n        this.myForwardMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "import { getMainEngine } from \"../wl/engine_globals\";\r\nimport { ObjectPoolParams } from \"../cauldron/object_pool\";\r\nimport { ObjectPoolsManager } from \"../cauldron/object_pools_manager\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { VisualArrow, VisualArrowParams } from \"./elements/visual_arrow\";\r\nimport { VisualElementType } from \"./elements/visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./elements/visual_line\";\r\nimport { VisualMesh, VisualMeshParams } from \"./elements/visual_mesh\";\r\nimport { VisualPoint, VisualPointParams } from \"./elements/visual_point\";\r\nimport { VisualRaycast, VisualRaycastParams } from \"./elements/visual_raycast\";\r\nimport { VisualText, VisualTextParams } from \"./elements/visual_text\";\r\nimport { VisualTorus, VisualTorusParams } from \"./elements/visual_torus\";\r\nimport { VisualTransform, VisualTransformParams } from \"./elements/visual_transform\";\r\n\r\nexport class VisualManager {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myVisualElementPrototypeCreationCallbacks = new Map();\r\n\r\n        this._myVisualElementsTypeMap = new Map();\r\n        this._myVisualElementLastID = 0;\r\n        this._myVisualElementsPool = new ObjectPoolsManager();\r\n        this._myVisualElementsToShow = [];\r\n\r\n        this._myActive = true;\r\n\r\n        this._addStandardVisualElementTypes();\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (!this._myActive) {\r\n                this.clearDraw();\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return this._myActive;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myActive) {\r\n            this._updateDraw(dt);\r\n        }\r\n    }\r\n\r\n    // lifetimeSeconds can be null, in that case the element will be drawn until cleared\r\n    draw(visualElementParams, lifetimeSeconds = 0, idToReuse = null) {\r\n        if (!this._myActive) {\r\n            return 0;\r\n        }\r\n\r\n        let visualElement = null;\r\n        let idReused = false;\r\n        if (idToReuse != null) {\r\n            if (this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n                let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n                if (visualElements.has(idToReuse)) {\r\n                    visualElement = visualElements.get(idToReuse)[0];\r\n                    visualElement.copyParams(visualElementParams);\r\n                    visualElement.setVisible(false);\r\n                    idReused = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            visualElement = this._getVisualElement(visualElementParams);\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            console.error(\"Couldn't create the requested visual element\");\r\n            return null;\r\n        }\r\n\r\n        if (!this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n            this._myVisualElementsTypeMap.set(visualElementParams.myType, new Map());\r\n        }\r\n        let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n\r\n        let elementID = null;\r\n        if (!idReused) {\r\n            elementID = this._myVisualElementLastID + 1;\r\n            this._myVisualElementLastID = elementID;\r\n\r\n            visualElements.set(elementID, [visualElement, new Timer(lifetimeSeconds, lifetimeSeconds != null)]);\r\n        } else {\r\n            elementID = idToReuse;\r\n            let visualElementPair = visualElements.get(elementID);\r\n            visualElementPair[0] = visualElement;\r\n            visualElementPair[1].reset(lifetimeSeconds);\r\n            if (lifetimeSeconds != null) {\r\n                visualElementPair[1].start();\r\n            }\r\n        }\r\n\r\n        this._myVisualElementsToShow.push(visualElement);\r\n\r\n        return elementID;\r\n    }\r\n\r\n    getDraw(elementID) {\r\n        let visualElement = null;\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            if (visualElements.has(elementID)) {\r\n                let visualElementPair = visualElements.get(elementID);\r\n                visualElement = visualElementPair[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return visualElement;\r\n    }\r\n\r\n    clearDraw(elementID = null) {\r\n        if (elementID == null) {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                for (let visualElement of visualElements.values()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                }\r\n            }\r\n\r\n            this._myVisualElementsToShow = [];\r\n            this._myVisualElementsTypeMap = new Map();\r\n            this._myVisualElementLastID = 0;\r\n        } else {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                if (visualElements.has(elementID)) {\r\n                    let visualElementPair = visualElements.get(elementID);\r\n                    this._myVisualElementsPool.releaseObject(visualElementPair[0].getParams().myType, visualElementPair[0]);\r\n                    visualElements.delete(elementID);\r\n\r\n                    this._myVisualElementsToShow.pp_removeEqual(visualElementPair[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    allocateDraw(visualElementType, amount) {\r\n        if (!this._myVisualElementsPool.hasPool(visualElementType)) {\r\n            this._addVisualElementTypeToPool(visualElementType);\r\n        }\r\n\r\n        let pool = this._myVisualElementsPool.getPool(visualElementType);\r\n\r\n        let difference = pool.getAvailableSize() - amount;\r\n        if (difference < 0) {\r\n            pool.increase(-difference);\r\n        }\r\n    }\r\n\r\n    addVisualElementType(visualElementType, visuaElementPrototypeCreationCallback) {\r\n        this._myVisualElementPrototypeCreationCallbacks.set(visualElementType, visuaElementPrototypeCreationCallback);\r\n    }\r\n\r\n    removeVisualElementType(visualElementType) {\r\n        this._myVisualElementPrototypeCreationCallbacks.delete(visualElementType);\r\n    }\r\n\r\n    _updateDraw(dt) {\r\n        for (let visualElement of this._myVisualElementsToShow) {\r\n            visualElement.setVisible(true);\r\n        }\r\n        this._myVisualElementsToShow = [];\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            let idsToRemove = [];\r\n            for (let visualElementsEntry of visualElements.entries()) {\r\n                let visualElement = visualElementsEntry[1];\r\n                if (visualElement[1].isDone()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                    idsToRemove.push(visualElementsEntry[0]);\r\n                }\r\n\r\n                visualElement[1].update(dt);\r\n            }\r\n\r\n            for (let id of idsToRemove) {\r\n                visualElements.delete(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getVisualElement(params) {\r\n        let element = null;\r\n\r\n        if (!this._myVisualElementsPool.hasPool(params.myType)) {\r\n            this._addVisualElementTypeToPool(params.myType);\r\n        }\r\n\r\n        element = this._myVisualElementsPool.getObject(params.myType);\r\n\r\n        if (element != null) {\r\n            element.copyParams(params);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    _addVisualElementTypeToPool(type) {\r\n        let objectPoolParams = new ObjectPoolParams();\r\n        objectPoolParams.myInitialPoolSize = 10;\r\n        objectPoolParams.myAmountToAddWhenEmpty = 0;\r\n        objectPoolParams.myPercentageToAddWhenEmpty = 0.5;\r\n        objectPoolParams.mySetActiveCallback = function (object, active) {\r\n            object.setVisible(active);\r\n        };\r\n\r\n        let visualElementPrototype = null;\r\n        if (this._myVisualElementPrototypeCreationCallbacks.has(type)) {\r\n            visualElementPrototype = this._myVisualElementPrototypeCreationCallbacks.get(type)();\r\n        }\r\n\r\n        if (visualElementPrototype != null) {\r\n            visualElementPrototype.setVisible(false);\r\n            visualElementPrototype.setAutoRefresh(true);\r\n\r\n            this._myVisualElementsPool.addPool(type, visualElementPrototype, objectPoolParams);\r\n        } else {\r\n            console.error(\"Visual element type not supported\");\r\n        }\r\n    }\r\n\r\n    _addStandardVisualElementTypes() {\r\n        this.addVisualElementType(VisualElementType.LINE, () => new VisualLine(new VisualLineParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.MESH, () => new VisualMesh(new VisualMeshParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.POINT, () => new VisualPoint(new VisualPointParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.ARROW, () => new VisualArrow(new VisualArrowParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TEXT, () => new VisualText(new VisualTextParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TRANSFORM, () => new VisualTransform(new VisualTransformParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.RAYCAST, () => new VisualRaycast(new VisualRaycastParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TORUS, () => new VisualTorus(new VisualTorusParams(this._myEngine)));\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport * as WLAPI from \"@wonderlandengine/api\";\r\nimport * as WLComponents from \"@wonderlandengine/components\";\r\n\r\nexport class AddWLToWindowComponent extends Component {\r\n    static TypeName = \"pp-add-wl-to-window\";\r\n    static Properties = {\r\n        _myAdd: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        if (this._myAdd) {\r\n            window.WL = {};\r\n            this._addProperties(WLAPI);\r\n            this._addProperties(WLComponents);\r\n        }\r\n    }\r\n\r\n    _addProperties(object) {\r\n        let propertyNames = Object.getOwnPropertyNames(object);\r\n        for (let propertyName of propertyNames) {\r\n            if (object[propertyName] != undefined) {\r\n                window.WL[propertyName] = object[propertyName];\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getDebugManager, hasDebugManager, removeDebugManager, setDebugManager } from \"../debug_globals\";\r\nimport { DebugManager } from \"../debug_manager\";\r\n\r\nexport class DebugManagerComponent extends Component {\r\n    static TypeName = \"pp-debug-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myDebugManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasDebugManager(this.engine)) {\r\n            this._myDebugManager = new DebugManager(this.engine);\r\n\r\n            setDebugManager(this._myDebugManager, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myDebugManager != null) {\r\n            this._myDebugManager.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDebugManager != null) {\r\n            this._myDebugManager.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDebugManager != null && getDebugManager(this.engine) == this._myDebugManager) {\r\n            removeDebugManager(this.engine);\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../cauldron/wl/engine_globals\";\r\n\r\nlet _myDebugManagers = new WeakMap();\r\nlet _myDebugEnableds = new WeakMap();\r\n\r\nexport function getDebugManager(engine = getMainEngine()) {\r\n    return _myDebugManagers.get(engine);\r\n}\r\n\r\nexport function setDebugManager(debugManager, engine = getMainEngine()) {\r\n    _myDebugManagers.set(engine, debugManager);\r\n}\r\n\r\nexport function removeDebugManager(engine = getMainEngine()) {\r\n    _myDebugManagers.delete(engine);\r\n}\r\n\r\nexport function hasDebugManager(engine = getMainEngine()) {\r\n    return _myDebugManagers.has(engine);\r\n}\r\n\r\nexport function getDebugVisualManager(engine = getMainEngine()) {\r\n    let debugManager = getDebugManager(engine);\r\n    if (debugManager != null) {\r\n        return debugManager.getDebugVisualManager();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function isDebugEnabled(engine = getMainEngine()) {\r\n    return _myDebugEnableds.get(engine);\r\n}\r\n\r\nexport function setDebugEnabled(debugEnabled, engine = getMainEngine()) {\r\n    _myDebugEnableds.set(engine, debugEnabled);\r\n}\r\n\r\nexport function removeDebugEnabled(engine = getMainEngine()) {\r\n    _myDebugEnableds.delete(engine);\r\n}\r\n\r\nexport function hasDebugEnabled(engine = getMainEngine()) {\r\n    return _myDebugEnableds.has(engine);\r\n}", "import { Alignment, Justification } from \"@wonderlandengine/api\";\r\nimport { VisualArrowParams } from \"../cauldron/visual/elements/visual_arrow\";\r\nimport { VisualLineParams } from \"../cauldron/visual/elements/visual_line\";\r\nimport { VisualPointParams } from \"../cauldron/visual/elements/visual_point\";\r\nimport { VisualRaycastParams } from \"../cauldron/visual/elements/visual_raycast\";\r\nimport { VisualTextParams } from \"../cauldron/visual/elements/visual_text\";\r\nimport { VisualTransformParams } from \"../cauldron/visual/elements/visual_transform\";\r\nimport { VisualManager } from \"../cauldron/visual/visual_manager\";\r\nimport { vec3_create, vec4_create } from \"../plugin/js/extensions/array_extension\";\r\n\r\nexport class DebugVisualManager extends VisualManager {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    drawLine(lifetimeSeconds, start, direction, length, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualLineParams(this._myEngine);\r\n            visualParams.myStart.vec3_copy(start);\r\n            visualParams.myDirection.vec3_copy(direction);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawLineEnd(lifetimeSeconds, start, end, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    drawArrow(lifetimeSeconds, start, direction, length, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualArrowParams(this._myEngine);\r\n            visualParams.myStart.vec3_copy(start);\r\n            visualParams.myDirection.vec3_copy(direction);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawArrowEnd(lifetimeSeconds, start, end, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    drawPoint(lifetimeSeconds, position, color = vec4_create(0, 1, 0, 1), radius = 0.005) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualPointParams(this._myEngine);\r\n            visualParams.myPosition.vec3_copy(position);\r\n            visualParams.myRadius = radius;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawText(lifetimeSeconds, text, transform, color = vec4_create(0, 1, 0, 1), alignment = Alignment.Center, justification = Justification.Middle) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualTextParams(this._myEngine);\r\n            visualParams.myText = text;\r\n            visualParams.myAlignment = alignment;\r\n            visualParams.myJustification = justification;\r\n            visualParams.myTransform.mat4_copy(transform);\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawRaycast(lifetimeSeconds, raycastResult, showOnlyFirstHit = true, hitNormalLength = 0.2, thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualRaycastParams(this._myEngine);\r\n            visualParams.myRaycastResults = raycastResult;\r\n            visualParams.myShowOnlyFirstHit = showOnlyFirstHit;\r\n            visualParams.myHitNormalLength = hitNormalLength;\r\n            visualParams.myThickness = thickness;\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawTransform(lifetimeSeconds, transform, length = 0.2, thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualTransformParams(this._myEngine);\r\n            visualParams.myTransform.mat4_copy(transform);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n}\r\n\r\nDebugVisualManager.prototype.drawLineEnd = function () {\r\n    let direction = vec3_create();\r\n    return function drawLineEnd(lifetimeSeconds, start, end, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            direction = end.vec3_sub(start, direction);\r\n            length = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n            this.drawLine(lifetimeSeconds, start, direction, length, color, thickness);\r\n        }\r\n    };\r\n}();\r\n\r\nDebugVisualManager.prototype.drawArrowEnd = function () {\r\n    let direction = vec3_create();\r\n    return function drawArrowEnd(lifetimeSeconds, start, end, color = vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        if (this.isActive()) {\r\n            direction = end.vec3_sub(start, direction);\r\n            length = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n            this.drawArrow(lifetimeSeconds, start, direction, length, color, thickness);\r\n        }\r\n    };\r\n}();", "import { getMainEngine } from \"../cauldron/wl/engine_globals\";\r\nimport { isDebugEnabled } from \"./debug_globals\";\r\nimport { DebugVisualManager } from \"./debug_visual_manager\";\r\n\r\nexport class DebugManager {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n        this._myDebugVisualManager = new DebugVisualManager(this._myEngine);\r\n    }\r\n\r\n    getDebugVisualManager() {\r\n        return this._myDebugVisualManager;\r\n    }\r\n\r\n    start() {\r\n        this._myDebugVisualManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myDebugVisualManager.setActive(isDebugEnabled(this._myEngine));\r\n        this._myDebugVisualManager.update(dt);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\nimport { ClassicGamepadCore } from \"../../gamepad/gamepad_cores/classic_gamepad_core\";\r\nimport { KeyboardGamepadCore } from \"../../gamepad/gamepad_cores/keyboard_gamepad_core\";\r\nimport { XRGamepadCore } from \"../../gamepad/gamepad_cores/xr_gamepad_core\";\r\nimport { HandPose, HandPoseParams } from \"../../pose/hand_pose\";\r\nimport { hasInputManager, setInputManager } from \"../input_globals\";\r\nimport { InputManager } from \"../input_manager\";\r\nimport { Handedness } from \"../input_types\";\r\n\r\nexport class InputManagerComponent extends Component {\r\n    static TypeName = \"pp-input-manager\";\r\n    static Properties = {\r\n        _myGamepadFixForward: Property.bool(true),\r\n        _myMousePreventContextMenu: Property.bool(true),\r\n        _myMousePreventMiddleButtonScroll: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myInputManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasInputManager(this.engine)) {\r\n            this._myInputManager = new InputManager(this.engine);\r\n\r\n            setInputManager(this._myInputManager, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myInputManager != null) {\r\n            this._myInputManager.start();\r\n\r\n            this._setupMousePrevent();\r\n            this._addGamepadCores();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myInputManager != null) {\r\n            this._myInputManager.update(dt);\r\n        }\r\n    }\r\n\r\n    _setupMousePrevent() {\r\n        if (this._myMousePreventContextMenu) {\r\n            this._myInputManager.getMouse().setContextMenuActive(false);\r\n        }\r\n\r\n        if (this._myMousePreventMiddleButtonScroll) {\r\n            this._myInputManager.getMouse().setMiddleButtonScrollActive(false);\r\n        }\r\n    }\r\n\r\n    _addGamepadCores() {\r\n        let handPoseParams = new HandPoseParams(this.engine);\r\n        handPoseParams.myReferenceObject = getPlayerObjects(this.engine).myPlayerPivot;\r\n        handPoseParams.myFixForward = this._myGamepadFixForward;\r\n        handPoseParams.myForceEmulatedVelocities = false;\r\n\r\n        let leftHandPose = new HandPose(Handedness.LEFT, handPoseParams);\r\n        let rightHandPose = new HandPose(Handedness.RIGHT, handPoseParams);\r\n\r\n        let leftXRGamepadCore = new XRGamepadCore(leftHandPose);\r\n        let rightXRGamepadCore = new XRGamepadCore(rightHandPose);\r\n\r\n        leftXRGamepadCore.setManageHandPose(true);\r\n        rightXRGamepadCore.setManageHandPose(true);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_xr_gamepad\", leftXRGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_xr_gamepad\", rightXRGamepadCore);\r\n\r\n        let leftKeyboardGamepadCore = new KeyboardGamepadCore(leftHandPose);\r\n        let rightKeyboardGamepadCore = new KeyboardGamepadCore(rightHandPose);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_keyboard_gamepad\", leftKeyboardGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_keyboard_gamepad\", rightKeyboardGamepadCore);\r\n\r\n        let leftClassicGamepadCore = new ClassicGamepadCore(null, leftHandPose);\r\n        let rightClassicGamepadCore = new ClassicGamepadCore(null, rightHandPose);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_classic_gamepad\", leftClassicGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_classic_gamepad\", rightClassicGamepadCore);\r\n    }\r\n}", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { mat4_create, quat2_create, quat_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\n\r\nexport class BasePoseParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myReferenceObject = null;\r\n        this.myFixForward = true;\r\n        this.myForceEmulatedVelocities = false;\r\n        this.myUpdateOnViewReset = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\n// BasePose transform is local by default (as if the parent/reference object was the identity transform)\r\n// You can use setReferenceObject if you want the BasePose to return the transform in world space \r\nexport class BasePose {\r\n\r\n    constructor(basePoseParams = new BasePoseParams()) {\r\n        this._myFixForward = basePoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = basePoseParams.myForceEmulatedVelocities;\r\n        this._myUpdateOnViewReset = basePoseParams.myUpdateOnViewReset;\r\n\r\n        this._myReferenceSpace = null;\r\n        this._myReferenceObject = basePoseParams.myReferenceObject;\r\n\r\n        this._myEngine = basePoseParams.myEngine;\r\n\r\n        this._myPosition = vec3_create();\r\n        this._myRotationQuat = quat2_create();\r\n\r\n        this._myPrevPosition = vec3_create();\r\n        this._myPrevRotationQuat = quat_create();\r\n\r\n        this._myLinearVelocity = vec3_create();\r\n        this._myAngularVelocityRadians = vec3_create();\r\n\r\n        this._myIsValid = false;\r\n        this._myIsLinearVelocityEmulated = true;\r\n        this._myIsAngularVelocityEmulated = true;\r\n\r\n        this._myPoseUpdatedCallbacks = new Map();   // Signature: callback(thisPose)\r\n    }\r\n\r\n    getEngine() {\r\n        return this._myEngine;\r\n    }\r\n\r\n    // If the reference object is set, the transform will be converted using it as a parent,\r\n    // otherwise the transform will be local, as if the parent/reference object was the identity transform\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n\r\n    setUpdateOnViewReset(updateOnViewReset) {\r\n        this._myUpdateOnViewReset = updateOnViewReset;\r\n    }\r\n\r\n    isUpdateOnViewReset() {\r\n        return this._myUpdateOnViewReset;\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return this._myReferenceSpace;\r\n    }\r\n\r\n    getPosition() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotation() {\r\n        return this.getRotationDegrees();\r\n    }\r\n\r\n    getRotationDegrees() {\r\n        return this.getRotationQuat().quat_toDegrees();\r\n\r\n    }\r\n\r\n    getRotationRadians() {\r\n        return this.getRotationQuat().quat_toRadians();\r\n    }\r\n\r\n    getRotationQuat() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransform() {\r\n        return this.getTransformMatrix();\r\n    }\r\n\r\n    getTransformMatrix() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformQuat() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isLinearVelocityEmulated() {\r\n        return this._myIsLinearVelocityEmulated;\r\n    }\r\n\r\n    isAngularVelocityEmulated() {\r\n        return this._myIsAngularVelocityEmulated;\r\n    }\r\n\r\n    registerPoseUpdatedEventListener(id, callback) {\r\n        this._myPoseUpdatedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPoseUpdatedEventListener(id) {\r\n        this._myPoseUpdatedCallbacks.delete(id);\r\n    }\r\n\r\n    start() {\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, true, this._myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        this._update(dt, true);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _isReadyToGetPose() {\r\n        return true;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return null;\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n\r\n    }\r\n\r\n    _onViewResetHook() {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _update(dt, updateVelocity) {\r\n        this._myPrevPosition.vec3_copy(this._myPosition);\r\n        this._myPrevRotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        let xrFrame = XRUtils.getFrame(this._myEngine);\r\n        if (xrFrame && this._isReadyToGetPose()) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = this._getPose(xrFrame);\r\n            } catch (error) {\r\n                // Not handled, pose will be null\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotationQuat[0] = xrPose.transform.orientation.x;\r\n                this._myRotationQuat[1] = xrPose.transform.orientation.y;\r\n                this._myRotationQuat[2] = xrPose.transform.orientation.z;\r\n                this._myRotationQuat[3] = xrPose.transform.orientation.w;\r\n                this._myRotationQuat.quat_normalize(this._myRotationQuat);\r\n\r\n                if (updateVelocity) {\r\n                    if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                        this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                        this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n\r\n                        this._myIsLinearVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedLinearVelocity(dt);\r\n\r\n                        this._myIsLinearVelocityEmulated = true;\r\n                    }\r\n\r\n                    if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myAngularVelocityRadians[0] = xrPose.angularVelocity.x;\r\n                        this._myAngularVelocityRadians[1] = xrPose.angularVelocity.y;\r\n                        this._myAngularVelocityRadians[2] = xrPose.angularVelocity.z;\r\n\r\n                        this._myIsAngularVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedAngularVelocity(dt);\r\n\r\n                        this._myIsAngularVelocityEmulated = true;\r\n                    }\r\n                }\r\n\r\n                this._myIsValid = true;\r\n            } else {\r\n                // Keep previous position and rotation but reset velocity because reasons\r\n\r\n                if (updateVelocity) {\r\n                    this._myLinearVelocity[0] = 0;\r\n                    this._myLinearVelocity[1] = 0;\r\n                    this._myLinearVelocity[2] = 0;\r\n\r\n                    this._myAngularVelocityRadians[0] = 0;\r\n                    this._myAngularVelocityRadians[1] = 0;\r\n                    this._myAngularVelocityRadians[2] = 0;\r\n                }\r\n\r\n                this._myIsValid = false;\r\n                this._myIsLinearVelocityEmulated = true;\r\n                this._myIsAngularVelocityEmulated = true;\r\n            }\r\n\r\n            this._updateHook(dt, updateVelocity, xrPose);\r\n        } else {\r\n            // Keep previous position and rotation but reset velocity because reasons\r\n\r\n            if (updateVelocity) {\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocityRadians[0] = 0;\r\n                this._myAngularVelocityRadians[1] = 0;\r\n                this._myAngularVelocityRadians[2] = 0;\r\n            }\r\n\r\n            this._myIsValid = false;\r\n            this._myIsLinearVelocityEmulated = true;\r\n            this._myIsAngularVelocityEmulated = true;\r\n\r\n            this._updateHook(dt, updateVelocity, null);\r\n        }\r\n\r\n        this._myPoseUpdatedCallbacks.forEach(function (callback) { callback(this); }.bind(this));\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            this._myPosition.vec3_sub(this._myPrevPosition, this._myLinearVelocity);\r\n            this._myLinearVelocity.vec3_scale(1 / dt, this._myLinearVelocity);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(manualCall, session) {\r\n        session.requestReferenceSpace(XRUtils.getReferenceSpaceType(this._myEngine)).then(function (referenceSpace) {\r\n            this._myReferenceSpace = referenceSpace;\r\n\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        this._onXRSessionStartHook(manualCall, session);\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionEndHook();\r\n\r\n        this._myReferenceSpace = null;\r\n    }\r\n\r\n    _onViewReset() {\r\n        if (this._myUpdateOnViewReset) {\r\n            this._update(0, false);\r\n        }\r\n\r\n        this._onViewResetHook();\r\n    }\r\n\r\n    _computeEmulatedAngularVelocity() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nBasePose.prototype.getPosition = function () {\r\n    let position = vec3_create();\r\n    let transform = mat4_create();\r\n    return function getPosition() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myPosition;\r\n        }\r\n\r\n        return this._myPosition.vec3_convertPositionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = quat_create();\r\n    let playerRotationQuat = quat_create();\r\n    let up = vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getTransformMatrix = function () {\r\n    let transform = mat4_create();\r\n    return function getTransformMatrix() {\r\n        return this.getTransformQuat().quat2_toMatrix(transform);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getTransformQuat = function () {\r\n    let transformQuat = quat2_create();\r\n    let playerTransformQuat = quat2_create();\r\n    return function getTransformQuat() {\r\n        transformQuat.quat2_setPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return transformQuat;\r\n        }\r\n\r\n        return transformQuat.quat_toWorld(this._myReferenceObject.pp_getTransformQuat(playerTransformQuat), transformQuat);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getLinearVelocity = function () {\r\n    let position = vec3_create();\r\n    let transform = mat4_create();\r\n    return function getLinearVelocity() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myLinearVelocity;\r\n        }\r\n\r\n        return this._myLinearVelocity.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getAngularVelocityDegrees = function () {\r\n    let rotationDegrees = vec3_create();\r\n    return function getAngularVelocityDegrees() {\r\n        this.getAngularVelocityRadians().vec3_toDegrees(rotationDegrees);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getAngularVelocityRadians = function () {\r\n    let rotationRadians = vec3_create();\r\n    let transform = mat4_create();\r\n    return function getAngularVelocityRadians() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myAngularVelocityRadians;\r\n        }\r\n\r\n        return this._myAngularVelocityRadians.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), rotationRadians);\r\n    };\r\n}();\r\n\r\nBasePose.prototype._computeEmulatedAngularVelocity = function () {\r\n    let rotationRadians = vec3_create();\r\n    let prevRotationRadians = vec3_create();\r\n    return function _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            rotationRadians = this._myRotationQuat.quat_toRadians(rotationRadians);\r\n            prevRotationRadians = this._myPrevRotationQuat.quat_toRadians(prevRotationRadians);\r\n            rotationRadians.vec3_sub(prevRotationRadians, this._myAngularVelocityRadians);\r\n            this._myAngularVelocityRadians.vec3_scale(1 / dt, this._myAngularVelocityRadians);\r\n        } else {\r\n            this._myAngularVelocityRadians[0] = 0;\r\n            this._myAngularVelocityRadians[1] = 0;\r\n            this._myAngularVelocityRadians[2] = 0;\r\n        }\r\n    };\r\n}();", "import { quat_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Handedness, InputSourceType } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePose, BasePoseParams } from \"./base_pose\";\r\n\r\nexport class HandPoseParams extends BasePoseParams {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n\r\n        this.myFixTrackedHandRotation = true;\r\n    }\r\n}\r\n\r\nexport class HandPose extends BasePose {\r\n\r\n    constructor(handedness, handPoseParams = new HandPoseParams()) {\r\n        super(handPoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myFixTrackedHandRotation = handPoseParams.myFixTrackedHandRotation;\r\n\r\n        this._myIsTrackedHand = false;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getInputSource() {\r\n        return this._myInputSource;\r\n    }\r\n\r\n    getInputSourceType() {\r\n        if (this._myInputSource == null) {\r\n            return null;\r\n        }\r\n\r\n        return InputUtils.getInputSourceType(this._myInputSource);\r\n    }\r\n\r\n    isFixTrackedHandRotation() {\r\n        return this._myFixTrackedHandRotation;\r\n    }\r\n\r\n    setFixTrackedHandRotation(fixTrackedHandRotation) {\r\n        this.myFixTrackedHandRotation = fixTrackedHandRotation;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getPose(this._myInputSource.gripSpace, this._myReferenceSpace);\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n        session.addEventListener(\"inputsourceschange\", function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        this._myInputSource = item;\r\n                        this._myIsTrackedHand = InputUtils.getInputSourceType(this._myInputSource) == InputSourceType.TRACKED_HAND;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualCall && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    this._myInputSource = item;\r\n                    this._myIsTrackedHand = InputUtils.getInputSourceType(this._myInputSource) == InputSourceType.TRACKED_HAND;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nHandPose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = quat_create();\r\n    let playerRotationQuat = quat_create();\r\n    let up = vec3_create();\r\n    let right = vec3_create();\r\n    let forward = vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myFixTrackedHandRotation && this._myIsTrackedHand) {\r\n            rotationQuat.quat_rotateAxis(-60, rotationQuat.quat_getRight(right), rotationQuat);\r\n\r\n            let forwardRotation = 20;\r\n            forwardRotation = (this._myHandedness == Handedness.LEFT) ? forwardRotation : -forwardRotation;\r\n            rotationQuat.quat_rotateAxis(forwardRotation, rotationQuat.quat_getForward(forward), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();", "import { vec2_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport let GamepadButtonID = {\r\n    SELECT: 0,          // Trigger\r\n    SQUEEZE: 1,         // Grip\r\n    TOUCHPAD: 2,\r\n    THUMBSTICK: 3,\r\n    BOTTOM_BUTTON: 4,   // A or X button on oculus quest gamepad\r\n    TOP_BUTTON: 5,      // B or Y button on oculus quest gamepad, reverts to TOUCHPAD button for gamepads that does not support TOP_BUTTON\r\n    THUMB_REST: 6\r\n};\r\n\r\nexport let GamepadButtonEvent = {\r\n    PRESS_START: 0,\r\n    PRESS_END: 1,\r\n    PRESSED: 2,         // Every frame that it is pressed\r\n    NOT_PRESSED: 3,     // Every frame that it is not pressed\r\n    TOUCH_START: 4,\r\n    TOUCH_END: 5,\r\n    TOUCHED: 6,         // Every frame that it is touched\r\n    NOT_TOUCHED: 7,     // Every frame that it is not touched\r\n    VALUE_CHANGED: 8,\r\n    ALWAYS: 9           // Every frame\r\n};\r\n\r\nexport let GamepadAxesID = {\r\n    THUMBSTICK: 0\r\n};\r\n\r\nexport let GamepadAxesEvent = {\r\n    X_CHANGED: 0,\r\n    Y_CHANGED: 1,\r\n    AXES_CHANGED: 2,\r\n    ALWAYS: 3\r\n};\r\n\r\nexport class GamepadButtonInfo {\r\n\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n        this.myHandedness = handedness;\r\n\r\n        this.myIsPressed = false;\r\n        this.myPrevIsPressed = false;\r\n\r\n        this.myIsTouched = false;\r\n        this.myPrevIsTouched = false;\r\n\r\n        this.myValue = 0.0;\r\n        this.myPrevValue = 0.0;\r\n\r\n        this.myTimePressed = 0;\r\n        this.myPrevTimePressed = 0;\r\n\r\n        this.myTimeNotPressed = 0;\r\n        this.myPrevTimeNotPressed = 0;\r\n\r\n        this.myTimeTouched = 0;\r\n        this.myPrevTimeTouched = 0;\r\n\r\n        this.myTimeNotTouched = 0;\r\n        this.myPrevTimeNotTouched = 0;\r\n\r\n        this.myMultiplePressStartCount = 0;\r\n        this.myPrevMultiplePressStartCount = 0;\r\n        this.myMultiplePressEndCount = 0;\r\n        this.myPrevMultiplePressEndCount = 0;\r\n\r\n        this.myMultipleTouchStartCount = 0;\r\n        this.myPrevMultipleTouchStartCount = 0;\r\n        this.myMultipleTouchEndCount = 0;\r\n        this.myPrevMultipleTouchEndCount = 0;\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    isPressed() {\r\n        return this.myIsPressed;\r\n    }\r\n\r\n    isTouched() {\r\n        return this.myIsTouched;\r\n    }\r\n\r\n    isPressStart(multiplePressCount = null) {\r\n        return (this.myIsPressed && !this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressStartCount == multiplePressCount);\r\n    }\r\n\r\n    isPressEnd(multiplePressCount = null) {\r\n        return (!this.myIsPressed && this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressEndCount == multiplePressCount);\r\n    }\r\n\r\n    isTouchStart(multipleTouchCount = null) {\r\n        return (this.myIsTouched && !this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchStartCount == multipleTouchCount);\r\n    }\r\n\r\n    isTouchEnd(multipleTouchCount = null) {\r\n        return (!this.myIsTouched && this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchEndCount == multipleTouchCount);\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadButtonInfo(this.myID, this.myHandedness);\r\n        value.myIsPressed = this.myIsPressed;\r\n        value.myPrevIsPressed = this.myPrevIsPressed;\r\n        value.myIsTouched = this.myIsTouched;\r\n        value.myPrevIsTouched = this.myPrevIsTouched;\r\n        value.myValue = this.myValue;\r\n        value.myPrevValue = this.myPrevValue;\r\n\r\n        value.myTimePressed = this.myTimePressed;\r\n        value.myPrevTimePressed = this.myPrevTimePressed;\r\n        value.myTimeNotPressed = this.myTimeNotPressed;\r\n        value.myPrevTimeNotPressed = this.myPrevTimeNotPressed;\r\n\r\n        value.myTimeTouched = this.myTimeTouched;\r\n        value.myPrevTimeTouched = this.myPrevTimeTouched;\r\n        value.myTimeNotTouched = this.myTimeNotTouched;\r\n        value.myPrevTimeNotTouched = this.myPrevTimeNotTouched;\r\n\r\n        value.myMultiplePressStartCount = this.myMultiplePressStartCount;\r\n        value.myPrevMultiplePressStartCount = this.myPrevMultiplePressStartCount;\r\n        value.myMultiplePressEndCount = this.myMultiplePressEndCount;\r\n        value.myPrevMultiplePressEndCount = this.myPrevMultiplePressEndCount;\r\n\r\n        value.myMultipleTouchStartCount = this.myMultipleTouchStartCount;\r\n        value.myPrevMultipleTouchStartCount = this.myPrevMultipleTouchStartCount;\r\n        value.myMultipleTouchEndCount = this.myMultipleTouchEndCount;\r\n        value.myPrevMultipleTouchEndCount = this.myPrevMultipleTouchEndCount;\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class GamepadAxesInfo {\r\n\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n\r\n        this.myHandedness = handedness;\r\n\r\n        this.myAxes = vec2_create(0, 0); // this.myAxes[0] is X,  this.myAxes[1] is Y\r\n        this.myPrevAxes = vec2_create(0, 0);\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getAxes() {\r\n        return this.myAxes;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadAxesInfo(this.myID, this.myHandedness);\r\n        value.myAxes.vec2_copy(this.myAxes);\r\n        value.myPrevAxes.vec2_copy(this.myPrevAxes);\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class GamepadPulseInfo {\r\n\r\n    constructor() {\r\n        this.myIntensity = 0.0;\r\n        this.myDuration = 0.0;\r\n\r\n        this.myIsDevicePulsing = false; // true if the gamepad actually sent a request to pulse to the device\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadPulseInfo();\r\n        value.myIntensity = this.myIntensity;\r\n        value.myDuration = this.myDuration;\r\n        value.myIsDevicePulsing = this.myIsDevicePulsing;\r\n\r\n        return value;\r\n    }\r\n}", "import { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../cauldron/wl/engine_globals\";\r\n\r\nexport class GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        this._myHandPose = handPose;\r\n\r\n        this._myManageHandPose = false;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.getHandPose().getHandedness();\r\n    }\r\n\r\n    getHandPose() {\r\n        return this._myHandPose;\r\n    }\r\n\r\n    getEngine() {\r\n        return this.getHandPose().getEngine();\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    setManageHandPose(manageHandPose) {\r\n        this._myManageHandPose = manageHandPose;\r\n    }\r\n\r\n    isManagingHandPose() {\r\n        return this._myManageHandPose;\r\n    }\r\n\r\n    start() {\r\n        if (this.getHandPose() && this._myManageHandPose) {\r\n            this.getHandPose().start();\r\n        }\r\n\r\n        this._startHook();\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this.getHandPose() && this._myManageHandPose) {\r\n            this.getHandPose().update(dt);\r\n        }\r\n\r\n        this._preUpdateHook(dt);\r\n    }\r\n\r\n    postUpdate(dt) {\r\n        this._postUpdateHook(dt);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        let hapticActuators = [];\r\n        return hapticActuators;\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _startHook() {\r\n\r\n    }\r\n\r\n    _preUpdateHook(dt) {\r\n\r\n    }\r\n\r\n    _postUpdateHook(dt) {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return vec2_create(0, 0);\r\n    }\r\n}", "import { Handedness } from \"../../cauldron/input_types\";\r\nimport { HandPose } from \"../../pose/hand_pose\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class ClassicGamepadCore extends GamepadCore {\r\n\r\n    constructor(gamepadIndex, handPose) {\r\n        super(handPose);\r\n\r\n        this._myGamepadIndex = gamepadIndex;    // null means any active gamepad\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        let classicGamepad = this._getClassicGamepad();\r\n        return classicGamepad != null && (classicGamepad.connected == null || classicGamepad.connected);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            let button = null;\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[4];\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[6];\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[10];\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[13];\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[12];\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[5];\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[7];\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[11];\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[0];\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[3];\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (button != null) {\r\n                this._myButtonData.myIsPressed = button.pressed;\r\n                this._myButtonData.myIsTouched = button.touched;\r\n                this._myButtonData.myValue = button.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                this._myAxesData[0] = classicGamepad.axes[0];\r\n                this._myAxesData[1] = classicGamepad.axes[1];\r\n            } else {\r\n                this._myAxesData[0] = classicGamepad.axes[2];\r\n                this._myAxesData[1] = classicGamepad.axes[3];\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (classicGamepad.hapticActuators != null && classicGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...classicGamepad.hapticActuators);\r\n            }\r\n\r\n            if (classicGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(classicGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _getClassicGamepad() {\r\n        let classicGamepad = null;\r\n\r\n        let gamepads = navigator.getGamepads();\r\n        if (this._myGamepadIndex != null) {\r\n            if (this._myGamepadIndex < gamepads.length) {\r\n                classicGamepad = gamepads[this._myGamepadIndex];\r\n            }\r\n        } else {\r\n            for (let gamepad of gamepads) {\r\n                if (gamepad != null && (gamepad.connected == null || gamepad.connected)) {\r\n                    classicGamepad = gamepad;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return classicGamepad;\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\n\r\nlet _myInputManagers = new WeakMap();\r\n\r\nexport function getInputManager(engine = getMainEngine()) {\r\n    return _myInputManagers.get(engine);\r\n}\r\n\r\nexport function setInputManager(inputManager, engine = getMainEngine()) {\r\n    _myInputManagers.set(engine, inputManager);\r\n}\r\n\r\nexport function removeInputManager(engine = getMainEngine()) {\r\n    _myInputManagers.delete(engine);\r\n}\r\n\r\nexport function hasInputManager(engine = getMainEngine()) {\r\n    return _myInputManagers.has(engine);\r\n}\r\n\r\nexport function getMouse(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getMouse();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getKeyboard(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getKeyboard();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getGamepadsManager(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getGamepads(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getGamepads();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getLeftGamepad(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getLeftGamepad();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRightGamepad(engine = getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getRightGamepad();\r\n    }\r\n\r\n    return null;\r\n}", "export let KeyID = {\r\n    _0: \"0\",\r\n    _1: \"1\",\r\n    _2: \"2\",\r\n    _3: \"3\",\r\n    _4: \"4\",\r\n    _5: \"5\",\r\n    _6: \"6\",\r\n    _7: \"7\",\r\n    _8: \"8\",\r\n    _9: \"9\",\r\n\r\n    A: \"A\",\r\n    B: \"B\",\r\n    C: \"C\",\r\n    D: \"D\",\r\n    E: \"E\",\r\n    F: \"F\",\r\n    G: \"G\",\r\n    H: \"H\",\r\n    I: \"I\",\r\n    J: \"J\",\r\n    K: \"K\",\r\n    L: \"L\",\r\n    M: \"M\",\r\n    N: \"N\",\r\n    O: \"O\",\r\n    P: \"P\",\r\n    Q: \"Q\",\r\n    R: \"R\",\r\n    S: \"S\",\r\n    T: \"T\",\r\n    U: \"U\",\r\n    V: \"V\",\r\n    W: \"W\",\r\n    X: \"X\",\r\n    Y: \"Y\",\r\n    Z: \"Z\",\r\n\r\n    a: \"a\",\r\n    b: \"b\",\r\n    c: \"c\",\r\n    d: \"d\",\r\n    e: \"e\",\r\n    f: \"f\",\r\n    g: \"g\",\r\n    h: \"h\",\r\n    i: \"i\",\r\n    j: \"j\",\r\n    k: \"k\",\r\n    l: \"l\",\r\n    m: \"m\",\r\n    n: \"n\",\r\n    o: \"o\",\r\n    p: \"p\",\r\n    q: \"q\",\r\n    r: \"r\",\r\n    s: \"s\",\r\n    t: \"t\",\r\n    u: \"u\",\r\n    v: \"v\",\r\n    w: \"w\",\r\n    x: \"x\",\r\n    y: \"y\",\r\n    z: \"z\",\r\n\r\n    UP: \"ArrowUp\",\r\n    DOWN: \"ArrowDown\",\r\n    LEFT: \"ArrowLeft\",\r\n    RIGHT: \"ArrowRight\",\r\n\r\n    SPACE: \" \",\r\n    ENTER: \"Enter\",\r\n    BACKSPACE: \"Backspace\",\r\n    ESC: \"Escape\",\r\n\r\n    SHIFT_LEFT: \"ShiftLeft\",\r\n    SHIFT_RIGHT: \"ShiftRight\",\r\n    CONTROL_LEFT: \"ControlLeft\",\r\n    CONTROL_RIGHT: \"ControlRight\",\r\n    ALT_LEFT: \"AltLeft\",\r\n    ALT_RIGHT: \"AltRight\"\r\n};\r\n\r\nexport class Keyboard {\r\n\r\n    constructor() {\r\n        this._myKeyInfos = new Map();\r\n\r\n        for (let key in KeyID) {\r\n            this.addKey(KeyID[key]);\r\n        }\r\n    }\r\n\r\n    isKeyPressed(keyID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressed = this._myKeyInfos.get(keyID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isKeyPressStart(keyID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressStart = this._myKeyInfos.get(keyID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isKeyPressEnd(keyID) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressEnd = this._myKeyInfos.get(keyID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    addKey(keyID) {\r\n        this._myKeyInfos.set(keyID, this._createKeyInfo());\r\n    }\r\n\r\n    start() {\r\n        window.addEventListener(\"keydown\", this._keyDown.bind(this));\r\n        window.addEventListener(\"keyup\", this._keyUp.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        if (!document.hasFocus()) {\r\n            for (let keyInfo of this._myKeyInfos.values()) {\r\n                if (keyInfo.myIsPressed) {\r\n                    keyInfo.myIsPressed = false;\r\n                    keyInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let keyInfo of this._myKeyInfos.values()) {\r\n            keyInfo.myIsPressStart = keyInfo.myIsPressStartToProcess;\r\n            keyInfo.myIsPressEnd = keyInfo.myIsPressEndToProcess;\r\n            keyInfo.myIsPressStartToProcess = false;\r\n            keyInfo.myIsPressEndToProcess = false;\r\n        }\r\n    }\r\n\r\n    _keyDown(event) {\r\n        this._keyPressedChanged(event.key, true);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, true);\r\n        }\r\n    }\r\n\r\n    _keyUp(event) {\r\n        this._keyPressedChanged(event.key, false);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, false);\r\n        }\r\n    }\r\n\r\n    _keyPressedChanged(keyID, isPressed) {\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            let keyInfo = this._myKeyInfos.get(keyID);\r\n\r\n            if (isPressed) {\r\n                keyInfo.myIsPressed = true;\r\n                keyInfo.myIsPressStartToProcess = true;\r\n            } else {\r\n                keyInfo.myIsPressed = false;\r\n                keyInfo.myIsPressEndToProcess = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _createKeyInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n}", "import { getKeyboard } from \"../../cauldron/input_globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { KeyID } from \"../../cauldron/keyboard\";\r\nimport { HandPose } from \"../../pose/hand_pose\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class KeyboardGamepadCore extends GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        super(handPose);\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        let keyboard = getKeyboard(this.getEngine());\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.E) || keyboard.isKeyPressed(KeyID.e);\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.Q) || keyboard.isKeyPressed(KeyID.q);\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.X) || keyboard.isKeyPressed(KeyID.x);\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.R) || keyboard.isKeyPressed(KeyID.r);\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.C) || keyboard.isKeyPressed(KeyID.c);\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.F) || keyboard.isKeyPressed(KeyID.f);\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.V) || keyboard.isKeyPressed(KeyID.v);\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.U) || keyboard.isKeyPressed(KeyID.u);\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.O) || keyboard.isKeyPressed(KeyID.o);\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.M) || keyboard.isKeyPressed(KeyID.m);\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.Y) || keyboard.isKeyPressed(KeyID.y);\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.N) || keyboard.isKeyPressed(KeyID.n);\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.H) || keyboard.isKeyPressed(KeyID.h);\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = keyboard.isKeyPressed(KeyID.B) || keyboard.isKeyPressed(KeyID.b);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myButtonData.myIsPressed) {\r\n            this._myButtonData.myIsTouched = true;\r\n            this._myButtonData.myValue = 1;\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        let keyboard = getKeyboard(this.getEngine());\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                if (keyboard.isKeyPressed(KeyID.W) || keyboard.isKeyPressed(KeyID.w)) this._myAxesData[1] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.S) || keyboard.isKeyPressed(KeyID.s)) this._myAxesData[1] += -1.0;\r\n                if (keyboard.isKeyPressed(KeyID.D) || keyboard.isKeyPressed(KeyID.d)) this._myAxesData[0] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.A) || keyboard.isKeyPressed(KeyID.a)) this._myAxesData[0] += -1.0;\r\n            } else {\r\n                if (keyboard.isKeyPressed(KeyID.I) || keyboard.isKeyPressed(KeyID.i) || keyboard.isKeyPressed(KeyID.UP)) this._myAxesData[1] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.K) || keyboard.isKeyPressed(KeyID.k) || keyboard.isKeyPressed(KeyID.DOWN)) this._myAxesData[1] += -1.0;\r\n                if (keyboard.isKeyPressed(KeyID.L) || keyboard.isKeyPressed(KeyID.l) || keyboard.isKeyPressed(KeyID.RIGHT)) this._myAxesData[0] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.J) || keyboard.isKeyPressed(KeyID.j) || keyboard.isKeyPressed(KeyID.LEFT)) this._myAxesData[0] += -1.0;\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n}", "// xr-standard mapping is assumed\r\n\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class XRGamepadCore extends GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        super(handPose);\r\n\r\n        this._mySelectPressed = false;\r\n        this._mySqueezePressed = false;\r\n\r\n        this._myIsXRSessionActive = false;\r\n        this._myInputSource = null;\r\n        this._myGamepad = null;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        // connected == null is to fix webxr emulator that leaves that field undefined\r\n        return this._myIsXRSessionActive && this._myGamepad != null && (this._myGamepad.connected == null || this._myGamepad.connected);\r\n    }\r\n\r\n    _startHook() {\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this.getEngine());\r\n    }\r\n\r\n    _preUpdateHook(dt) {\r\n        this._myInputSource = this.getHandPose().getInputSource();\r\n        if (this._myInputSource != null) {\r\n            this._myGamepad = this._myInputSource.gamepad;\r\n        } else {\r\n            this._myGamepad = null;\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID < this._myGamepad.buttons.length) {\r\n                let gamepadButton = this._myGamepad.buttons[buttonID];\r\n\r\n                if (buttonID != GamepadButtonID.SELECT && buttonID != GamepadButtonID.SQUEEZE) {\r\n                    this._myButtonData.myIsPressed = gamepadButton.pressed;\r\n                } else {\r\n                    this._myButtonData.myIsPressed = this._getSpecialButtonPressed(buttonID);\r\n                }\r\n\r\n                this._myButtonData.myIsTouched = gamepadButton.touched;\r\n                this._myButtonData.myValue = gamepadButton.value;\r\n            } else if (buttonID == GamepadButtonID.TOP_BUTTON && this._myGamepad.buttons.length >= 3) {\r\n                // This way if you are using a basic touch gamepad, top button will work anyway\r\n\r\n                let touchButton = this._myGamepad.buttons[2];\r\n                this._myButtonData.myIsPressed = touchButton.pressed;\r\n                this._myButtonData.myIsTouched = touchButton.touched;\r\n                this._myButtonData.myValue = touchButton.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            let internalAxes = this._myGamepad.axes;\r\n            if (internalAxes.length == 4) {\r\n                // In this case it could be both touch axes or thumbstick axes, that depends on the gamepad\r\n                // to support both I simply choose the absolute max value (unused axes will always be 0)\r\n\r\n                // X\r\n                if (Math.abs(internalAxes[0]) > Math.abs(internalAxes[2])) {\r\n                    this._myAxesData[0] = internalAxes[0];\r\n                } else {\r\n                    this._myAxesData[0] = internalAxes[2];\r\n                }\r\n\r\n                // Y\r\n                if (Math.abs(internalAxes[1]) > Math.abs(internalAxes[3])) {\r\n                    this._myAxesData[1] = internalAxes[1];\r\n                } else {\r\n                    this._myAxesData[1] = internalAxes[3];\r\n                }\r\n\r\n            } else if (internalAxes.length == 2) {\r\n                this._myAxesData[0] = internalAxes[0];\r\n                this._myAxesData[1] = internalAxes[1];\r\n            }\r\n\r\n            // Y axis is recorded negative when thumbstick is pressed forward for weird reasons\r\n            this._myAxesData[1] = -this._myAxesData[1];\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myGamepad.hapticActuators != null && this._myGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...this._myGamepad.hapticActuators);\r\n            }\r\n\r\n            if (this._myGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(this._myGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    // This is to be more compatible\r\n    _getSpecialButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID == GamepadButtonID.SELECT) {\r\n                isPressed = this._mySelectPressed;\r\n            } else if (buttonID == GamepadButtonID.SQUEEZE) {\r\n                isPressed = this._mySqueezePressed;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener(\"selectstart\", this._selectStart.bind(this));\r\n        session.addEventListener(\"selectend\", this._selectEnd.bind(this));\r\n\r\n        session.addEventListener(\"squeezestart\", this._squeezeStart.bind(this));\r\n        session.addEventListener(\"squeezeend\", this._squeezeEnd.bind(this));\r\n\r\n        this._myIsXRSessionActive = true;\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myIsXRSessionActive = false;\r\n    }\r\n\r\n    // Select and Squeeze are managed this way to be more compatible\r\n    _selectStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = true;\r\n        }\r\n    }\r\n\r\n    _selectEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = false;\r\n        }\r\n    }\r\n\r\n    _squeezeStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = true;\r\n        }\r\n    }\r\n\r\n    _squeezeEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = false;\r\n        }\r\n    }\r\n}", "import { vec2_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { GamepadAxesEvent, GamepadAxesID, GamepadAxesInfo, GamepadButtonEvent, GamepadButtonID, GamepadButtonInfo, GamepadPulseInfo } from \"./gamepad_buttons\";\r\n\r\nexport class BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myButtonInfos = [];\r\n        for (let key in GamepadButtonID) {\r\n            this._myButtonInfos[GamepadButtonID[key]] = new GamepadButtonInfo(GamepadButtonID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myAxesInfos = [];\r\n        for (let key in GamepadAxesID) {\r\n            this._myAxesInfos[GamepadAxesID[key]] = new GamepadAxesInfo(GamepadAxesID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myButtonCallbacks = [];   // Signature: callback(ButtonInfo, Gamepad)\r\n        for (let key in GamepadButtonID) {\r\n            this._myButtonCallbacks[GamepadButtonID[key]] = [];\r\n            for (let eventKey in GamepadButtonEvent) {\r\n                this._myButtonCallbacks[GamepadButtonID[key]][GamepadButtonEvent[eventKey]] = new Map();\r\n            }\r\n        }\r\n\r\n        this._myAxesCallbacks = [];   // Signature: callback(AxesInfo, Gamepad)\r\n        for (let key in GamepadAxesID) {\r\n            this._myAxesCallbacks[GamepadAxesID[key]] = [];\r\n            for (let eventKey in GamepadAxesEvent) {\r\n                this._myAxesCallbacks[GamepadAxesID[key]][GamepadAxesEvent[eventKey]] = new Map();\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo = new GamepadPulseInfo();\r\n\r\n        // Setup\r\n\r\n        this._myMultiplePressMaxDelay = 0.4;\r\n        this._myMultipleTouchMaxDelay = 0.4;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getButtonInfo(buttonID) {\r\n        return this._myButtonInfos[buttonID];\r\n    }\r\n\r\n    registerButtonEventListener(buttonID, buttonEvent, id, callback) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterButtonEventListener(buttonID, buttonEvent, id) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].delete(id);\r\n    }\r\n\r\n    getAxesInfo(axesID) {\r\n        return this._myAxesInfos[axesID];\r\n    }\r\n\r\n    registerAxesEventListener(axesID, axesEvent, id, callback) {\r\n        this._myAxesCallbacks[axesID][axesEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterAxesEventListener(axesID, axesEvent, id) {\r\n        this._myAxesCallbacks[axesID][axesEvent].delete(id);\r\n    }\r\n\r\n    pulse(intensity, duration = 0) {\r\n        this._myPulseInfo.myIntensity = Math.pp_clamp(intensity, 0, 1);\r\n        this._myPulseInfo.myDuration = Math.max(duration, 0);\r\n    }\r\n\r\n    stopPulse() {\r\n        this._myPulseInfo.myIntensity = 0;\r\n        this._myPulseInfo.myDuration = 0;\r\n    }\r\n\r\n    isPulsing() {\r\n        return this._myPulseInfo.myIntensity > 0 || this._myPulseInfo.myDuration > 0;\r\n    }\r\n\r\n    getPulseInfo() {\r\n        return this._myPulseInfo;\r\n    }\r\n\r\n    getMultiplePressMaxDelay() {\r\n        return this._myMultiplePressMaxDelay;\r\n    }\r\n\r\n    setMultiplePressMaxDelay(maxDelay) {\r\n        this._myMultiplePressMaxDelay = maxDelay;\r\n    }\r\n\r\n    getMultipleTouchMaxDelay() {\r\n        return this._myMultipleTouchMaxDelay;\r\n    }\r\n\r\n    setMultipleTouchMaxDelay(maxDelay) {\r\n        this._myMultipleTouchMaxDelay = maxDelay;\r\n    }\r\n\r\n    // The following functions should be re-implemented in the actual class\r\n\r\n    getHandPose() {\r\n        return null;\r\n    }\r\n\r\n    _start() {\r\n\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        let hapticActuator = [];\r\n        return hapticActuator;\r\n    }\r\n\r\n    // The above functions should be re-implemented in the actual class\r\n\r\n    start() {\r\n        this._start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._preUpdate(dt);\r\n\r\n        this._preUpdateButtonInfos();\r\n        this._updateButtonInfos();\r\n        this._postUpdateButtonInfos(dt);\r\n\r\n        this._preUpdateAxesInfos();\r\n        this._updateAxesInfos();\r\n        this._postUpdateAxesInfos();\r\n\r\n        this._updatePulse(dt);\r\n\r\n        this._postUpdate(dt);\r\n    }\r\n\r\n    _preUpdateButtonInfos() {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            item.myPrevIsPressed = item.myIsPressed;\r\n            item.myPrevIsTouched = item.myIsTouched;\r\n            item.myPrevValue = item.myValue;\r\n        });\r\n    }\r\n\r\n    _updateButtonInfos() {\r\n        this._updateSingleButtonInfo(GamepadButtonID.SELECT);\r\n        this._updateSingleButtonInfo(GamepadButtonID.SQUEEZE);\r\n        this._updateSingleButtonInfo(GamepadButtonID.TOUCHPAD);\r\n        this._updateSingleButtonInfo(GamepadButtonID.THUMBSTICK);\r\n        this._updateSingleButtonInfo(GamepadButtonID.BOTTOM_BUTTON);\r\n        this._updateSingleButtonInfo(GamepadButtonID.TOP_BUTTON);\r\n        this._updateSingleButtonInfo(GamepadButtonID.THUMB_REST);\r\n    }\r\n\r\n    _updateSingleButtonInfo(buttonID) {\r\n        let buttonInfo = this._myButtonInfos[buttonID];\r\n        let buttonData = this._getButtonData(buttonID);\r\n\r\n        buttonInfo.myIsPressed = buttonData.myIsPressed;\r\n        buttonInfo.myIsTouched = buttonData.myIsTouched;\r\n        buttonInfo.myValue = buttonData.myValue;\r\n    }\r\n\r\n    _postUpdateButtonInfos(dt) {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            if (item.myIsPressed) {\r\n                item.myTimePressed += dt;\r\n                if (!item.myPrevIsPressed) {\r\n                    item.myMultiplePressStartCount += 1;\r\n\r\n                    item.myPrevTimeNotPressed = item.myTimeNotPressed;\r\n                    item.myTimeNotPressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotPressed + item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotPressed += dt;\r\n                if (item.myPrevIsPressed) {\r\n                    item.myMultiplePressEndCount += 1;\r\n\r\n                    item.myPrevTimePressed = item.myTimePressed;\r\n                    item.myTimePressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimePressed + item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n            }\r\n\r\n            if (item.myIsTouched) {\r\n                item.myTimeTouched += dt;\r\n                if (!item.myPrevIsTouched) {\r\n                    item.myMultipleTouchStartCount += 1;\r\n\r\n                    item.myPrevTimeNotTouched = item.myTimeNotTouched;\r\n                    item.myTimeNotTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotTouched + item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotTouched += dt;\r\n                if (item.myPrevIsTouched) {\r\n                    item.myMultipleTouchEndCount += 1;\r\n\r\n                    item.myPrevTimeTouched = item.myTimeTouched;\r\n                    item.myTimeTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeTouched + item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        for (let key in GamepadButtonID) {\r\n            let buttonInfo = this._myButtonInfos[GamepadButtonID[key]];\r\n            let buttonCallbacks = this._myButtonCallbacks[GamepadButtonID[key]];\r\n\r\n            // PRESSED\r\n            if (buttonInfo.myIsPressed && !buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.PRESS_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsPressed && buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.PRESS_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsPressed) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.NOT_PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            // TOUCHED\r\n            if (buttonInfo.myIsTouched && !buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.TOUCH_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsTouched && buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.TOUCH_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsTouched) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.NOT_TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            // VALUE\r\n            if (buttonInfo.myValue != buttonInfo.myPrevValue) {\r\n                let callbacks = buttonCallbacks[GamepadButtonEvent.VALUE_CHANGED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            // ALWAYS\r\n            let callbacks = buttonCallbacks[GamepadButtonEvent.ALWAYS];\r\n            this._triggerCallbacks(callbacks, buttonInfo);\r\n        }\r\n\r\n        this._mySelectStart = false;\r\n        this._mySelectEnd = false;\r\n        this._mySqueezeStart = false;\r\n        this._mySqueezeEnd = false;\r\n    }\r\n\r\n    _preUpdateAxesInfos() {\r\n        this._myAxesInfos.forEach(function (item) {\r\n            item.myPrevAxes[0] = item.myAxes[0];\r\n            item.myPrevAxes[1] = item.myAxes[1];\r\n        });\r\n    }\r\n\r\n    _updateAxesInfos() {\r\n        this._updateSingleAxesInfo(GamepadAxesID.THUMBSTICK);\r\n    }\r\n\r\n    _updateSingleAxesInfo(axesID) {\r\n        let axesInfo = this._myAxesInfos[axesID];\r\n        let axesData = this._getAxesData(axesID);\r\n\r\n        axesInfo.myAxes[0] = axesData[0];\r\n        axesInfo.myAxes[1] = axesData[1];\r\n    }\r\n\r\n    _postUpdateAxesInfos() {\r\n        for (let key in GamepadAxesID) {\r\n            let axesInfo = this._myAxesInfos[GamepadAxesID[key]];\r\n            let axesCallbacks = this._myAxesCallbacks[GamepadAxesID[key]];\r\n\r\n            // X CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0]) {\r\n                let callbacks = axesCallbacks[GamepadAxesEvent.X_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            // Y CHANGED\r\n            if (axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let callbacks = axesCallbacks[GamepadAxesEvent.Y_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            // AXES CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0] ||\r\n                axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let callbacks = axesCallbacks[GamepadAxesEvent.AXES_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            // ALWAYS        \r\n            let callbacks = axesCallbacks[GamepadAxesEvent.ALWAYS];\r\n            this._triggerCallbacks(callbacks, axesInfo);\r\n        }\r\n    }\r\n\r\n    _updatePulse(dt) {\r\n        if (this._myPulseInfo.myIsDevicePulsing || this._myPulseInfo.myIntensity > 0) {\r\n            let hapticActuators = this._getHapticActuators();\r\n            if (hapticActuators.length > 0) {\r\n                if (this._myPulseInfo.myIntensity > 0) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.pulse(this._myPulseInfo.myIntensity, 1000); // Duration is managed by this class\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = true;\r\n                } else if (this._myPulseInfo.myIsDevicePulsing) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.reset();\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = false;\r\n                }\r\n            } else {\r\n                this._myPulseInfo.myIsDevicePulsing = false;\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo.myDuration -= dt;\r\n        if (this._myPulseInfo.myDuration <= 0) {\r\n            this._myPulseInfo.myIntensity = 0;\r\n            this._myPulseInfo.myDuration = 0;\r\n        }\r\n    }\r\n\r\n    _triggerCallbacks(callbacks, info) {\r\n        for (let callback of callbacks.values()) {\r\n            callback(info, this);\r\n        }\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return vec2_create(0, 0);\r\n    }\r\n}", "import { BaseGamepad } from \"./base_gamepad\";\r\n\r\nexport class UniversalGamepad extends BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        super(handedness);\r\n\r\n        this._myGamepadCores = new Map();\r\n\r\n        this._myStarted = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n\r\n    }\r\n\r\n    addGamepadCore(id, gamepadCore) {\r\n        if (gamepadCore.getHandedness() == this.getHandedness()) {\r\n            this._myGamepadCores.set(id, gamepadCore);\r\n            if (this._myStarted) {\r\n                gamepadCore.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    getGamepadCore(id) {\r\n        return this._myGamepadCores.get(id);\r\n    }\r\n\r\n    removeGamepadCore(id) {\r\n        let gamepadCore = this._myGamepadCores.get(id);\r\n        if (gamepadCore) {\r\n            this._myGamepadCores.delete(id);\r\n        }\r\n    }\r\n\r\n    removeAllGamepadCores() {\r\n        for (let id of this._myGamepadCores.keys()) {\r\n            this.removeGamepadCore(id);\r\n        }\r\n    }\r\n\r\n    getHandPose() {\r\n        let handPose = null;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let currentCoreHandPose = core.getHandPose();\r\n                if (handPose == null || (currentCoreHandPose != null && currentCoreHandPose.isValid())) {\r\n                    handPose = currentCoreHandPose;\r\n                }\r\n            }\r\n\r\n            if (handPose != null && handPose.isValid()) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return handPose;\r\n    }\r\n\r\n    _start() {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.start();\r\n        }\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.preUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.postUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreButtonData = core.getButtonData(buttonID);\r\n                this._myButtonData.myIsPressed = this._myButtonData.myIsPressed || coreButtonData.myIsPressed;\r\n                this._myButtonData.myIsTouched = this._myButtonData.myIsTouched || coreButtonData.myIsTouched;\r\n                if (Math.abs(coreButtonData.myValue) > Math.abs(this._myButtonData.myValue)) {\r\n                    this._myButtonData.myValue = coreButtonData.myValue;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreAxesData = core.getAxesData(axesID);\r\n\r\n                if (Math.abs(coreAxesData[0]) > Math.abs(this._myAxesData[0])) {\r\n                    this._myAxesData[0] = coreAxesData[0];\r\n                }\r\n\r\n                if (Math.abs(coreAxesData[1]) > Math.abs(this._myAxesData[1])) {\r\n                    this._myAxesData[1] = coreAxesData[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                this._myHapticActuators.push(...core.getHapticActuators());\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n}", "import { Handedness } from \"../../cauldron/input_types\";\r\nimport { UniversalGamepad } from \"../universal_gamepad\";\r\n\r\nexport class GamepadsManager {\r\n\r\n    constructor() {\r\n        this._myLeftGamepad = new UniversalGamepad(Handedness.LEFT);\r\n        this._myRightGamepad = new UniversalGamepad(Handedness.RIGHT);\r\n    }\r\n\r\n    start() {\r\n        this._myLeftGamepad.start();\r\n        this._myRightGamepad.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLeftGamepad.update(dt);\r\n        this._myRightGamepad.update(dt);\r\n    }\r\n\r\n    getLeftGamepad() {\r\n        return this._myLeftGamepad;\r\n    }\r\n\r\n    getRightGamepad() {\r\n        return this._myRightGamepad;\r\n    }\r\n\r\n    getGamepad(handedness) {\r\n        let gamepad = null;\r\n\r\n        switch (handedness) {\r\n            case Handedness.LEFT:\r\n                gamepad = this._myLeftGamepad;\r\n                break;\r\n            case Handedness.RIGHT:\r\n                gamepad = this._myRightGamepad;\r\n                break;\r\n            default:\r\n                gamepad = null;\r\n        }\r\n\r\n        return gamepad;\r\n    }\r\n\r\n    getGamepads() {\r\n        let gamepads = [];\r\n\r\n        gamepads[Handedness.LEFT] = this._myLeftGamepad;\r\n        gamepads[Handedness.RIGHT] = this._myRightGamepad;\r\n\r\n        return gamepads;\r\n    }\r\n}", "import { ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../cauldron/cauldron/timer\";\r\nimport { RaycastResults } from \"../../cauldron/physics/physics_raycast_data\";\r\nimport { PhysicsUtils } from \"../../cauldron/physics/physics_utils\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { mat4_create, quat_create, vec2_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { getPlayerObjects } from \"../../pp/player_objects_global\";\r\n\r\nexport let MouseButtonID = {\r\n    LEFT: 0,\r\n    MIDDLE: 1,\r\n    RIGHT: 2\r\n};\r\n\r\n// #TODO Refactor Mouse/Keyboard/Gamepad and create a sort of parent ButtonHandler that have the base ButtonInfo and all of them inherit\r\nexport class Mouse {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n\r\n        this._myEngine = engine;\r\n\r\n        this._myButtonInfos = new Map();\r\n        for (let key in MouseButtonID) {\r\n            this._myButtonInfos.set(MouseButtonID[key], this._createButtonInfo());\r\n        }\r\n\r\n        this._myPreventContextMenuCallback = this._preventContextMenu.bind(this);\r\n        this._myPreventMiddleButtonScrollCallback = this._preventMiddleButtonScroll.bind(this);\r\n\r\n        this._myInternalMousePosition = vec2_create();\r\n        this._myScreenSize = vec2_create();\r\n        this._updateScreenSize();\r\n\r\n        this._myResetMovingDelay = 0.15;\r\n        this._myResetMovingTimer = new Timer(this._myResetMovingDelay, false);\r\n        this._myIsMoving = false;\r\n\r\n        this._myIsInsideView = false;\r\n        this._myIsValid = false;\r\n\r\n        this._myPointerUpOnPointerLeave = true;\r\n\r\n        this._myContextMenuActive = true;\r\n        this._myMiddleButtonScrollActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myLastValidPointerEvent = null;\r\n\r\n        this._myPointerEventValidCallbacks = new Map();      // Signature: callback(event)\r\n\r\n        // Support Variables\r\n        this._myProjectionMatrixInverse = mat4_create();\r\n        this._myRotationQuat = quat_create();\r\n        this._myOriginWorld = vec3_create();\r\n        this._myDirectionWorld = vec3_create();\r\n    }\r\n\r\n    start() {\r\n        this._myOnPointerMoveCallback = this._onPointerAction.bind(this, this._onPointerMove.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        this._myOnPointerDownCallback = this._onPointerAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        this._myOnPointerUpCallback = this._onPointerAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        this._myOnPointerLeaveCallback = this._onPointerLeave.bind(this);\r\n        document.body.addEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        this._myOnPointerEnterCallback = this._onPointerEnter.bind(this);\r\n        document.body.addEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        // These are needed to being able to detect for example left and right click together, pointer only allow one down at a time\r\n        this._myOnMouseDownCallback = this._onMouseAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        this._myOnMouseUpCallback = this._onMouseAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myResetMovingTimer.isRunning()) {\r\n            this._myResetMovingTimer.update(dt);\r\n            if (this._myResetMovingTimer.isDone()) {\r\n                this._myResetMovingTimer.reset();\r\n                this._myIsMoving = false;\r\n            }\r\n        }\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            buttonInfo.myIsPressStart = buttonInfo.myIsPressStartToProcess;\r\n            buttonInfo.myIsPressEnd = buttonInfo.myIsPressEndToProcess;\r\n            buttonInfo.myIsPressStartToProcess = false;\r\n            buttonInfo.myIsPressEndToProcess = false;\r\n        }\r\n\r\n        this._updateScreenSize();\r\n\r\n        if (!this.isAnyButtonPressed() && !this._myIsMoving) {\r\n            this._myPointerID = null;\r\n        }\r\n\r\n        if (this._myLastValidPointerEvent != null) {\r\n            let isLastValidPointerEventStillValid = this._isPointerEventValid(this._myLastValidPointerEvent);\r\n            if (!isLastValidPointerEventStillValid) {\r\n                if (this._myIsInsideView) {\r\n                    this._onPointerLeave(this._myLastValidPointerEvent);\r\n                }\r\n\r\n                this._myLastValidPointerEvent = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        document.body.removeEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        document.body.removeEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        document.body.removeEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        document.body.removeEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        document.body.removeEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        document.body.removeEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        document.body.removeEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n\r\n        document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n        document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressed = this._myButtonInfos.get(buttonID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isAnyButtonPressed() {\r\n        let isPressed = false;\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            if (buttonInfo.myIsPressed) {\r\n                isPressed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isButtonPressStart(buttonID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressStart = this._myButtonInfos.get(buttonID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isButtonPressEnd(buttonID = null) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressEnd = this._myButtonInfos.get(buttonID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    isMoving() {\r\n        return this._myIsMoving;\r\n    }\r\n\r\n    isInsideView() {\r\n        return this._myIsInsideView;\r\n    }\r\n\r\n    isTargetingRenderCanvas() {\r\n        return this.isInsideView() && this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.target == this._myEngine.canvas;\r\n    }\r\n\r\n    // The origin and direction are set by the mouse\r\n    raycastWorld(raycastSetup, raycastResults = new RaycastResults()) {\r\n        this.getOriginWorld(raycastSetup.myOrigin);\r\n        this.getDirectionWorld(raycastSetup.myDirection);\r\n        raycastResults = PhysicsUtils.raycast(raycastSetup, raycastResults);\r\n        return raycastResults;\r\n    }\r\n\r\n    getPositionScreen(out = vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = this._myInternalMousePosition[0];\r\n        mousePosition[1] = this._myScreenSize[1] - 1 - this._myInternalMousePosition[1];\r\n        return mousePosition;\r\n    }\r\n\r\n    getPositionScreenNormalized(out = vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = (this._myScreenSize[0] == 0) ? 0 : ((this._myInternalMousePosition[0] / this._myScreenSize[0]) * 2 - 1);\r\n        mousePosition[1] = (this._myScreenSize[1] == 0) ? 0 : (((this._myScreenSize[1] - 1 - this._myInternalMousePosition[1]) / this._myScreenSize[1]) * 2 - 1);\r\n        return mousePosition;\r\n    }\r\n\r\n    getScreenSize() {\r\n        return this._myScreenSize;\r\n    }\r\n\r\n    getPositionWorld(distanceFromCamera, out = vec3_create()) {\r\n        let originWorld = this.getOriginWorld(this._myOriginWorld);\r\n        let directionWorld = this.getDirectionWorld(this._myDirectionWorld);\r\n\r\n        out = originWorld.vec3_add(directionWorld.vec3_scale(distanceFromCamera, out), out);\r\n        return out;\r\n    }\r\n\r\n    getOriginWorld(out = vec3_create()) {\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            getPlayerObjects(this._myEngine).myEyeLeft.pp_getPosition(out); // In theory mouse should not be used inside the session, but may make sense for AR which uses eye left\r\n        } else {\r\n            getPlayerObjects(this._myEngine).myCameraNonVR.pp_getPosition(out);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getDirectionWorld(out = vec3_create()) {\r\n        let right = this._myInternalMousePosition[0] / this._myScreenSize[0];\r\n        let up = this._myInternalMousePosition[1] / this._myScreenSize[1];\r\n\r\n        let directionLocal = out;\r\n        directionLocal.vec3_set(right * 2 - 1, -up * 2 + 1, -1.0);\r\n\r\n        let projectionMatrixInvert = this._myProjectionMatrixInverse;\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            projectionMatrixInvert = getPlayerObjects(this._myEngine).myEyeLeft.pp_getComponent(ViewComponent).projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        } else {\r\n            projectionMatrixInvert = getPlayerObjects(this._myEngine).myCameraNonVR.pp_getComponent(ViewComponent).projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        }\r\n\r\n        directionLocal.vec3_transformMat4(projectionMatrixInvert, directionLocal);\r\n        directionLocal.vec3_normalize(directionLocal);\r\n\r\n        let directionWorld = directionLocal;\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            directionWorld = directionLocal.vec3_transformQuat(getPlayerObjects(this._myEngine).myEyeLeft.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        } else {\r\n            directionWorld = directionLocal.vec3_transformQuat(getPlayerObjects(this._myEngine).myCameraNonVR.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        }\r\n\r\n        directionWorld.vec3_normalize(directionWorld);\r\n\r\n        return out;\r\n    }\r\n\r\n    setTouchValid(touchValid) {\r\n        let callbackID = \"pp_internal_touch_valid_callback\";\r\n        if (touchValid) {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        } else {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.pointerType == \"mouse\";\r\n            });\r\n        }\r\n    }\r\n\r\n    setTargetOnlyRenderCanvas(targetOnlyRenderCanvas) {\r\n        let callbackID = \"pp_internal_target_only_render_canvas_callback\";\r\n        if (targetOnlyRenderCanvas) {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.target == this._myEngine.canvas;\r\n            });\r\n        } else {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        }\r\n    }\r\n\r\n    getLastValidPointerEvent() {\r\n        return this._myLastValidPointerEvent;\r\n    }\r\n\r\n    // Can be used to specify that only some pointerType are valid (eg: mouse, touch, pen) or just some target (eg: this._myEngine.canvas)\r\n    addPointerEventValidCallback(id, callback) {\r\n        this._myPointerEventValidCallbacks.set(id, callback);\r\n    }\r\n\r\n    removePointerEventValidCallback(id) {\r\n        this._myPointerEventValidCallbacks.delete(id);\r\n    }\r\n\r\n    isPointerUpOnPointerLeave() {\r\n        return this._myPointerUpOnPointerLeave;\r\n    }\r\n\r\n    setPointerUpOnPointerLeave(pointerUpOnPointerLeave) {\r\n        this._myPointerUpOnPointerLeave = pointerUpOnPointerLeave;\r\n    }\r\n\r\n    isContextMenuActive() {\r\n        return this._myContextMenuActive;\r\n    }\r\n\r\n    setContextMenuActive(active) {\r\n        if (this._myContextMenuActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n            } else {\r\n                document.body.addEventListener(\"contextmenu\", this._myPreventContextMenuCallback, false);\r\n            }\r\n            this._myContextMenuActive = active;\r\n        }\r\n    }\r\n\r\n    isMiddleButtonScrollActive() {\r\n        return this._myMiddleButtonScrollActive;\r\n    }\r\n\r\n    setMiddleButtonScrollActive(active) {\r\n        if (this._myMiddleButtonScrollActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n            } else {\r\n                document.body.addEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback, false);\r\n            }\r\n            this._myMiddleButtonScrollActive = active;\r\n        }\r\n    }\r\n\r\n    setResetMovingDelay(delay) {\r\n        this._myResetMovingDelay = delay;\r\n    }\r\n\r\n    getResetMovingDelay() {\r\n        return this._myResetMovingDelay;\r\n    }\r\n\r\n    _onPointerAction(actionCallback, event) {\r\n        if (!this._isPointerEventIDValid(event)) return;\r\n\r\n        if (!this._isPointerEventValid(event)) {\r\n            if (this._myIsInsideView) {\r\n                this._onPointerLeave(event);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!this._myIsInsideView) {\r\n            this._onPointerEnter(event);\r\n        }\r\n\r\n        actionCallback(event);\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _onMouseAction(actionCallback, event) {\r\n        if (!this._myIsInsideView) return;\r\n        if (!this._isMouseAllowed()) return;\r\n        if (!this._isPointerEventIDValid(this._myLastValidPointerEvent)) return;\r\n        if (!this._isPointerEventValid(this._myLastValidPointerEvent)) return;\r\n\r\n        actionCallback(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        this._myResetMovingTimer.start(this._myResetMovingDelay);\r\n        this._myIsMoving = true;\r\n    }\r\n\r\n    _onPointerDown(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (!buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = true;\r\n            buttonInfo.myIsPressStartToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = false;\r\n            buttonInfo.myIsPressEndToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsInsideView || this._myLastValidPointerEvent == null || event.pointerId != this._myLastValidPointerEvent.pointerId) return;\r\n\r\n        this._myIsInsideView = false;\r\n\r\n        this._myIsMoving = false;\r\n\r\n        if (this._myPointerUpOnPointerLeave) {\r\n            for (let buttonInfo of this._myButtonInfos.values()) {\r\n                if (buttonInfo.myIsPressed) {\r\n                    buttonInfo.myIsPressed = false;\r\n                    buttonInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._myPointerID = null;\r\n    }\r\n\r\n    _onPointerEnter(event) {\r\n        if ((this._myIsInsideView && this._myPointerID != null) || !this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        this._myIsInsideView = true;\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _preventContextMenu(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    _preventMiddleButtonScroll(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        if (event.button == 1) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _updatePositionAndScreen(event) {\r\n        this._updateScreenSize();\r\n        this._myInternalMousePosition[0] = event.clientX;\r\n        this._myInternalMousePosition[1] = event.clientY;\r\n\r\n        this._myIsValid = true;\r\n    }\r\n\r\n    _updateScreenSize() {\r\n        let bounds = document.body.getBoundingClientRect();\r\n        this._myScreenSize[0] = bounds.width;\r\n        this._myScreenSize[1] = bounds.height;\r\n    }\r\n\r\n    _updatePointerData(event) {\r\n        this._myPointerID = event.pointerId;\r\n        this._myLastValidPointerEvent = event;\r\n    }\r\n\r\n    _isPointerEventIDValid(event) {\r\n        if (event == null) return false;\r\n\r\n        return this._myPointerID == null || this._myPointerID == event.pointerId;\r\n    }\r\n\r\n    _isPointerEventValid(event) {\r\n        if (event == null) return false;\r\n\r\n        let isValid = true;\r\n\r\n        for (let callback of this._myPointerEventValidCallbacks.values()) {\r\n            if (!callback(event)) {\r\n                isValid = false;\r\n                break;\r\n            };\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    _isMouseAllowed() {\r\n        // Mouse events are valid only if the last pointer event was a mouse (id==1)\r\n        return this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.pointerId == 1;\r\n    }\r\n\r\n    _createButtonInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { GamepadsManager } from \"../gamepad/cauldron/gamepads_manager\";\r\nimport { Keyboard } from \"./keyboard\";\r\nimport { Mouse } from \"./mouse\";\r\n\r\nexport class InputManager {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myMouse = new Mouse(engine);\r\n        this._myKeyboard = new Keyboard();\r\n        this._myGamepadsManager = new GamepadsManager(engine);\r\n    }\r\n\r\n    start() {\r\n        this._myMouse.start();\r\n        this._myKeyboard.start();\r\n        this._myGamepadsManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMouse.update(dt);\r\n        this._myKeyboard.update(dt);\r\n        this._myGamepadsManager.update(dt);\r\n    }\r\n\r\n    getMouse() {\r\n        return this._myMouse;\r\n    }\r\n\r\n    getKeyboard() {\r\n        return this._myKeyboard;\r\n    }\r\n\r\n    getGamepadsManager() {\r\n        return this._myGamepadsManager;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { hasToolEnabled, isToolEnabled, removeToolEnabled, setToolEnabled } from \"../tool_globals\";\r\n\r\nexport class EnableToolsComponent extends Component {\r\n    static TypeName = \"pp-enable-tools\";\r\n    static Properties = {\r\n        _myEnable: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myToolEnabled = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasToolEnabled(this.engine)) {\r\n            this._myToolEnabled = this._myEnable;\r\n\r\n            setToolEnabled(this._myToolEnabled, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myToolEnabled != null && isToolEnabled(this.engine) == this._myToolEnabled) {\r\n            removeToolEnabled(this.engine);\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\n\r\nlet _myToolEnableds = new WeakMap();\r\n\r\nexport function isToolEnabled(engine = getMainEngine()) {\r\n    return _myToolEnableds.get(engine);\r\n}\r\n\r\nexport function setToolEnabled(toolEnabled, engine = getMainEngine()) {\r\n    _myToolEnableds.set(engine, toolEnabled);\r\n}\r\n\r\nexport function removeToolEnabled(engine = getMainEngine()) {\r\n    _myToolEnableds.delete(engine);\r\n}\r\n\r\nexport function hasToolEnabled(engine = getMainEngine()) {\r\n    return _myToolEnableds.has(engine);\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { hasDebugEnabled, isDebugEnabled, removeDebugEnabled, setDebugEnabled } from \"../debug_globals\";\r\n\r\nexport class EnableDebugsComponent extends Component {\r\n    static TypeName = \"pp-enable-debugs\";\r\n    static Properties = {\r\n        _myEnable: Property.bool(true),\r\n    };\r\n\r\n    init() {\r\n        this._myDebugEnabled = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasDebugEnabled(this.engine)) {\r\n            this._myDebugEnabled = this._myEnable;\r\n\r\n            setDebugEnabled(this._myDebugEnabled, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDebugEnabled != null && isDebugEnabled(this.engine) == this._myDebugEnabled) {\r\n            removeDebugEnabled(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { MeshUtils } from \"../../cauldron/utils/mesh_utils\";\r\nimport { DefaultResources } from \"../default_resources\";\r\nimport { getDefaultResources, hasDefaultResources, removeDefaultResources, setDefaultResources } from \"../default_resources_global\";\r\n\r\nexport class GetDefaultResourcesComponent extends Component {\r\n    static TypeName = \"pp-get-default-resources\";\r\n    static Properties = {\r\n        _myPlane: Property.mesh(),\r\n        _myCube: Property.mesh(),\r\n        _mySphere: Property.mesh(),\r\n        _myCone: Property.mesh(),\r\n        _myCylinder: Property.mesh(),\r\n        _myCircle: Property.mesh(),\r\n\r\n        _myFlatOpaque: Property.material(),\r\n        _myFlatTransparentNoDepth: Property.material(),\r\n        _myPhongOpaque: Property.material(),\r\n        _myText: Property.material()\r\n    };\r\n\r\n    init() {\r\n        this._myDefaultResources = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasDefaultResources(this.engine)) {\r\n            this._myDefaultResources = new DefaultResources();\r\n            this._myDefaultResources.myMeshes.myPlane = MeshUtils.cloneMesh(this._myPlane);\r\n            this._myDefaultResources.myMeshes.myCube = MeshUtils.cloneMesh(this._myCube);\r\n            this._myDefaultResources.myMeshes.mySphere = MeshUtils.cloneMesh(this._mySphere);\r\n            this._myDefaultResources.myMeshes.myCone = MeshUtils.cloneMesh(this._myCone);\r\n            this._myDefaultResources.myMeshes.myCylinder = MeshUtils.cloneMesh(this._myCylinder);\r\n            this._myDefaultResources.myMeshes.myCircle = MeshUtils.cloneMesh(this._myCircle);\r\n\r\n            this._myDefaultResources.myMeshes.myInvertedCube = MeshUtils.invertMesh(this._myCube);\r\n            this._myDefaultResources.myMeshes.myInvertedSphere = MeshUtils.invertMesh(this._mySphere);\r\n            this._myDefaultResources.myMeshes.myInvertedCone = MeshUtils.invertMesh(this._myCone);\r\n            this._myDefaultResources.myMeshes.myInvertedCylinder = MeshUtils.invertMesh(this._myCylinder);\r\n\r\n            if (this._myFlatOpaque != null) {\r\n                this._myDefaultResources.myMaterials.myFlatOpaque = this._myFlatOpaque.clone();\r\n            }\r\n\r\n            if (this._myFlatTransparentNoDepth != null) {\r\n                this._myDefaultResources.myMaterials.myFlatTransparentNoDepth = this._myFlatTransparentNoDepth.clone();\r\n            }\r\n\r\n            if (this._myPhongOpaque != null) {\r\n                this._myDefaultResources.myMaterials.myPhongOpaque = this._myPhongOpaque.clone();\r\n            }\r\n\r\n            if (this._myText != null) {\r\n                this._myDefaultResources.myMaterials.myText = this._myText.clone();\r\n            }\r\n\r\n            setDefaultResources(this._myDefaultResources, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDefaultResources != null && getDefaultResources(this.engine) == this._myDefaultResources) {\r\n            removeDefaultResources(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects, hasPlayerObjects, removePlayerObjects, setPlayerObjects } from \"../player_objects_global\";\r\nimport { PlayerObjects } from \"../player_objects\";\r\nimport { Handedness } from \"../../input/cauldron/input_types\";\r\n\r\nexport class GetPlayerObjectsComponent extends Component {\r\n    static TypeName = \"pp-get-player-objects\";\r\n    static Properties = {\r\n        _myPlayer: Property.object(),\r\n        _myPlayerPivot: Property.object(),   // If u don't have a pivot under the player you set this to null, by default will be the same as the player\r\n        _myCameraNonVR: Property.object(),\r\n        _myEyeLeft: Property.object(),\r\n        _myEyeRight: Property.object(),\r\n        _myHead: Property.object(),\r\n        _myHeadNonVR: Property.object(),\r\n        _myHeadVR: Property.object(),\r\n        _myHandLeft: Property.object(),\r\n        _myHandRight: Property.object()\r\n    };\r\n\r\n    init() {\r\n        this._myPlayerObjects = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasPlayerObjects(this.engine)) {\r\n            this._myPlayerObjects = new PlayerObjects();\r\n\r\n            this._myPlayerObjects.myPlayer = this._myPlayer;\r\n            this._myPlayerObjects.myPlayerPivot = this._myPlayerPivot;\r\n            this._myPlayerObjects.myCameraNonVR = this._myCameraNonVR;\r\n            this._myPlayerObjects.myHead = this._myHead;\r\n            this._myPlayerObjects.myHeadNonVR = this._myHeadNonVR;\r\n            this._myPlayerObjects.myHeadVR = this._myHeadVR;\r\n            this._myPlayerObjects.myEyeLeft = this._myEyeLeft;\r\n            this._myPlayerObjects.myEyeRight = this._myEyeRight;\r\n            this._myPlayerObjects.myHandLeft = this._myHandLeft;\r\n            this._myPlayerObjects.myHandRight = this._myHandRight;\r\n\r\n            this._myPlayerObjects.myEyes = [];\r\n            this._myPlayerObjects.myEyes[Handedness.LEFT] = this._myEyeLeft;\r\n            this._myPlayerObjects.myEyes[Handedness.RIGHT] = this._myEyeRight;\r\n\r\n            this._myPlayerObjects.myHands = [];\r\n            this._myPlayerObjects.myHands[Handedness.LEFT] = this._myHandLeft;\r\n            this._myPlayerObjects.myHands[Handedness.RIGHT] = this._myHandRight;\r\n\r\n            if (this._myPlayerObjects.myPlayerPivot == null) {\r\n                this._myPlayerObjects.myPlayerPivot = this._myPlayerObjects.myPlayer;\r\n            }\r\n\r\n            setPlayerObjects(this._myPlayerObjects, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myPlayerObjects != null && getPlayerObjects(this.engine) == this._myPlayerObjects) {\r\n            removePlayerObjects(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getEasyTuneVariables, hasEasyTuneVariables, removeEasyTuneVariables, setEasyTuneVariables } from \"../easy_tune_globals\";\r\nimport { EasyTuneVariables } from \"../easy_tune_variables\";\r\n\r\nexport class InitEasyTuneVariablesComponent extends Component {\r\n    static TypeName = \"pp-init-easy-tune-variables\";\r\n    static Properties = {\r\n        _myInit: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyTuneVariables = null;\r\n\r\n        if (this._myInit) {\r\n            // Prevents double global from same engine\r\n            if (!hasEasyTuneVariables(this.engine)) {\r\n                this._myEasyTuneVariables = new EasyTuneVariables();\r\n\r\n                setEasyTuneVariables(this._myEasyTuneVariables, this.engine);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myEasyTuneVariables != null && getEasyTuneVariables(this.engine) == this._myEasyTuneVariables) {\r\n            removeEasyTuneVariables(this.engine);\r\n        }\r\n    }\r\n}", "let _myEasyTuneVariablesList = new WeakMap();\r\nlet _myEasyTuneTargets = new WeakMap();\r\n\r\nexport function getEasyTuneVariables(engine = getMainEngine()) {\r\n    return _myEasyTuneVariablesList.get(engine);\r\n}\r\n\r\nexport function setEasyTuneVariables(easyTuneVariables, engine = getMainEngine()) {\r\n    _myEasyTuneVariablesList.set(engine, easyTuneVariables);\r\n}\r\n\r\nexport function removeEasyTuneVariables(engine = getMainEngine()) {\r\n    _myEasyTuneVariablesList.delete(engine);\r\n}\r\n\r\nexport function hasEasyTuneVariables(engine = getMainEngine()) {\r\n    return _myEasyTuneVariablesList.has(engine);\r\n}\r\n\r\nexport function getEasyTuneTarget(engine = getMainEngine()) {\r\n    return _myEasyTuneTargets.get(engine);\r\n}\r\n\r\nexport function setEasyTuneTarget(easyTuneTarget, engine = getMainEngine()) {\r\n    _myEasyTuneTargets.set(engine, easyTuneTarget);\r\n}\r\n\r\nexport function removeEasyTuneTarget(engine = getMainEngine()) {\r\n    _myEasyTuneTargets.delete(engine);\r\n}\r\n\r\nexport function hasEasyTuneTarget(engine = getMainEngine()) {\r\n    return _myEasyTuneTargets.has(engine);\r\n}", "export class EasyTuneVariables {\r\n\r\n    constructor() {\r\n        this._myVariables = new Map();\r\n    }\r\n\r\n    add(variable) {\r\n        this._myVariables.set(variable.myName, variable);\r\n    }\r\n\r\n    remove(variableName) {\r\n        this._myVariables.delete(variableName);\r\n    }\r\n\r\n    get(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.getValue();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set(variableName, value, resetDefaultValue = false) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            variable.setValue(value, resetDefaultValue);\r\n        }\r\n    }\r\n\r\n    has(variableName) {\r\n        return this._myVariables.has(variableName);\r\n    }\r\n\r\n    length() {\r\n        return this._myVariables.size;\r\n    }\r\n\r\n    isActive(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.myIsActive;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getEasyTuneVariable(variableName) {\r\n        return this._myVariables.get(variableName);\r\n    }\r\n\r\n    getEasyTuneVariablesList() {\r\n        return Array.from(this._myVariables.values());\r\n    }\r\n\r\n    getEasyTuneVariablesNames() {\r\n        return Array.from(this._myVariables.keys());\r\n    }\r\n\r\n    fromJSON(json, resetDefaultValue = false) {\r\n        let objectJSON = JSON.parse(json);\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            let variableValueJSON = objectJSON[variable.myName];\r\n            if (variableValueJSON !== undefined) {\r\n                variable.fromJSON(variableValueJSON, resetDefaultValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let objectJSON = {};\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            objectJSON[variable.myName] = variable.toJSON();\r\n        }\r\n\r\n        return JSON.stringify(objectJSON);\r\n    }\r\n\r\n    registerValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).registerValueChangedEventListener(callbackID, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).unregisterValueChangedEventListener(callbackID);\r\n    }\r\n}", "import { Howler } from \"howler\";\r\n\r\nexport function isAudioPlaybackBlocked() {\r\n    let isBlocked = false;\r\n\r\n    if (Howler != null && Howler.state != \"running\") {\r\n        isBlocked = true;\r\n    }\r\n\r\n    return isBlocked;\r\n}\r\n\r\nexport let AudioUtils = {\r\n    isAudioPlaybackBlocked\r\n};", "import { AudioPlayer } from \"../audio_player\";\r\n\r\nexport class HowlerAudioPlayer extends AudioPlayer {\r\n\r\n    constructor(howl, audioSetup = null) {\r\n        super(audioSetup, false);\r\n\r\n        this._myAudio = howl;\r\n\r\n        if (audioSetup == null) {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudioSetup.myLoop = this._myAudio._loop;\r\n            this._myAudioSetup.myAutoplay = this._myAudio._autoplay;\r\n\r\n            this._myAudioSetup.myVolume = this._myAudio._volume;\r\n            this._myAudioSetup.myRate = this._myAudio._rate;\r\n\r\n            this._myAudioSetup.myPool = this._myAudio._pool;\r\n            this._myAudioSetup.myPreload = this._myAudio._preload;\r\n\r\n            this._myAudioSetup.myPosition = (this._myAudio._pos != null) ? this._myAudio._pos.vec3_clone() : null;\r\n            this._myAudioSetup.mySpatial = this._myAudio._pos != null;\r\n            this._myAudioSetup.myReferenceDistance = this._myAudio._pannerAttr.refDistance;\r\n        } else {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudio.loop(this._myAudioSetup.myLoop);\r\n            this._myAudio._autoplay = this._myAudioSetup.myAutoplay;\r\n\r\n            this._myAudio.volume(this._myAudioSetup.myVolume);\r\n            this._myAudio.rate(this._myAudioSetup.myRate);\r\n\r\n            this._myAudio._pool = this._myAudioSetup.myPool;\r\n            this._myAudio._preload = this._myAudioSetup.myPreload;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition);\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n\r\n            if (this._myAudioSetup.myAutoplay) {\r\n                this._myAudio.play();\r\n            }\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Howler } from \"howler\";\r\n\r\nexport class MuteEverythingComponent extends Component {\r\n    static TypeName = \"pp-mute-everything\";\r\n    static Properties = {};\r\n\r\n    start() {\r\n        Howler.mute(true);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Howler } from \"howler\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport class SpatialAudioListenerComponent extends Component {\r\n    static TypeName = \"pp-spatial-audio-listener\";\r\n    static Properties = {\r\n        _myActive: Property.enum([\"Always\", \"VR\", \"Non VR\"], \"Always\")\r\n    };\r\n\r\n    init() {\r\n        this._myOrigin = vec3_create();\r\n        this._myForward = vec3_create();\r\n        this._myUp = vec3_create();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myActive == 0 || (this._myActive == 1 && XRUtils.getSession(this.engine)) || (this._myActive == 2 && !XRUtils.getSession(this.engine))) {\r\n            this.object.pp_getPosition(this._myOrigin);\r\n            this.object.pp_getForward(this._myForward);\r\n            this.object.pp_getUp(this._myUp);\r\n\r\n            Howler.pos(this._myOrigin[0], this._myOrigin[1], this._myOrigin[2]);\r\n            Howler.orientation(this._myForward[0], this._myForward[1], this._myForward[2],\r\n                this._myUp[0], this._myUp[1], this._myUp[2]);\r\n        }\r\n    }\r\n}", "import { Component, PhysXComponent, Property } from \"@wonderlandengine/api\";\r\nimport { getDebugVisualManager } from \"../../debug/debug_globals\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { PhysicsCollisionCollector } from \"../physics/physics_collision_collector\";\r\nimport { RaycastResults, RaycastSetup } from \"../physics/physics_raycast_data\";\r\nimport { PhysicsUtils } from \"../physics/physics_utils\";\r\n\r\n// Adjust the gravity to a low value like -0.05 to have better results, since the dynamic objects will move slowly instead of quickly falling far away\r\nexport class BenchmarkMaxPhysXComponent extends Component {\r\n    static TypeName = \"pp-benchmark-max-physx\";\r\n    static Properties = {\r\n        _myStaticDomeSize: Property.float(40),\r\n        _myStaticPhysXCount: Property.int(1000),\r\n        _myDynamicDomeSize: Property.float(80),\r\n        _myDynamicPhysXCount: Property.int(250),\r\n        _myKinematicDomeSize: Property.float(120),\r\n        _myKinematicPhysXCount: Property.int(250),\r\n        _myRaycastCount: Property.int(100),\r\n        _myVisualizeRaycast: Property.bool(false),\r\n        _myVisualizeRaycastDelay: Property.float(0.5),\r\n\r\n        // You can use this to test with convex mesh, \r\n        // but u first need to add a physx with a convex mesh to the scene and read the shapeData index on the component to set it as _myShapeIndex\r\n        _myUseConvexMesh: Property.bool(false),\r\n        _myShapeIndex: Property.int(0),\r\n        _myShapeScaleMultiplier: Property.float(1), // Used to adjust the scale of the convex mesh if too big or small based on how u imported it\r\n\r\n        _myLogActive: Property.bool(true),\r\n        _myClearConsoleBeforeLog: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myStarted = false;\r\n        this._myPreStartTimer = new Timer(1);\r\n    }\r\n\r\n    _start() {\r\n        this._myRootObject = this.object.pp_addObject();\r\n\r\n        this._myRaycastSetup = new RaycastSetup(this.engine.physics);\r\n        this._myRaycastResults = new RaycastResults();\r\n\r\n        this._myStaticPhysXObjects = [];\r\n        this._myStaticPhysXComponents = [];\r\n        this._myStaticPhysXCollectors = [];\r\n        this._myDynamicPhysXObjects = [];\r\n        this._myDynamicPhysXComponents = [];\r\n        this._myDynamicPhysXCollectors = [];\r\n        this._myKinematicPhysXObjects = [];\r\n        this._myKinematicPhysXComponents = [];\r\n        this._myKinematicPhysXCollectors = [];\r\n\r\n        this._spawnDome(true, false);\r\n        this._spawnDome(false, false);\r\n        this._spawnDome(false, true);\r\n\r\n        this._myStartTimer = new Timer(1);\r\n        this._myTimer = new Timer(0);\r\n        this._myDebugTimer = new Timer(this._myVisualizeRaycastDelay);\r\n        this._myLogActiveTimer = new Timer(1);\r\n        this._myFPSHistory = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            this._myFPSHistory.push(0);\r\n        }\r\n\r\n        this._myAddVelocityDelay = 10;\r\n\r\n        this._myTranslateVec3 = vec3_create();\r\n        this._myRotateVec3 = vec3_create();\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._myStarted) {\r\n            this._myPreStartTimer.update(dt);\r\n            if (this._myPreStartTimer.isDone()) {\r\n                this._start();\r\n            }\r\n        } else {\r\n            this._myStartTimer.update(dt);\r\n            if (this._myStartTimer.isDone()) {\r\n                this._myTimer.update(dt);\r\n                this._myDebugTimer.update(dt);\r\n                this._myLogActiveTimer.update(dt);\r\n                if (this._myTimer.isDone()) {\r\n                    this._myTimer.start();\r\n\r\n                    let debugActive = false;\r\n                    if (this._myDebugTimer.isDone()) {\r\n                        this._myDebugTimer.start();\r\n                        debugActive = true;\r\n                    }\r\n\r\n                    debugActive = debugActive && this._myVisualizeRaycast;\r\n                    this._raycastTest(debugActive);\r\n                }\r\n\r\n                this._myFPSHistory.pop();\r\n                this._myFPSHistory.unshift(Math.round(1 / dt));\r\n\r\n                if (this._myLogActive) {\r\n                    if (this._myLogActiveTimer.isDone()) {\r\n                        this._myLogActiveTimer.start();\r\n                        if (this._myClearConsoleBeforeLog) {\r\n                            console.clear();\r\n                        }\r\n                        console.log(\"Static PhysX Dome Size:\", this._myStaticPhysXObjects.length);\r\n                        console.log(\"Dynamic PhysX Dome Size:\", this._myDynamicPhysXObjects.length);\r\n                        console.log(\"Kinematic PhysX Dome Size:\", this._myKinematicPhysXObjects.length);\r\n\r\n                        let staticCollisions = 0;\r\n                        for (let collector of this._myStaticPhysXCollectors) {\r\n                            staticCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        let dynamicCollisions = 0;\r\n                        for (let collector of this._myDynamicPhysXCollectors) {\r\n                            dynamicCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        let kinematicCollisions = 0;\r\n                        for (let collector of this._myKinematicPhysXCollectors) {\r\n                            kinematicCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        // Every collision is considered twice since it is caught by 2 physX\r\n                        let totalCollisions = (staticCollisions + dynamicCollisions + kinematicCollisions) / 2;\r\n\r\n                        console.log(\"Current Collisions Count:\", totalCollisions);\r\n                        console.log(\"Raycast Count:\", this._myRaycastCount);\r\n                        console.log(\"FPS History:\");\r\n                        let fpsString = \"\";\r\n                        for (let fps of this._myFPSHistory) {\r\n                            fpsString = fpsString.concat(fps, \"\\n\");\r\n                        }\r\n                        console.log(fpsString);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myAddVelocityDelay > 0) {\r\n                this._myAddVelocityDelay--;\r\n                if (this._myAddVelocityDelay == 0) {\r\n                    for (let physX of this._myDynamicPhysXComponents) {\r\n                        physX.kinematic = false;\r\n                        let strength = 50;\r\n                        physX.linearVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                        physX.angularVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let physX of this._myKinematicPhysXObjects) {\r\n                let strength = 5 * dt;\r\n                this._myTranslateVec3.vec3_set(Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength));\r\n                physX.pp_translate(this._myTranslateVec3);\r\n\r\n                let rotateStrength = 50 * dt;\r\n                this._myRotateVec3.vec3_set(Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength));\r\n                physX.pp_rotate(this._myRotateVec3);\r\n            }\r\n        }\r\n    }\r\n\r\n    _raycastTest(debugActive) {\r\n        let raycastCount = this._myRaycastCount;\r\n\r\n        let distance = 10000;\r\n\r\n        for (let i = 0; i < raycastCount; i++) {\r\n            let origin = [Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign()];\r\n            let direction = [Math.pp_random(-1, 1), Math.pp_random(-1, 1), Math.pp_random(-1, 1)];\r\n            direction.vec3_normalize(direction);\r\n\r\n            this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n            this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n            this._myRaycastSetup.myDistance = distance;\r\n            this._myRaycastSetup.myBlockLayerFlags.setAllFlagsActive();\r\n\r\n            let raycastResults = PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResults);\r\n\r\n            if (debugActive) {\r\n                getDebugVisualManager(this.engine).drawRaycast(this._myDebugTimer.getDuration(), raycastResults, true, 5, 0.015);\r\n            }\r\n        }\r\n    }\r\n\r\n    _spawnDome(isStatic, isDynamic) {\r\n        let maxCount = this._myStaticPhysXCount;\r\n        let physXList = this._myStaticPhysXObjects;\r\n        let cloves = Math.ceil(Math.sqrt(this._myStaticPhysXCount));\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                cloves = Math.ceil(Math.sqrt(this._myDynamicPhysXCount));\r\n                maxCount = this._myDynamicPhysXCount;\r\n                physXList = this._myDynamicPhysXObjects;\r\n            } else {\r\n                cloves = Math.ceil(Math.sqrt(this._myKinematicPhysXCount));\r\n                maxCount = this._myKinematicPhysXCount;\r\n                physXList = this._myKinematicPhysXObjects;\r\n            }\r\n        }\r\n\r\n        let angleForClove = Math.PI * 2 / cloves;\r\n\r\n        let minDistance = Math.max(0, this._myStaticDomeSize - 20);\r\n        let maxDistance = this._myStaticDomeSize + 20;\r\n\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                minDistance = Math.max(0, this._myDynamicDomeSize - 20);\r\n                maxDistance = this._myDynamicDomeSize + 20;\r\n            } else {\r\n                minDistance = Math.max(0, this._myKinematicDomeSize - 20);\r\n                maxDistance = this._myKinematicDomeSize + 20;\r\n            }\r\n        }\r\n\r\n        let minExtraRotation = 0;\r\n        let maxExtraRotation = Math.pp_toRadians(10);\r\n\r\n        let upDirection = vec3_create(0, 1, 0);\r\n        let horizontalDirection = vec3_create(0, 0, -1);\r\n\r\n        for (let i = 0; i < cloves / 2; i++) {\r\n            let verticalDirection = vec3_create(0, 1, 0);\r\n\r\n            let rotationAxis = vec3_create();\r\n            horizontalDirection.vec3_cross(verticalDirection, rotationAxis);\r\n            rotationAxis.vec3_normalize(rotationAxis);\r\n\r\n            for (let j = 0; j < cloves; j++) {\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.pp_clone();\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.pp_clone();\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n            }\r\n\r\n            horizontalDirection.vec3_rotateAxisRadians(angleForClove, upDirection, horizontalDirection);\r\n        }\r\n    }\r\n\r\n    _addPhysX(physXDirection, isStatic, isDynamic) {\r\n        let position = physXDirection;\r\n        let scale = Math.pp_random(1, 10);\r\n        let shape = Math.pp_randomPick(this.engine.Shape.Sphere, this.engine.Shape.Box);\r\n        if (this._myUseConvexMesh) {\r\n            shape = this.engine.Shape.ConvexMesh;\r\n            scale *= this._myShapeScaleMultiplier;\r\n        }\r\n\r\n        let physX = this._myRootObject.pp_addObject();\r\n        physX.pp_setPosition(position);\r\n\r\n        let physXComponent = physX.pp_addComponent(PhysXComponent, {\r\n            \"shape\": shape,\r\n            \"shapeData\": { index: this._myShapeIndex },\r\n            \"extents\": vec3_create(scale, scale, scale),\r\n            \"static\": isStatic,\r\n            \"kinematic\": !isDynamic,\r\n            \"mass\": 1\r\n        });\r\n\r\n        if (isStatic) {\r\n            this._myStaticPhysXObjects.push(physX);\r\n            this._myStaticPhysXComponents.push(physXComponent);\r\n            this._myStaticPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        } else if (isDynamic) {\r\n            this._myDynamicPhysXObjects.push(physX);\r\n            this._myDynamicPhysXComponents.push(physXComponent);\r\n            this._myDynamicPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        } else {\r\n            this._myKinematicPhysXObjects.push(physX);\r\n            this._myKinematicPhysXComponents.push(physXComponent);\r\n            this._myKinematicPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        }\r\n    }\r\n}", "import { CollisionEventType, PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../cauldron/timer\";\r\n\r\nexport class PhysicsCollisionCollector {\r\n\r\n    constructor(physXComponent, isTrigger = false) {\r\n        this._myPhysX = physXComponent;\r\n\r\n        this._myIsTrigger = isTrigger;\r\n\r\n        this._myCollisions = [];\r\n\r\n        this._myCollisionsStart = [];\r\n        this._myCollisionsEnd = [];\r\n        this._myUpdateActive = false;\r\n        this._myCollisionsStartToProcess = [];\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        this._myCollisionCallbackID = null;\r\n\r\n        this._myIsActive = false;\r\n        this.setActive(true);\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTriggerDesyncFixDelay = new Timer(0.1);\r\n\r\n        this._myCollisionCallbacks = new Map();          // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionStartCallbacks = new Map();     // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionEndCallbacks = new Map();       // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n\r\n    }\r\n\r\n    getPhysX() {\r\n        return this._myPhysX;\r\n    }\r\n\r\n    getCollisions() {\r\n        return this._myCollisions;\r\n    }\r\n\r\n    getCollisionsStart() {\r\n        return this._myCollisionsStart;\r\n    }\r\n\r\n    getCollisionsEnd() {\r\n        return this._myCollisionsEnd;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this._myIsActive = active;\r\n\r\n            this._myCollisions = [];\r\n\r\n            this._myCollisionsStart = [];\r\n            this._myCollisionsEnd = [];\r\n            this._myUpdateActive = false;\r\n            this._myCollisionsStartToProcess = [];\r\n            this._myCollisionsEndToProcess = [];\r\n\r\n            if (this._myIsActive) {\r\n                this._myCollisionCallbackID = this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            } else if (this._myCollisionCallbackID != null) {\r\n                this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n                this._myCollisionCallbackID = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Set to true only if u are going to actually update this object and don't want to lose any collision start/end events prior to updating the first time after activation\r\n    setUpdateActive(active) {\r\n        this._myUpdateActive = active;\r\n    }\r\n\r\n    // Update is not mandatory, use it only if u want to access collisions start and end\r\n    update(dt) {\r\n        if (!this._myIsActive) {\r\n            return;\r\n        }\r\n\r\n        this._myUpdateActive = true;\r\n\r\n        this._myCollisionsStart = this._myCollisionsStartToProcess;\r\n        this._myCollisionsStartToProcess = [];\r\n\r\n        this._myCollisionsEnd = this._myCollisionsEndToProcess;\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        if (this._myIsTrigger) {\r\n            this._triggerDesyncFix(dt);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    setDebugActive(active) {\r\n        this._myDebugActive = active;\r\n    }\r\n\r\n    registerCollisionEventListener(callbackID, callback) {\r\n        this._myCollisionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEventListener(callbackID) {\r\n        this._myCollisionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionStartEventListener(callbackID, callback) {\r\n        this._myCollisionStartCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionStartEventListener(callbackID) {\r\n        this._myCollisionStartCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionEndEventListener(callbackID, callback) {\r\n        this._myCollisionEndCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEndEventListener(callbackID) {\r\n        this._myCollisionEndCallbacks.delete(callbackID);\r\n    }\r\n\r\n    _onCollision(type, physXComponent) {\r\n        if (type == CollisionEventType.Touch || type == CollisionEventType.TriggerTouch) {\r\n            this._onCollisionStart(physXComponent);\r\n        } else if (type == CollisionEventType.TouchLost || type == CollisionEventType.TriggerTouchLost) {\r\n            this._onCollisionEnd(physXComponent);\r\n        }\r\n\r\n        if (this._myCollisionCallbacks.size > 0) {\r\n            this._myCollisionCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionStart(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (objectFound) {\r\n                console.error(\"Collision Start on object already collected\");\r\n            }\r\n        }\r\n\r\n        this._myCollisions.push(physXComponent.object);\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsStartToProcess.push(physXComponent.object);\r\n            this._myCollisionsEndToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision Start -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionStartCallbacks.size > 0) {\r\n            this._myCollisionStartCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionEnd(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!objectFound) {\r\n                console.error(\"Collision End on object not collected\");\r\n            }\r\n        }\r\n\r\n\r\n        this._myCollisions.pp_removeAll(function (element) {\r\n            return element.pp_equals(physXComponent.object);\r\n        });\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsEndToProcess.push(physXComponent.object);\r\n            this._myCollisionsStartToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision End -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionEndCallbacks.size > 0) {\r\n            this._myCollisionEndCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _triggerDesyncFix(dt) {\r\n        this._myTriggerDesyncFixDelay.update(dt);\r\n        if (this._myTriggerDesyncFixDelay.isDone()) {\r\n            this._myTriggerDesyncFixDelay.start();\r\n\r\n            let collisionsToEnd = this._myCollisions.pp_findAll(function (element) {\r\n                let physX = element.pp_getComponentSelf(PhysXComponent);\r\n                return physX == null || !physX.active;\r\n            });\r\n\r\n            if (collisionsToEnd.length > 0) {\r\n                //console.error(\"DESYNC RESOLVED\");\r\n\r\n                for (let collision of collisionsToEnd) {\r\n                    let physX = collision.pp_getComponentSelf(PhysXComponent);\r\n                    if (physX) {\r\n                        this._onCollisionEnd(physX);\r\n                    } else {\r\n                        console.error(\"NO PHYSX, HOW?\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, MeshComponent, TextComponent, Property } from \"@wonderlandengine/api\";\r\nimport { vec2_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { CloneParams } from \"../../plugin/wl/extensions/object_extension\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { MeshCreationParams, MeshCreationTriangleParams, MeshCreationVertexParams, MeshUtils } from \"../utils/mesh_utils\";\r\nimport { ObjectPool, ObjectPoolParams } from \"../cauldron/object_pool\";\r\nimport { getPlayerObjects } from \"../../pp/player_objects_global\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\nimport { EasyTransformComponent } from \"../../tool/easy_tune/easy_object_tuners/components/easy_transform_component\";\r\n\r\nexport class BenchmarkMaxVisibleTrianglesComponent extends Component {\r\n    static TypeName = \"pp-benchmark-max-visible-triangles\";\r\n    static Properties = {\r\n        _myTargetFrameRate: Property.int(-1),                // -1 means it will auto detect it at start\r\n        _myTargetFrameRateThreshold: Property.int(3),\r\n        _myStartPlaneCount: Property.int(1),\r\n        _myPlaneTriangles: Property.int(100),\r\n        _mySecondsBeforeDoubling: Property.float(0.5),       // Higher gives a better frame rate evaluation\r\n        _myDTHistoryToIgnorePercentage: Property.float(0.25),\r\n        _myCloneMaterial: Property.bool(false),\r\n        _myCloneMesh: Property.bool(false),\r\n\r\n        _myLogActive: Property.bool(true),\r\n\r\n        _myStartOnXRStart: Property.bool(false),\r\n        _myDisplayInFrontOfPlayer: Property.bool(true),\r\n        _myDisplayInFrontOfPlayerDistance: Property.float(10),\r\n\r\n        _myPlaneMaterial: Property.material(),\r\n        _myBackgroundMaterial: Property.material(),\r\n        _myTextMaterial: Property.material(null)\r\n    };\r\n\r\n    _start() {\r\n        this._myBackgroundSize = 4;\r\n        this._myBackgroundObject.pp_setActive(true);\r\n        this._myBackgroundObject.pp_setScale(this._myBackgroundSize + 0.1);\r\n        this._myBackgroundObject.pp_translate(vec3_create(0, 0, -0.001));\r\n\r\n        this._myDoubleTimer = new Timer(this._mySecondsBeforeDoubling);\r\n        this._myIsDone = false;\r\n\r\n        this._myCurrentPlanes = this._myStartPlaneCount;\r\n\r\n        this._myDTHistory = [];\r\n\r\n        this._myUpperLimit = -1;\r\n        this._myLowerLimit = 0;\r\n\r\n        this._myPlanes = [];\r\n        this._mySkipNextFrames = 0;\r\n        this._myMaxWaitFrames = 0;\r\n\r\n        this._myMaxPlanesReached = false;\r\n\r\n        this._myFirstTime = true;\r\n    }\r\n\r\n    _update(dt) {\r\n        // Skip lag frames after the new set of plane has been shown, wait for it to be stable\r\n        {\r\n            if (dt < 0.00001) {\r\n                return;\r\n            }\r\n\r\n            if (dt > 0.5 && this._myMaxWaitFrames > 0) {\r\n                this._myMaxWaitFrames--;\r\n                return;\r\n            }\r\n\r\n            this._myMaxWaitFrames = 10;\r\n\r\n            if (this._mySkipNextFrames > 0) {\r\n                this._mySkipNextFrames--;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._myIsDone) {\r\n            this._myDoubleTimer.update(dt);\r\n\r\n            this._myDTHistory.push(dt);\r\n\r\n            if (this._myDoubleTimer.isDone()) {\r\n                this._myDoubleTimer.start();\r\n\r\n                let frameRate = this._computeAverageFrameRate(false);\r\n\r\n                if (this._myFirstTime) {\r\n                    this._myFirstTime = false;\r\n                } else {\r\n\r\n                    // If there is not lag, the current plane count is a good lower limit, otherwise the current count is now a upper threshold, we have to search below it\r\n                    let isLagging = false;\r\n                    if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                        this._myUpperLimit = this._myCurrentPlanes;\r\n\r\n                        isLagging = true;\r\n\r\n                        if (this._myUpperLimit == 1) {\r\n                            this._myLowerLimit = 1;\r\n                        }\r\n                    } else {\r\n                        this._myLowerLimit = this._myCurrentPlanes;\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myUpperLimit = Math.max(this._myUpperLimit, this._myLowerLimit);\r\n                        }\r\n                    }\r\n\r\n                    this._myTriangleTextComponent.text = \"Triangles: \" + this._myCurrentPlanes * this._myRealTrianglesAmount;\r\n                    this._myPlaneTextComponent.text = \"Planes: \" + this._myCurrentPlanes;\r\n                    this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                    if (isLagging) {\r\n                        this._myTriangleTextComponent.material.color = this._myLagColor;\r\n                        this._myPlaneTextComponent.material.color = this._myLagColor;\r\n                        this._myFPSTextComponent.material.color = this._myLagColor;\r\n                    } else {\r\n                        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n                        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n                        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n                    }\r\n\r\n                    let reset = false;\r\n\r\n                    // Check if the binary search is completed\r\n                    if ((this._myUpperLimit > 0 &&\r\n                        (!isLagging && (this._myUpperLimit - this._myLowerLimit) <= Math.max(2, 1000 / this._myRealTrianglesAmount)) ||\r\n                        (isLagging && (this._myUpperLimit - this._myLowerLimit) <= 1)) ||\r\n                        (!isLagging && this._myMaxPlanesReached)) {\r\n                        if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                            // Going a bit back with the binary search, maybe the lower limit was not lower after all cause of a bad assumption of average FPS\r\n                            this._myLowerLimit = Math.max(1, Math.floor(this._myUpperLimit / 2.5));\r\n                            this._myUpperLimit = 0;\r\n                            reset = true;\r\n\r\n                            if (this._myLogActive) {\r\n                                // Reset\r\n                                console.log(\"Rst - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                            }\r\n                        } else {\r\n                            if (this._myMaxPlanesReached) {\r\n                                if (this._myLogActive) {\r\n                                    console.log(\"Aborted - Max Planes Reached\");\r\n\r\n                                    this._myDoneTextComponent.text = \"Aborted - Max Planes Reached\";\r\n                                }\r\n                            } else {\r\n                                this._displayPlanes(this._myLowerLimit);\r\n\r\n                                if (this._myLogActive) {\r\n                                    console.log(\"\\nEnd - Triangles:\", this._myLowerLimit * this._myRealTrianglesAmount, \"- Planes:\", this._myLowerLimit, \"- Frame Rate:\", frameRate);\r\n                                    console.log(\"Plane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                                    console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                                }\r\n\r\n                                this._myTriangleTextComponent.text = \"Triangles: \" + this._myLowerLimit * this._myRealTrianglesAmount;\r\n                                this._myPlaneTextComponent.text = \"Planes: \" + this._myLowerLimit;\r\n                                this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                                this._myDoneTextComponent.text = \"End\";\r\n                            }\r\n                            this._myIsDone = true;\r\n                        }\r\n                    }\r\n\r\n                    if (isLagging && !reset) {\r\n                        if (this._myLogActive) {\r\n                            console.log(\"Lag - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                        }\r\n                    }\r\n\r\n                    if (!this._myIsDone) {\r\n                        // Sort of binary search, if there is no upper limit yet, just double\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myCurrentPlanes = Math.floor((this._myUpperLimit + this._myLowerLimit) / 2);\r\n                            this._myCurrentPlanes = Math.max(this._myCurrentPlanes, 1);\r\n                        } else if (!reset) {\r\n                            this._myCurrentPlanes = this._myLowerLimit * 2;\r\n                        } else {\r\n                            this._myCurrentPlanes = this._myLowerLimit;\r\n                        }\r\n\r\n                        if (this._myCurrentPlanes > 50000) {\r\n                            this._myCurrentPlanes = 50000;\r\n                            this._myMaxPlanesReached = true;\r\n                        } else {\r\n                            this._myMaxPlanesReached = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myIsDone) {\r\n                    this._displayPlanes(this._myCurrentPlanes);\r\n                    this._myElapsedTime = 0;\r\n                    this._myFrameCount = 0;\r\n\r\n                    this._mySkipNextFrames = 30;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _displayPlanes(count) {\r\n        while (this._myPlanes.length > count) {\r\n            let plane = this._myPlanes.pop();\r\n            this._myPlanePool.release(plane);\r\n        }\r\n\r\n        while (this._myPlanes.length < count) {\r\n            let plane = this._myPlanePool.get();\r\n            this._myPlanes.push(plane);\r\n        }\r\n\r\n        let gridSize = 1;\r\n        while (gridSize * gridSize < count) {\r\n            gridSize++;\r\n        }\r\n\r\n        let spaceBetween = 0.01;\r\n        let totalSpaceBetween = spaceBetween * (gridSize - 1);\r\n        let planeSize = (this._myBackgroundSize * 2 - totalSpaceBetween) / (gridSize * 2);\r\n\r\n        let currentCount = count;\r\n\r\n        for (let i = 0; i < gridSize && currentCount > 0; i++) {\r\n            for (let j = 0; j < gridSize && currentCount > 0; j++) {\r\n                let plane = this._myPlanes[currentCount - 1];\r\n                plane.pp_setScale(planeSize);\r\n\r\n                let position = [-this._myBackgroundSize + planeSize + j * planeSize * 2 + j * spaceBetween, this._myBackgroundSize - planeSize - i * planeSize * 2 - i * spaceBetween, 0];\r\n\r\n                plane.pp_setPositionLocal(position);\r\n                plane.pp_setActive(true);\r\n\r\n                currentCount--;\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this._myLagColor = vec4_create(0.5, 0, 0, 1);\r\n        this._myNormalColor = vec4_create(0, 0, 0, 1);\r\n\r\n        this._myRealTrianglesAmount = 0;\r\n\r\n        let parent = this.object;\r\n        if (this._myDisplayInFrontOfPlayer) {\r\n            parent = getPlayerObjects().myHead.pp_addObject();\r\n            parent.pp_rotateAxis(180, vec3_create(0, 1, 0));\r\n            parent.pp_translateLocal(vec3_create(0, 0, this._myDisplayInFrontOfPlayerDistance));\r\n        }\r\n\r\n        this._myTrianglesObject = parent.pp_addObject();\r\n\r\n        this._myBackgroundObject = this._myTrianglesObject.pp_addObject();\r\n        {\r\n            let meshComponent = this._myBackgroundObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = MeshUtils.createPlaneMesh();\r\n            meshComponent.material = this._myBackgroundMaterial.clone();\r\n        }\r\n\r\n        this._myPlaneObject = this._myTrianglesObject.pp_addObject();\r\n        {\r\n            let meshComponent = this._myPlaneObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = this._createPlaneMesh(this._myPlaneTriangles);\r\n            this._myRealTrianglesAmount = meshComponent.mesh.indexData.length / 3;\r\n            meshComponent.material = this._myPlaneMaterial.clone();\r\n        }\r\n\r\n        let poolParams = new ObjectPoolParams();\r\n        if (!this._myCloneMesh) {\r\n            poolParams.myInitialPoolSize = 30000;\r\n        } else {\r\n            if (this._myRealTrianglesAmount <= 4) {\r\n                poolParams.myInitialPoolSize = 15000;\r\n            } else if (this._myRealTrianglesAmount <= 8) {\r\n                poolParams.myInitialPoolSize = 10000;\r\n            } else if (this._myRealTrianglesAmount <= 64) {\r\n                poolParams.myInitialPoolSize = 7500;\r\n            } else {\r\n                poolParams.myInitialPoolSize = 5000;\r\n            }\r\n        }\r\n        poolParams.myPercentageToAddWhenEmpty = 0;\r\n        poolParams.myAmountToAddWhenEmpty = 10000;\r\n        poolParams.myCloneParams = new CloneParams();\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(MeshComponent.TypeName, \"material\", this._myCloneMaterial);\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(MeshComponent.TypeName, \"mesh\", this._myCloneMesh);\r\n        this._myPlanePool = new ObjectPool(this._myPlaneObject, poolParams);\r\n\r\n        this._myBackgroundObject.pp_setActive(false);\r\n        this._myPlaneObject.pp_setActive(false);\r\n\r\n        this._myStartTimer = new Timer(2);\r\n        this._mySessionStarted = false;\r\n\r\n        this._myTextsObject = this._myTrianglesObject.pp_addObject();\r\n        //this._myTextsObject.pp_addComponent(EasyTransformComponent);\r\n\r\n        this._myTriangleTextObject = this._myTextsObject.pp_addObject();\r\n        //this._myTriangleTextObject.pp_addComponent(EasyTransformComponent, { _myIsLocal: true });\r\n\r\n        this._myTriangleTextComponent = this._myTriangleTextObject.pp_addComponent(TextComponent);\r\n\r\n        this._myTriangleTextComponent.alignment = this.engine.Alignment.Left;\r\n        this._myTriangleTextComponent.justification = this.engine.Justification.Line;\r\n        this._myTriangleTextComponent.material = this._myTextMaterial.clone();\r\n        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n        this._myTriangleTextComponent.text = \" \";\r\n        //this._myTriangleTextComponent.text = \"Triangles: 9999999\";\r\n\r\n        this._myPlaneTextObject = this._myTextsObject.pp_addObject();\r\n\r\n        this._myPlaneTextComponent = this._myPlaneTextObject.pp_addComponent(TextComponent);\r\n        //this._myPlaneTextObject.pp_addComponent(EasyTransformComponent, { _myIsLocal: true });\r\n\r\n        this._myPlaneTextComponent.alignment = this.engine.Alignment.Left;\r\n        this._myPlaneTextComponent.justification = this.engine.Justification.Line;\r\n        this._myPlaneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n        this._myPlaneTextComponent.text = \" \";\r\n        //this._myPlaneTextComponent.text = \"Planes: 9999999\";\r\n\r\n        this._myFPSTextObject = this._myTextsObject.pp_addObject();\r\n\r\n        this._myFPSTextComponent = this._myFPSTextObject.pp_addComponent(TextComponent);\r\n        //this._myFPSTextObject.pp_addComponent(EasyTransformComponent, { _myIsLocal: true });\r\n\r\n        this._myFPSTextComponent.alignment = this.engine.Alignment.Left;\r\n        this._myFPSTextComponent.justification = this.engine.Justification.Line;\r\n        this._myFPSTextComponent.material = this._myTextMaterial.clone();\r\n        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n        this._myFPSTextComponent.text = \" \";\r\n        //this._myFPSTextComponent.text = \"FPS: 99.99\";\r\n\r\n        this._myDoneTextObject = this._myTrianglesObject.pp_addObject();\r\n\r\n        this._myDoneTextComponent = this._myDoneTextObject.pp_addComponent(TextComponent);\r\n        //this._myDoneTextObject.pp_addComponent(EasyTransformComponent, { _myIsLocal: true });\r\n\r\n        this._myDoneTextComponent.alignment = this.engine.Alignment.Center;\r\n        this._myDoneTextComponent.justification = this.engine.Justification.Line;\r\n        this._myDoneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myDoneTextComponent.material.color = this._myNormalColor;\r\n        this._myDoneTextComponent.text = \" \";\r\n        //this._myDoneTextComponent.text = \"End\";\r\n\r\n        this._myTextsObject.pp_setPositionLocal(vec3_create(0, 4.3, 0));\r\n        this._myTextsObject.pp_setScale(2.75);\r\n\r\n        this._myTriangleTextObject.pp_setPositionLocal(vec3_create(-1.4, 0, 0));\r\n        this._myPlaneTextObject.pp_setPositionLocal(vec3_create(0.55, 0, 0));\r\n        this._myFPSTextObject.pp_setPositionLocal(vec3_create(-0.315, 0, 0));\r\n        this._myDoneTextObject.pp_setPositionLocal(vec3_create(0, -4.6, 0));\r\n        this._myDoneTextObject.pp_setScale(4);\r\n\r\n        this._myDTHistory = [];\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._mySessionStarted || !this._myStartOnXRStart) {\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n\r\n                this._myDTHistory.push(dt);\r\n\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._myStableFrameRate = this._computeAverageFrameRate(true);\r\n                    if (this._myTargetFrameRate > 0) {\r\n                        this._myStableFrameRate = this._myTargetFrameRate;\r\n                    }\r\n\r\n                    if (this._myLogActive) {\r\n                        console.log(\"\\nPlane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                        console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                        console.log(\"\");\r\n                    }\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._update(dt);\r\n            }\r\n        } else {\r\n            this._mySessionStarted = XRUtils.getSession(this.engine) != null;\r\n        }\r\n    }\r\n\r\n    _computeAverageFrameRate(isStart) {\r\n        let frameRate = 0;\r\n\r\n        this._myDTHistory.sort();\r\n        let elementToRemove = Math.floor(this._myDTHistory.length) * Math.min(0.9, this._myDTHistoryToIgnorePercentage * (isStart ? 2 : 1));\r\n        for (let i = 0; i < elementToRemove; i++) {\r\n            this._myDTHistory.pop();\r\n        }\r\n\r\n        let averageDT = 0;\r\n        for (let dt of this._myDTHistory) {\r\n            averageDT += dt;\r\n        }\r\n        averageDT /= this._myDTHistory.length;\r\n        frameRate = Math.round(1 / averageDT);\r\n\r\n        this._myDTHistory = [];\r\n\r\n        return frameRate;\r\n    }\r\n\r\n    _createPlaneMesh(trianglesAmount) {\r\n        let squaresAmount = Math.ceil(trianglesAmount / 2);\r\n\r\n        let row = 1;\r\n        let column = 1;\r\n\r\n        let closestSqrt = 1;\r\n        while (closestSqrt * closestSqrt < squaresAmount) {\r\n            closestSqrt++;\r\n        }\r\n\r\n        row = closestSqrt;\r\n        column = closestSqrt;\r\n\r\n        while (row > 1 && column > 1 && row * column > squaresAmount && ((row - 1) * column >= squaresAmount)) {\r\n            row--;\r\n        }\r\n\r\n        let meshParams = new MeshCreationParams(this.engine);\r\n\r\n        for (let i = 0; i < row + 1; i++) {\r\n            for (let j = 0; j < column + 1; j++) {\r\n\r\n                let x = (2 / column) * j;\r\n                let y = (2 / row) * i;\r\n\r\n                let vertexParams = new MeshCreationVertexParams();\r\n\r\n                vertexParams.myPosition = vec3_create();\r\n                vertexParams.myPosition[0] = x - 1;\r\n                vertexParams.myPosition[1] = y - 1;\r\n                vertexParams.myPosition[2] = 0;\r\n\r\n                vertexParams.myTextureCoordinates = vec2_create();\r\n                vertexParams.myTextureCoordinates[0] = x / 2;\r\n                vertexParams.myTextureCoordinates[1] = y / 2;\r\n\r\n                vertexParams.myNormal = vec3_create();\r\n                vertexParams.myNormal[0] = 0;\r\n                vertexParams.myNormal[1] = 0;\r\n                vertexParams.myNormal[2] = 1;\r\n\r\n                meshParams.myVertexes.push(vertexParams);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < column; j++) {\r\n                let firstTriangle = new MeshCreationTriangleParams();\r\n                firstTriangle.myIndexes[0] = (i * (column + 1)) + j;\r\n                firstTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                firstTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j;\r\n\r\n                let secondTriangle = new MeshCreationTriangleParams();\r\n                secondTriangle.myIndexes[0] = ((i + 1) * (column + 1)) + j;\r\n                secondTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                secondTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j + 1;\r\n\r\n                meshParams.myTriangles.push(firstTriangle);\r\n                meshParams.myTriangles.push(secondTriangle);\r\n            }\r\n        }\r\n\r\n        let mesh = MeshUtils.createMesh(meshParams);\r\n\r\n        return mesh;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyTransform } from \"../easy_transform\";\r\n\r\nexport class EasyTransformComponent extends Component {\r\n    static TypeName = \"pp-easy-transform\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myIsLocal: Property.bool(false),\r\n        _myScaleAsOne: Property.bool(true) // Edit all scale values together\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyTransform(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myIsLocal\": this._myIsLocal,\r\n            \"_myScaleAsOne\": this._myScaleAsOne,\r\n        });\r\n\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { getEasyTuneVariables } from \"./easy_tune_globals\";\r\n\r\nlet _mySetEasyTuneWidgetActiveVariableCallbacks = new WeakMap();\r\nlet _myRefreshEasyTuneWidgetCallbacks = new WeakMap();\r\n\r\nexport function setEasyTuneWidgetActiveVariable(variableName, engine = getMainEngine()) {\r\n    if (_mySetEasyTuneWidgetActiveVariableCallbacks.has(engine)) {\r\n        for (let callback of _mySetEasyTuneWidgetActiveVariableCallbacks.get(engine).values()) {\r\n            callback(variableName);\r\n        }\r\n    }\r\n}\r\n\r\nexport function refreshEasyTuneWidget(engine = getMainEngine()) {\r\n    if (_myRefreshEasyTuneWidgetCallbacks.has(engine)) {\r\n        for (let callback of _myRefreshEasyTuneWidgetCallbacks.get(engine).values()) {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nexport function importEasyTuneVariables(fileURL = null, resetVariablesDefaultValueOnImport = false, onSuccessCallback = null, onFailureCallback = null, engine = getMainEngine()) {\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.readText().then(\r\n                function (clipboard) {\r\n                    getEasyTuneVariables(engine).fromJSON(clipboard, resetVariablesDefaultValueOnImport);\r\n\r\n                    refreshEasyTuneWidget(engine);\r\n\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Imported from: clipboard\");\r\n                    console.log(clipboard);\r\n                }, function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = _importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    response.text().then(\r\n                        function (text) {\r\n                            getEasyTuneVariables(engine).fromJSON(text, resetVariablesDefaultValueOnImport);\r\n\r\n                            refreshEasyTuneWidget(engine);\r\n\r\n                            if (onSuccessCallback != null) {\r\n                                onSuccessCallback();\r\n                            }\r\n\r\n                            console.log(\"Easy Tune Variables Imported from:\", replacedFileURL);\r\n                            console.log(text);\r\n                        },\r\n                        function (response) {\r\n                            if (onFailureCallback != null) {\r\n                                onFailureCallback();\r\n                            }\r\n\r\n                            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                            console.error(response);\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n\r\n    refreshEasyTuneWidget(engine);\r\n}\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nexport function exportEasyTuneVariables(fileURL = null, onSuccessCallback = null, onFailureCallback = null, engine = getMainEngine()) {\r\n    let jsonVariables = getEasyTuneVariables(engine).toJSON();\r\n\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(jsonVariables).then(\r\n                function () {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to: clipboard\");\r\n                    console.log(jsonVariables);\r\n                },\r\n                function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = _importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL, {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: jsonVariables\r\n        }).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to:\", replacedFileURL);\r\n                    console.log(jsonVariables);\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n}\r\n\r\nexport function addSetEasyTuneWidgetActiveVariableCallback(id, callback, engine = getMainEngine()) {\r\n    if (!_mySetEasyTuneWidgetActiveVariableCallbacks.has(engine)) {\r\n        _mySetEasyTuneWidgetActiveVariableCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _mySetEasyTuneWidgetActiveVariableCallbacks.get(engine).set(id, callback);\r\n}\r\n\r\nexport function removeSetEasyTuneWidgetActiveVariableCallback(id, engine = getMainEngine()) {\r\n    if (_mySetEasyTuneWidgetActiveVariableCallbacks.has(engine)) {\r\n        _mySetEasyTuneWidgetActiveVariableCallbacks.get(engine).delete(id);\r\n    }\r\n}\r\n\r\nexport function addRefreshEasyTuneWidgetCallback(id, callback, engine = getMainEngine()) {\r\n    if (!_myRefreshEasyTuneWidgetCallbacks.has(engine)) {\r\n        _myRefreshEasyTuneWidgetCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _myRefreshEasyTuneWidgetCallbacks.get(engine).set(id, callback);\r\n}\r\n\r\nexport function removeRefreshEasyTuneWidgetCallback(id, engine = getMainEngine()) {\r\n    if (_myRefreshEasyTuneWidgetCallbacks.has(engine)) {\r\n        _myRefreshEasyTuneWidgetCallbacks.get(engine).delete(id);\r\n    }\r\n}\r\n\r\nexport let EasyTuneUtils = {\r\n    setEasyTuneWidgetActiveVariable,\r\n    refreshEasyTuneWidget,\r\n    importEasyTuneVariables,\r\n    exportEasyTuneVariables,\r\n    addSetEasyTuneWidgetActiveVariableCallback,\r\n    removeSetEasyTuneWidgetActiveVariableCallback,\r\n    addRefreshEasyTuneWidgetCallback,\r\n    removeRefreshEasyTuneWidgetCallback\r\n};\r\n\r\n\r\n\r\nfunction _importExportEasyTuneVariablesReplaceFileURLParams(fileURL) {\r\n    let params = fileURL.match(/\\{.+?\\}/g);\r\n\r\n    if (params == null || params.length == 0) {\r\n        return fileURL;\r\n    }\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n        params[i] = params[i].replace(\"{\", \"\");\r\n        params[i] = params[i].replace(\"}\", \"\");\r\n    }\r\n\r\n    let urlSearchParams = new URL(document.location).searchParams;\r\n\r\n    let replacedFileURL = fileURL;\r\n\r\n    for (let param of params) {\r\n        let searchParamValue = urlSearchParams.get(param);\r\n        if (searchParamValue != null) {\r\n            replacedFileURL = replacedFileURL.replace(\"{\" + param + \"}\", searchParamValue);\r\n        }\r\n    }\r\n\r\n    return replacedFileURL;\r\n}", "/*\r\nEasy Tune Variables Examples\r\n\r\nNumber:         getEasyTuneVariables().add(new EasyTuneNumber(\"Float\", 1.00, 0.1, 3));\r\nNumber Array:   getEasyTuneVariables().add(new EasyTuneNumberArray(\"Float Array\", [1.00, 2.00, 3.00], 0.1, 3));\r\nInt:            getEasyTuneVariables().add(new EasyTuneInt(\"Int\", 1, 1));\r\nInt Array:      getEasyTuneVariables().add(new EasyTuneIntArray(\"Int Array\", [1, 2, 3], 1));\r\nBool:           getEasyTuneVariables().add(new EasyTuneBool(\"Bool\", false));\r\nBool Array:     getEasyTuneVariables().add(new EasyTuneBoolArray(\"Bool Array\", [false, true, false]));\r\nTransform:      getEasyTuneVariables().add(new EasyTuneTransform(\"Transform\", mat4_create(), true));\r\n*/\r\n\r\nimport { mat4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { EasyTuneUtils } from \"./easy_tune_utils\";\r\n\r\nexport let EasyTuneVariableType = {\r\n    NONE: 0,\r\n    NUMBER: 1,\r\n    BOOL: 2,\r\n    TRANSFORM: 3\r\n};\r\n\r\nexport class EasyTuneVariable {\r\n\r\n    constructor(name, type, engine = getMainEngine()) {\r\n        this.myName = name.slice(0);\r\n        this.myType = type;\r\n\r\n        this.myValue = null;\r\n        this.myDefaultValue = null;\r\n\r\n        this.myIsActive = false;\r\n\r\n        this._myValueChangedCallbacks = new Map();      // Signature: callback(name, value)\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value;\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneVariable.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshEasyTuneWidget(this._myEngine);\r\n\r\n        if (oldValue != value) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value;\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return JSON.stringify(this.getValue());\r\n    }\r\n\r\n    registerValueChangedEventListener(id, callback) {\r\n        this._myValueChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(id) {\r\n        this._myValueChangedCallbacks.delete(id);\r\n    }\r\n\r\n    _triggerValueChangedCallback() {\r\n        if (this._myValueChangedCallbacks.size > 0) {\r\n            this._myValueChangedCallbacks.forEach(function (callback) { callback(this.myName, this.getValue()); }.bind(this));\r\n        }\r\n    }\r\n}\r\n\r\nexport class EasyTuneVariableArray extends EasyTuneVariable {\r\n\r\n    constructor(name, type, value, engine) {\r\n        super(name, type, engine);\r\n\r\n        EasyTuneVariableArray.prototype.setValue.call(this, value, true);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue.pp_clone();\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value.pp_clone();\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneVariableArray.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshEasyTuneWidget(this._myEngine);\r\n\r\n        if (oldValue == null || !oldValue.pp_equals(value)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value.pp_clone();\r\n    }\r\n}\r\n\r\n// NUMBER\r\n\r\nexport class EasyTuneNumberArray extends EasyTuneVariableArray {\r\n\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min = null, max = null, editAllValuesTogether = false, engine) {\r\n        super(name, EasyTuneVariableType.NUMBER, value, engine);\r\n\r\n        this.myDecimalPlaces = decimalPlaces;\r\n        this.myStepPerSecond = stepPerSecond;\r\n\r\n        this.myDefaultStepPerSecond = this.myStepPerSecond;\r\n\r\n        this.myMin = min;\r\n        this.myMax = max;\r\n\r\n        this.myEditAllValuesTogether = editAllValuesTogether;\r\n\r\n        this._clampValue(true);\r\n    }\r\n\r\n    setMax(max) {\r\n        this.myMax = max;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    setMin(min) {\r\n        this.myMin = min;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    _clampValue(resetDefaultValue) {\r\n        let clampedValue = this.myValue.vec_clamp(this.myMin, this.myMax);\r\n\r\n        if (!resetDefaultValue) {\r\n            let clampedDefaultValue = this.myDefaultValue.vec_clamp(this.myMin, this.myMax);\r\n            let defaultValueChanged = !clampedDefaultValue.vec_equals(this.myDefaultValue, 0.00001);\r\n            if (defaultValueChanged) {\r\n                EasyTuneVariableArray.prototype.setDefaultValue.call(this, clampedDefaultValue);\r\n            }\r\n        }\r\n\r\n        EasyTuneVariableArray.prototype.setValue.call(this, clampedValue, resetDefaultValue);\r\n    }\r\n}\r\n\r\nexport class EasyTuneNumber extends EasyTuneNumberArray {\r\n\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min, max, engine) {\r\n        super(name, [value], stepPerSecond, decimalPlaces, min, max, engine);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setDefaultValue([value]);\r\n    }\r\n}\r\n\r\nexport class EasyTuneInt extends EasyTuneNumber {\r\n\r\n    constructor(name, value, stepPerSecond, min, max, engine) {\r\n        super(name, value, stepPerSecond, 0, min, max, engine);\r\n    }\r\n}\r\n\r\nexport class EasyTuneIntArray extends EasyTuneNumberArray {\r\n\r\n    constructor(name, value, stepPerSecond, min, max, editAllValuesTogether, engine) {\r\n        let tempValue = value.pp_clone();\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            tempValue[i] = Math.round(tempValue[i]);\r\n        }\r\n\r\n        super(name, tempValue, stepPerSecond, 0, min != null ? Math.round(min) : null, max != null ? Math.round(max) : max, editAllValuesTogether, engine);\r\n    }\r\n}\r\n\r\n// BOOL\r\n\r\nexport class EasyTuneBoolArray extends EasyTuneVariableArray {\r\n\r\n    constructor(name, value, engine) {\r\n        super(name, EasyTuneVariableType.BOOL, value, engine);\r\n    }\r\n}\r\n\r\nexport class EasyTuneBool extends EasyTuneBoolArray {\r\n\r\n    constructor(name, value, engine) {\r\n        super(name, [value], engine);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setDefaultValue([value]);\r\n    }\r\n}\r\n\r\n// EASY TUNE EASY TRANSFORM\r\n\r\nexport class EasyTuneTransform extends EasyTuneVariable {\r\n\r\n    constructor(name, value, scaleAsOne = true, positionStepPerSecond = 1, rotationStepPerSecond = 50, scaleStepPerSecond = 1, engine) {\r\n        super(name, EasyTuneVariableType.TRANSFORM, engine);\r\n\r\n        this.myDecimalPlaces = 3;\r\n\r\n        this.myPosition = value.mat4_getPosition();\r\n        this.myRotation = value.mat4_getRotationDegrees();\r\n        this.myScale = value.mat4_getScale();\r\n\r\n        let decimalPlacesMultiplier = Math.pow(10, this.myDecimalPlaces);\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScale[i] = Math.max(this.myScale[i], 1 / decimalPlacesMultiplier);\r\n        }\r\n\r\n        this.myScaleAsOne = scaleAsOne;\r\n\r\n        this.myPositionStepPerSecond = positionStepPerSecond;\r\n        this.myRotationStepPerSecond = rotationStepPerSecond;\r\n        this.myScaleStepPerSecond = scaleStepPerSecond;\r\n\r\n        this.myDefaultPosition = this.myPosition.vec3_clone();\r\n        this.myDefaultRotation = this.myRotation.vec3_clone();\r\n        this.myDefaultScale = this.myScale.vec3_clone();\r\n\r\n        this.myDefaultPositionStepPerSecond = this.myPositionStepPerSecond;\r\n        this.myDefaultRotationStepPerSecond = this.myRotationStepPerSecond;\r\n        this.myDefaultScaleStepPerSecond = this.myScaleStepPerSecond;\r\n\r\n        this.myTransform = mat4_create();\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        this.myTempTransform = mat4_create();\r\n    }\r\n\r\n    getValue() {\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n        return this.myTransform.pp_clone();\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this.myTempTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        value.mat4_getPosition(this.myPosition);\r\n        value.mat4_getRotationDegrees(this.myRotation);\r\n        value.mat4_getScale(this.myScale);\r\n\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneTransform.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshEasyTuneWidget(this._myEngine);\r\n\r\n        if (!this.myTempTransform.pp_equals(this.myTransform)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultPosition = value.mat4_getPosition();\r\n        this.myDefaultRotation = value.mat4_getRotationDegrees();\r\n        this.myDefaultScale = value.mat4_getScale();\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.getValue().vec_toString();\r\n    }\r\n}", "import { getMainEngine } from \"../../../cauldron/wl/engine_globals\";\r\nimport { getEasyTuneTarget, getEasyTuneVariables } from \"../easy_tune_globals\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\n\r\nexport class EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsDefault, useTuneTarget, engine = getMainEngine()) {\r\n        this._myObject = object;\r\n        this._myUseTuneTarget = useTuneTarget;\r\n        this._mySetAsDefault = setAsDefault;\r\n\r\n        this._myEasyObject = this._myObject;\r\n        if (this._myUseTuneTarget) {\r\n            this._myEasyObject = getEasyTuneTarget(engine);\r\n        }\r\n        this._myPrevEasyObject = null;\r\n\r\n        let variableNamePrefix = this._getVariableNamePrefix();\r\n\r\n        if (variableName == \"\") {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(this._myObject.pp_getID());\r\n        } else {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(variableName);\r\n        }\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    start() {\r\n        let easyTuneVariable = this._createEasyTuneVariable(this._myEasyTuneVariableName);\r\n\r\n        getEasyTuneVariables(this._myEngine).add(easyTuneVariable);\r\n        if (this._mySetAsDefault) {\r\n            EasyTuneUtils.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName, this._myEngine);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (getEasyTuneVariables(this._myEngine).isActive(this._myEasyTuneVariableName)) {\r\n            if (this._myUseTuneTarget) {\r\n                this._myEasyObject = getEasyTuneTarget(engine);\r\n            }\r\n\r\n            if (this._myPrevEasyObject != this._myEasyObject) {\r\n                this._myPrevEasyObject = this._myEasyObject;\r\n                if (this._myEasyObject) {\r\n                    let value = this._getObjectValue(this._myEasyObject);\r\n                    getEasyTuneVariables(this._myEngine).set(this._myEasyTuneVariableName, value, true);\r\n                } else {\r\n                    let value = this._getDefaultValue();\r\n                    getEasyTuneVariables(this._myEngine).set(this._myEasyTuneVariableName, value, true);\r\n                }\r\n            }\r\n\r\n            if (this._myEasyObject) {\r\n                this._updateObjectValue(this._myEasyObject, getEasyTuneVariables(this._myEngine).get(this._myEasyTuneVariableName));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableValue(value) {\r\n        getEasyTuneVariables(this._myEngine).set(this._myEasyTuneVariableName, value);\r\n    }\r\n}", "import { mat4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneTransform } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyTransform extends EasyObjectTuner {\r\n\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Transform \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneTransform(variableName, this._getDefaultValue(), this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getTransformLocal() : object.pp_getTransform();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return mat4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setTransformLocal(value);\r\n        } else {\r\n            object.pp_setTransform(value);\r\n        }\r\n    }\r\n}", "export function save(id, value) {\r\n    if (value != null) {\r\n        localStorage.setItem(id, value);\r\n    }\r\n}\r\n\r\nexport function has(id) {\r\n    return loadString(id, null) != null;\r\n}\r\n\r\nexport function remove(id) {\r\n    return localStorage.removeItem(id);\r\n}\r\n\r\nexport function clear() {\r\n    return localStorage.clear();\r\n}\r\n\r\nexport function load(id, defaultValue = null) {\r\n    return loadString(id, defaultValue);\r\n}\r\n\r\nexport function loadString(id, defaultValue = null) {\r\n    let item = localStorage.getItem(id);\r\n\r\n    if (item == null) {\r\n        item = defaultValue;\r\n    }\r\n\r\n    return item;\r\n}\r\n\r\nexport function loadNumber(id, defaultValue = null) {\r\n    let item = loadString(id);\r\n\r\n    if (item != null) {\r\n        return Number(item);\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function loadBool(id, defaultValue = null) {\r\n    let item = loadString(id);\r\n\r\n    if (item == \"true\") {\r\n        return true;\r\n    } else if (item == \"false\") {\r\n        return false;\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport let SaveUtils = {\r\n    save,\r\n    has,\r\n    remove,\r\n    clear,\r\n    load,\r\n    loadString,\r\n    loadNumber,\r\n    loadBool\r\n};", "import { getMainEngine } from \"../wl/engine_globals\";\r\nimport { SaveUtils } from \"../utils/save_utils\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\nimport { Timer } from \"./timer\";\r\n\r\nexport class SaveManager {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._mySaveCache = new Map();\r\n        this._myCacheEnabled = true;\r\n\r\n        this._myCommitSavesDelayTimer = new Timer(0, false);\r\n        this._myDelaySavesCommit = true;\r\n        this._myIDsToCommit = [];\r\n\r\n        this._myCacheDefaultValueOnFail = true;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n\r\n        this._myClearCallbacks = new Map();                 // Signature: callback()\r\n        this._myDeleteCallbacks = new Map();                // Signature: callback(id)\r\n        this._myDeleteIDCallbacks = new Map();              // Signature: callback(id)\r\n        this._mySaveCallbacks = new Map();                  // Signature: callback(id, value)\r\n        this._mySaveValueChangedCallbacks = new Map();      // Signature: callback(id, value)\r\n        this._mySaveIDCallbacks = new Map();                // Signature: callback(id, value)\r\n        this._mySaveValueChangedIDCallbacks = new Map();    // Signature: callback(id, value)\r\n        this._myCommitSaveCallbacks = new Map();            // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSaveIDCallbacks = new Map();          // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSavesCallbacks = new Map();           // Signature: callback(isCommitSavesDelayed, failed)\r\n\r\n        this._myLoadCallbacks = new Map();                  // Signature: callback(id, value, loadFromCache, failed)\r\n        this._myLoadIDCallbacks = new Map();                // Signature: callback(id, value, loadFromCache, failed)\r\n    }\r\n\r\n    setCommitSavesDelay(delay) {\r\n        this._myCommitSavesDelayTimer.start(delay);\r\n    }\r\n\r\n    setDelaySavesCommit(delayed) {\r\n        this._myDelaySavesCommit = delayed;\r\n    }\r\n\r\n    setCacheDefaultValueOnFail(cache) {\r\n        this._myCacheDefaultValueOnFail = cache;\r\n    }\r\n\r\n    setCacheEnabled(enabled) {\r\n        this._myCacheEnabled = enabled;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCommitSavesDelayTimer.isRunning()) {\r\n            this._myCommitSavesDelayTimer.update(dt);\r\n            if (this._myCommitSavesDelayTimer.isDone()) {\r\n                this.commitSaves();\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id, value, overrideDelaySavesCommit = null, overrideCacheEnabled = null) {\r\n        let sameValue = false;\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) {\r\n            sameValue = this._mySaveCache.get(id) === value;\r\n        }\r\n\r\n        if (!sameValue) {\r\n            this._mySaveCache.set(id, value);\r\n            if ((this._myDelaySavesCommit && overrideDelaySavesCommit == null) || (overrideDelaySavesCommit != null && overrideDelaySavesCommit)) {\r\n                this._myIDsToCommit.pp_pushUnique(id);\r\n                if (!this._myCommitSavesDelayTimer.isRunning()) {\r\n                    this._myCommitSavesDelayTimer.start();\r\n                }\r\n            } else {\r\n                let failed = this._commitSave(id, false);\r\n\r\n                if (this._myCommitSavesCallbacks.size > 0) {\r\n                    let isCommitSaveDelayed = false;\r\n                    this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSaveDelayed, failed); });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySaveCallbacks.size > 0) {\r\n            this._mySaveCallbacks.forEach(function (callback) { callback(id, value); });\r\n        }\r\n\r\n        if (this._mySaveIDCallbacks.size > 0) {\r\n            let callbacks = this._mySaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n        }\r\n\r\n        if (!sameValue) {\r\n            if (this._mySaveValueChangedCallbacks.size > 0) {\r\n                this._mySaveValueChangedCallbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n\r\n            if (this._mySaveValueChangedIDCallbacks.size > 0) {\r\n                let callbacks = this._mySaveValueChangedIDCallbacks.get(id);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(id, value); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    commitSaves() {\r\n        if (this._myIDsToCommit.length > 0) {\r\n            let failed = false;\r\n\r\n            for (let id of this._myIDsToCommit) {\r\n                if (this._mySaveCache.has(id)) {\r\n                    let result = this._commitSave(id, true);\r\n                    failed = failed || result;\r\n                }\r\n            }\r\n\r\n            this._myIDsToCommit = [];\r\n\r\n            if (this._myCommitSavesCallbacks.size > 0) {\r\n                let isCommitSavesDelayed = true;\r\n                this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSavesDelayed, failed); });\r\n            }\r\n        }\r\n    }\r\n\r\n    has(id, overrideCacheEnabled = null) {\r\n        return (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) || SaveUtils.has(id);\r\n    }\r\n\r\n    remove(id) {\r\n        this._mySaveCache.delete(id);\r\n        SaveUtils.remove(id);\r\n\r\n        if (this._myDeleteCallbacks.size > 0) {\r\n            this._myDeleteCallbacks.forEach(function (callback) { callback(id); });\r\n        }\r\n\r\n        if (this._myDeleteIDCallbacks.size > 0) {\r\n            let callbacks = this._myDeleteIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id); });\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._mySaveCache.clear();\r\n        SaveUtils.clear();\r\n\r\n        if (this._myClearCallbacks.size > 0) {\r\n            this._myClearCallbacks.forEach(function (callback) { callback(); });\r\n        }\r\n    }\r\n\r\n    load(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"load\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadString(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadString\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadNumber(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadNumber\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadBool(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadBool\", overrideCacheEnabled);\r\n    }\r\n\r\n    getCommitSavesDelay() {\r\n        return this._myCommitSavesDelayTimer.getDuration();\r\n    }\r\n\r\n    isDelaySavesCommit() {\r\n        return this._myDelaySavesCommit;\r\n    }\r\n\r\n    isCacheDefaultValueOnFail() {\r\n        return this._myCacheDefaultValueOnFail;\r\n    }\r\n\r\n    isCacheEnabled() {\r\n        return this._myCacheEnabled;\r\n    }\r\n\r\n    _commitSave(id, isCommitSaveDelayed) {\r\n        let value = this._mySaveCache.get(id);\r\n        let failed = false;\r\n\r\n        try {\r\n            SaveUtils.save(id, value);\r\n        } catch (error) {\r\n            failed = true;\r\n        }\r\n\r\n        if (this._myCommitSaveCallbacks.size > 0) {\r\n            this._myCommitSaveCallbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n        }\r\n\r\n        if (this._myCommitSaveIDCallbacks.size > 0) {\r\n            let callbacks = this._myCommitSaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n            }\r\n        }\r\n\r\n        return failed;\r\n    }\r\n\r\n    _load(id, defaultValue, functionName, overrideCacheEnabled = null) {\r\n        let value = null;\r\n        let failed = false;\r\n        let loadFromCache = false;\r\n\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) {\r\n            value = this._mySaveCache.get(id);\r\n\r\n            if (value == null && defaultValue != null) {\r\n                value = defaultValue;\r\n                if (this._myCacheDefaultValueOnFail) {\r\n                    this._mySaveCache.set(id, value);\r\n                }\r\n            }\r\n\r\n            loadFromCache = true;\r\n        } else {\r\n            let saveResult = null;\r\n            try {\r\n                saveResult = SaveUtils[functionName](id, null);\r\n            } catch (error) {\r\n                // Error is managed as if it worked but there was no value\r\n                saveResult = null;\r\n                failed = true;\r\n            }\r\n\r\n            if (saveResult == null) {\r\n                value = defaultValue;\r\n            } else {\r\n                value = saveResult;\r\n            }\r\n\r\n            if (saveResult != null || this._myCacheDefaultValueOnFail) {\r\n                this._mySaveCache.set(id, value);\r\n            } else {\r\n                this._mySaveCache.set(id, null);\r\n            }\r\n        }\r\n\r\n        if (this._myLoadCallbacks.size > 0) {\r\n            this._myLoadCallbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n        }\r\n\r\n        if (this._myLoadIDCallbacks.size > 0) {\r\n            let callbacks = this._myLoadIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener(\"visibilitychange\", function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        this.commitSaves();\r\n    }\r\n\r\n    registerClearEventListener(callbackID, callback) {\r\n        this._myClearCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterClearEventListener(callbackID) {\r\n        this._myClearCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteEventListener(callbackID, callback) {\r\n        this._myDeleteCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteEventListener(callbackID) {\r\n        this._myDeleteCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myDeleteIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myDeleteIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveEventListener(callbackID, callback) {\r\n        this._mySaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveEventListener(callbackID) {\r\n        this._mySaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveValueChangedEventListener(callbackID, callback) {\r\n        this._mySaveValueChangedCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedEventListener(callbackID) {\r\n        this._mySaveValueChangedCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveValueChangedIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveValueChangedIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveValueChangedIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommitSavesEventListener(callbackID, callback) {\r\n        this._myCommitSavesCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSavesEventListener(callbackID) {\r\n        this._myCommitSavesCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveEventListener(callbackID, callback) {\r\n        this._myCommitSaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveEventListener(callbackID) {\r\n        this._myCommitSaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myCommitSaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myCommitSaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerLoadEventListener(callbackID, callback) {\r\n        this._myLoadCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadEventListener(callbackID) {\r\n        this._myLoadCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerLoadIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myLoadIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myLoadIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _isCacheEnabled(overrideCacheEnabled = null) {\r\n        return (this._myCacheEnabled && overrideCacheEnabled == null) || (overrideCacheEnabled != null && overrideCacheEnabled);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\n\r\nexport class ClearConsoleOnXRSessionStartComponent extends Component {\r\n    static TypeName = \"pp-clear-console-on-xr-session-start\";\r\n    static Properties = {\r\n        _myFirstTimeOnly: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myFirstTime = true;\r\n        XRUtils.registerSessionStartEventListener(this, this._onXRSessionStart.bind(this), this.engine);\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        if (!this._myFirstTimeOnly || this._myFirstTime) {\r\n            this._myFirstTime = false;\r\n            console.clear();\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\n\r\nexport class SetActiveComponent extends Component {\r\n    static TypeName = \"pp-set-active\";\r\n    static Properties = {\r\n        _myActive: Property.bool(true),\r\n        _mySetActiveOn: Property.enum([\"Self\", \"Children\", \"Descendants\", \"Hierarchy\"], \"Hierarchy\"),\r\n        _mySetActiveWhen: Property.enum([\"Init\", \"Start\", \"First Update\"], \"Init\")\r\n    };\r\n\r\n    init() {\r\n        if (this.active && this._mySetActiveWhen == 0) {\r\n            this._setActive();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._mySetActiveWhen == 1) {\r\n            this._setActive();\r\n        }\r\n        this._myFirst = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._mySetActiveWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._setActive();\r\n        }\r\n    }\r\n\r\n    _setActive() {\r\n        if (this._mySetActiveOn == 0) {\r\n            this.object.pp_setActiveSelf(this._myActive);\r\n        } else if (this._mySetActiveOn == 1) {\r\n            this.object.pp_setActiveChildren(this._myActive);\r\n        } else if (this._mySetActiveOn == 2) {\r\n            this.object.pp_setActiveDescendants(this._myActive);\r\n        } else {\r\n            this.object.pp_setActive(this._myActive);\r\n        }\r\n    }\r\n}", "import { Component, Property, PhysXComponent } from \"@wonderlandengine/api\";\r\n\r\nexport class AdjustHierarchyPhysXScaleComponent extends Component {\r\n    static TypeName = \"pp-adjust-hierarchy-physx-scale\";\r\n    static Properties = {\r\n        _myWhen: Property.enum([\"Init\", \"Start\", \"First Update\"], \"Start\")\r\n    };\r\n\r\n    init() {\r\n        if (this.active && this._myWhen == 0) {\r\n            this._adjustScale();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myWhen == 1) {\r\n            this._adjustScale();\r\n        }\r\n        this._myFirst = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._adjustScale();\r\n        }\r\n    }\r\n\r\n    _adjustScale() {\r\n        let scale = this.object.pp_getScale();\r\n        let physXComponents = this.object.pp_getComponents(PhysXComponent);\r\n        for (let physX of physXComponents) {\r\n            physX.extents[0] = physX.extents[0] * scale[0];\r\n            physX.extents[1] = physX.extents[1] * scale[1];\r\n            physX.extents[2] = physX.extents[2] * scale[2];\r\n\r\n            if (physX.active) {\r\n                physX.active = false;\r\n                physX.active = true;\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { quat2_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../pp/default_resources_global\";\r\nimport { getPlayerObjects } from \"../../pp/player_objects_global\";\r\nimport { getEasyTuneVariables } from \"../../tool/easy_tune/easy_tune_globals\";\r\nimport { EasyTuneNumber } from \"../../tool/easy_tune/easy_tune_variable_types\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\nimport { VisualText, VisualTextParams } from \"../visual/elements/visual_text\";\r\n\r\nexport class ShowFPSComponent extends Component {\r\n    static TypeName = \"pp-show-fps\";\r\n    static Properties = {\r\n        _myRefreshSeconds: Property.float(0.25),\r\n        _myTextMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._myTimer = new Timer(this._myRefreshSeconds);\r\n        this._myTotalDT = 0;\r\n        this._myFrames = 0;\r\n\r\n        this._myVisualFPSParent = this.object.pp_addObject();\r\n\r\n        let visualParams = new VisualTextParams(this.engine);\r\n        visualParams.myText = \"00\";\r\n\r\n        visualParams.myTransform.mat4_setPositionRotationScale(vec3_create(-0.115, -0.115, 0.35), vec3_create(0, 180, 0), vec3_create(0.3, 0.3, 0.3));\r\n\r\n        if (this._myTextMaterial != null) {\r\n            visualParams.myMaterial = this._myTextMaterial.clone();\r\n        } else {\r\n            visualParams.myMaterial = getDefaultResources(this.engine).myMaterials.myText.clone();\r\n            visualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\n        }\r\n\r\n        visualParams.myParent = this._myVisualFPSParent;\r\n        visualParams.myIsLocal = true;\r\n\r\n        this._myVisualFPS = new VisualText(visualParams);\r\n\r\n        //getEasyTuneVariables(this.engine).add(new EasyTuneNumber(\"FPS X\", -0.25, 0.1, 3, undefined, undefined, this.engine));\r\n        //getEasyTuneVariables(this.engine).add(new EasyTuneNumber(\"FPS Y\", -0.130, 0.1, 3, undefined, undefined, this.engine));\r\n        //getEasyTuneVariables(this.engine).add(new EasyTuneNumber(\"FPS Z\", 0.35, 0.1, 3, undefined, undefined, this.engine));\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nShowFPSComponent.prototype.update = function () {\r\n    let playerTransformQuat = quat2_create();\r\n    return function update(dt) {\r\n        this._myTotalDT += dt;\r\n        this._myFrames++;\r\n\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            this._myTimer.start();\r\n\r\n            let fps = Math.round(this._myFrames / this._myTotalDT);\r\n\r\n            let visualParams = this._myVisualFPS.getParams();\r\n\r\n            if (XRUtils.isSessionActive(this.engine)) {\r\n                visualParams.myTransform.mat4_setPositionRotationScale(vec3_create(-0.115, -0.115, 0.35), vec3_create(0, 180, 0), vec3_create(0.3, 0.3, 0.3));\r\n            } else {\r\n                visualParams.myTransform.mat4_setPositionRotationScale(vec3_create(-0.25, -0.130, 0.35), vec3_create(0, 180, 0), vec3_create(0.3, 0.3, 0.3));\r\n            }\r\n\r\n            //visualParams.myTransform.mat4_setPositionRotationScale([getEasyTuneVariables(this.engine).get(\"FPS X\"), getEasyTuneVariables(this.engine).get(\"FPS Y\"), getEasyTuneVariables(this.engine).get(\"FPS Z\")], vec3_create(0, 180, 0), vec3_create(0.3, 0.3, 0.3));\r\n\r\n            visualParams.myText = fps.toFixed(0);\r\n            this._myVisualFPS.paramsUpdated();\r\n\r\n            this._myTotalDT = 0;\r\n            this._myFrames = 0;\r\n        }\r\n\r\n        this._myVisualFPSParent.pp_setTransformQuat(getPlayerObjects(this.engine).myHead.pp_getTransformQuat(playerTransformQuat));\r\n    };\r\n}();", "/*\r\n    You can also use plain functions for state/transition if u want to do something simple and quick\r\n\r\n    Signatures:\r\n        function stateUpdate(dt, fsm)\r\n        function init(fsm, initStateData)\r\n        function transition(fsm, transitionData)\r\n*/\r\n\r\nexport class StateData {\r\n\r\n    constructor(stateID, stateObject) {\r\n        this.myID = stateID;\r\n        this.myObject = stateObject;\r\n    }\r\n}\r\n\r\nexport class TransitionData {\r\n\r\n    constructor(transitionID, fromStateData, toStateData, transitionObject, skipStateFunction) {\r\n        this.myID = transitionID;\r\n        this.myFromState = fromStateData;\r\n        this.myToState = toStateData;\r\n        this.myObject = transitionObject;\r\n        this.mySkipStateFunction = skipStateFunction;\r\n    }\r\n}\r\n\r\nexport let PerformMode = {\r\n    IMMEDIATE: 0,\r\n    DELAYED: 1\r\n};\r\n\r\nexport let PerformDelayedMode = {\r\n    QUEUE: 0,\r\n    KEEP_FIRST: 1,\r\n    KEEP_LAST: 2\r\n};\r\n\r\nexport let SkipStateFunction = {\r\n    NONE: 0,\r\n    END: 1,\r\n    START: 2,\r\n    BOTH: 3\r\n};\r\n\r\nexport class FSM {\r\n\r\n    constructor(performMode = PerformMode.IMMEDIATE, performDelayedMode = PerformDelayedMode.QUEUE) {\r\n        this._myCurrentStateData = null;\r\n\r\n        this._myStates = new Map();\r\n        this._myTransitions = new Map();\r\n\r\n        this._myDebugLogActive = false;\r\n        this._myDebugShowDelayedInfo = false;\r\n        this._myDebugLogName = \"FSM\";\r\n\r\n        this._myPerformMode = performMode;\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n        this._myPendingPerforms = [];\r\n        this._myCurrentlyPerformedTransition = null;\r\n\r\n        this._myInitCallbacks = new Map();            // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myInitIDCallbacks = new Map();          // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myTransitionCallbacks = new Map();      // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n        this._myTransitionIDCallbacks = [];           // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n    }\r\n\r\n    addState(stateID, state = null) {\r\n        let stateObject = null;\r\n        if (!state || typeof state == \"function\") {\r\n            stateObject = {};\r\n            if (typeof state == \"function\") {\r\n                stateObject.update = function update() { return state(...arguments); };\r\n            } else {\r\n                stateObject.update = null;\r\n            }\r\n            stateObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.update = this.update;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            stateObject = state;\r\n        }\r\n\r\n        let stateData = new StateData(stateID, stateObject);\r\n        this._myStates.set(stateID, stateData);\r\n        this._myTransitions.set(stateID, new Map());\r\n    }\r\n\r\n    addTransition(fromStateID, toStateID, transitionID, transition = null, skipStateFunction = SkipStateFunction.NONE) {\r\n        let transitionObject = null;\r\n        if (!transition || typeof transition == \"function\") {\r\n            transitionObject = {};\r\n            if (typeof transition == \"function\") {\r\n                transitionObject.perform = function perform() { return transition(...arguments); };\r\n            } else {\r\n                transitionObject.perform = null;\r\n            }\r\n            transitionObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.perform = this.perform;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            transitionObject = transition;\r\n        }\r\n\r\n        if (this.hasState(fromStateID) && this.hasState(toStateID)) {\r\n            let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n            let transitionData = new TransitionData(transitionID, this.getState(fromStateID), this.getState(toStateID), transitionObject, skipStateFunction);\r\n            transitionsFromState.set(transitionID, transitionData);\r\n        } else {\r\n            if (!this.hasState(fromStateID) && !this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID, \"- to state not found:\", toStateID);\r\n            } else if (!this.hasState(fromStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID);\r\n            } else if (!this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- to state not found:\", toStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    init(initStateID, initTransition = null, ...args) {\r\n        let initTransitionObject = initTransition;\r\n        if (initTransition && typeof initTransition == \"function\") {\r\n            initTransitionObject = {};\r\n            initTransitionObject.performInit = initTransition;\r\n        }\r\n\r\n        if (this.hasState(initStateID)) {\r\n            let initStateData = this._myStates.get(initStateID);\r\n\r\n            if (this._myDebugLogActive) {\r\n                console.log(this._myDebugLogName, \"- Init:\", initStateID);\r\n            }\r\n\r\n            if (initTransitionObject && initTransitionObject.performInit) {\r\n                initTransitionObject.performInit(this, initStateData, ...args);\r\n            } else if (initStateData.myObject && initStateData.myObject.init) {\r\n                initStateData.myObject.init(this, initStateData, ...args);\r\n            }\r\n\r\n            this._myCurrentStateData = initStateData;\r\n\r\n            if (this._myInitCallbacks.size > 0) {\r\n                this._myInitCallbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n            }\r\n\r\n            if (this._myInitIDCallbacks.size > 0) {\r\n                let callbacks = this._myInitIDCallbacks.get(initStateID);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n                }\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            console.warn(this._myDebugLogName, \"- Init state not found:\", initStateID);\r\n        }\r\n    }\r\n\r\n    update(dt, ...args) {\r\n        if (this._myPendingPerforms.length > 0) {\r\n            for (let i = 0; i < this._myPendingPerforms.length; i++) {\r\n                this._perform(this._myPendingPerforms[i].myID, PerformMode.DELAYED, ...this._myPendingPerforms[i].myArgs);\r\n            }\r\n            this._myPendingPerforms = [];\r\n        }\r\n\r\n        if (this._myCurrentStateData && this._myCurrentStateData.myObject && this._myCurrentStateData.myObject.update) {\r\n            this._myCurrentStateData.myObject.update(dt, this, ...args);\r\n        }\r\n    }\r\n\r\n    perform(transitionID, ...args) {\r\n        if (this._myPerformMode == PerformMode.DELAYED) {\r\n            this.performDelayed(transitionID, ...args);\r\n        } else {\r\n            this.performImmediate(transitionID, ...args);\r\n        }\r\n    }\r\n\r\n    performDelayed(transitionID, ...args) {\r\n        let performDelayed = false;\r\n\r\n        switch (this._myPerformDelayedMode) {\r\n            case PerformDelayedMode.QUEUE:\r\n                this._myPendingPerforms.push(new PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n            case PerformDelayedMode.KEEP_FIRST:\r\n                if (!this.hasPendingPerforms()) {\r\n                    this._myPendingPerforms.push(new PendingPerform(transitionID, ...args));\r\n                    performDelayed = true;\r\n                }\r\n                break;\r\n            case PerformDelayedMode.KEEP_LAST:\r\n                this.resetPendingPerforms();\r\n                this._myPendingPerforms.push(new PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n        }\r\n\r\n        return performDelayed;\r\n    }\r\n\r\n    performImmediate(transitionID, ...args) {\r\n        return this._perform(transitionID, PerformMode.IMMEDIATE, ...args);\r\n    }\r\n\r\n    canPerform(transitionID) {\r\n        return this.hasTransitionFromState(this._myCurrentStateData.myID, transitionID);\r\n    }\r\n\r\n    canGoTo(stateID, transitionID = null) {\r\n        return this.hasTransitionFromStateToState(this._myCurrentStateData.myID, stateID, transitionID);\r\n    }\r\n\r\n    isInState(stateID) {\r\n        return this._myCurrentStateData != null && this._myCurrentStateData.myID == stateID;\r\n    }\r\n\r\n    isPerformingTransition() {\r\n        return this._myCurrentlyPerformedTransition != null;\r\n    }\r\n\r\n    getCurrentlyPerformedTransition() {\r\n        return this._myCurrentlyPerformedTransition;\r\n    }\r\n\r\n    hasBeenInit() {\r\n        return this._myCurrentStateData != null;\r\n    }\r\n\r\n    reset() {\r\n        this.resetState();\r\n        this.resetPendingPerforms();\r\n    }\r\n\r\n    resetState() {\r\n        this._myCurrentStateData = null;\r\n    }\r\n\r\n    resetPendingPerforms() {\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this._myCurrentStateData;\r\n    }\r\n\r\n    getCurrentTransitions() {\r\n        return this.getTransitionsFromState(this._myCurrentStateData.myID);\r\n    }\r\n\r\n    getCurrentTransitionsToState(stateID) {\r\n        return this.getTransitionsFromStateToState(this._myCurrentStateData.myID, stateID);\r\n    }\r\n\r\n    getState(stateID) {\r\n        return this._myStates.get(stateID);\r\n    }\r\n\r\n    getStates() {\r\n        return this._myStates.values();\r\n    }\r\n\r\n    getTransitions() {\r\n        let transitions = [];\r\n\r\n        for (let transitionsFromState of this._myTransitions.values()) {\r\n            for (let transitionData of transitionsFromState.values()) {\r\n                transitions.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitions;\r\n    }\r\n\r\n    getTransitionsFromState(fromStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n        return Array.from(transitionsFromState.values());\r\n    }\r\n\r\n    getTransitionsFromStateToState(fromStateID, toStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n        let transitionsToState = [];\r\n        for (let transitionData of transitionsFromState.values()) {\r\n            if (transitionData.myToState.myID == toStateID) {\r\n                transitionsToState.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitionsToState;\r\n    }\r\n\r\n    removeState(stateID) {\r\n        if (this.hasState(stateID)) {\r\n            this._myStates.delete(stateID);\r\n            this._myTransitions.delete(stateID);\r\n\r\n            for (let transitionsFromState of this._myTransitions.values()) {\r\n                let toDelete = [];\r\n                for (let [transitionID, transitionData] of transitionsFromState.entries()) {\r\n                    if (transitionData.myToState.myID == stateID) {\r\n                        toDelete.push(transitionID);\r\n                    }\r\n                }\r\n\r\n                for (let transitionID of toDelete) {\r\n                    transitionsFromState.delete(transitionID);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeTransitionFromState(fromStateID, transitionID) {\r\n        let fromTransitions = this._getTransitionsFromState(fromStateID);\r\n        if (fromTransitions) {\r\n            return fromTransitions.delete(transitionID);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hasState(stateID) {\r\n        return this._myStates.has(stateID);\r\n    }\r\n\r\n    hasTransitionFromState(fromStateID, transitionID) {\r\n        let transitions = this.getTransitionsFromState(fromStateID);\r\n\r\n        let transitionIndex = transitions.findIndex(function (transition) {\r\n            return transition.myID == transitionID;\r\n        });\r\n\r\n        return transitionIndex >= 0;\r\n    }\r\n\r\n    hasTransitionFromStateToState(fromStateID, toStateID, transitionID = null) {\r\n        let transitions = this.getTransitionsFromStateToState(fromStateID, toStateID);\r\n\r\n        let hasTransition = false;\r\n        if (transitionID) {\r\n            let transitionIndex = transitions.findIndex(function (transition) {\r\n                return transition.myID == transitionID;\r\n            });\r\n\r\n            hasTransition = transitionIndex >= 0;\r\n        } else {\r\n            hasTransition = transitions.length > 0;\r\n        }\r\n\r\n        return hasTransition;\r\n    }\r\n\r\n    setPerformMode(performMode) {\r\n        this._myPerformMode = performMode;\r\n    }\r\n\r\n    getPerformMode() {\r\n        return this._myPerformMode;\r\n    }\r\n\r\n    setPerformDelayedMode(performDelayedMode) {\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n    }\r\n\r\n    getPerformDelayedMode() {\r\n        return this._myPerformDelayedMode;\r\n    }\r\n\r\n    hasPendingPerforms() {\r\n        return this._myPendingPerforms.length > 0;\r\n    }\r\n\r\n    getPendingPerforms() {\r\n        return this._myPendingPerforms.pp_clone();\r\n    }\r\n\r\n    clone(deepClone = false) {\r\n        if (!this.isCloneable(deepClone)) {\r\n            return null;\r\n        }\r\n\r\n        let cloneFSM = new FSM();\r\n\r\n        cloneFSM._myDebugLogActive = this._myDebugLogActive;\r\n        cloneFSM._myDebugShowDelayedInfo = this._myDebugShowDelayedInfo;\r\n        cloneFSM._myDebugLogName = this._myDebugLogName.slice(0);\r\n\r\n        cloneFSM._myPerformMode = this._myPerformMode;\r\n        cloneFSM._myPerformDelayedMode = this._myPerformDelayedMode;\r\n        cloneFSM._myPendingPerforms = this._myPendingPerforms.pp_clone();\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            let stateData = null;\r\n\r\n            if (deepClone) {\r\n                stateData = new StateData(entry[1].myID, entry[1].myObject.clone());\r\n            } else {\r\n                stateData = new StateData(entry[1].myID, entry[1].myObject);\r\n            }\r\n\r\n            cloneFSM._myStates.set(stateData.myID, stateData);\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            let transitionsFromState = new Map();\r\n            cloneFSM._myTransitions.set(entry[0], transitionsFromState);\r\n\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                let transitionData = null;\r\n\r\n                let fromState = cloneFSM.getState(transitonEntry[1].myFromState.myID);\r\n                let toState = cloneFSM.getState(transitonEntry[1].myToState.myID);\r\n\r\n                if (deepClone) {\r\n                    transitionData = new TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject.clone(), transitonEntry[1].mySkipStateFunction);\r\n                } else {\r\n                    transitionData = new TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject, transitonEntry[1].mySkipStateFunction);\r\n                }\r\n\r\n                transitionsFromState.set(transitionData.myID, transitionData);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            cloneFSM._myCurrentStateData = cloneFSM.getState(this._myCurrentStateData.myID);\r\n        }\r\n\r\n        return cloneFSM;\r\n    }\r\n\r\n    isCloneable(deepClone = false) {\r\n        if (!deepClone) {\r\n            return true;\r\n        }\r\n\r\n        let isDeepCloneable = true;\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            isDeepCloneable = isDeepCloneable && entry[1].myObject.clone != null;\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                isDeepCloneable = isDeepCloneable && transitonEntry[1].myObject.clone != null;\r\n            }\r\n        }\r\n\r\n        return isDeepCloneable;\r\n    }\r\n\r\n    setDebugLogActive(active, debugLogName = null, showDelayedInfo = false) {\r\n        this._myDebugLogActive = active;\r\n        this._myDebugShowDelayedInfo = showDelayedInfo;\r\n        if (debugLogName) {\r\n            this._myDebugLogName = \"FSM: \".concat(debugLogName);\r\n        }\r\n    }\r\n\r\n    registerInitEventListener(callbackID, callback) {\r\n        this._myInitCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitEventListener(callbackID) {\r\n        this._myInitCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerInitIDEventListener(initStateID, callbackID, callback) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks == null) {\r\n            this._myInitIDCallbacks.set(initStateID, new Map());\r\n            initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        }\r\n\r\n        initStateIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitIDEventListener(initStateID, callbackID) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks != null) {\r\n            initStateIDCallbacks.delete(callbackID);\r\n\r\n            if (initStateIDCallbacks.size <= 0) {\r\n                this._myInitIDCallbacks.delete(initStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerTransitionEventListener(callbackID, callback) {\r\n        this._myTransitionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionEventListener(callbackID) {\r\n        this._myTransitionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    // The fsm IDs can be null, that means that the callback is called whenever only the valid IDs match\r\n    // This let you register to all the transitions with a specific ID and from of a specific state but to every state (toStateID == null)\r\n    registerTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID, callback) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks == null) {\r\n            let transitionIDCallbacks = [];\r\n            transitionIDCallbacks[0] = fromStateID;\r\n            transitionIDCallbacks[1] = toStateID;\r\n            transitionIDCallbacks[2] = transitionID;\r\n            transitionIDCallbacks[3] = new Map();\r\n\r\n            internalTransitionIDCallbacks = transitionIDCallbacks[3];\r\n\r\n            this._myTransitionIDCallbacks.push(transitionIDCallbacks);\r\n        }\r\n\r\n        internalTransitionIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks != null) {\r\n            internalTransitionIDCallbacks.delete(callbackID);\r\n\r\n            if (internalTransitionIDCallbacks.size <= 0) {\r\n                this._myTransitionIDCallbacks.pp_remove(element => element[0] == fromStateID && element[1] == toStateID && element[2] == transitionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _perform(transitionID, performMode, ...args) {\r\n        if (this.isPerformingTransition()) {\r\n            let currentlyPerformedTransition = this.getCurrentlyPerformedTransition();\r\n            let consoleArguments = [this._myDebugLogName, \"- Trying to perform:\", transitionID];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            consoleArguments.push(\"- But another transition is currently being performed -\", currentlyPerformedTransition.myID);\r\n            console.warn(...consoleArguments);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            if (this.canPerform(transitionID)) {\r\n                let transitions = this._myTransitions.get(this._myCurrentStateData.myID);\r\n                let transitionToPerform = transitions.get(transitionID);\r\n\r\n                this._myCurrentlyPerformedTransition = transitionToPerform;\r\n\r\n                let fromState = this._myCurrentStateData;\r\n                let toState = this._myStates.get(transitionToPerform.myToState.myID);\r\n\r\n                if (this._myDebugLogActive) {\r\n                    let consoleArguments = [this._myDebugLogName, \"- From:\", fromState.myID, \"- To:\", toState.myID, \"- With:\", transitionID];\r\n                    if (this._myDebugShowDelayedInfo) {\r\n                        consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                    }\r\n                    console.log(...consoleArguments);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != SkipStateFunction.END && transitionToPerform.mySkipStateFunction != SkipStateFunction.BOTH &&\r\n                    fromState.myObject && fromState.myObject.end) {\r\n                    fromState.myObject.end(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.myObject && transitionToPerform.myObject.perform) {\r\n                    transitionToPerform.myObject.perform(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != SkipStateFunction.START && transitionToPerform.mySkipStateFunction != SkipStateFunction.BOTH &&\r\n                    toState.myObject && toState.myObject.start) {\r\n                    toState.myObject.start(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                this._myCurrentStateData = transitionToPerform.myToState;\r\n\r\n                if (this._myTransitionCallbacks.size > 0) {\r\n                    this._myTransitionCallbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                }\r\n\r\n                if (this._myTransitionIDCallbacks.length > 0) {\r\n                    let internalTransitionIDCallbacks = [];\r\n                    for (let value of this._myTransitionIDCallbacks) {\r\n                        if ((value[0] == null || value[0] == fromState.myID) &&\r\n                            (value[1] == null || value[1] == toState.myID) &&\r\n                            (value[2] == null || value[2] == transitionToPerform.myID)) {\r\n                            internalTransitionIDCallbacks.push(value[3]);\r\n                        }\r\n                    }\r\n\r\n                    for (let callbacks of this.internalTransitionIDCallbacks) {\r\n                        callbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                    }\r\n                }\r\n\r\n                this._myCurrentlyPerformedTransition = null;\r\n\r\n                return true;\r\n            } else if (this._myDebugLogActive) {\r\n                let consoleArguments = [this._myDebugLogName, \"- No Transition:\", transitionID, \"- From:\", this._myCurrentStateData.myID];\r\n                if (this._myDebugShowDelayedInfo) {\r\n                    consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                }\r\n                console.warn(...consoleArguments);\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            let consoleArguments = [this._myDebugLogName, \"- FSM not initialized yet\"];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            console.warn(...consoleArguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _getTransitionsFromState(fromStateID) {\r\n        return this._myTransitions.get(fromStateID);\r\n    }\r\n}\r\n\r\nclass PendingPerform {\r\n\r\n    constructor(transitionID, ...args) {\r\n        this.myID = transitionID;\r\n        this.myArgs = args;\r\n    }\r\n}", "/*\r\n    There is no need to inherit from this state, especially since states can be only functions\r\n    It's more like an example of what is needed\r\n    \r\n    If you don't specify some functions the fsm will just skip them\r\n    Or consider them always valid\r\n\r\n    The param state is of type StateData and can be used to retrieve the stateID and other data\r\n    The param transition is of type TransitionData and can be used to retrieve the transitionID, the from and to states and other data\r\n*/\r\n\r\nexport class State {\r\n\r\n    // Called every frame if this is the current state\r\n    // You can retrieve this state data by calling fsm.getCurrentState()\r\n    update(dt, fsm, ...args) {\r\n    }\r\n\r\n    // Called when the fsm is started with this init state if no init transition object is specified or it does not have a performInit function\r\n    // Since the state is set as the current one after the init, you can't use fsm.getCurrentState() to get it, so it is forwarded as a param if needed\r\n    init(fsm, state, ...args) {\r\n    }\r\n\r\n    // Called when entering this state if no transition object is specified or it does not have a perform function\r\n    // You can get this state data by accesing to the to state data inside the transition\r\n    start(fsm, transition, ...args) {\r\n    }\r\n\r\n    // Called when exiting this state if no transition function is specified\r\n    // You can get this state data by accesing to the from state data inside the transition\r\n    end(fsm, transition, ...args) {\r\n    }\r\n}", "/*\r\n    There is no need to inherit from this transition, especially since states can be only transitions\r\n    It's more like an example of what is needed\r\n    \r\n    The param transition (forwarded at the end every function) is of type TransitionData and can be used to retrieve the transitionID and other data\r\n    The initState param is of type StateData and can be used to retrieve the stateID and other data\r\n*/\r\n\r\nexport class Transition {\r\n\r\n    // Called if this is used as an init transition for the fsm\r\n    performInit(fsm, initState, ...args) {\r\n\r\n    }\r\n\r\n    // Called when performing a transition\r\n    // You can find the from and to states inside the transition params\r\n    perform(fsm, transition, ...args) {\r\n    }\r\n}", "import { Timer } from \"../../cauldron/timer\";\r\nimport { State } from \"../state\";\r\n\r\nexport class TimerState extends State {\r\n\r\n    constructor(duration = 0, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        super();\r\n\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n\r\n        this._myTimer = new Timer(duration, false);\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myTimer.setDuration(duration);\r\n    }\r\n\r\n    setTransitionToPerformOnEnd(transitionToPerformOnEnd, ...transitionArgs) {\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myTimer.onEnd(callback, id);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myTimer.unregisterOnEnd(id);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            if (this._myTransitionToPerformOnEnd != null) {\r\n                fsm.perform(this._myTransitionToPerformOnEnd, ...this._myTransitionArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transition, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n\r\n    init(fsm, state, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n}", "// RGB is in [0,1], alpha is not changed\r\nexport function rgbToHsv(rgb) {\r\n    let hsv = rgb.pp_clone();\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    hsv[0] = h;\r\n    hsv[1] = s;\r\n    hsv[2] = v;\r\n\r\n    return hsv;\r\n}\r\n\r\n// Alpha is not changed\r\nexport function hsvToRgb(hsv) {\r\n    let rgb = hsv.pp_clone();\r\n\r\n    let h = hsv[0];\r\n    let s = hsv[1];\r\n    let v = hsv[2];\r\n\r\n    let r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n\r\n    rgb[0] = r;\r\n    rgb[1] = g;\r\n    rgb[2] = b;\r\n\r\n    return rgb;\r\n}\r\n\r\nexport function rgbCodeToHuman(rgb) {\r\n    return color1To255(rgb);\r\n}\r\n\r\nexport function rgbHumanToCode(rgb) {\r\n    return color255To1(rgb);\r\n}\r\n\r\nexport function hsvCodeToHuman(hsv) {\r\n    return color1To255(hsv);\r\n}\r\n\r\nexport function hsvHumanToCode(hsv) {\r\n    return color255To1(hsv);\r\n}\r\n\r\nexport function color255To1(color) {\r\n    let result = color.pp_clone();\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n        result[i] /= 255;\r\n        result[i] = Math.pp_clamp(result[i], 0, 1);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function color1To255(color) {\r\n    let result = color.pp_clone();\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n        result[i] = Math.round(result[i] * 255);\r\n        result[i] = Math.pp_clamp(result[i], 0, 255);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport let ColorUtils = {\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    rgbCodeToHuman,\r\n    rgbHumanToCode,\r\n    hsvCodeToHuman,\r\n    hsvHumanToCode,\r\n    color255To1,\r\n    color1To255\r\n};", "import { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport let setAlpha = function () {\r\n    let color = vec4_create();\r\n    return function setAlpha(material, alpha) {\r\n        if (material.color != null) {\r\n            color.vec4_copy(material.color);\r\n            color[3] = alpha;\r\n            material.color = color;\r\n        }\r\n\r\n        if (material.diffuseColor != null) {\r\n            color.vec4_copy(material.diffuseColor);\r\n            color[3] = alpha;\r\n            material.diffuseColor = color;\r\n        }\r\n\r\n        if (material.ambientColor != null) {\r\n            color.vec4_copy(material.ambientColor);\r\n            color[3] = alpha;\r\n            material.ambientColor = color;\r\n        }\r\n    };\r\n}();\r\n\r\nexport function setObjectAlpha(object, alpha) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material != null) {\r\n            setAlpha(meshComponent.material, alpha);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectMaterial(object, material, cloneMaterial = false) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (cloneMaterial) {\r\n            meshComponent.material = material.clone();\r\n        } else {\r\n            meshComponent.material = material;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectClonedMaterials(object) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        meshComponent.material = meshComponent.material.clone();\r\n    }\r\n}\r\n\r\nexport function setObjectSpecularColor(object, color) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material.specularColor != null) {\r\n            meshComponent.material.specularColor = color;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectFogColor(object, color) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material.fogColor != null) {\r\n            meshComponent.material.fogColor = color;\r\n        }\r\n    }\r\n}\r\n\r\nexport let MaterialUtils = {\r\n    setAlpha,\r\n    setObjectAlpha,\r\n    setObjectMaterial,\r\n    setObjectClonedMaterials,\r\n    setObjectSpecularColor,\r\n    setObjectFogColor\r\n};", "import { TextComponent } from \"@wonderlandengine/api\";\r\n\r\nexport function setClonedMaterials(object) {\r\n    let textComponents = object.pp_getComponents(TextComponent);\r\n\r\n    for (let textComponent of textComponents) {\r\n        textComponent.material = textComponent.material.clone();\r\n    }\r\n}\r\n\r\nexport let TextUtils = {\r\n    setClonedMaterials\r\n};", "export function isMobile() {\r\n    return /Mobi/i.test(window.navigator.userAgent);\r\n}\r\nexport function isDesktop() {\r\n    return !isMobile();\r\n}\r\n\r\nexport let BrowserUtils = {\r\n    isMobile,\r\n    isDesktop\r\n};", "export function getObjectPrototypes(object) {\r\n    let prototypes = [];\r\n\r\n    prototypes.push(object);\r\n\r\n    let objectProto = Object.getPrototypeOf(object);\r\n    while (objectProto != null) {\r\n        prototypes.pp_pushUnique(objectProto);\r\n        objectProto = Object.getPrototypeOf(objectProto);\r\n    }\r\n\r\n    let prototypesToCheck = [object];\r\n    while (prototypesToCheck.length > 0) {\r\n        let prototypeToCheck = prototypesToCheck.shift();\r\n        if (prototypeToCheck != null) {\r\n            prototypes.pp_pushUnique(prototypeToCheck);\r\n\r\n            prototypesToCheck.pp_pushUnique(Object.getPrototypeOf(prototypeToCheck));\r\n            prototypesToCheck.pp_pushUnique(prototypeToCheck.prototype);\r\n        }\r\n    }\r\n\r\n    return prototypes;\r\n}\r\n\r\nexport function getObjectPropertyNames(object) {\r\n    let propertyNames = [];\r\n\r\n    let prototypes = getObjectPrototypes(object);\r\n\r\n    for (let prototype of prototypes) {\r\n        if (prototype != null) {\r\n            let ownPropertyNames = Object.getOwnPropertyNames(prototype);\r\n            for (let ownPropertyName of ownPropertyNames) {\r\n                propertyNames.pp_pushUnique(ownPropertyName);\r\n            }\r\n        }\r\n    }\r\n\r\n    return propertyNames;\r\n}\r\n\r\nexport function getObjectPropertyDescriptor(object, propertyName) {\r\n    let propertyDescriptor = null;\r\n\r\n    let propertyParent = getObjectPropertyOwnParent(object, propertyName);\r\n\r\n    if (propertyParent != null) {\r\n        propertyDescriptor = Object.getOwnPropertyDescriptor(propertyParent, propertyName);\r\n    }\r\n\r\n    return propertyDescriptor;\r\n}\r\n\r\nexport function getObjectProperty(object, propertyName) {\r\n    let property = undefined;\r\n\r\n    let propertyDescriptor = getObjectPropertyDescriptor(object, propertyName);\r\n    if (propertyDescriptor != null) {\r\n        if (propertyDescriptor.get != null) {\r\n            property = propertyDescriptor.get.bind(object)();\r\n        } else {\r\n            property = propertyDescriptor.value;\r\n        }\r\n    }\r\n\r\n    return property;\r\n}\r\n\r\nexport function setObjectProperty(valueToSet, object, propertyName) {\r\n    let propertyDescriptor = getObjectPropertyDescriptor(object, propertyName);\r\n\r\n    let setUsed = false;\r\n    if (propertyDescriptor != null) {\r\n        if (propertyDescriptor.set != null) {\r\n            setUsed = true;\r\n\r\n            propertyDescriptor.set.bind(object)(valueToSet);\r\n        }\r\n    }\r\n\r\n    if (!setUsed) {\r\n        let propertyParent = getObjectPropertyOwnParent(object, propertyName);\r\n        if (propertyParent == null) {\r\n            propertyParent = object;\r\n        }\r\n\r\n        Object.defineProperty(propertyParent, propertyName, {\r\n            value: valueToSet\r\n        });\r\n    }\r\n}\r\n\r\nexport function getObjectPropertyOwnParent(object, propertyName) {\r\n    let parent = null;\r\n\r\n    let parents = getObjectPropertyOwnParents(object, propertyName);\r\n    if (parents.length > 0) {\r\n        parent = parents[0];\r\n    }\r\n\r\n    return parent;\r\n}\r\n\r\nexport function getObjectPropertyOwnParents(object, propertyName) {\r\n    let parents = [];\r\n\r\n    let possibleParents = getObjectPrototypes(object);\r\n\r\n    for (let possibleParent of possibleParents) {\r\n        let propertyNames = Object.getOwnPropertyNames(possibleParent);\r\n        if (propertyNames.pp_hasEqual(propertyName)) {\r\n            parents.push(possibleParent);\r\n        }\r\n    }\r\n\r\n    return parents;\r\n}\r\n\r\nexport function getObjectFromPath(path, pathStartObject = window) {\r\n    let object = null;\r\n\r\n    let objectName = getObjectNameFromPath(path);\r\n    if (objectName != null) {\r\n        object = getObjectProperty(getObjectParentFromPath(path, pathStartObject), objectName);\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nexport function getObjectNameFromPath(path) {\r\n    let objectName = null;\r\n\r\n    if (path != null) {\r\n        let pathSplit = path.split(\".\");\r\n        if (pathSplit.length > 0) {\r\n            objectName = pathSplit[pathSplit.length - 1];\r\n        }\r\n    }\r\n\r\n    return objectName;\r\n}\r\n\r\nexport function getObjectParentFromPath(path, pathStartObject = window) {\r\n    let pathSplit = path.split(\".\");\r\n    let currentParent = pathStartObject;\r\n    for (let i = 0; i < pathSplit.length - 1; i++) {\r\n        currentParent = getObjectProperty(currentParent, pathSplit[i]);\r\n    }\r\n\r\n    return currentParent;\r\n}\r\n\r\nexport function overwriteObjectProperty(newProperty, object, propertyName, overwriteOnOwnParent = true, jsObjectFunctionsSpecialOverwrite = false, debugLogActive = false) {\r\n    let success = false;\r\n\r\n    try {\r\n        let propertyOwnParent = getObjectPropertyOwnParent(object, propertyName);\r\n        if (propertyOwnParent != null) {\r\n            let originalPropertyDescriptor = Object.getOwnPropertyDescriptor(propertyOwnParent, propertyName);\r\n\r\n            if (originalPropertyDescriptor != null) {\r\n                let originalProperty = getObjectProperty(propertyOwnParent, propertyName);\r\n                copyObjectProperties(originalProperty, newProperty, true, jsObjectFunctionsSpecialOverwrite, debugLogActive);\r\n\r\n                let overwriteTarget = object;\r\n                if (overwriteOnOwnParent) {\r\n                    overwriteTarget = propertyOwnParent;\r\n                }\r\n\r\n                Object.defineProperty(overwriteTarget, propertyName, {\r\n                    value: newProperty,\r\n                    enumerable: originalPropertyDescriptor.enumerable,\r\n                    writable: originalPropertyDescriptor.writable,\r\n                    configurable: originalPropertyDescriptor.configurable\r\n                });\r\n\r\n                success = true;\r\n            } else {\r\n                Object.defineProperty(object, propertyName, {\r\n                    value: newProperty\r\n                });\r\n\r\n                success = true;\r\n            }\r\n        } else {\r\n            Object.defineProperty(object, propertyName, {\r\n                value: newProperty\r\n            });\r\n\r\n            success = true;\r\n        }\r\n    } catch (error) {\r\n        if (debugLogActive) {\r\n            console.error(\"Property:\", propertyName, \"of:\", object, \"can't be overwritten.\");\r\n        }\r\n    }\r\n\r\n    return success;\r\n}\r\n\r\nexport function copyObjectProperties(fromObject, toObject, cleanCopy = false, jsObjectFunctionsSpecialCopy = false, debugLogActive = false) {\r\n    if (fromObject != null) {\r\n        if (cleanCopy) {\r\n            cleanObjectProperties(toObject);\r\n        }\r\n\r\n        Object.setPrototypeOf(toObject, Object.getPrototypeOf(fromObject));\r\n\r\n        let fromObjectPropertyNames = Object.getOwnPropertyNames(fromObject);\r\n        for (let fromObjectPropertyName of fromObjectPropertyNames) {\r\n            try {\r\n                let fromObjectPropertyDescriptor = Object.getOwnPropertyDescriptor(fromObject, fromObjectPropertyName);\r\n\r\n                Object.defineProperty(toObject, fromObjectPropertyName, {\r\n                    value: fromObjectPropertyDescriptor.value,\r\n                    enumerable: fromObjectPropertyDescriptor.enumerable,\r\n                    writable: fromObjectPropertyDescriptor.writable,\r\n                    configurable: fromObjectPropertyDescriptor.configurable\r\n                });\r\n            } catch (error) {\r\n                if (debugLogActive) {\r\n                    console.error(\"Property:\", fromObjectPropertyName, \"of:\", fromObject.name, \"can't be overwritten.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsObjectFunctionsSpecialCopy) {\r\n            _jsObjectFunctionsSpecialCopy(fromObject, toObject);\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanObjectProperties(object) {\r\n    let objectNames = Object.getOwnPropertyNames(object);\r\n    objectNames.pp_pushUnique(\"__proto__\");\r\n\r\n    for (let objectName of objectNames) {\r\n        try {\r\n            Object.defineProperty(object, objectName, {\r\n                value: undefined\r\n            });\r\n        } catch (error) {\r\n            // Ignored\r\n        }\r\n\r\n        try {\r\n            delete object[objectName];\r\n        } catch (error) {\r\n            // Ignored\r\n        }\r\n    }\r\n\r\n    Object.setPrototypeOf(object, null);\r\n}\r\n\r\nexport function doesObjectPropertyUseAccessors(object, propertyName) {\r\n    let propertyUseAccessors = false;\r\n\r\n    let propertyDescriptor = getObjectPropertyDescriptor(object, propertyName);\r\n\r\n    if (propertyDescriptor != null && (propertyDescriptor.get != null || propertyDescriptor.set != null)) {\r\n        propertyUseAccessors = true;\r\n    }\r\n\r\n    return propertyUseAccessors;\r\n}\r\n\r\nexport function isFunctionByName(functionParent, functionName) {\r\n    let isFunction = false;\r\n\r\n    let functionProperty = getObjectProperty(functionParent, functionName);\r\n    if (functionProperty != null) {\r\n        isFunction = typeof functionProperty == \"function\" && !isClassByName(functionParent, functionName);\r\n    }\r\n\r\n    return isFunction;\r\n}\r\n\r\nexport function isClassByName(classParent, className) {\r\n    let isClass = false;\r\n\r\n    let classProperty = getObjectProperty(classParent, className);\r\n    if (classProperty != null) {\r\n        isClass =\r\n            typeof classProperty == \"function\" && className != \"constructor\" &&\r\n            classProperty.prototype != null && typeof classProperty.prototype.constructor == \"function\" &&\r\n            classProperty.toString != null && typeof classProperty.toString == \"function\" && (/^class/).test(classProperty.toString());\r\n    }\r\n\r\n    return isClass;\r\n}\r\n\r\nexport function isObjectByName(objectParent, objectName) {\r\n    let isObject = false;\r\n\r\n    let objectProperty = getObjectProperty(objectParent, objectName);\r\n    if (objectProperty != null) {\r\n        isObject = typeof objectProperty == \"object\";\r\n    }\r\n\r\n    return isObject;\r\n}\r\n\r\nexport let JSUtils = {\r\n    getObjectPrototypes,\r\n    getObjectPropertyNames,\r\n    getObjectPropertyDescriptor,\r\n    getObjectProperty,\r\n    setObjectProperty,\r\n    getObjectPropertyOwnParent,\r\n    getObjectPropertyOwnParents,\r\n    getObjectFromPath,\r\n    getObjectNameFromPath,\r\n    getObjectParentFromPath,\r\n    overwriteObjectProperty,\r\n    copyObjectProperties,\r\n    cleanObjectProperties,\r\n    doesObjectPropertyUseAccessors,\r\n    isFunctionByName,\r\n    isClassByName,\r\n    isObjectByName\r\n};\r\n\r\n\r\n\r\nfunction _jsObjectFunctionsSpecialCopy(fromObject, toObject) {\r\n    try {\r\n        if (typeof toObject == \"function\" && typeof fromObject == \"function\") {\r\n            let functionsToOverwrite = [\"toString\", \"toLocaleString\", \"valueOf\"];\r\n\r\n            for (let functionToOverwrite of functionsToOverwrite) {\r\n                let propertyDescriptorToOverwrite = getObjectPropertyDescriptor(fromObject, functionToOverwrite);\r\n\r\n                if (propertyDescriptorToOverwrite != null && propertyDescriptorToOverwrite.value != null &&\r\n                    (propertyDescriptorToOverwrite.value == Object[functionToOverwrite])) {\r\n                    let valueToReturn = Object[functionToOverwrite].bind(fromObject)();\r\n                    let overwrittenFunction = function () { return valueToReturn; };\r\n                    overwriteObjectProperty(overwrittenFunction, toObject, functionToOverwrite, false, false);\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // Ignored\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { VisualTransform, VisualTransformParams } from \"../../cauldron/visual/elements/visual_transform\";\r\nimport { isDebugEnabled } from \"../debug_globals\";\r\n\r\nexport class DebugTransformComponent extends Component {\r\n    static TypeName = \"pp-debug-transform\";\r\n    static Properties = {\r\n        _myLength: Property.float(0.1),\r\n        _myThickness: Property.float(0.005)\r\n    };\r\n\r\n    start() {\r\n        this._myDebugVisualTransform = null;\r\n\r\n        if (isDebugEnabled(this.engine)) {\r\n            this._myDebugTransformParams = new VisualTransformParams(this.engine);\r\n            this._myDebugTransformParams.myLength = this._myLength;\r\n            this._myDebugTransformParams.myThickness = this._myThickness;\r\n\r\n            this._myDebugVisualTransform = new VisualTransform(this._myDebugTransformParams);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isDebugEnabled(this.engine)) {\r\n            if (this._myDebugVisualTransform != null) {\r\n                this.object.pp_getTransform(this._myDebugTransformParams.myTransform);\r\n                this._myDebugVisualTransform.paramsUpdated();\r\n            }\r\n        }\r\n    }\r\n}", "// #TODO Add getter/setter accessors overwrite\r\n// #TODO If both a class and the parent class are in the list, they should be overwritten in parent first order\r\n// #TODO How to overwrite class and objects from modules?\r\n// #TODO Some functions, like glMatrix.vec3.copy, are defined as getter, how to overwrite them?\r\n\r\nimport { JSUtils } from \"../../cauldron/utils/js_utils\";\r\n\r\nexport class DebugFunctionsOverwriterParams {\r\n\r\n    constructor() {\r\n        this.myObjectsByReference = [];         // You can specify to count the call on a specific object instance\r\n        this.myObjectsByPath = [];              // If you want you can specify the instance by path, but it means it must be reachable from window\r\n\r\n        this.myClassesByReference = [];         // By Reference means by using a reference to the class, like doing Timer, but also let ref = Timer and use ref\r\n        this.myClassesByPath = [];              // By Path means by using the full class path, like \"Timer\", this is requiredneeded if u want to count the constructor\r\n\r\n        this.myFunctionsByPath = [];\r\n        // You can also count the call to a specific function, but it must be reachable from window, no reference way\r\n        // It's mostly for global functions, which could be tracked anyway using window as object reference\r\n\r\n        this.myExcludeConstructors = false;      // Constructor calls count can be a problem for some classes (like Array)\r\n        this.myExcludeJSObjectFunctions = false;\r\n\r\n        this.myFunctionNamesToInclude = [];     // Empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionNamesToExclude = [];     // Empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // These can be used if u want to have a bit more control on function name filtering\r\n        this.myFunctionPathsToInclude = [];         // Empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionPathsToExclude = [];         // Empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectAddObjectDescendantsDepthLevel = 0;      // You can specify if you want to also count the OBJECT descendants of the objects you have specified\r\n        this.myObjectAddClassDescendantsDepthLevel = 0;       // You can specify if you want to also count the CLASS descendants of the objects you have specified\r\n        // The depth level specify how deep in the hierarchy, level 0 means no recursion, 1 only children, 2 also grand children, and so on\r\n        // -1 to select all the hierarchy\r\n\r\n        // These filters are only useful if u are doing recursion\r\n        this.myObjectNamesToInclude = [];           // Empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectNamesToExclude = [];           // Empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassNamesToInclude = [];            // Empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassNamesToExclude = [];            // Empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectPathsToInclude = [];           // Empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectPathsToExclude = [];           // Empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassPathsToInclude = [];            // Empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassPathsToExclude = [];            // Empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // Tricks\r\n        // - you can specify an object/class/function as a pair [object, \"name\"] instead of just object\r\n        //   and the name, if not null, will be used as path instead of the default one\r\n        //   WARNING: this means that there is a specific case, an array of 2 elements with a string, which can't be tracked if you don't put it inside an array like above\r\n\r\n        this.myDebugLogActive = false;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionsOverwriter {\r\n\r\n    constructor(params = new DebugFunctionsOverwriterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myPropertiesAlreadyOverwritten = new Map();\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        let classesAndParents = this._getReferencesAndParents(this._myParams.myClassesByReference, this._myParams.myClassesByPath, true);\r\n        let objectsAndParents = this._getReferencesAndParents(this._myParams.myObjectsByReference, this._myParams.myObjectsByPath, false);\r\n        let functionsAndParents = this._getReferencesAndParents([], this._myParams.myFunctionsByPath, false);\r\n\r\n        this._objectAddDescendants(objectsAndParents, classesAndParents);\r\n\r\n        for (let referenceAndParent of classesAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, true);\r\n        }\r\n\r\n        for (let referenceAndParent of objectsAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, false);\r\n        }\r\n\r\n        for (let referenceAndParent of functionsAndParents) {\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n\r\n            this._overwriteFunction(referenceParent, referenceName, null, null, referencePath, false, true);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return JSUtils.getObjectProperty(reference, propertyName);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return JSUtils.getObjectProperty(reference, propertyName);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, isClass) {\r\n        let includePathList = this._myParams.myObjectPathsToInclude;\r\n        let excludePathList = this._myParams.myObjectPathsToExclude;\r\n        let includeNameList = this._myParams.myObjectNamesToInclude;\r\n        let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n        if (isClass) {\r\n            includePathList = this._myParams.myClassPathsToInclude;\r\n            excludePathList = this._myParams.myClassPathsToExclude;\r\n            includeNameList = this._myParams.myClassNamesToInclude;\r\n            excludeNameList = this._myParams.myClassNamesToExclude;\r\n        }\r\n\r\n        let isValidReferencePath = this._filterName(referencePath, includePathList, excludePathList);\r\n        let isValidReferenceName = this._filterName(referenceNameForFilter, includeNameList, excludeNameList);\r\n        if (isValidReferencePath && isValidReferenceName) {\r\n            let propertyNames = JSUtils.getObjectPropertyNames(reference);\r\n            if (propertyNames.pp_hasEqual(\"constructor\")) {\r\n                propertyNames.unshift(\"constructor\"); // Be sure it's added first to spot bugs, not important that it appears twice in the list\r\n            }\r\n\r\n            for (let propertyName of propertyNames) {\r\n                let overwriteTargetReference = null;\r\n\r\n                let referenceParentForConstructor = null;\r\n                let referenceNameForConstructor = null;\r\n\r\n                if (isClass) {\r\n                    let fixedReference = reference;\r\n\r\n                    if (referenceParent != null) {\r\n                        let ownReferenceDescriptor = Object.getOwnPropertyDescriptor(referenceParent, referenceName);\r\n                        if (ownReferenceDescriptor != null && ownReferenceDescriptor.value != null) {\r\n                            fixedReference = ownReferenceDescriptor.value;\r\n                        }\r\n                    }\r\n\r\n                    overwriteTargetReference = fixedReference.prototype;\r\n                    if (overwriteTargetReference == null) {\r\n                        overwriteTargetReference = fixedReference;\r\n                    } else {\r\n                        try {\r\n                            let referenceProperty = JSUtils.getObjectProperty(overwriteTargetReference, propertyName);\r\n                            if (referenceProperty == null) {\r\n                                overwriteTargetReference = fixedReference;\r\n                            }\r\n                        } catch (error) {\r\n                            overwriteTargetReference = fixedReference;\r\n                        }\r\n                    }\r\n\r\n                    referenceParentForConstructor = referenceParent;\r\n                    referenceNameForConstructor = referenceName;\r\n                } else {\r\n                    overwriteTargetReference = reference;\r\n                }\r\n\r\n                this._overwriteFunction(overwriteTargetReference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, false);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    _overwriteFunction(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction) {\r\n        try {\r\n            let isPropertyCountedAlready = this._myPropertiesAlreadyOverwritten.get(propertyName) != null && this._myPropertiesAlreadyOverwritten.get(propertyName).pp_hasEqual(reference);\r\n            if (!isPropertyCountedAlready) {\r\n                if (JSUtils.isFunctionByName(reference, propertyName)) {\r\n                    if (!this._myParams.myExcludeJSObjectFunctions || !this._isJSObjectFunction(propertyName)) {\r\n                        let isValidFunctionName = this._filterName(propertyName, this._myParams.myFunctionNamesToInclude, this._myParams.myFunctionNamesToExclude);\r\n                        let isValidFunctionPath = this._filterName((referencePath != null ? referencePath + \".\" : \"\") + propertyName, this._myParams.myFunctionPathsToInclude, this._myParams.myFunctionPathsToExclude);\r\n                        if (isValidFunctionName && isValidFunctionPath) {\r\n                            if (!this._myPropertiesAlreadyOverwritten.has(propertyName)) {\r\n                                this._myPropertiesAlreadyOverwritten.set(propertyName, []);\r\n                            }\r\n\r\n                            let overwriteSuccess = false;\r\n                            let isConstructor = false;\r\n                            if (propertyName != \"constructor\") {\r\n                                try {\r\n                                    let newFunction = this._getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction);\r\n                                    if (newFunction != JSUtils.getObjectProperty(reference, propertyName)) {\r\n                                        overwriteSuccess = JSUtils.overwriteObjectProperty(newFunction, reference, propertyName, false, true, this._myParams.myDebugLogActive);\r\n                                    } else {\r\n                                        overwriteSuccess = true;\r\n                                    }\r\n                                } catch (error) {\r\n                                    overwriteSuccess = false;\r\n\r\n                                    if (this._myParams.myDebugLogActive) {\r\n                                        console.error(error);\r\n                                    }\r\n                                }\r\n                            } else if (!this._myParams.myExcludeConstructors && isClass && referenceParentForConstructor != null) {\r\n                                let referenceForConstructor = JSUtils.getObjectProperty(referenceParentForConstructor, referenceNameForConstructor);\r\n                                if (referenceForConstructor != null && referenceForConstructor.prototype != null) {\r\n                                    isConstructor = true;\r\n\r\n                                    try {\r\n                                        let newConstructor = this._getOverwrittenConstructor(referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction);\r\n                                        if (newConstructor != referenceForConstructor) {\r\n                                            overwriteSuccess = JSUtils.overwriteObjectProperty(newConstructor, referenceParentForConstructor, referenceNameForConstructor, false, true, this._myParams.myDebugLogActive);\r\n                                            if (overwriteSuccess) {\r\n                                                overwriteSuccess = JSUtils.overwriteObjectProperty(newConstructor, referenceForConstructor.prototype, propertyName, false, true, this._myParams.myDebugLogActive);\r\n                                            }\r\n                                        } else {\r\n                                            overwriteSuccess = true;\r\n                                        }\r\n                                    } catch (error) {\r\n                                        overwriteSuccess = false;\r\n\r\n                                        if (this._myParams.myDebugLogActive) {\r\n                                            console.error(error);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (overwriteSuccess) {\r\n                                this._myPropertiesAlreadyOverwritten.get(propertyName).push(reference);\r\n                                this._onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            } else {\r\n                                this._onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (this._myParams.myDebugLogActive) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getReferencesAndParents(byReferenceList, byPathList, isClass) {\r\n        let referenceAndParents = [];\r\n\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        for (let pathPair of byPathList) {\r\n            let path = pathPair;\r\n            let referenceName = \"\";\r\n            let referencePath = pathPair;\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (pathPair != null && Array.isArray(pathPair) && pathPair.length != null && pathPair.length == 2 && typeof pathPair[1] == \"string\") {\r\n                path = pathPair[0];\r\n                referencePath = pathPair[1];\r\n            }\r\n\r\n            referenceName = JSUtils.getObjectNameFromPath(path);\r\n            referenceNameForFilter = JSUtils.getObjectNameFromPath(referencePath);\r\n\r\n            let reference = JSUtils.getObjectFromPath(path);\r\n            let referenceParent = JSUtils.getObjectParentFromPath(path);\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, referenceParent, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        for (let referencePair of byReferenceList) {\r\n            let reference = referencePair;\r\n            let referenceName = \"\";\r\n            let referencePath = \"\";\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (referencePair != null && referencePair.length != null && referencePair.length == 2 && typeof referencePair[1] == \"string\") {\r\n                reference = referencePair[0];\r\n                referencePath = referencePair[1];\r\n                referenceNameForFilter = JSUtils.getObjectNameFromPath(referencePath);\r\n            } else {\r\n                referencePath = isClass ? reference.name : null;\r\n                referenceNameForFilter = isClass ? reference.name : null;\r\n            }\r\n\r\n            if (isClass) {\r\n                referenceName = reference.name;\r\n            } else {\r\n                referenceName = JSUtils.getObjectNameFromPath(referencePath);\r\n            }\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, null, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        return referenceAndParents;\r\n    }\r\n\r\n    _objectAddDescendants(objectsAndParents, classesAndParents) {\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        let objectsToVisit = [];\r\n        for (let objectAndParent of objectsAndParents) {\r\n            objectsToVisit.pp_pushUnique([objectAndParent[0], 0, objectAndParent[3]], equalCallback);\r\n        }\r\n\r\n        while (objectsToVisit.length > 0) {\r\n            let objectToVisit = objectsToVisit.shift();\r\n\r\n            let object = objectToVisit[0];\r\n            let objectLevel = objectToVisit[1];\r\n            let objectPath = objectToVisit[2];\r\n\r\n            if ((\r\n                objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1) ||\r\n                objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1) {\r\n\r\n                let propertyNames = null;\r\n                try {\r\n                    propertyNames = JSUtils.getObjectPropertyNames(object);\r\n                } catch (error) {\r\n                    continue;\r\n                }\r\n\r\n                for (let propertyName of propertyNames) {\r\n                    let objectProperty = null;\r\n\r\n                    try {\r\n                        objectProperty = JSUtils.getObjectProperty(object, propertyName);\r\n                        if (objectProperty == null) {\r\n                            continue;\r\n                        }\r\n                    } catch (error) {\r\n                        continue;\r\n                    }\r\n\r\n                    let currentPath = \"\";\r\n                    let currentName = \"\";\r\n                    if (objectPath != null) {\r\n                        if (objectPath == \"_WL._components\" && (objectProperty._type != null)) {\r\n                            currentName = \"[\" + propertyName + \"]\" + \"{\\\"\" + objectProperty._type + \"\\\"}\";\r\n                            currentPath = objectPath + currentName;\r\n                        } else if (objectPath == \"_WL._componentTypes\" && (objectProperty.TypeName != null)) {\r\n                            currentName = objectProperty.TypeName;\r\n                            currentPath = objectPath + \"[\\\"\" + currentName + \"\\\"]\";\r\n                        } else {\r\n                            currentName = propertyName;\r\n                            currentPath = objectPath + \".\" + currentName;\r\n                        }\r\n                        currentName = propertyName;\r\n                        currentPath = objectPath + \".\" + currentName;\r\n                    } else {\r\n                        currentName = propertyName;\r\n                        currentPath = currentName;\r\n                    }\r\n\r\n                    let isClass = JSUtils.isClassByName(object, propertyName);\r\n                    let isObject = JSUtils.isObjectByName(object, propertyName);\r\n\r\n                    let includePathList = this._myParams.myObjectPathsToInclude;\r\n                    let excludePathList = this._myParams.myObjectPathsToExclude;\r\n                    let includeNameList = this._myParams.myObjectNamesToInclude;\r\n                    let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n                    if (isClass) {\r\n                        includePathList = this._myParams.myClassPathsToInclude;\r\n                        excludePathList = this._myParams.myClassPathsToExclude;\r\n                        includeNameList = this._myParams.myClassNamesToInclude;\r\n                        excludeNameList = this._myParams.myClassNamesToExclude;\r\n                    }\r\n\r\n                    let isValidReferencePath = this._filterName(currentPath, includePathList, excludePathList);\r\n                    let isValidReferenceName = this._filterName(propertyName, includeNameList, excludeNameList);\r\n                    if (isValidReferencePath && isValidReferenceName) {\r\n                        if (isObject && (objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1)) {\r\n                            objectsAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isClass && (objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1)) {\r\n                            classesAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isObject) {\r\n                            objectsToVisit.pp_pushUnique([objectProperty, objectLevel + 1, currentPath], equalCallback);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _filterName(name, includeList, excludeList) {\r\n        let isValidName = includeList.length == 0;\r\n        for (let includeName of includeList) {\r\n            if (name.match(new RegExp(includeName)) != null) {\r\n                isValidName = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isValidName) {\r\n            for (let excludeName of excludeList) {\r\n                if (name.match(new RegExp(excludeName)) != null) {\r\n                    isValidName = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValidName;\r\n    }\r\n\r\n    _isJSObjectFunction(propertyName) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nDebugFunctionsOverwriter.prototype._isJSObjectFunction = function () {\r\n    let jsObjectFunctions = [\r\n        \"__defineGetter__\", \"__defineSetter__\", \"hasOwnProperty\", \"__lookupGetter__\", \"__lookupSetter__\", \"isPrototypeOf\",\r\n        \"propertyIsEnumerable\", \"toString\", \"valueOf\", \"__proto__\", \"toLocaleString\", \"arguments\", \"caller\", \"apply\", \"bind\", \"call\", \"callee\"];\r\n    return function _isJSObjectFunction(propertyName) {\r\n        return jsObjectFunctions.pp_hasEqual(propertyName);\r\n    };\r\n}();", "import { JSUtils } from \"../../../cauldron/utils/js_utils\";\r\nimport { DebugFunctionsOverwriter, DebugFunctionsOverwriterParams } from \"../debug_functions_overwriter\";\r\n\r\nexport class DebugFunctionsPerformanceAnalyzerParams extends DebugFunctionsOverwriterParams {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.myExecutionTimeAnalysisEnabled = true;\r\n\r\n        this.myAddPathPrefixToFunctionID = true;\r\n        // This works at best when the object/class is specified as path\r\n        // since with reference it's not possible to get the full path or get the variable name of the reference\r\n\r\n        this.myFilterDebugFunctionsPerformanceAnalyzerClasses = true;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionPerformanceAnalysisResults {\r\n\r\n    constructor() {\r\n        this.myReference = null;\r\n        this.myName = \"\";\r\n        this.myPath = \"\";\r\n        this.myID = \"\";\r\n\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    reset() {\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    max(other) {\r\n        this.myCallsCount = Math.max(this.myCallsCount, other.myCallsCount);\r\n        this.myTotalExecutionTime = Math.max(this.myTotalExecutionTime, other.myTotalExecutionTime);\r\n        this.myTotalExecutionTimePercentage = Math.max(this.myTotalExecutionTimePercentage, other.myTotalExecutionTimePercentage);\r\n        this.myAverageExecutionTime = Math.max(this.myAverageExecutionTime, other.myAverageExecutionTime);\r\n    }\r\n\r\n    copy(other) {\r\n        this.myReference = other.myReference;\r\n        this.myName = other.myName;\r\n        this.myPath = other.myPath;\r\n        this.myID = other.myID;\r\n\r\n        this.myCallsCount = other.myCallsCount;\r\n        this.myTotalExecutionTime = other.myTotalExecutionTime;\r\n        this.myTotalExecutionTimePercentage = other.myTotalExecutionTimePercentage;\r\n        this.myAverageExecutionTime = other.myAverageExecutionTime;\r\n        this.myTimeElapsedSinceLastReset = other.myTimeElapsedSinceLastReset;\r\n\r\n        this._myTotalExecutionTimeInternal = other._myTotalExecutionTimeInternal;\r\n    }\r\n}\r\n\r\nexport let DebugFunctionsPerformanceAnalyzerSortOrder = {\r\n    NONE: 0,\r\n    CALLS_COUNT: 1,\r\n    TOTAL_EXECUTION_TIME: 2,\r\n    AVERAGE_EXECUTION_TIME: 3\r\n};\r\n\r\nexport class DebugFunctionsPerformanceAnalyzer extends DebugFunctionsOverwriter {\r\n\r\n    constructor(params = new DebugFunctionsPerformanceAnalyzerParams()) {\r\n        super(params);\r\n\r\n        this._myFunctionPerformanceAnalysisResults = new Map();\r\n        this._myFunctionPerformanceAnalysisMaxResults = new Map();\r\n\r\n        this._myResultsAlreadyAdded = false;\r\n\r\n        this._myExecutionTimes = {\r\n            myOverheadExecutionTimeSinceLastReset: 0,\r\n            myLastFunctionExecutionTime: 0,\r\n            myOriginalFunctionOverheadExecutionTimes: []\r\n        };\r\n        this._myTimeOfLastReset = window.performance.now();\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n\r\n        let originalPush = Array.prototype[\"push\"];\r\n        let originalPop = Array.prototype[\"pop\"];\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.push = function () { return originalPush.bind(this)(...arguments); }\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.pop = function () { return originalPop.bind(this)(...arguments); }\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        super.overwriteFunctions();\r\n\r\n        this.resetResults();\r\n        this.resetMaxResults();\r\n    }\r\n\r\n    getTimeElapsedSinceLastReset() {\r\n        return window.performance.now() - this._myTimeOfLastReset - this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset;\r\n    }\r\n\r\n    getMaxTimeElapsedSinceLastReset() {\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n        return this._myMaxTimeElapsedSinceLastReset;\r\n    }\r\n\r\n    resetResults() {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisResults.get(property).reset();\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset = 0;\r\n\r\n        this._myTimeOfLastReset = window.performance.now();\r\n    }\r\n\r\n    resetMaxResults() {\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n        for (let property of this._myFunctionPerformanceAnalysisMaxResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisMaxResults.get(property).reset();\r\n        }\r\n    }\r\n\r\n    getResults(sortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    getMaxResults(sortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisMaxResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, false);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, true);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        this._myResultsAlreadyAdded = false;\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        if (this._myResultsAlreadyAdded) {\r\n            let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n            this._myFunctionPerformanceAnalysisResults.delete(propertyID);\r\n        }\r\n    }\r\n\r\n    _sortResults(results, sortOrder) {\r\n        let sortedResults = results;\r\n\r\n        if (sortOrder != DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n            sortedResults = new Map([...results.entries()].sort(function (first, second) {\r\n                let sortResult = 0;\r\n\r\n                if (sortOrder == DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT) {\r\n                    sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        }\r\n                    }\r\n                } else if (sortOrder == DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME) {\r\n                    sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                } else {\r\n                    sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return sortResult;\r\n            }));\r\n        }\r\n\r\n        return sortedResults;\r\n    }\r\n\r\n    _getPropertyID(propertyName, referencePath, isFunction, isConstructor) {\r\n        let id = isConstructor ? \"constructor\" : propertyName;\r\n\r\n        if (referencePath != null && this._myParams.myAddPathPrefixToFunctionID) {\r\n            if (!isFunction) {\r\n                id = referencePath + \".\" + id;\r\n            } else {\r\n                id = referencePath;\r\n            }\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    _updateDerivatesResults() {\r\n        let timeElapsedSinceLastReset = this.getTimeElapsedSinceLastReset();\r\n        let beforeTime = window.performance.now();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            let results = this._myFunctionPerformanceAnalysisResults.get(property);\r\n\r\n            if (timeElapsedSinceLastReset != 0) {\r\n                results.myTotalExecutionTimePercentage = results.myTotalExecutionTime / timeElapsedSinceLastReset;\r\n            } else {\r\n                if (results.myCallsCount != 0) {\r\n                    results.myTotalExecutionTimePercentage = 1;\r\n                } else {\r\n                    results.myTotalExecutionTimePercentage = 0;\r\n                }\r\n            }\r\n\r\n            if (results.myCallsCount != 0) {\r\n                results.myAverageExecutionTime = results.myTotalExecutionTime / results.myCallsCount;\r\n            } else {\r\n                results.myAverageExecutionTime = 0;\r\n            }\r\n\r\n            results.myTimeElapsedSinceLastReset = timeElapsedSinceLastReset;\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now() - beforeTime;\r\n    }\r\n\r\n    _updateMaxResults() {\r\n        let beforeTime = window.performance.now();\r\n\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            if (this._myFunctionPerformanceAnalysisMaxResults.has(property)) {\r\n                this._myFunctionPerformanceAnalysisMaxResults.get(property).max(this._myFunctionPerformanceAnalysisResults.get(property));\r\n            } else {\r\n                let maxResults = new DebugFunctionPerformanceAnalysisResults();\r\n                maxResults.copy(this._myFunctionPerformanceAnalysisResults.get(property));\r\n                this._myFunctionPerformanceAnalysisMaxResults.set(property, maxResults)\r\n            }\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now() - beforeTime;\r\n    }\r\n\r\n    _getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, isConstructor) {\r\n        let newFunction = JSUtils.getObjectProperty(reference, propertyName);\r\n\r\n        if (!this._myParams.myFilterDebugFunctionsPerformanceAnalyzerClasses || !this._isPerformanceAnalyzer(reference, propertyName, isClass)) {\r\n            if (propertyName != \"_myPerformanceAnalyzerOriginalFunction\") {\r\n                let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n\r\n                this._myResultsAlreadyAdded = this._myFunctionPerformanceAnalysisResults.has(propertyID);\r\n                let analysisResults = new DebugFunctionPerformanceAnalysisResults();\r\n\r\n                analysisResults.myReference = reference;\r\n                analysisResults.myName = propertyName;\r\n                analysisResults.myPath = referencePath;\r\n                analysisResults.myID = referencePath;\r\n\r\n                this._myFunctionPerformanceAnalysisResults.set(propertyID, analysisResults);\r\n\r\n                try {\r\n                    let functionPerformanceAnalysisResults = this._myFunctionPerformanceAnalysisResults.get(propertyID);\r\n                    let executionTimes = this._myExecutionTimes;\r\n\r\n                    let originalFunction = reference[propertyName];\r\n                    let functionCallOverhead = 0.000175;    // ms taken by an analyzed function that is empty\r\n                    let overheadError = 0.00035;            // ms to add to adjust a bit for window.performance.now() max precision which is 0.0005\r\n\r\n                    let executionTimeAnalysisEnabled = this._myParams.myExecutionTimeAnalysisEnabled;\r\n\r\n                    if (!isConstructor) {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = bindFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    returnValue = bindFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    } else {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    }\r\n\r\n                    if (newFunction != null) {\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerHasBeenOverwritten\", {\r\n                            value: true,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerOriginalFunction\", {\r\n                            value: originalFunction,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    if (this._myParams.myDebugLogActive) {\r\n                        console.error(\"Function:\", propertyName, \"of:\", reference, \"can't be overwritten.\\nError:\", error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return newFunction;\r\n    }\r\n\r\n    _isPerformanceAnalyzer(reference, propertyName, isClass) {\r\n        let isPerformanceAnalyzer = false;\r\n\r\n        if (isClass) {\r\n            if (reference == DebugFunctionsPerformanceAnalyzer.prototype || reference == DebugFunctionPerformanceAnalysisResults.prototype) {\r\n                isPerformanceAnalyzer = true;\r\n            }\r\n        }\r\n\r\n        return isPerformanceAnalyzer;\r\n    }\r\n}", "import { Timer } from \"../../../cauldron/cauldron/timer\";\r\nimport { DebugFunctionsPerformanceAnalyzerSortOrder } from \"./debug_functions_performance_analyzer\";\r\n\r\nexport class DebugFunctionsPerformanceAnalysisResultsLoggerParams {\r\n\r\n    constructor() {\r\n        this.myPerformanceAnalyzer = null;\r\n\r\n        this.myLogTitle = \"Functions Performance Analysis Results\";\r\n        this.mySecondsBetweenLogs = 1;\r\n        this.myLogFunction = \"log\";\r\n\r\n        this.myFormatLog = true;\r\n        this.myFormatLogIndentationCharacter = \"-\";\r\n\r\n        this.myLogMaxResults = false;\r\n\r\n        this.myLogSortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE;\r\n\r\n        this.myLogMaxAmountOfFunctions = null;\r\n\r\n        this.myLogFunctionsWithCallsCountAbove = null;\r\n        this.myLogFunctionsWithTotalExecutionTimePercentageAbove = null;\r\n\r\n        this.myLogCallsCountResults = false;\r\n        this.myLogTotalExecutionTimeResults = false;\r\n        this.myLogTotalExecutionTimePercentageResults = false;\r\n        this.myLogAverageExecutionTimeResults = false;\r\n\r\n        this.myClearConsoleBeforeLog = false;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionsPerformanceAnalysisResultsLogger {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myLogTimer = new Timer(this._myParams.mySecondsBetweenLogs);\r\n\r\n        this._myMaxNameLength = 0;\r\n        this._myMaxCallsCountLength = 0;\r\n        this._myMaxTotalExecutionTimeLength = 0;\r\n        this._myMaxTotalExecutionTimePercentageLength = 0;\r\n        this._myMaxAverageExecutionTimeLength = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myPerformanceAnalyzer == null) {\r\n            return;\r\n        }\r\n\r\n        this._myLogTimer.update(dt);\r\n        if (this._myLogTimer.isDone()) {\r\n            this._myLogTimer.start();\r\n\r\n            let timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getTimeElapsedSinceLastReset();\r\n            if (this._myParams.myLogMaxResults) {\r\n                timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getMaxTimeElapsedSinceLastReset();\r\n            }\r\n\r\n            let analysisResults = null;\r\n            if (!this._myParams.myLogMaxResults) {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getResults(this._myParams.myLogSortOrder);\r\n            } else {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getMaxResults(this._myParams.myLogSortOrder);\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithCallsCountAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myCallsCount > this._myParams.myLogFunctionsWithCallsCountAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myTotalExecutionTimePercentage * 100 > this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogMaxAmountOfFunctions != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < this._myParams.myLogMaxAmountOfFunctions && i < keys.length; i++) {\r\n                    let counter = analysisResultsClone.get(keys[i]);\r\n                    analysisResults.set(keys[i], counter);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myClearConsoleBeforeLog) {\r\n                console.clear();\r\n            }\r\n\r\n            let analysisResultsToLog = new Map();\r\n            for (let key of analysisResults.keys()) {\r\n                let currentResults = analysisResults.get(key);\r\n\r\n                let resultsToLog = {};\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    resultsToLog.myCallsCount = currentResults.myCallsCount;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    resultsToLog.myTotalExecutionTime = currentResults.myTotalExecutionTime;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    resultsToLog.myTotalExecutionTimePercentage = currentResults.myTotalExecutionTimePercentage;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    resultsToLog.myAverageExecutionTime = currentResults.myAverageExecutionTime;\r\n                }\r\n\r\n                analysisResultsToLog.set(key, resultsToLog);\r\n            }\r\n\r\n            let resultsText = \"\";\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                this._myMaxNameLength = Math.max(this._myMaxNameLength, name.length);\r\n\r\n                this._myMaxCallsCountLength = Math.max(this._myMaxCallsCountLength, results.myCallsCount.toFixed(0).length);\r\n                this._myMaxTotalExecutionTimeLength = Math.max(this._myMaxTotalExecutionTimeLength, results.myTotalExecutionTime.toFixed(5).length);\r\n                this._myMaxTotalExecutionTimePercentageLength = Math.max(this._myMaxTotalExecutionTimePercentageLength, (results.myTotalExecutionTimePercentage * 100).toFixed(2).length);\r\n                this._myMaxAverageExecutionTimeLength = Math.max(this._myMaxAverageExecutionTimeLength, results.myAverageExecutionTime.toFixed(5).length);\r\n            }\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                let parametersToLog = 0;\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                let textOrdered = [];\r\n\r\n                let callsCountText = ((parametersToLog > 1) ? \"Calls Count: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxCallsCountLength - results.myCallsCount.toFixed(0).length; i++) {\r\n                        callsCountText += \" \";\r\n                    }\r\n                }\r\n                callsCountText += results.myCallsCount.toFixed(0);\r\n\r\n                let totalExecutionTimeText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimeLength - results.myTotalExecutionTime.toFixed(5).length; i++) {\r\n                        totalExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimeText += results.myTotalExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                let totalExecutionTimePercentageText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimePercentageLength - (results.myTotalExecutionTimePercentage * 100).toFixed(2).length; i++) {\r\n                        totalExecutionTimePercentageText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimePercentageText += (results.myTotalExecutionTimePercentage * 100).toFixed(2) + \"%\";\r\n\r\n                let averageExecutionTimeText = ((parametersToLog > 1) ? \"Average Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxAverageExecutionTimeLength - results.myAverageExecutionTime.toFixed(5).length; i++) {\r\n                        averageExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                averageExecutionTimeText += results.myAverageExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                if (!this._myParams.myLogCallsCountResults) {\r\n                    callsCountText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimeResults) {\r\n                    totalExecutionTimeText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    totalExecutionTimePercentageText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogAverageExecutionTimeResults) {\r\n                    averageExecutionTimeText = null;\r\n                }\r\n\r\n                switch (this._myParams.myLogSortOrder) {\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        break;\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME:\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.AVERAGE_EXECUTION_TIME:\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    default:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                }\r\n\r\n                resultsText += \"\\n\";\r\n                if (this._myParams.myFormatLog) {\r\n                    let nameIndented = name + \" \";\r\n                    while (nameIndented.length < this._myMaxNameLength + 1) {\r\n                        nameIndented += this._myParams.myFormatLogIndentationCharacter;\r\n                    }\r\n                    nameIndented += this._myParams.myFormatLogIndentationCharacter + \" \";\r\n                    resultsText += nameIndented;\r\n                } else {\r\n                    resultsText += name + \" - \";\r\n                }\r\n\r\n                let avoidFirst = true;\r\n                for (let text of textOrdered) {\r\n                    if (text != null) {\r\n                        if (avoidFirst) {\r\n                            avoidFirst = false;\r\n                        } else {\r\n                            resultsText += \" - \";\r\n                        }\r\n\r\n                        resultsText += text;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((this._myParams.myLogTotalExecutionTimeResults || this._myParams.myLogTotalExecutionTimePercentageResults || this._myParams.myLogAverageExecutionTimeResults)) {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\\nTotal Time:\", timeSinceLastReset.toFixed(5), \"ms\\n\", resultsText);\r\n            } else {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\", resultsText);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\nimport { getLeftGamepad } from \"../../../../input/cauldron/input_globals\";\r\nimport { GamepadButtonID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { isDebugEnabled } from \"../../../debug_globals\";\r\nimport { DebugFunctionsPerformanceAnalysisResultsLogger, DebugFunctionsPerformanceAnalysisResultsLoggerParams } from \"../debug_functions_performance_analysis_results_logger\";\r\nimport { DebugFunctionsPerformanceAnalyzer, DebugFunctionsPerformanceAnalyzerParams } from \"../debug_functions_performance_analyzer\";\r\n\r\nexport class DebugFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myObjectsByPath: Property.string(\"\"),\r\n        _myClassesByPath: Property.string(\"\"),\r\n        _myFunctionsByPath: Property.string(\"\"),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogTitle: Property.string(\"Functions Performance Analysis Results\"),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myExcludeJSObjectFunctions: Property.bool(true),\r\n        _myAddPathPrefixToFunctionID: Property.bool(true),\r\n        _myObjectAddObjectDescendantsDepthLevel: Property.int(0),\r\n        _myObjectAddClassDescendantsDepthLevel: Property.int(0),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false),\r\n        _myClassesByReference: Property.enum([\"Code Driven\"], \"Code Driven\"),\r\n        _myObjectsByReference: Property.enum([\"Code Driven\"], \"Code Driven\")\r\n    };\r\n\r\n    init() {\r\n        this._myActive = false;\r\n\r\n        if (isDebugEnabled(this.engine)) {\r\n            this._myActive = true;\r\n\r\n            this._myFunctionsPerformanceAnalyzer = null;\r\n            this._myFunctionsPerformanceAnalysisResultsLogger = null;\r\n\r\n            this._mySkipFirstUpdate = true;\r\n            this._myStartTimer = new Timer(this._myDelayStart);\r\n            if (this._myDelayStart == 0) {\r\n                this._myStartTimer.end();\r\n                this._mySkipFirstUpdate = false;\r\n                this._start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myActive) {\r\n            if (this._mySkipFirstUpdate) {\r\n                this._mySkipFirstUpdate = false;\r\n                return;\r\n            }\r\n\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._myFunctionsPerformanceAnalysisResultsLogger.update(dt);\r\n                this._myFunctionsPerformanceAnalyzer.resetResults();\r\n            }\r\n\r\n            if (this._myResetMaxResultsShortcutEnabled) {\r\n                if (getLeftGamepad(this.engine).getButtonInfo(GamepadButtonID.SELECT).isPressEnd(3)) {\r\n                    this._myFunctionsPerformanceAnalyzer.resetMaxResults();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n        let functionsPerformanceAnalyzerParams = new DebugFunctionsPerformanceAnalyzerParams();\r\n\r\n        if (this._myObjectsByPath.length > 0) {\r\n            let toIncludeList = [...this._myObjectsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myObjectsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myClassesByPath.length > 0) {\r\n            let toIncludeList = [...this._myClassesByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myClassesByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionsByPath.length > 0) {\r\n            let toIncludeList = [...this._myFunctionsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myExcludeConstructors = this._myExcludeConstructors;\r\n        functionsPerformanceAnalyzerParams.myExcludeJSObjectFunctions = this._myExcludeJSObjectFunctions;\r\n        functionsPerformanceAnalyzerParams.myAddPathPrefixToFunctionID = this._myAddPathPrefixToFunctionID;\r\n\r\n        if (this._myFunctionPathsToInclude.length > 0) {\r\n            let toIncludeList = [...this._myFunctionPathsToInclude.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToInclude.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionPathsToExclude.length > 0) {\r\n            let toExcludeList = [...this._myFunctionPathsToExclude.split(\",\")];\r\n            for (let i = 0; i < toExcludeList.length; i++) {\r\n                toExcludeList[i] = toExcludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToExclude.push(...toExcludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myObjectAddObjectDescendantsDepthLevel = this._myObjectAddObjectDescendantsDepthLevel;\r\n        functionsPerformanceAnalyzerParams.myObjectAddClassDescendantsDepthLevel = this._myObjectAddClassDescendantsDepthLevel;\r\n\r\n        functionsPerformanceAnalyzerParams.myExecutionTimeAnalysisEnabled = this._myLogTotalExecutionTimeResults || this._myLogTotalExecutionTimePercentageResults || this._myLogAverageExecutionTimeResults;\r\n\r\n        functionsPerformanceAnalyzerParams.myClassesByReference = (this._myClassesByReference != 0) ? this._myClassesByReference : [];\r\n        functionsPerformanceAnalyzerParams.myObjectsByReference = (this._myObjectsByReference != 0) ? this._myObjectsByReference : [];\r\n\r\n        this._myFunctionsPerformanceAnalyzer = new DebugFunctionsPerformanceAnalyzer(functionsPerformanceAnalyzerParams);\r\n        this._myFunctionsPerformanceAnalyzer.overwriteFunctions();\r\n\r\n        let functionsPerformanceAnalysisResultsLoggerParams = new DebugFunctionsPerformanceAnalysisResultsLoggerParams();\r\n        functionsPerformanceAnalysisResultsLoggerParams.myPerformanceAnalyzer = this._myFunctionsPerformanceAnalyzer;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTitle = this._myLogTitle;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.mySecondsBetweenLogs = this._mySecondsBetweenLogs;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunction = [\"log\", \"error\", \"warn\", \"debug\"][this._myLogFunction];\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxAmountOfFunctions = (this._myLogMaxAmountOfFunctions >= 0) ? this._myLogMaxAmountOfFunctions : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithCallsCountAbove = (this._myLogFunctionsWithCallsCountAbove >= 0) ? this._myLogFunctionsWithCallsCountAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithTotalExecutionTimePercentageAbove = (this._myLogFunctionsWithTotalExecutionTimePercentageAbove >= 0) ? this._myLogFunctionsWithTotalExecutionTimePercentageAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxResults = this._myLogMaxResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myClearConsoleBeforeLog = this._myClearConsoleBeforeLog;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogSortOrder = this._myLogSortOrder;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogCallsCountResults = this._myLogCallsCountResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimeResults = this._myLogTotalExecutionTimeResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimePercentageResults = this._myLogTotalExecutionTimePercentageResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogAverageExecutionTimeResults = this._myLogAverageExecutionTimeResults;\r\n\r\n        this._myFunctionsPerformanceAnalysisResultsLogger = new DebugFunctionsPerformanceAnalysisResultsLogger(functionsPerformanceAnalysisResultsLoggerParams);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugPPFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-pp-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: 1,\r\n            _myObjectAddClassDescendantsDepthLevel: 1,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "\r\nimport { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugArrayFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-array-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myIncludeOnlyMainArrayTypes: Property.bool(true),\r\n        _myIncludeOnlyArrayExtensionFunctions: Property.bool(false),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        let classesByPath = \"Array, Uint8ClampedArray, Uint8Array, Uint16Array, Uint32Array, Int8Array, Int16Array, Int32Array, Float32Array, Float64Array\";\r\n        if (this._myIncludeOnlyMainArrayTypes) {\r\n            classesByPath = \"Array, Uint8Array, Uint16Array, Float32Array\";\r\n        }\r\n\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myClassesByPath: classesByPath,\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"Array Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude + (this._myFunctionPathsToInclude.length > 0 && this._myIncludeOnlyArrayExtensionFunctions ? \", \" : \"\") + (this._myIncludeOnlyArrayExtensionFunctions ? \"pp_, vec_, vec2_, vec3_, vec4_, quat_, quat2_, mat3_, mat4_, _pp_, _vec_, _quat_\" : \"\"),\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nclass DebugPPArrayCreationPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-pp-array-creation-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Array Creation Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: \"vec2_create, vec3_create, vec4_create, quat_create, quat2_create, mat3_create, mat4_create\",\r\n            _myExcludeConstructors: true,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugWLFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-wl-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"WL\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"WL Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: 1,\r\n            _myObjectAddClassDescendantsDepthLevel: 1,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { AnimationComponent, CollisionComponent, Component, InputComponent, LightComponent, MeshComponent, TextComponent, Property, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\n\r\nexport class DebugWLComponentsFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-wl-components-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myAnalyzeComponentTypes: Property.bool(true),\r\n        _myAnalyzeComponentInstances: Property.bool(false),\r\n        _myComponentInstanceID: Property.enum([\"Object ID\", \"Object Name\", \"Object ID - Object Name\"], \"Object ID - Object Name\"),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myStartTimer = new Timer(this._myDelayStart);\r\n        if (this._myDelayStart == 0) {\r\n            this._myStartTimer.end();\r\n            this._start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myStartTimer.isRunning()) {\r\n            this._myStartTimer.update(dt);\r\n            if (this._myStartTimer.isDone()) {\r\n                this._start();\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n\r\n        let objectsByReference = [];\r\n\r\n        if (this._myAnalyzeComponentInstances) {\r\n            this._addComponentInstanceReferences(objectsByReference);\r\n        }\r\n\r\n        if (this._myAnalyzeComponentTypes) {\r\n            this._addComponentTypeReferences(objectsByReference);\r\n        }\r\n\r\n        this._myAnalyzerComponent = this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByReference: objectsByReference,\r\n            _myDelayStart: 0,\r\n            _myLogTitle: \"WL Components Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddClassDescendantsDepthLevel: 0,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n\r\n    _addComponentTypeReferences(objectsByReference) {\r\n        let nativeComponentTypes = [\r\n            MeshComponent,\r\n            AnimationComponent,\r\n            CollisionComponent,\r\n            InputComponent,\r\n            LightComponent,\r\n            TextComponent,\r\n            ViewComponent\r\n        ];\r\n\r\n        for (let nativeComponentType of nativeComponentTypes) {\r\n            objectsByReference.push([Object.getPrototypeOf(this.engine._wrapComponent(nativeComponentType.TypeName, this.engine.wasm._typeIndexFor(nativeComponentType.TypeName), 0)),\r\n            \"{\\\"\" + nativeComponentType.TypeName + \"\\\"}\"]);\r\n        }\r\n\r\n        for (let componentType of this.engine.wasm._componentTypes) {\r\n            objectsByReference.push([componentType.prototype,\r\n            \"{\\\"\" + componentType.TypeName + \"\\\"}\"]);\r\n        }\r\n    }\r\n\r\n    _addComponentInstanceReferences(objectsByReference) {\r\n        for (let component of this.engine.wasm._components) {\r\n            let id = \"\";\r\n\r\n            switch (this._myComponentInstanceID) {\r\n                case 0:\r\n                    id = component.object.pp_getID();\r\n                    break;\r\n                case 1:\r\n                    id = component.object.pp_getName();\r\n                    break;\r\n                case 2:\r\n                    id = component.object.pp_getID();\r\n                    if (component.object.pp_getName().length > 0) {\r\n                        id = id + \" - \" + component.object.pp_getName();\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            objectsByReference.push([component,\r\n                \"{\\\"\" + component.type + \"\\\"}[\" + id + \"]\"]);\r\n        }\r\n    }\r\n}", "import { quat_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class Direction2DTo3DConverterParams {\r\n\r\n    constructor() {\r\n        this.myStartFlyingForward = false;\r\n        this.myStartFlyingRight = false;\r\n\r\n        this.myAutoUpdateFlyForward = false;\r\n        this.myAutoUpdateFlyRight = false;\r\n\r\n        this.myResetFlyForwardWhenZero = false;\r\n        this.myResetFlyRightWhenZero = false;\r\n\r\n        this.myMinAngleToFlyForwardUp = 90;\r\n        this.myMinAngleToFlyForwardDown = 90;\r\n        this.myMinAngleToFlyRightUp = 90;\r\n        this.myMinAngleToFlyRightDown = 90;\r\n    }\r\n}\r\n\r\nexport class Direction2DTo3DConverter {\r\n\r\n    constructor(params = new Direction2DTo3DConverterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myIsFlyingForward = this._myParams.myStartFlyingForward;\r\n        this._myIsFlyingRight = this._myParams.myStartFlyingRight;\r\n\r\n        this._myLastValidFlatForward = vec3_create();\r\n        this._myLastValidFlatRight = vec3_create();\r\n\r\n        // Setup\r\n\r\n        this._myMinAngleToBeValid = 5;\r\n    }\r\n\r\n    // @direction3DUp can be used to flat the direction if the @conversionTransform is not aligned with it\r\n    // It's also needed to specify the fly axis, if different from the @conversionTransform up\r\n    // If @direction3DUp is null, conversionTransform up is used\r\n    convert(direction2D, conversionTransform, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        return this.convertTransform(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    isFlying() {\r\n        return this._myIsFlyingForward || this._myIsFlyingRight;\r\n    }\r\n\r\n    isFlyingForward() {\r\n        return this._myIsFlyingForward;\r\n    }\r\n\r\n    isFlyingRight() {\r\n        return this._myIsFlyingRight;\r\n    }\r\n\r\n    startFlying() {\r\n        this._myIsFlyingForward = true;\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    startFlyingForward() {\r\n        this._myIsFlyingForward = true;\r\n    }\r\n\r\n    startFlyingRight() {\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    stopFlying() {\r\n        this._myIsFlyingForward = false;\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    stopFlyingForward() {\r\n        this._myIsFlyingForward = false;\r\n    }\r\n\r\n    stopFlyingRight() {\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    resetFly() {\r\n        this.resetFlyForward();\r\n        this.resetFlyRight();\r\n    }\r\n\r\n    resetFlyForward() {\r\n        if (this._myParams.myStartFlyingForward) {\r\n            this.startFlyingForward();\r\n        } else {\r\n            this.stopFlyingForward();\r\n        }\r\n\r\n        this._myLastValidFlatForward.vec3_zero();\r\n    }\r\n\r\n    resetFlyRight() {\r\n        if (this._myParams.myStartFlyingRight) {\r\n            this.startFlyingRight();\r\n        } else {\r\n            this.stopFlyingRight();\r\n        }\r\n\r\n        this._myLastValidFlatRight.vec3_zero();\r\n    }\r\n\r\n    // Convert Alternatives\r\n\r\n    // If @direction3DUp is null, vec3_create(0, 1, 0) is used\r\n    // Does not work properly if forward is aligned with @direction3DUp\r\n    convertForward(direction2D, forward, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    // @direction3DUp can be used to flat the direction if the @conversionTransform is not aligned with it\r\n    // It's also needed to specify the fly axis, if different from the @conversionTransform up\r\n    // If @direction3DUp is null, conversionTransform up is used\r\n    convertTransform(direction2D, conversionTransform, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        return this.convertTransformMatrix(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nDirection2DTo3DConverter.prototype.convertForward = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertForward(direction2D, forward, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat.quat_identity();\r\n        rotationQuat.quat_setForward(forward, direction3DUp);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertTransformMatrix = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat = conversionTransformMatrix.mat4_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertTransformQuat = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat = conversionTransformQuat.quat2_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertRotationQuat = function () {\r\n    let forward = vec3_create();\r\n    let right = vec3_create();\r\n    let direction3DUpNegate = vec3_create();\r\n    let forwardScaled = vec3_create();\r\n    let rightScaled = vec3_create();\r\n    return function convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        if (direction2D.vec2_isZero()) {\r\n            let resetFlyForward = this._myParams.myAutoUpdateFlyForward && this._myParams.myResetFlyForwardWhenZero;\r\n            if (resetFlyForward) {\r\n                this.resetFlyForward();\r\n            }\r\n\r\n            let resetFlyRight = this._myParams.myAutoUpdateFlyRight && this._myParams.myResetFlyRightWhenZero;\r\n            if (resetFlyRight) {\r\n                this.resetFlyRight();\r\n            }\r\n\r\n            outDirection3D.vec3_zero();\r\n            return outDirection3D;\r\n        } else {\r\n            if (direction2D[0] == 0) {\r\n                this._myLastValidFlatRight.vec3_zero();\r\n            }\r\n\r\n            if (direction2D[1] == 0) {\r\n                this._myLastValidFlatForward.vec3_zero();\r\n            }\r\n        }\r\n\r\n        forward = conversionRotationQuat.quat_getForward(forward);\r\n        right = conversionRotationQuat.quat_getRight(right);\r\n\r\n        if (direction3DUp != null) {\r\n            direction3DUpNegate = direction3DUp.vec3_negate(direction3DUpNegate);\r\n\r\n            // Check if it is flying based on the convert transform orientation \r\n            if (this._myParams.myAutoUpdateFlyForward) {\r\n                let angleForwardWithDirectionUp = forward.vec3_angle(direction3DUp);\r\n                this._myIsFlyingForward = this._myIsFlyingForward ||\r\n                    (angleForwardWithDirectionUp < 90 - this._myParams.myMinAngleToFlyForwardUp || angleForwardWithDirectionUp > 90 + this._myParams.myMinAngleToFlyForwardDown);\r\n            }\r\n\r\n            if (this._myParams.myAutoUpdateFlyRight) {\r\n                let angleRightWithDirectionUp = right.vec3_angle(direction3DUp);\r\n                this._myIsFlyingRight = this._myIsFlyingRight ||\r\n                    (angleRightWithDirectionUp < 90 - this._myParams.myMinAngleToFlyRightUp || angleRightWithDirectionUp > 90 + this._myParams.myMinAngleToFlyRightDown);\r\n            }\r\n\r\n            // Remove the component to prevent flying, if needed\r\n            if (!this._myIsFlyingForward) {\r\n                // If the forward is too similar to the up (or down) take the last valid forward\r\n                if (!this._myLastValidFlatForward.vec3_isZero(Math.PP_EPSILON) && (forward.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || forward.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (forward.vec3_isConcordant(this._myLastValidFlatForward)) {\r\n                        forward.pp_copy(this._myLastValidFlatForward);\r\n                    } else {\r\n                        forward = this._myLastValidFlatForward.vec3_negate(forward);\r\n                    }\r\n                }\r\n\r\n                forward = forward.vec3_removeComponentAlongAxis(direction3DUp, forward);\r\n                forward.vec3_normalize(forward);\r\n            }\r\n\r\n            if (!this._myIsFlyingRight) {\r\n                // If the right is too similar to the up (or down) take the last valid right\r\n                if (!this._myLastValidFlatRight.vec3_isZero(Math.PP_EPSILON) && (right.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || right.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (right.vec3_isConcordant(this._myLastValidFlatRight)) {\r\n                        right.pp_copy(this._myLastValidFlatRight);\r\n                    } else {\r\n                        right = this._myLastValidFlatRight.vec3_negate(right);\r\n                    }\r\n                }\r\n\r\n                right = right.vec3_removeComponentAlongAxis(direction3DUp, right);\r\n                right.vec3_normalize(right);\r\n            }\r\n\r\n            // Update last valid\r\n            if ((forward.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && forward.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[1] != 0 && this._myLastValidFlatForward.vec3_isZero(Math.PP_EPSILON))) {\r\n                this._myLastValidFlatForward = forward.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatForward);\r\n                this._myLastValidFlatForward.vec3_normalize(this._myLastValidFlatForward);\r\n            }\r\n\r\n            if ((right.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && right.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[0] != 0 && this._myLastValidFlatRight.vec3_isZero(Math.PP_EPSILON))) {\r\n                this._myLastValidFlatRight = right.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatRight);\r\n                this._myLastValidFlatRight.vec3_normalize(this._myLastValidFlatRight);\r\n            }\r\n        }\r\n\r\n        // Compute direction 3D\r\n        outDirection3D = right.vec3_scale(direction2D[0], rightScaled).vec3_add(forward.vec3_scale(direction2D[1], forwardScaled), outDirection3D);\r\n\r\n        if (direction3DUp != null && !this._myIsFlyingForward && !this._myIsFlyingRight) {\r\n            outDirection3D = outDirection3D.vec3_removeComponentAlongAxis(direction3DUp, outDirection3D);\r\n        }\r\n\r\n        outDirection3D.vec3_normalize(outDirection3D);\r\n\r\n        return outDirection3D;\r\n    };\r\n}();", "import { EasingFunction } from \"../../../plugin/js/extensions/math_extension\";\r\n\r\n// You can just put startNumber if u want a number that doesn't actually change -> new NumberOverValue(0)\r\nexport class NumberOverValue {\r\n\r\n    constructor(startNumber, endNumber = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (endNumber == null) {\r\n            endNumber = startNumber;\r\n        }\r\n\r\n        this._myStartNumber = startNumber;\r\n        this._myEndNumber = endNumber;\r\n\r\n        this._myStartInterpolationValue = startInterpolationValue;\r\n        this._myEndInterpolationValue = endInterpolationValue;\r\n\r\n        this._myEasingFunction = easingFunction;\r\n        this._myRoundingFunction = roundingFunction; // Signature: function(numberToRound, startNumber = null, endNumber = null) -> int, Math.round/floor/ceil can be used\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let lerpInterpolationValue = this._myEasingFunction(Math.pp_mapToRange(interpolationValue, this._myStartInterpolationValue, this._myEndInterpolationValue, 0, 1));\r\n        let lerpNumber = Math.pp_lerp(this._myStartNumber, this._myEndNumber, lerpInterpolationValue);\r\n\r\n        if (this._myRoundingFunction) {\r\n            lerpNumber = this._myRoundingFunction(lerpNumber, this._myStartNumber, this._myEndNumber);\r\n        }\r\n\r\n        return lerpNumber;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let number = this.get(interpolationValue);\r\n        return [number, number];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        return currentNumber == number;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampDegrees(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampDegrees(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampRadians(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampRadians(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n}\r\n\r\nexport class IntOverValue extends NumberOverValue {\r\n\r\n    constructor(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n}\r\n\r\n// You can just put startRange if u want a range that doesn't actually change -> new NumberOverValue([1,25])\r\nexport class NumberRangeOverValue {\r\n\r\n    constructor(startRange, endRange = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (endRange == null) {\r\n            endRange = startRange;\r\n        }\r\n\r\n        this._myStartNumberOverValue = new NumberOverValue(startRange[0], endRange[0], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n        this._myEndNumberOverValue = new NumberOverValue(startRange[1], endRange[1], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n\r\n        this._myRoundingFunction = roundingFunction; // Signature: function(numberToRound, startNumber = null, endNumber = null) -> int, Math.round/floor/ceil can be used\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let randomValue = null;\r\n\r\n        if (this._myRoundingFunction) {\r\n            randomValue = Math.pp_randomInt(startNumber, endNumber);\r\n        } else {\r\n            randomValue = Math.pp_random(startNumber, endNumber);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let average = (startNumber + endNumber) / 2;\r\n        if (this._myRoundingFunction) {\r\n            average = this._myRoundingFunction(average, startNumber, endNumber);\r\n        }\r\n\r\n        return average;\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return [startNumber, endNumber];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.max(startNumber, endNumber);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.min(startNumber, endNumber);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let min = Math.min(startNumber, endNumber);\r\n        let max = Math.max(startNumber, endNumber);\r\n\r\n        return number >= min && number <= max;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeDegrees(number, startNumber, endNumber);\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeRadians(number, startNumber, endNumber);\r\n    }\r\n}\r\n\r\nexport class IntRangeOverValue extends NumberRangeOverValue {\r\n\r\n    constructor(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n}", "import { Component, Property, PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport class GrabbableComponent extends Component {\r\n    static TypeName = \"pp-grabbable\";\r\n    static Properties = {\r\n        _myThrowLinearVelocityMultiplier: Property.float(1),\r\n        _myThrowAngularVelocityMultiplier: Property.float(1),\r\n        _myKinematicValueOnRelease: Property.enum([\"True\", \"False\", \"Own\"], \"False\"),\r\n        _myParentOnRelease: Property.enum([\"Root\", \"Own\"], \"Own\")\r\n    };\r\n\r\n    init() {\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myGrabber = null;\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n        this._myReleaseCallbacks = new Map();   // Signature: callback(grabber, grabbable, isThrow)\r\n    }\r\n\r\n    start() {\r\n        this._myOldParent = this.object.pp_getParent();\r\n        this._myPhysX = this.object.pp_getComponent(PhysXComponent);\r\n        this._myOldKinematicValue = null;\r\n    }\r\n\r\n    onDeactivate() {\r\n        this.release();\r\n    }\r\n\r\n    grab(grabber) {\r\n        if (!this.isGrabbed()) {\r\n            this._myOldKinematicValue = this._myPhysX.kinematic;\r\n        }\r\n\r\n        this.release();\r\n\r\n        this._myPhysX.kinematic = true;\r\n\r\n        this._myOldParent = this.object.pp_getParent();\r\n        this.object.pp_setParent(grabber);\r\n\r\n        this._myIsGrabbed = true;\r\n\r\n        this._myGrabCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n    }\r\n\r\n    throw(linearVelocity, angularVelocity) {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            // #TODO For now kinematic is not updated instantly, add the if as soon as it is\r\n            //if (!this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = linearVelocity.vec3_scale(this._myThrowLinearVelocityMultiplier);\r\n            this._myPhysX.angularVelocity = angularVelocity.vec3_scale(this._myThrowAngularVelocityMultiplier);\r\n            //}\r\n\r\n            this._myThrowCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, true); }.bind(this));\r\n        }\r\n    }\r\n\r\n    release() {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, false); }.bind(this));\r\n        }\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        let linearVelocity = vec3_create();\r\n\r\n        this._myPhysX.linearVelocity.vec3_clone(linearVelocity);\r\n\r\n        return linearVelocity;\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        let angularVelocityDegrees = vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_toDegrees(angularVelocityDegrees);\r\n\r\n        return angularVelocityDegrees;\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        let angularVelocityRadians = vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_clone(angularVelocityRadians);\r\n\r\n        return angularVelocityRadians;\r\n    }\r\n\r\n    isGrabbed() {\r\n        return this._myIsGrabbed;\r\n    }\r\n\r\n    getGrabber() {\r\n        return this._myGrabber;\r\n    }\r\n\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    }\r\n\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    }\r\n\r\n    registerReleaseEventListener(id, callback) {\r\n        this._myReleaseCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterReleaseEventListener(id) {\r\n        this._myReleaseCallbacks.delete(id);\r\n    }\r\n\r\n    _release() {\r\n        if (this._myParentOnRelease == 0) {\r\n            this.object.pp_setParent(null);\r\n        } else {\r\n            this.object.pp_setParent(this._myOldParent);\r\n        }\r\n\r\n        this._myIsGrabbed = false;\r\n        this._myGrabber = null;\r\n\r\n        if (this._myKinematicValueOnRelease == 0) {\r\n            this._myPhysX.kinematic = true;\r\n        } else if (this._myKinematicValueOnRelease == 1) {\r\n            this._myPhysX.kinematic = false;\r\n        } else if (this._myOldKinematicValue != null) {\r\n            this._myPhysX.kinematic = this._myOldKinematicValue;\r\n        }\r\n\r\n        if (this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = vec3_create();\r\n            this._myPhysX.angularVelocity = vec3_create();\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myThrowLinearVelocityMultiplier = this._myThrowLinearVelocityMultiplier;\r\n        clonedComponent._myThrowAngularVelocityMultiplier = this._myThrowAngularVelocityMultiplier;\r\n        clonedComponent._myKinematicValueOnRelease = this._myKinematicValueOnRelease;\r\n\r\n        return clonedComponent;\r\n    }\r\n\r\n    pp_clonePostProcess() {\r\n        this.start();\r\n    }\r\n}", "import { Component, Property, PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { PhysicsCollisionCollector } from \"../../cauldron/physics/physics_collision_collector\";\r\nimport { getDebugVisualManager } from \"../../debug/debug_globals\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../input/cauldron/input_globals\";\r\nimport { HandednessIndex } from \"../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../input/cauldron/input_utils\";\r\nimport { GamepadButtonEvent, GamepadButtonID } from \"../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { EasingFunction } from \"../../plugin/js/extensions/math_extension\";\r\nimport { GrabbableComponent } from \"./grabbable_component\";\r\n\r\nexport class GrabberHandComponent extends Component {\r\n    static TypeName = \"pp-grabber-hand\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myGrabButton: Property.enum([\"Select\", \"Squeeze\", \"Both\", \"Both Exclusive\"], \"Squeeze\"), // @\"Both Exclusive\" means u can use both buttons but you have to use the same button you grabbed with to throw\r\n        _mySnapOnPivot: Property.bool(false),\r\n        _myMaxNumberOfObjects: Property.int(1), // How many objects you can grab at the same time\r\n\r\n        // ADVANCED SETTINGS\r\n        _myThrowVelocitySource: Property.enum([\"Hand\", \"Grabbable\"], \"Hand\"),\r\n        _myThrowLinearVelocityMultiplier: Property.float(1), // Multiply the overall throw speed, so slow throws will be multiplied too\r\n        _myThrowMaxLinearSpeed: Property.float(15),\r\n        _myThrowAngularVelocityMultiplier: Property.float(0.5),\r\n        _myThrowMaxAngularSpeed: Property.float(1080), // @Degrees\r\n        _myThrowLinearVelocityBoost: Property.float(1.75),   // This boost is applied from 0% to 100% based on how fast you throw, so slow throws are not affected\r\n        _myThrowLinearVelocityBoostMinSpeedThreshold: Property.float(0.6),   // 0% boost is applied if plain throw speed is under this value\r\n        _myThrowLinearVelocityBoostMaxSpeedThreshold: Property.float(2.5),   // 100% boost is applied if plain throw speed is over this value\r\n    };\r\n\r\n    init() {\r\n        this._myGrabbables = [];\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myActiveGrabButton = null;\r\n\r\n        this._myLinearVelocityHistorySize = 5;\r\n        this._myLinearVelocityHistorySpeedAverageSamplesFromStart = 1;\r\n        this._myLinearVelocityHistoryDirectionAverageSamplesFromStart = 3;\r\n        this._myLinearVelocityHistoryDirectionAverageSkipFromStart = 0;\r\n\r\n        this._myHandLinearVelocityHistory = new Array(this._myLinearVelocityHistorySize);\r\n        this._myHandLinearVelocityHistory.fill(vec3_create());\r\n\r\n        this._myAngularVelocityHistorySize = 1;\r\n        this._myHandAngularVelocityHistory = new Array(this._myAngularVelocityHistorySize);\r\n        this._myHandAngularVelocityHistory.fill(vec3_create());\r\n\r\n        this._myThrowMaxAngularSpeedRadians = Math.pp_toRadians(this._myThrowMaxAngularSpeed);\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n\r\n        this._myDebugActive = false;\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandedness == HandednessIndex.LEFT) {\r\n            this._myGamepad = getLeftGamepad(this.engine);\r\n        } else {\r\n            this._myGamepad = getRightGamepad(this.engine);\r\n        }\r\n\r\n        this._myPhysX = this.object.pp_getComponent(PhysXComponent);\r\n        this._myCollisionsCollector = new PhysicsCollisionCollector(this._myPhysX, true);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        if (this._myGrabbables.length > 0) {\r\n            this._updateLinearVelocityHistory();\r\n            this._updateAngularVelocityHistory();\r\n        }\r\n    }\r\n\r\n    grab(grabButton = null) {\r\n        this._grab(grabButton);\r\n    }\r\n\r\n    throw(throwButton = null) {\r\n        this._throw(throwButton);\r\n    }\r\n\r\n    getGamepad() {\r\n        return this._myGamepad;\r\n    }\r\n\r\n    getHandedness() {\r\n        return InputUtils.getHandednessByIndex(this._myHandedness);\r\n    }\r\n\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    }\r\n\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    }\r\n\r\n    onActivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SELECT));\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SQUEEZE));\r\n        } else {\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SQUEEZE));\r\n\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SELECT));\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this);\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this);\r\n        } else {\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this);\r\n\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this);\r\n        }\r\n    }\r\n\r\n    _grab(grabButton) {\r\n        if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == grabButton || grabButton == null) {\r\n            let grabbablesToGrab = [];\r\n\r\n            let collisions = this._myCollisionsCollector.getCollisions();\r\n            for (let i = 0; i < collisions.length; i++) {\r\n                let grabbable = collisions[i].pp_getComponent(GrabbableComponent);\r\n                if (grabbable && grabbable.active) {\r\n                    grabbablesToGrab.push(grabbable);\r\n                }\r\n            }\r\n\r\n            let grabberPosition = this.object.pp_getPosition();\r\n            grabbablesToGrab.sort(function (first, second) {\r\n                let firstPosition = first.object.pp_getPosition();\r\n                let secondPosition = second.object.pp_getPosition();\r\n\r\n                let firstDistance = firstPosition.vec3_distance(grabberPosition);\r\n                let secondDistance = secondPosition.vec3_distance(grabberPosition);\r\n\r\n                return Math.pp_sign(firstDistance - secondDistance, 0);\r\n            });\r\n\r\n            for (let grabbableToGrab of grabbablesToGrab) {\r\n                if (!this._isAlreadyGrabbed(grabbableToGrab)) {\r\n                    let grabbableData = new _GrabberHandComponentGrabbableData(grabbableToGrab, this._myThrowVelocitySource == 1, this._myLinearVelocityHistorySize, this._myAngularVelocityHistorySize);\r\n                    this._myGrabbables.push(grabbableData);\r\n                    grabbableToGrab.grab(this.object);\r\n                    grabbableToGrab.registerReleaseEventListener(this, this._onRelease.bind(this));\r\n\r\n                    if (this._mySnapOnPivot) {\r\n                        grabbableToGrab.object.pp_resetPositionLocal();\r\n                    }\r\n\r\n                    this._myGrabCallbacks.forEach(function (callback) { callback(this, grabbableToGrab); }.bind(this));\r\n                }\r\n\r\n                if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._myGrabbables.length > 0) {\r\n                if (this._myActiveGrabButton == null) {\r\n                    this._myActiveGrabButton = grabButton;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _throw(throwButton) {\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == throwButton || throwButton == null) {\r\n            if (this._myGrabbables.length > 0) {\r\n                let linearVelocity = null;\r\n                let angularVelocity = null;\r\n\r\n                if (this._myThrowVelocitySource == 0) {\r\n                    linearVelocity = this._computeReleaseLinearVelocity(this._myHandLinearVelocityHistory);\r\n                    angularVelocity = this._computeReleaseAngularVelocity(this._myHandAngularVelocityHistory);\r\n                }\r\n\r\n                for (let grabbableData of this._myGrabbables) {\r\n                    let grabbable = grabbableData.getGrabbable();\r\n\r\n                    grabbable.unregisterReleaseEventListener(this);\r\n\r\n                    if (this._myThrowVelocitySource == 1) {\r\n                        linearVelocity = this._computeReleaseLinearVelocity(grabbableData.getLinearVelocityHistory());\r\n                        angularVelocity = this._computeReleaseAngularVelocity(grabbableData.getAngularVelocityHistory());\r\n                    }\r\n\r\n                    grabbable.throw(linearVelocity, angularVelocity);\r\n\r\n                    this._myThrowCallbacks.forEach(function (callback) { callback(this, grabbable); }.bind(this));\r\n                }\r\n\r\n                this._myGrabbables = [];\r\n            }\r\n\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    }\r\n\r\n    _onRelease(grabber, grabbable) {\r\n        grabbable.unregisterReleaseEventListener(this);\r\n        this._myGrabbables.pp_remove(element => element.getGrabbable() == grabbable);\r\n\r\n        if (this._myGrabbables.length <= 0) {\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    }\r\n\r\n    _updateLinearVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandLinearVelocityHistory.unshift(handPose.getLinearVelocity().pp_clone());\r\n        this._myHandLinearVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateLinearVelocityHistory();\r\n        }\r\n    }\r\n\r\n    _updateAngularVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandAngularVelocityHistory.unshift(handPose.getAngularVelocityRadians().pp_clone());\r\n        this._myHandAngularVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateAngularVelocityHistory();\r\n        }\r\n    }\r\n\r\n    _computeReleaseLinearVelocity(linearVelocityHistory) {\r\n        // Speed\r\n        let speed = linearVelocityHistory[0].vec3_length();\r\n        for (let i = 1; i < this._myLinearVelocityHistorySpeedAverageSamplesFromStart; i++) {\r\n            speed += linearVelocityHistory[i].vec3_length();\r\n        }\r\n        speed /= this._myLinearVelocityHistorySpeedAverageSamplesFromStart;\r\n\r\n        // This way I give an increasing and smooth boost to the throw so that when u want to perform a weak throw, the value is not changed, but if u put more speed\r\n        // it will be boosted to make it easier and still feel good and natural (value does not increase suddenly)\r\n        let speedEaseMultiplier = Math.pp_mapToRange(speed, this._myThrowLinearVelocityBoostMinSpeedThreshold, this._myThrowLinearVelocityBoostMaxSpeedThreshold, 0, 1);\r\n        speedEaseMultiplier = EasingFunction.easeIn(speedEaseMultiplier);\r\n\r\n        // Add the boost to the speed\r\n        let extraSpeed = speed * (speedEaseMultiplier * this._myThrowLinearVelocityBoost);\r\n        speed += extraSpeed;\r\n        speed *= this._myThrowLinearVelocityMultiplier;\r\n        speed = Math.pp_clamp(speed, 0, this._myThrowMaxLinearSpeed);\r\n\r\n        if (this._myDebugActive) {\r\n            this._debugDirectionLines(linearVelocityHistory);\r\n        }\r\n\r\n        // Direction\r\n        let directionCurrentWeight = this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let lastDirectionIndex = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let direction = vec3_create();\r\n        for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n            let currentDirection = linearVelocityHistory[i];\r\n            currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n            direction.vec3_add(currentDirection, direction);\r\n\r\n            directionCurrentWeight--;\r\n        }\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    }\r\n\r\n    _computeReleaseAngularVelocity(angularVelocityHistory) {\r\n        let angularVelocity = angularVelocityHistory[0];\r\n\r\n        // Speed\r\n        let speed = angularVelocity.vec3_length();\r\n\r\n        speed = Math.pp_clamp(speed * this._myThrowAngularVelocityMultiplier, 0, this._myThrowMaxAngularSpeedRadians);\r\n\r\n        // Direction\r\n        let direction = angularVelocity;\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    }\r\n\r\n    _debugDirectionLines(linearVelocityHistory) {\r\n        for (let j = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart; j > this._myLinearVelocityHistoryDirectionAverageSkipFromStart; j--) {\r\n\r\n            let directionCurrentWeight = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let lastDirectionIndex = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let direction = vec3_create();\r\n            for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n                let currentDirection = linearVelocityHistory[i].pp_clone();\r\n                currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n                direction.vec3_add(currentDirection, direction);\r\n\r\n                directionCurrentWeight--;\r\n            }\r\n            direction.vec3_normalize(direction);\r\n\r\n            let color = 1 / j;\r\n\r\n            getDebugVisualManager(this.engine).drawLine(5, this.object.pp_getPosition(), direction, 0.2, vec4_create(olor, color, color, 1));\r\n        }\r\n    }\r\n\r\n    _isAlreadyGrabbed(grabbable) {\r\n        let found = this._myGrabbables.pp_find(element => element.getGrabbable() == grabbable);\r\n        return found != null;\r\n    }\r\n}\r\n\r\nclass _GrabberHandComponentGrabbableData {\r\n\r\n    constructor(grabbable, useGrabbableAsVelocitySource, linearVelocityHistorySize, angularVelocityHistorySize) {\r\n        this._myGrabbable = grabbable;\r\n        this._myUseGrabbableAsVelocitySource = useGrabbableAsVelocitySource;\r\n\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory = new Array(linearVelocityHistorySize);\r\n            this._myLinearVelocityHistory.fill(vec3_create());\r\n\r\n            this._myAngularVelocityHistory = new Array(angularVelocityHistorySize);\r\n            this._myAngularVelocityHistory.fill(vec3_create());\r\n        }\r\n    }\r\n\r\n    getGrabbable() {\r\n        return this._myGrabbable;\r\n    }\r\n\r\n    getLinearVelocityHistory() {\r\n        return this._myLinearVelocityHistory;\r\n    }\r\n\r\n    getAngularVelocityHistory() {\r\n        return this._myAngularVelocityHistory;\r\n    }\r\n\r\n    updateLinearVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory.unshift(this._myGrabbable.getLinearVelocity());\r\n            this._myLinearVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    updateAngularVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myAngularVelocityHistory.unshift(this._myGrabbable.getAngularVelocityRadians());\r\n            this._myAngularVelocityHistory.pop();\r\n        }\r\n    }\r\n}", "let _myDummyServer = null;\r\nlet _myUseDummyServerOnSDKMissing = false;\r\nlet _myUseDummyServerOnError = false;\r\n\r\nexport let CAError = {\r\n    DUMMY_NOT_INITIALIZED: 0,\r\n    CA_SDK_MISSING: 1,\r\n    SUBMIT_SCORE_FAILED: 2,\r\n    GET_LEADERBOARD_FAILED: 3,\r\n    GET_USER_FAILED: 4,\r\n    USER_HAS_NO_SCORE: 5\r\n};\r\n\r\nexport function setUseDummyServerOnSDKMissing(useDummyServer) {\r\n    _myUseDummyServerOnSDKMissing = useDummyServer;\r\n}\r\n\r\nexport function setUseDummyServerOnError(useDummyServer) {\r\n    _myUseDummyServerOnError = useDummyServer;\r\n}\r\n\r\nexport function setDummyServer(dummyServer) {\r\n    _myDummyServer = dummyServer;\r\n}\r\n\r\nexport function isUseDummyServerOnSDKMissing() {\r\n    return _myUseDummyServerOnSDKMissing;\r\n}\r\n\r\nexport function isUseDummyServerOnError() {\r\n    return _myUseDummyServerOnError;\r\n}\r\n\r\nexport function getDummyServer() {\r\n    return _myDummyServer;\r\n}\r\n\r\nexport function isSDKAvailable() {\r\n    return \"casdk\" in window;\r\n}\r\n\r\nexport function getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n    if (isSDKAvailable()) {\r\n        if (!isAroundPlayer) {\r\n            casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                if (result.leaderboard) {\r\n                    if (callbackOnDone) {\r\n                        callbackOnDone(result.leaderboard);\r\n                    }\r\n                } else {\r\n                    if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                        (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get leaderboard failed\";\r\n                        error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                }\r\n            }).catch(function (result) {\r\n                if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                    (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Get leaderboard failed\";\r\n                    error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            getUser(\r\n                function (user) {\r\n                    let userName = user.displayName;\r\n                    casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                        if (result.leaderboard) {\r\n                            let userValid = false;\r\n                            for (let value of result.leaderboard) {\r\n                                if (value.displayName == userName && value.score != 0) {\r\n                                    userValid = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (userValid) {\r\n                                if (callbackOnDone) {\r\n                                    callbackOnDone(result.leaderboard);\r\n                                }\r\n                            } else {\r\n                                if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                                    (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                    getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                } else if (callbackOnError) {\r\n                                    let error = {};\r\n                                    error.reason = \"Searching for around player but the user has not submitted a score yet\";\r\n                                    error.type = CAError.USER_HAS_NO_SCORE;\r\n                                    callbackOnError(error, result);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                                (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                            } else if (callbackOnError) {\r\n                                let error = {};\r\n                                error.reason = \"Get leaderboard failed\";\r\n                                error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                                callbackOnError(error, result);\r\n                            }\r\n                        }\r\n                    }).catch(function (result) {\r\n                        if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                            (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Get leaderboard failed\";\r\n                            error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    });\r\n\r\n                },\r\n                function () {\r\n                    if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                        (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Searching for around player but the user can't be retrieved\";\r\n                        error.type = CAError.GET_USER_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                },\r\n                false);\r\n        }\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n            (_myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n            getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n        } else if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            callbackOnError(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n    } else {\r\n        if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            callbackOnError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n    if (isSDKAvailable()) {\r\n        casdk.submitScore(leaderboardID, scoreToSubmit).then(function (result) {\r\n            if (result.error) {\r\n                if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n                    (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Submit score failed\";\r\n                    error.type = CAError.SUBMIT_SCORE_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            } else {\r\n                callbackOnDone();\r\n            }\r\n        }).catch(function (result) {\r\n            if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n                (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Submit score failed\";\r\n                error.type = CAError.SUBMIT_SCORE_FAILED;\r\n                callbackOnError(error, result);\r\n            }\r\n        });\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n            (_myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n            submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n        } else if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            callbackOnError(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n    } else {\r\n        if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            callbackOnError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUser(callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n    if (isSDKAvailable()) {\r\n        casdk.getUser().then(function (result) {\r\n            if (result.user) {\r\n                if (callbackOnDone) {\r\n                    callbackOnDone(result.user);\r\n                }\r\n            } else {\r\n                if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n                    (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    getUserDummy(callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Get user failed\";\r\n                    error.type = CAError.GET_USER_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            }\r\n        }).catch(function (result) {\r\n            if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n                (_myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                getUserDummy(callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Get user failed\";\r\n                error.type = CAError.GET_USER_FAILED;\r\n                callbackOnError(error, result);\r\n            }\r\n        });\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n            (_myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n            getUserDummy(callbackOnDone, callbackOnError);\r\n        } else if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            callbackOnError(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUserDummy(callbackOnDone, callbackOnError) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.getUser(callbackOnDone, callbackOnError);\r\n    } else {\r\n        if (callbackOnError) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            callbackOnError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport let CAUtils = {\r\n    setUseDummyServerOnSDKMissing,\r\n    setUseDummyServerOnError,\r\n    setDummyServer,\r\n    isUseDummyServerOnSDKMissing,\r\n    isUseDummyServerOnError,\r\n    getDummyServer,\r\n    isSDKAvailable,\r\n    getLeaderboard,\r\n    getLeaderboardDummy,\r\n    submitScore,\r\n    submitScoreDummy,\r\n    getUser,\r\n    getUserDummy\r\n};", "import { CAUtils } from \"./ca_utils\";\r\n\r\nexport class CADummyServer {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"J\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n}", "import { Component, Property, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CADummyServer } from \"./ca_dummy_server\";\r\n\r\nexport class CADisplayLeaderboardComponent extends Component {\r\n    static TypeName = \"pp-ca-display-leaderboard\";\r\n    static Properties = {\r\n        _myLeaderboardID: Property.string(\"\"),\r\n        _myIsLocal: Property.bool(false),\r\n        _myIsAscending: Property.bool(false),\r\n        _myScoresAmount: Property.int(10),\r\n        _myScoreFormat: Property.enum([\"Value\", \"Hours:Minutes:Seconds\", \"Minutes:Seconds\", \"Seconds\", \"Hours:Minutes\", \"Minutes\"], \"Value\"),\r\n        _myPositionAndUsernameSeparator: Property.string(\" - \"),\r\n        _myNumberOfLinesBetweenScores: Property.int(1)\r\n    };\r\n\r\n    start() {\r\n        this._myNamesTextComponent = null;\r\n        this._myScoresTextComponent = null;\r\n\r\n        this._myStarted = false;\r\n\r\n        CAUtils.setDummyServer(new CADummyServer());\r\n        CAUtils.setUseDummyServerOnSDKMissing(true);\r\n        CAUtils.setUseDummyServerOnError(true);\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._myStarted) {\r\n            this._myStarted = true;\r\n\r\n            let namesObject = this.object.pp_getObjectByName(\"Names\");\r\n            let scoresObject = this.object.pp_getObjectByName(\"Scores\");\r\n\r\n            if (namesObject != null && scoresObject != null) {\r\n                this._myNamesTextComponent = namesObject.pp_getComponent(TextComponent);\r\n                this._myScoresTextComponent = scoresObject.pp_getComponent(TextComponent);\r\n            }\r\n\r\n            this.updateLeaderboard();\r\n        }\r\n    }\r\n\r\n    updateLeaderboard() {\r\n        CAUtils.getLeaderboard(this._myLeaderboardID, this._myIsAscending, this._myIsLocal, this._myScoresAmount, this._onLeaderboardRetrieved.bind(this));\r\n    }\r\n\r\n    _onLeaderboardRetrieved(leaderboard) {\r\n        let namesText = \"\";\r\n        let scoresText = \"\";\r\n\r\n        let maxRankDigit = 0;\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            if (rank.toFixed(0).length > maxRankDigit) {\r\n                maxRankDigit = rank.toFixed(0).length;\r\n            }\r\n        }\r\n\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            let fixedRank = rank.toFixed(0);\r\n            while (fixedRank.length < maxRankDigit) {\r\n                fixedRank = \"0\".concat(fixedRank);\r\n            }\r\n\r\n            let newlines = \"\\n\";\r\n            for (let i = 0; i < this._myNumberOfLinesBetweenScores; i++) {\r\n                newlines = newlines + \"\\n\";\r\n            }\r\n\r\n            namesText = namesText.concat(fixedRank, this._myPositionAndUsernameSeparator, value.displayName, newlines);\r\n\r\n            let convertedScore = this._formatScore(value.score);\r\n            scoresText = scoresText.concat(convertedScore, newlines);\r\n        }\r\n\r\n        if (this._myNamesTextComponent != null && this._myScoresTextComponent != null) {\r\n            this._myNamesTextComponent.text = namesText;\r\n            this._myScoresTextComponent.text = scoresText;\r\n        }\r\n    }\r\n\r\n    _formatScore(score) {\r\n        let convertedScore = score.toString();\r\n\r\n        if (this._myScoreFormat == 1) {\r\n            convertedScore = this._formatTime(score, true, true, true);\r\n        } else if (this._myScoreFormat == 2) {\r\n            convertedScore = this._formatTime(score, false, true, true);\r\n        } else if (this._myScoreFormat == 3) {\r\n            convertedScore = this._formatTime(score, false, false, true);\r\n        } else if (this._myScoreFormat == 4) {\r\n            convertedScore = this._formatTime(score, true, true, false);\r\n        } else if (this._myScoreFormat == 5) {\r\n            convertedScore = this._formatTime(score, false, true, false);\r\n        }\r\n\r\n        return convertedScore;\r\n    }\r\n\r\n    _formatTime(score, displayHours, displayMinutes, displaySeconds) {\r\n        let time = Math.floor(score / 1000);\r\n\r\n        let hours = 0;\r\n        if (displayHours) {\r\n            hours = Math.floor(time / 3600);\r\n            time -= hours * 3600;\r\n        }\r\n\r\n        let minutes = 0;\r\n        if (displayMinutes) {\r\n            minutes = Math.floor(time / 60);\r\n            time -= minutes * 60;\r\n        }\r\n\r\n        let seconds = 0;\r\n        if (displaySeconds) {\r\n            seconds = Math.floor(time);\r\n        }\r\n\r\n        let convertedTime = \"\";\r\n\r\n        if (displaySeconds) {\r\n            convertedTime = (seconds.toFixed(0).length < 2 && (displayMinutes || displayHours)) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        }\r\n\r\n        if (displayMinutes) {\r\n            convertedTime = ((minutes.toFixed(0).length < 2 && (displaySeconds || displayHours)) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0)) + (displaySeconds ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        if (displayHours) {\r\n            convertedTime = ((hours.toFixed(0).length < 2 && (displaySeconds || displayMinutes)) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0)) + (displayMinutes ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        return convertedTime;\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent._myLeaderboardID = this._myLeaderboardID;\r\n        clonedComponent._myIsLocal = this._myIsLocal;\r\n        clonedComponent._myPositionAndUsernameSeparator = this._myPositionAndUsernameSeparator;\r\n        clonedComponent._myNumberOfLinesBetweenScores = this._myNumberOfLinesBetweenScores;\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "export class PlayerHeadController {\r\n\r\n    constructor() {\r\n    }\r\n}", "export class PlayerViewOcclusion {\r\n\r\n    constructor() {\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerHeadController } from \"../player_head_controller\";\r\n\r\nexport class PlayerHeadControllerComponent extends Component {\r\n    static TypeName = \"pp-player-head-controller\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHeadController = new PlayerHeadController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadController.update(dt);\r\n    }\r\n\r\n    getPlayerHeadController() {\r\n        return this._myPlayerHeadController;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerViewOcclusion } from \"../player_view_occlusion\";\r\n\r\nexport class PlayerViewOcclusionComponent extends Component {\r\n    static TypeName = \"pp-player-occlusion\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerViewOcclusion = new PlayerViewOcclusion();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerViewOcclusion.update(dt);\r\n    }\r\n\r\n    getPlayerViewOcclusion() {\r\n        return this._myPlayerViewOcclusion;\r\n    }\r\n}", "import { PhysicsLayerFlags } from \"../../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { RaycastHit } from \"../../../../../../cauldron/physics/physics_raycast_data\";\r\nimport { quat_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CollisionCheckParams {\r\n\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n        this.mySplitMovementMaxLength = 0;\r\n        this.mySplitMovementMaxStepsEnabled = false;\r\n        this.mySplitMovementMaxSteps = 0;\r\n        this.mySplitMovementStepEqualLength = false;\r\n        this.mySplitMovementStepEqualLengthMinLength = 0;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = false;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = false;\r\n        this.mySplitMovementStopCallback = null;                        // Signature: callback(collisionRuntimeParams)\r\n        this.mySplitMovementStopReturnPrevious = false;\r\n\r\n        this.myRadius = 0;\r\n        this.myDistanceFromFeetToIgnore = 0;\r\n        this.myDistanceFromHeadToIgnore = 0;\r\n\r\n        this.myPositionOffsetLocal = vec3_create();\r\n        this.myRotationOffsetLocalQuat = quat_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        // Usually the horizontal movement is very small and it could be simply skipped has a check, the horizontal position check will be enough\r\n        // With small I mean that it's very unlikely that in 10 cm of movement in a frame u are going to hit something in between but not in the final position\r\n        // If u feel like the movement is bigger or want to be sure u can always enabled this\r\n        // If the movement is really that big it's probably better to use the mySplitMovementEnabled flag and split the movement check into smaller movements\r\n        this.myHorizontalMovementStepEnabled = false;\r\n        this.myHorizontalMovementStepMaxLength = 0;\r\n\r\n        this.myHorizontalMovementRadialStepAmount = 0;\r\n        this.myHorizontalMovementCheckDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckDiagonalInward = false;\r\n        this.myHorizontalMovementCheckStraight = false;\r\n        this.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this.myHorizontalMovementCheckVerticalStraight = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n\r\n        this.myHalfConeAngle = 0;\r\n        this.myHalfConeSliceAmount = 0;\r\n        this.myCheckConeBorder = false;\r\n        this.myCheckConeRay = false;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = true; // True gives less issues(tm), but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionCheckVerticalDirectionType = 0; // Somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n        // 0: check upward, gives less issues(tm) (hitting a very small step at the end of a slope /-) with a grounded movement (not fly or snapped to ceiling), but may also collide a bit more, resulting in less sliding\r\n        // 1: check downard, gives less issues(tm) with a ceiling-ed movement (not fly or snapped to ground), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n        // 2: check both directions, more expensive and better prevent collision, sliding more, but is more expensive and gives more issues            \r\n        //                                                                                                                                                      ___\r\n        // The issues(tm) means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n        // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n        // 0 avoid this issue for a grounded movement, 2 instead do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n        // The better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope\r\n        // The step that is created \"on the other side\" in fact can easily be ignored thanks to the myDistanceFromFeetToIgnore field\r\n        // If the level is properly created the best solution should be myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false and myHorizontalPositionCheckVerticalDirectionType = 0\r\n\r\n        this.myCheckHorizontalFixedForwardEnabled = false; // This is basically only useful if the cone angle is 180 degrees\r\n        this.myCheckHorizontalFixedForward = vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalPositionCheckEnabled = false;\r\n        this.myFeetRadius = 0;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = null;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = null;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = null;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = false;\r\n        this.myCheckVerticalFixedForward = vec3_create();\r\n        this.myCheckVerticalBothDirection = false;\r\n\r\n        this.mySnapOnGroundEnabled = false;\r\n        this.mySnapOnGroundExtraDistance = 0;\r\n        this.mySnapOnCeilingEnabled = false;\r\n        this.mySnapOnCeilingExtraDistance = 0;\r\n\r\n        this.myGroundPopOutEnabled = false;\r\n        this.myGroundPopOutExtraDistance = 0;\r\n        this.myCeilingPopOutEnabled = false;\r\n        this.myCeilingPopOutExtraDistance = 0;\r\n\r\n        this.myVerticalMovementReduceEnabled = false;\r\n\r\n        this.myGroundCircumferenceAddCenter = false;\r\n        this.myGroundCircumferenceSliceAmount = 0;\r\n        this.myGroundCircumferenceStepAmount = 0;\r\n        this.myGroundCircumferenceRotationPerStep = 0;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = false;\r\n\r\n        this.myCheckHeight = false;\r\n        this.myCheckHeightVerticalMovement = false;\r\n        this.myCheckHeightVerticalPosition = false;\r\n        this.myCheckHeightTopMovement = false;\r\n        this.myCheckHeightTopPosition = false;\r\n        this.myCheckHeightConeOnCollision = false;\r\n        this.myCheckHeightConeOnCollisionKeepHit = false;\r\n        // If true and myCheckHeightConeOnCollision is true, if the cone does not hit the height hit will be restored\r\n        // The fact that the cone does not hit could be due to the fact that it thinks that the collision can be ignored though, sop restoring can be a bit safer but also collide more\r\n\r\n        this.myHeightCheckStepAmountMovement = 0;\r\n        this.myHeightCheckStepAmountPosition = 0;\r\n        this.myCheckVerticalStraight = false;\r\n        this.myCheckVerticalDiagonalRayOutward = false;\r\n        this.myCheckVerticalDiagonalRayInward = false;\r\n        this.myCheckVerticalDiagonalBorderOutward = false;\r\n        this.myCheckVerticalDiagonalBorderInward = false;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this.myCheckVerticalSearchFartherVerticalHit = false; // Somewhat expensive, but can help fix sime sliding issues\r\n\r\n        this.myGroundAngleToIgnore = 0;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = null;\r\n        this.myCeilingAngleToIgnore = 0;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = null;\r\n\r\n        this.myHeight = 0;\r\n\r\n        this.myComputeGroundInfoEnabled = false;\r\n        this.myComputeCeilingInfoEnabled = false;\r\n        this.myDistanceToBeOnGround = 0;\r\n        this.myDistanceToComputeGroundInfo = 0;\r\n        this.myDistanceToBeOnCeiling = 0;\r\n        this.myDistanceToComputeCeilingInfo = 0;\r\n        this.myVerticalFixToBeOnGround = 0;\r\n        this.myVerticalFixToComputeGroundInfo = 0;\r\n        this.myVerticalFixToBeOnCeiling = 0;\r\n        this.myVerticalFixToComputeCeilingInfo = 0;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnGroundIfInsideHit = false;\r\n        this.myIsOnCeilingIfInsideHit = false;\r\n        this.myIsOnGroundMaxSurfaceAngle = null;\r\n        this.myIsOnCeilingMaxSurfaceAngle = null;\r\n        this.myFindGroundDistanceMaxOutsideDistance = 0;\r\n        this.myFindGroundDistanceMaxInsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxInsideDistance = 0;\r\n\r\n        this.myAllowGroundSteepFix = false;\r\n        this.myAllowCeilingSteepFix = false;\r\n        this.myMustStayOnGround = false;\r\n        this.myMustStayOnCeiling = false;\r\n        this.myMustStayOnValidGroundAngleDownhill = false;\r\n        this.myMustStayOnValidCeilingAngleDownhill = false;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = false;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = false;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = false;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = false;\r\n        this.myMustStayBelowGroundAngleDownhill = null;\r\n        this.myMustStayBelowCeilingAngleDownhill = null;\r\n        this.myMovementMustStayOnGroundHitAngle = null;\r\n        this.myMovementMustStayOnCeilingHitAngle = null;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = false;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = false;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = null;\r\n        this.myCheckTransformMustBeOnGroundAngle = null;\r\n        this.myTeleportMustBeOnCeilingAngle = null;\r\n        this.myCheckTransformMustBeOnCeilingAngle = null;\r\n\r\n        this.myTeleportMustBeOnGround = false;\r\n        this.myCheckTransformMustBeOnGround = false;\r\n        this.myTeleportMustBeOnCeiling = false;\r\n        this.myCheckTransformMustBeOnCeiling = false;\r\n\r\n        this.mySlidingEnabled = false;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = false;\r\n        this.mySlidingMaxAttempts = 0;\r\n        this.mySlidingCheckBothDirections = false;       // Expensive, 2 times the check for the whole horizontal movement!\r\n        // This can fix some edge cases in which u can get stuck instead of sliding\r\n        // It basically require that u also add flicker prevention\r\n\r\n        this.mySlidingFlickeringPreventionType = 0;      // Expensive, 2 times the check for the whole horizontal movement!\r\n        // 0: no prevention\r\n        // 1: use previous frame data to understand if the sliding could flicker, this avoid stopping the movement when the flicker would just last some frames, \r\n        //    but also allows a bit of flicker that stabilize after 2-3 frames\r\n        // 2: check when sliding collision angle is more then 90 degrees, prevents most flicker apart those on almost flat surfaces\r\n        // 3: check 2 + check when sliding movement angle is more then 85 degrees, prevents almost all flicker, even on almost flat surfaces\r\n        // 4: check every time\r\n        //\r\n        // From 3 and above you could have that the flicker prevents the movement when u expect it, because it's a more aggressive prevention\r\n        // In case a fluid movement is more important than a bit of flicker from time to time, 1 is a better choice (which is also less expensive than 3 and above)\r\n        // 2 is just a less expensive version of 3 (check less times) but also less precise, allowing more flickering\r\n\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = false;\r\n        // This flag make it so the prevention is done only if it was already sliding, this can lead to a few frames of flicker if u go toward a corner directly\r\n        // but allow the movement to be more fluid, avoiding getting stuck\r\n\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        // If the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // This help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // It's especially useful if combo-ed with mySlidingFlickeringPreventionType == 1, making it a bit less fluid but also less flickering\r\n\r\n        this.mySlidingAdjustSign90Degrees = false;\r\n\r\n        this.myHorizontalBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalObjectsToIgnore = [];\r\n\r\n        this.myVerticalBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalObjectsToIgnore = [];\r\n\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(startMovement, endMovement, currentPosition, currentTransformUp, currentTransformForward, currentHeight, collisionCheckParams, prevCollisionRuntimeParams, outCollisionRuntimeParams, outFixedMovement) -> outFixedMovement\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(collisionRuntimeParams) -> bool\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(collisionRuntimeParams) -> bool\r\n\r\n        this.myDebugActive = false;\r\n\r\n        this.myDebugHorizontalMovementActive = false;\r\n        this.myDebugHorizontalPositionActive = false;\r\n        this.myDebugVerticalMovementActive = false;\r\n        this.myDebugVerticalPositionActive = false;\r\n        this.myDebugSlidingActive = false;\r\n        this.myDebugGroundInfoActive = false;\r\n        this.myDebugCeilingInfoActive = false;\r\n        this.myDebugRuntimeParamsActive = false;\r\n        this.myDebugMovementActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n        this.mySplitMovementMaxLength = other.mySplitMovementMaxLength;\r\n        this.mySplitMovementMaxStepsEnabled = other.mySplitMovementMaxStepsEnabled;\r\n        this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n        this.mySplitMovementStepEqualLength = other.mySplitMovementStepEqualLength;\r\n        this.mySplitMovementStepEqualLengthMinLength = other.mySplitMovementStepEqualLengthMinLength;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = other.mySplitMovementStopWhenHorizontalMovementCanceled;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = other.mySplitMovementStopWhenVerticalMovementCanceled;\r\n        this.mySplitMovementStopCallback = other.mySplitMovementStopCallback;\r\n        this.mySplitMovementStopReturnPrevious = other.mySplitMovementStopReturnPrevious;\r\n\r\n        this.myRadius = other.myRadius;\r\n        this.myDistanceFromFeetToIgnore = other.myDistanceFromFeetToIgnore;\r\n        this.myDistanceFromHeadToIgnore = other.myDistanceFromHeadToIgnore;\r\n\r\n        this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n        this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n        this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n        this.myHorizontalMovementStepEnabled = other.myHorizontalMovementStepEnabled;\r\n        this.myHorizontalMovementStepMaxLength = other.myHorizontalMovementStepMaxLength;\r\n        this.myHorizontalMovementRadialStepAmount = other.myHorizontalMovementRadialStepAmount;\r\n        this.myHorizontalMovementCheckDiagonalOutward = other.myHorizontalMovementCheckDiagonalOutward;\r\n        this.myHorizontalMovementCheckDiagonalInward = other.myHorizontalMovementCheckDiagonalInward;\r\n        this.myHorizontalMovementCheckStraight = other.myHorizontalMovementCheckStraight;\r\n        this.myHorizontalMovementCheckHorizontalBorder = other.myHorizontalMovementCheckHorizontalBorder;\r\n        this.myHorizontalMovementCheckVerticalStraight = other.myHorizontalMovementCheckVerticalStraight;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = other.myHorizontalMovementCheckVerticalDiagonalUpwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = other.myHorizontalMovementCheckVerticalDiagonalUpwardInward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = other.myHorizontalMovementCheckVerticalDiagonalDownwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = other.myHorizontalMovementCheckVerticalDiagonalDownwardInward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = other.myHorizontalMovementCheckVerticalStraightDiagonalUpward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = other.myHorizontalMovementCheckVerticalStraightDiagonalDownward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n        this.myHalfConeAngle = other.myHalfConeAngle;\r\n        this.myHalfConeSliceAmount = other.myHalfConeSliceAmount;\r\n        this.myCheckConeBorder = other.myCheckConeBorder;\r\n        this.myCheckConeRay = other.myCheckConeRay;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = other.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision;\r\n        this.myHorizontalPositionCheckVerticalDirectionType = other.myHorizontalPositionCheckVerticalDirectionType;\r\n\r\n        this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n        this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n        this.myFeetRadius = other.myFeetRadius;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = other.myAdjustVerticalMovementWithGroundAngleDownhill;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = other.myAdjustVerticalMovementWithGroundAngleUphill;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = other.myAdjustHorizontalMovementWithGroundAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = other.myAdjustVerticalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = other.myAdjustVerticalMovementWithCeilingAngleUphill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = other.myAdjustHorizontalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = other.myCheckVerticalFixedForwardEnabled;\r\n        this.myCheckVerticalFixedForward.vec3_copy(other.myCheckVerticalFixedForward);\r\n        this.myCheckVerticalBothDirection = other.myCheckVerticalBothDirection;\r\n\r\n        this.mySnapOnGroundEnabled = other.mySnapOnGroundEnabled;\r\n        this.mySnapOnGroundExtraDistance = other.mySnapOnGroundExtraDistance;\r\n        this.mySnapOnCeilingEnabled = other.mySnapOnCeilingEnabled;\r\n        this.mySnapOnCeilingExtraDistance = other.mySnapOnCeilingExtraDistance;\r\n\r\n        this.myGroundPopOutEnabled = other.myGroundPopOutEnabled;\r\n        this.myGroundPopOutExtraDistance = other.myGroundPopOutExtraDistance;\r\n        this.myCeilingPopOutEnabled = other.myCeilingPopOutEnabled;\r\n        this.myCeilingPopOutExtraDistance = other.myCeilingPopOutExtraDistance;\r\n\r\n        this.myVerticalMovementReduceEnabled = other.myVerticalMovementReduceEnabled;\r\n\r\n        this.myGroundCircumferenceAddCenter = other.myGroundCircumferenceAddCenter;\r\n        this.myGroundCircumferenceSliceAmount = other.myGroundCircumferenceSliceAmount;\r\n        this.myGroundCircumferenceStepAmount = other.myGroundCircumferenceStepAmount;\r\n        this.myGroundCircumferenceRotationPerStep = other.myGroundCircumferenceRotationPerStep;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = other.myVerticalAllowHitInsideCollisionIfOneOk;\r\n\r\n        this.myCheckHeight = other.myCheckHeight;\r\n        this.myCheckHeightVerticalMovement = other.myCheckHeightVerticalMovement;\r\n        this.myCheckHeightVerticalPosition = other.myCheckHeightVerticalPosition;\r\n        this.myCheckHeightTopMovement = other.myCheckHeightTopMovement;\r\n        this.myCheckHeightTopPosition = other.myCheckHeightTopPosition;\r\n        this.myCheckHeightConeOnCollision = other.myCheckHeightConeOnCollision;\r\n        this.myCheckHeightConeOnCollisionKeepHit = other.myCheckHeightConeOnCollisionKeepHit;\r\n        this.myHeightCheckStepAmountMovement = other.myHeightCheckStepAmountMovement;\r\n        this.myHeightCheckStepAmountPosition = other.myHeightCheckStepAmountPosition;\r\n        this.myCheckVerticalStraight = other.myCheckVerticalStraight;\r\n        this.myCheckVerticalDiagonalRayOutward = other.myCheckVerticalDiagonalRayOutward;\r\n        this.myCheckVerticalDiagonalRayInward = other.myCheckVerticalDiagonalRayInward;\r\n        this.myCheckVerticalDiagonalBorderOutward = other.myCheckVerticalDiagonalBorderOutward;\r\n        this.myCheckVerticalDiagonalBorderInward = other.myCheckVerticalDiagonalBorderInward;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = other.myCheckVerticalDiagonalBorderRayOutward;\r\n        this.myCheckVerticalDiagonalBorderRayInward = other.myCheckVerticalDiagonalBorderRayInward;\r\n        this.myCheckVerticalSearchFartherVerticalHit = other.myCheckVerticalSearchFartherVerticalHit;\r\n\r\n        this.myGroundAngleToIgnore = other.myGroundAngleToIgnore;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = other.myGroundAngleToIgnoreWithPerceivedAngle;\r\n        this.myCeilingAngleToIgnore = other.myCeilingAngleToIgnore;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = other.myCeilingAngleToIgnoreWithPerceivedAngle;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = other.myHorizontalMovementGroundAngleIgnoreHeight;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = other.myHorizontalMovementCeilingAngleIgnoreHeight;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = other.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = other.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = other.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = other.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n\r\n        this.myHeight = other.myHeight;\r\n\r\n        this.myComputeGroundInfoEnabled = other.myComputeGroundInfoEnabled;\r\n        this.myComputeCeilingInfoEnabled = other.myComputeCeilingInfoEnabled;\r\n        this.myDistanceToBeOnGround = other.myDistanceToBeOnGround;\r\n        this.myDistanceToComputeGroundInfo = other.myDistanceToComputeGroundInfo;\r\n        this.myDistanceToBeOnCeiling = other.myDistanceToBeOnCeiling;\r\n        this.myDistanceToComputeCeilingInfo = other.myDistanceToComputeCeilingInfo;\r\n        this.myVerticalFixToBeOnGround = other.myVerticalFixToBeOnGround;\r\n        this.myVerticalFixToComputeGroundInfo = other.myVerticalFixToComputeGroundInfo;\r\n        this.myVerticalFixToBeOnCeiling = other.myVerticalFixToBeOnCeiling;\r\n        this.myVerticalFixToComputeCeilingInfo = other.myVerticalFixToComputeCeilingInfo;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = other.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = other.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        this.myIsOnGroundIfInsideHit = other.myIsOnGroundIfInsideHit;\r\n        this.myIsOnCeilingIfInsideHit = other.myIsOnCeilingIfInsideHit;\r\n        this.myIsOnGroundMaxSurfaceAngle = other.myIsOnGroundMaxSurfaceAngle;\r\n        this.myIsOnCeilingMaxSurfaceAngle = other.myIsOnCeilingMaxSurfaceAngle;\r\n        this.myFindGroundDistanceMaxOutsideDistance = other.myFindGroundDistanceMaxOutsideDistance;\r\n        this.myFindGroundDistanceMaxInsideDistance = other.myFindGroundDistanceMaxInsideDistance;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = other.myFindCeilingDistanceMaxOutsideDistance;\r\n        this.myFindCeilingDistanceMaxInsideDistance = other.myFindCeilingDistanceMaxInsideDistance;\r\n\r\n        this.myAllowGroundSteepFix = other.myAllowGroundSteepFix;\r\n        this.myAllowCeilingSteepFix = other.myAllowCeilingSteepFix;\r\n        this.myMustStayOnGround = other.myMustStayOnGround;\r\n        this.myMustStayOnCeiling = other.myMustStayOnCeiling;\r\n        this.myMustStayOnValidGroundAngleDownhill = other.myMustStayOnValidGroundAngleDownhill;\r\n        this.myMustStayOnValidCeilingAngleDownhill = other.myMustStayOnValidCeilingAngleDownhill;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = other.myRegatherGroundInfoOnSurfaceCheckFail;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = other.myRegatherCeilingInfoOnSurfaceCheckFail;\r\n        this.myMustStayBelowGroundAngleDownhill = other.myMustStayBelowGroundAngleDownhill;\r\n        this.myMustStayBelowCeilingAngleDownhill = other.myMustStayBelowCeilingAngleDownhill;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = other.myMustStayBelowIgnorableGroundAngleDownhill;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = other.myMustStayBelowIgnorableCeilingAngleDownhill;\r\n        this.myMovementMustStayOnGroundHitAngle = other.myMovementMustStayOnGroundHitAngle;\r\n        this.myMovementMustStayOnCeilingHitAngle = other.myMovementMustStayOnCeilingHitAngle;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = other.myTeleportMustBeOnIgnorableGroundAngle;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = other.myCheckTransformMustBeOnIgnorableGroundAngle;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = other.myTeleportMustBeOnIgnorableCeilingAngle;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = other.myCheckTransformMustBeOnIgnorableCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = other.myTeleportMustBeOnGroundAngle;\r\n        this.myCheckTransformMustBeOnGroundAngle = other.myCheckTransformMustBeOnGroundAngle;\r\n        this.myTeleportMustBeOnCeilingAngle = other.myTeleportMustBeOnCeilingAngle;\r\n        this.myCheckTransformMustBeOnCeilingAngle = other.myCheckTransformMustBeOnCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGround = other.myTeleportMustBeOnGround;\r\n        this.myCheckTransformMustBeOnGround = other.myCheckTransformMustBeOnGround;\r\n        this.myTeleportMustBeOnCeiling = other.myTeleportMustBeOnCeiling;\r\n        this.myCheckTransformMustBeOnCeiling = other.myCheckTransformMustBeOnCeiling;\r\n\r\n        this.mySlidingEnabled = other.mySlidingEnabled;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = other.mySlidingHorizontalMovementCheckBetterNormal;\r\n        this.mySlidingMaxAttempts = other.mySlidingMaxAttempts;\r\n        this.mySlidingCheckBothDirections = other.mySlidingCheckBothDirections;\r\n        this.mySlidingFlickeringPreventionType = other.mySlidingFlickeringPreventionType;\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = other.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n\r\n        this.mySlidingAdjustSign90Degrees = other.mySlidingAdjustSign90Degrees;\r\n\r\n        this.myHorizontalBlockLayerFlags.copy(other.myHorizontalBlockLayerFlags);\r\n        this.myHorizontalObjectsToIgnore.pp_copy(other.myHorizontalObjectsToIgnore);\r\n\r\n        this.myVerticalBlockLayerFlags.copy(other.myVerticalBlockLayerFlags);\r\n        this.myVerticalObjectsToIgnore.pp_copy(other.myVerticalObjectsToIgnore);\r\n\r\n        this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n        this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n        this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n\r\n        this.myDebugActive = other.myDebugActive;\r\n\r\n        this.myDebugHorizontalMovementActive = other.myDebugHorizontalMovementActive;\r\n        this.myDebugHorizontalPositionActive = other.myDebugHorizontalPositionActive;\r\n        this.myDebugVerticalMovementActive = other.myDebugVerticalMovementActive;\r\n        this.myDebugVerticalPositionActive = other.myDebugVerticalPositionActive;\r\n        this.myDebugSlidingActive = other.myDebugSlidingActive;\r\n        this.myDebugGroundInfoActive = other.myDebugGroundInfoActive;\r\n        this.myDebugCeilingInfoActive = other.myDebugCeilingInfoActive;\r\n        this.myDebugRuntimeParamsActive = other.myDebugRuntimeParamsActive;\r\n        this.myDebugMovementActive = other.myDebugMovementActive;\r\n    }\r\n}\r\n\r\nexport class CollisionRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myOriginalPosition = vec3_create();\r\n        this.myNewPosition = vec3_create();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward = vec3_create();\r\n        this.myOriginalUp = vec3_create();\r\n\r\n        this.myOriginalMovement = vec3_create();\r\n        this.myFixedMovement = vec3_create();\r\n\r\n        this.myLastValidOriginalHorizontalMovement = vec3_create();\r\n        this.myLastValidOriginalVerticalMovement = vec3_create();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement = vec3_create();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement = vec3_create();\r\n        this.myLastValidEndHorizontalMovement = vec3_create();\r\n        this.myLastValidEndVerticalMovement = vec3_create();\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal = vec3_create();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal = vec3_create();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal = vec3_create();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal = vec3_create();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false; // Could add HorizontalMovementCanceledReason\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit = new RaycastHit();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit = new RaycastHit();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit = new RaycastHit();\r\n        this.mySlidingWallNormal = new vec3_create();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement = vec3_create();\r\n\r\n        this.myOriginalTeleportPosition = vec3_create();\r\n        this.myFixedTeleportPosition = vec3_create();\r\n\r\n        this.myOriginalPositionCheckPosition = vec3_create();\r\n        this.myFixedPositionCheckPosition = vec3_create();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false; // Could be a single bool but not sure if there should be an option and don't want to create an enum for now\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked = vec3_create();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    reset() {\r\n        this.myOriginalPosition.vec3_zero();\r\n        this.myNewPosition.vec3_zero();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward.vec3_zero();\r\n        this.myOriginalUp.vec3_zero();\r\n\r\n        this.myOriginalMovement.vec3_zero();\r\n        this.myFixedMovement.vec3_zero();\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_zero();\r\n        this.myLastValidOriginalVerticalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_zero();\r\n        this.myLastValidEndHorizontalMovement.vec3_zero();\r\n        this.myLastValidEndVerticalMovement.vec3_zero();\r\n\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal.vec3_zero();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal.vec3_zero();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal.vec3_zero();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal.vec3_zero();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false;\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit.reset();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit.reset();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit.reset();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_zero();\r\n        this.mySlidingWallNormal.vec3_zero();\r\n\r\n        this.myOriginalTeleportPosition.vec3_zero();\r\n        this.myFixedTeleportPosition.vec3_zero();\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_zero();\r\n        this.myFixedPositionCheckPosition.vec3_zero();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false;\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked.vec3_zero();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myOriginalPosition.vec3_copy(other.myOriginalPosition);\r\n        this.myNewPosition.vec3_copy(other.myNewPosition);\r\n\r\n        this.myOriginalHeight = other.myOriginalHeight;\r\n\r\n        this.myOriginalForward.vec3_copy(other.myOriginalForward);\r\n        this.myOriginalUp.vec3_copy(other.myOriginalUp);\r\n\r\n        this.myOriginalMovement.vec3_copy(other.myOriginalMovement);\r\n        this.myFixedMovement.vec3_copy(other.myFixedMovement);\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_copy(other.myLastValidOriginalHorizontalMovement);\r\n        this.myLastValidOriginalVerticalMovement.vec3_copy(other.myLastValidOriginalVerticalMovement);\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(other.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(other.myLastValidSurfaceAdjustedVerticalMovement);\r\n        this.myLastValidEndHorizontalMovement.vec3_copy(other.myLastValidEndHorizontalMovement);\r\n        this.myLastValidEndVerticalMovement.vec3_copy(other.myLastValidEndVerticalMovement);\r\n\r\n        this.myIsOnGround = other.myIsOnGround;\r\n        this.myGroundAngle = other.myGroundAngle;\r\n        this.myGroundPerceivedAngle = other.myGroundPerceivedAngle;\r\n        this.myGroundNormal.vec3_copy(other.myGroundNormal);\r\n        this.myGroundHitMaxAngle = other.myGroundHitMaxAngle;\r\n        this.myGroundHitMaxNormal.vec3_copy(other.myGroundHitMaxNormal);\r\n        this.myGroundDistance = other.myGroundDistance;\r\n        this.myGroundIsBaseInsideCollision = other.myGroundIsBaseInsideCollision;\r\n\r\n        this.myIsOnCeiling = other.myIsOnCeiling;\r\n        this.myCeilingAngle = other.myCeilingAngle;\r\n        this.myCeilingPerceivedAngle = other.myCeilingPerceivedAngle;\r\n        this.myCeilingNormal.vec3_copy(other.myCeilingNormal);\r\n        this.myCeilingHitMaxAngle = other.myCeilingHitMaxAngle;\r\n        this.myCeilingHitMaxNormal.vec3_copy(other.myCeilingHitMaxNormal);\r\n        this.myCeilingDistance = other.myCeilingDistance;\r\n        this.myCeilingIsBaseInsideCollision = other.myCeilingIsBaseInsideCollision;\r\n\r\n        this.myHorizontalMovementCanceled = other.myHorizontalMovementCanceled;\r\n        this.myIsCollidingHorizontally = other.myIsCollidingHorizontally;\r\n        this.myHorizontalCollisionHit.copy(other.myHorizontalCollisionHit);\r\n\r\n        this.myVerticalMovementCanceled = other.myVerticalMovementCanceled;\r\n        this.myIsCollidingVertically = other.myIsCollidingVertically;\r\n        this.myVerticalCollisionHit.copy(other.myVerticalCollisionHit);\r\n\r\n        this.myHasSnappedOnGround = other.myHasSnappedOnGround;\r\n        this.myHasSnappedOnCeiling = other.myHasSnappedOnCeiling;\r\n        this.myHasPoppedOutGround = other.myHasPoppedOutGround;\r\n        this.myHasPoppedOutCeiling = other.myHasPoppedOutCeiling;\r\n        this.myHasReducedVerticalMovement = other.myHasReducedVerticalMovement;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n        this.myIsSliding = other.myIsSliding;\r\n        this.myIsSlidingIntoOppositeDirection = other.myIsSlidingIntoOppositeDirection;\r\n        this.myIsSlidingFlickerPrevented = other.myIsSlidingFlickerPrevented;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        this.mySlidingMovementAngle = other.mySlidingMovementAngle;\r\n        this.mySlidingCollisionAngle = other.mySlidingCollisionAngle;\r\n        this.mySlidingCollisionHit.copy(other.mySlidingCollisionHit);\r\n        this.mySliding90DegreesSign = other.mySliding90DegreesSign;\r\n        this.mySlidingRecompute90DegreesSign = other.mySlidingRecompute90DegreesSign;\r\n        this.myLastValidIsSliding = other.myLastValidIsSliding;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_copy(other.mySlidingPreviousHorizontalMovement);\r\n        this.mySlidingWallNormal.vec3_copy(other.mySlidingWallNormal);\r\n\r\n        this.myOriginalTeleportPosition.vec3_copy(other.myOriginalTeleportPosition);\r\n        this.myFixedTeleportPosition.vec3_copy(other.myFixedTeleportPosition);\r\n        this.myTeleportCanceled = other.myTeleportCanceled;\r\n\r\n        this.myIsPositionOk = other.myIsPositionOk;\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_copy(other.myOriginalPositionCheckPosition);\r\n        this.myFixedPositionCheckPosition.vec3_copy(other.myFixedPositionCheckPosition);\r\n\r\n        this.myIsTeleport = other.myIsTeleport;\r\n        this.myIsMove = other.myIsMove;\r\n        this.myIsPositionCheck = other.myIsPositionCheck;\r\n        this.myIsPositionCheckAllowAdjustments = other.myIsPositionCheckAllowAdjustments;\r\n\r\n        this.mySplitMovementSteps = other.mySplitMovementSteps;\r\n        this.mySplitMovementStepsPerformed = other.mySplitMovementStepsPerformed;\r\n        this.mySplitMovementStop = other.mySplitMovementStop;\r\n        this.mySplitMovementMovementChecked.vec3_copy(other.mySplitMovementMovementChecked);\r\n\r\n        this.myRealIsOnGround = other.myRealIsOnGround;\r\n        this.myRealIsOnCeiling = other.myRealIsOnCeiling;\r\n    }\r\n}", "import { RaycastHit, RaycastResults, RaycastSetup } from \"../../../../../../cauldron/physics/physics_raycast_data\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { getDebugVisualManager } from \"../../../../../../debug/debug_globals\";\r\nimport { vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../../cauldron/wl/engine_globals\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"./collision_params\";\r\n\r\nexport function generate360TeleportParamsFromMovementParams(movementParams, outTeleportParams = new CollisionCheckParams()) {\r\n    outTeleportParams.copy(movementParams);\r\n\r\n    outTeleportParams.myHalfConeAngle = 180;\r\n    outTeleportParams.myHalfConeSliceAmount = Math.round((outTeleportParams.myHalfConeAngle / movementParams.myHalfConeAngle) * movementParams.myHalfConeSliceAmount);\r\n\r\n    outTeleportParams.myCheckHorizontalFixedForwardEnabled = true;\r\n    outTeleportParams.myCheckHorizontalFixedForward = vec3_create(0, 0, 1);\r\n\r\n    return outTeleportParams;\r\n}\r\n\r\nexport let CollisionCheckUtils = {\r\n    generate360TeleportParamsFromMovementParams\r\n};\r\n\r\nexport class CollisionCheck {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myRaycastSetup = new RaycastSetup(this._myEngine.physics);\r\n        this._myRaycastResult = new RaycastResults();\r\n        this._myFixRaycastResult = new RaycastResults();\r\n\r\n        this._myBackupRaycastHit = new RaycastHit();\r\n\r\n        this._myPrevCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._mySlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myInternalSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOnVerticalCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTotalRaycasts = 0;\r\n        this._myTotalRaycastsMax = 0;\r\n    }\r\n\r\n    move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    // #TODO Add teleport position/transform and return originalteleportransform\r\n    // instead of position old transform / new transform\r\n    teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    _debugMovement(movement, fixedMovement, feetPosition, up, collisionCheckParams) {\r\n        let originalHorizontalMovement = movement.vec3_removeComponentAlongAxis(up);\r\n\r\n        let horizontalMovement = fixedMovement.vec3_removeComponentAlongAxis(up);\r\n        let verticalMovement = fixedMovement.vec3_componentAlongAxis(up);\r\n\r\n        let feetPositionPlusOffset = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.001));\r\n\r\n        if (!originalHorizontalMovement.vec3_isZero()) {\r\n            originalHorizontalMovement.vec3_normalize(originalHorizontalMovement);\r\n\r\n            getDebugVisualManager(this._myEngine).drawArrow(0, feetPositionPlusOffset, originalHorizontalMovement, 0.2, vec4_create(0.5, 0.5, 1, 1));\r\n        }\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            horizontalMovement.vec3_normalize(horizontalMovement);\r\n\r\n            getDebugVisualManager(this._myEngine).drawArrow(0, feetPositionPlusOffset, horizontalMovement, 0.2, vec4_create(0, 0, 1, 1));\r\n        }\r\n\r\n        if (!verticalMovement.vec3_isZero()) {\r\n            verticalMovement.vec3_normalize(verticalMovement);\r\n\r\n            getDebugVisualManager(this._myEngine).drawArrow(0, feetPosition, verticalMovement, 0.2, vec4_create(0, 0, 1, 1));\r\n        }\r\n    }\r\n\r\n    _debugRuntimeParams(collisionRuntimeParams) {\r\n        if (collisionRuntimeParams.myHorizontalCollisionHit.isValid()) {\r\n            getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.mySlidingCollisionHit.isValid()) {\r\n            getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myPosition,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.myVerticalCollisionHit.isValid()) {\r\n            getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n    }\r\n\r\n    _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        // Implemented outside class definition\r\n    }\r\n};\r\n\r\nCollisionCheck.prototype._raycastAndDebug = function () {\r\n    let tempRaycastResult = new RaycastResults();\r\n    return function _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n        this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n        this._myRaycastSetup.myDistance = distance;\r\n\r\n        if (isHorizontal) {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myHorizontalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myHorizontalObjectsToIgnore;\r\n        } else {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myVerticalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myVerticalObjectsToIgnore;\r\n        }\r\n\r\n        this._myRaycastSetup.myIgnoreHitsInsideCollision = ignoreHitsInsideCollision;\r\n\r\n        let raycastResult = null;\r\n        if (true) {\r\n            raycastResult = PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResult);\r\n        } else {\r\n            // Quick debug to remove raycasts and/or let all raycasts fail\r\n\r\n            let raycastAlways = false;\r\n            if (raycastAlways || !this._myRaycastResult.isColliding()) {\r\n                raycastResult = PhysicsUtils.raycast(this._myRaycastSetup, tempRaycastResult);\r\n            }\r\n\r\n            if (!this._myRaycastResult.isColliding() && tempRaycastResult.isColliding()) {\r\n                this._myRaycastResult.copy(tempRaycastResult);\r\n            }\r\n\r\n            raycastResult = this._myRaycastResult;\r\n        }\r\n\r\n\r\n        this._myTotalRaycasts++;\r\n        //raycastResult.myHits = [];\r\n\r\n        if (this._myDebugActive) {\r\n            getDebugVisualManager(this._myEngine).drawRaycast(0, raycastResult);\r\n        }\r\n\r\n        return raycastResult;\r\n    };\r\n}();", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\nimport { CollisionRuntimeParams } from \"./collision_params\";\r\n\r\nCollisionCheck.prototype._move = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let horizontalMovement = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n\r\n    let movementStep = vec3_create();\r\n    let currentMovementStep = vec3_create();\r\n    let movementChecked = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let fixedMovementStep = vec3_create();\r\n\r\n    let previousCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let previousFixedMovement = vec3_create();\r\n    let previousMovementChecked = vec3_create();\r\n    return function _move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        //return vec3_create();\r\n        //movement = vec3_create(0, 0, -1);\r\n\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        //feetPosition = feetPosition.vec3_add(horizontalMovement.vec3_normalize().vec3_scale(0.5));\r\n        //height = height / 2;\r\n        //horizontalMovement.vec3_normalize(horizontalMovement).vec3_scale(0.3, horizontalMovement); movement = horizontalMovement.vec3_add(verticalMovement);\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (!movement.vec3_isZero(0.00001) && collisionCheckParams.mySplitMovementEnabled) {\r\n            let equalStepLength = movement.vec3_length() / collisionCheckParams.mySplitMovementMaxSteps;\r\n            if (!collisionCheckParams.mySplitMovementStepEqualLength || equalStepLength < collisionCheckParams.mySplitMovementStepEqualLengthMinLength) {\r\n                let maxLength = collisionCheckParams.mySplitMovementStepEqualLength ? collisionCheckParams.mySplitMovementStepEqualLengthMinLength : collisionCheckParams.mySplitMovementMaxLength;\r\n                movementStepAmount = Math.ceil(movement.vec3_length() / maxLength);\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                    movementStepAmount = (collisionCheckParams.mySplitMovementMaxStepsEnabled) ? Math.min(movementStepAmount, collisionCheckParams.mySplitMovementMaxSteps) : movementStepAmount;\r\n                }\r\n\r\n                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                if (movementStepAmount == 1) {\r\n                    movementStep.vec3_copy(movement);\r\n                }\r\n            } else {\r\n                movementStepAmount = collisionCheckParams.mySplitMovementMaxSteps;\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                }\r\n            }\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        movementChecked.vec3_zero();\r\n\r\n        previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        previousFixedMovement.vec3_copy(fixedMovement);\r\n        previousMovementChecked.vec3_copy(movementChecked);\r\n\r\n        let stepsPerformed = 0;\r\n        let splitMovementStop = false;\r\n        for (let i = 0; i < movementStepAmount; i++) {\r\n            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                currentMovementStep.vec3_copy(movementStep);\r\n            } else {\r\n                currentMovementStep = movement.vec3_sub(movementChecked, currentMovementStep);\r\n            }\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n            fixedMovementStep.vec3_zero();\r\n            fixedMovementStep = this._moveStep(currentMovementStep, newFeetPosition, transformUp, transformForward, height, true, collisionCheckParams, collisionRuntimeParams, fixedMovementStep);\r\n            fixedMovement.vec3_add(fixedMovementStep, fixedMovement);\r\n\r\n            movementChecked = movementChecked.vec3_add(movementStep, movementChecked);\r\n\r\n            stepsPerformed = i + 1;\r\n\r\n            if ((collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled) ||\r\n                (collisionRuntimeParams.myHorizontalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled) ||\r\n                (collisionRuntimeParams.myVerticalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled) ||\r\n                (collisionCheckParams.mySplitMovementStopCallback != null && collisionCheckParams.mySplitMovementStopCallback(collisionRuntimeParams))) {\r\n                if (collisionCheckParams.mySplitMovementStopReturnPrevious) {\r\n                    collisionRuntimeParams.copy(previousCollisionRuntimeParams);\r\n                    fixedMovement.vec3_copy(previousFixedMovement);\r\n                    movementChecked.vec3_copy(previousMovementChecked);\r\n                    stepsPerformed -= 1;\r\n                }\r\n\r\n                splitMovementStop = true;\r\n                break;\r\n            }\r\n\r\n            previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            previousFixedMovement.vec3_copy(fixedMovement);\r\n            previousMovementChecked.vec3_copy(movementChecked);\r\n        }\r\n\r\n        //fixedMovement.vec3_zero();\r\n\r\n        collisionRuntimeParams.mySplitMovementSteps = movementStepAmount;\r\n        collisionRuntimeParams.mySplitMovementStepsPerformed = stepsPerformed;\r\n        collisionRuntimeParams.mySplitMovementStop = splitMovementStop;\r\n        collisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(movementChecked);\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        //console.error(collisionRuntimeParams.myOriginalPosition.vec3_sub(feetPosition)[1].toFixed(3));\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalMovement.vec3_copy(movement);\r\n        collisionRuntimeParams.myFixedMovement.vec3_copy(fixedMovement);\r\n\r\n        collisionRuntimeParams.myNewPosition = collisionRuntimeParams.myOriginalPosition.vec3_add(collisionRuntimeParams.myFixedMovement, collisionRuntimeParams.myNewPosition);\r\n\r\n        collisionRuntimeParams.myIsMove = true;\r\n\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n\r\n        //this._myTotalRaycastsMax = Math.max(this._myTotalRaycasts, this._myTotalRaycastsMax);\r\n        //console.error(this._myTotalRaycastsMax);\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._moveStep = function () {\r\n    let horizontalMovement = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let fixedHorizontalMovement = vec3_create();\r\n    let fixedVerticalMovement = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    let forwardForHorizontal = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let surfaceAdjustedVerticalMovement = vec3_create();\r\n    let surfaceAdjustedHorizontalMovement = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _moveStep(movement, feetPosition, transformUp, transformForward, height, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        // #TODO Refactor and split horizontal check and vertical check into: hMovement + vMovement + hPosition + vPosition?\r\n        // Will make the sliding heavier, if I slide repeating all the 4 steps instead of 2 as now, but would be more correct\r\n\r\n        // #TODO When on high slopes where u are not allowed to move the check does not manage to slide\r\n\r\n        // #TODO When moving upward on the edge of a slope, the edge can be detected as a wall and prevent movement, while it should just keep moving\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        if (horizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalMovement.vec3_zero();\r\n        }\r\n\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        if (verticalMovement.vec3_isZero(0.000001)) {\r\n            verticalMovement.vec3_zero();\r\n        }\r\n\r\n        if (horizontalMovement.vec3_isZero()) {\r\n            //return vec3_create();\r\n        }\r\n\r\n        //this._myTotalRaycasts = 0;\r\n        //collisionCheckParams.myDebugActive = true;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        surfaceAdjustedHorizontalMovement = this._adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedHorizontalMovement);\r\n        if (surfaceAdjustedHorizontalMovement.vec3_isZero(0.00001)) {\r\n            surfaceAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        this._syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n        {\r\n            forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = horizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(transformForward);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForHorizontal.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForHorizontal.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n                forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n                if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                    forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n                }\r\n            }\r\n\r\n            fixedHorizontalMovement.vec3_zero();\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                fixedHorizontalMovement = this._horizontalCheck(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n                //console.error(this._myTotalRaycasts );\r\n                //collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                //collisionRuntimeParams.myHorizontalCollisionHit.myNormal = vec3_create(0, 0, 1);\r\n                if (collisionCheckParams.mySlidingEnabled && collisionRuntimeParams.myIsCollidingHorizontally && this._isSlidingNormalValid(surfaceAdjustedHorizontalMovement, transformUp, collisionRuntimeParams)) {\r\n                    fixedHorizontalMovement = this._horizontalSlide(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, fixedHorizontalMovement);\r\n                } else {\r\n                    //console.error(\"no slide\");\r\n                }\r\n            }\r\n\r\n            if (fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                fixedHorizontalMovement.vec3_zero();\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && fixedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            }\r\n        }\r\n\r\n        {\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (fixedHorizontalMovement.vec3_isZero()) {\r\n                    if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else if (!horizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(transformForward);\r\n                    }\r\n                } else {\r\n                    forwardForVertical = fixedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            //console.error(this._myTotalRaycasts );\r\n            //collisionCheckParams.myDebugActive = false;\r\n\r\n            surfaceAdjustedVerticalMovement = this._adjustVerticalMovementWithSurface(fixedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedVerticalMovement);\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n            let originalMovementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(transformUp), 0);\r\n\r\n            fixedVerticalMovement.vec3_zero();\r\n            fixedVerticalMovement = this._verticalCheck(surfaceAdjustedVerticalMovement, originalMovementSign, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n\r\n            if (fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                fixedVerticalMovement.vec3_zero();\r\n            }\r\n        }\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n        outFixedMovement.vec3_zero();\r\n        if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n            outFixedMovement = fixedHorizontalMovement.vec3_add(fixedVerticalMovement, outFixedMovement);\r\n        } else {\r\n            collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n            fixedHorizontalMovement.vec3_zero();\r\n            fixedVerticalMovement.vec3_zero();\r\n\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(transformForward);\r\n                }\r\n            }\r\n        }\r\n\r\n        newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        if (!fixedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = fixedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!horizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && !collisionRuntimeParams.myHorizontalMovementCanceled) {\r\n            let surfaceCheckOk = this._postSurfaceCheck(fixedHorizontalMovement, fixedVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n            if (!surfaceCheckOk) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n                collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n                fixedHorizontalMovement.vec3_zero();\r\n                fixedVerticalMovement.vec3_zero();\r\n                outFixedMovement.vec3_zero();\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else {\r\n                    forwardForPerceivedAngle.vec3_copy(transformForward);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                    collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                    collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                    collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                    collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                    collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                    collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                }\r\n            }\r\n        }\r\n\r\n        //return outFixedMovement.vec3_zero();        \r\n\r\n        if (collisionCheckParams.myExtraMovementCheckCallback != null) {\r\n            fixedMovement.vec3_copy(outFixedMovement);\r\n            outFixedMovement = collisionCheckParams.myExtraMovementCheckCallback(\r\n                movement, fixedMovement, feetPosition, transformUp, transformForward, height,\r\n                collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            fixedHorizontalMovement = outFixedMovement.vec3_removeComponentAlongAxis(transformUp, fixedHorizontalMovement);\r\n            fixedVerticalMovement = outFixedMovement.vec3_componentAlongAxis(transformUp, fixedVerticalMovement);\r\n        }\r\n\r\n        {\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myIsSliding && !fixedHorizontalMovement.vec3_isZero()) {\r\n                    /* let angleWithPreviousThreshold = 0.5;\r\n                    check use surfaceAdjustedHorizontalMovement instead of horizontalMovement if re-enable this\r\n                    if (!this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_isZero() && !horizontalMovement.vec3_isZero() &&\r\n                        horizontalMovement.vec3_angle(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement) > angleWithPreviousThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = horizontalMovement.vec3_signTo(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement, transformUp);\r\n                        console.error(\"sp\", collisionRuntimeParams.mySliding90DegreesSign, collisionRuntimeParams.myIsSliding);\r\n                    } */\r\n                    collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                    //console.error(\"empty renew\");\r\n                }\r\n            }\r\n\r\n            if (!horizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(horizontalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(surfaceAdjustedHorizontalMovement);\r\n            }\r\n\r\n            if (!verticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(verticalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedVerticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(surfaceAdjustedVerticalMovement);\r\n            }\r\n\r\n            if (!fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidIsSliding = collisionRuntimeParams.myIsSliding;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = false;\r\n                collisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(fixedHorizontalMovement);\r\n                //fixedHorizontalMovement.vec3_error();\r\n\r\n                if (!collisionRuntimeParams.myIsSliding) {\r\n                    //console.error(\"not sliding\");\r\n                } else {\r\n                    //console.error(\"sliding\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n                }\r\n            } else {\r\n                //console.error(\"still\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            if (!fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(fixedVerticalMovement);\r\n            }\r\n        }\r\n\r\n        let moveStepFixed = false;\r\n        if (!collisionRuntimeParams.myHorizontalMovementCanceled && !fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n            let surfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, this._myPrevCollisionRuntimeParams);\r\n            if (surfaceTooSteepResults[0] || surfaceTooSteepResults[1]) {\r\n                horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n                let newSurfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if ((surfaceTooSteepResults[0] && newSurfaceTooSteepResults[0]) ||\r\n                    (surfaceTooSteepResults[1] && newSurfaceTooSteepResults[1]) ||\r\n                    !allowSurfaceSteepFix ||\r\n                    (surfaceTooSteepResults[0] && !collisionCheckParams.myAllowGroundSteepFix) ||\r\n                    (surfaceTooSteepResults[1] && !collisionCheckParams.myAllowCeilingSteepFix)) {\r\n                    outFixedMovement.vec3_zero();\r\n                    collisionRuntimeParams.copy(this._myPrevCollisionRuntimeParams);\r\n                    this._moveStep(movement, feetPosition, transformUp, transformForward, height, false, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n                    moveStepFixed = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!moveStepFixed) {\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugMovementActive) {\r\n                this._debugMovement(movement, outFixedMovement, newFeetPosition, transformUp, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n                this._debugRuntimeParams(collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._syncCollisionRuntimeParamsWithPrevious = function () {\r\n    let previousFixedHorizontalMovement = vec3_create();\r\n    return function _syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        collisionRuntimeParams.myIsSlidingFlickerPrevented = previousCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        //console.error(\"prevented\", collisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n\r\n        collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n        collisionRuntimeParams.myLastValidIsSliding = previousCollisionRuntimeParams.myLastValidIsSliding;\r\n\r\n        collisionRuntimeParams.mySliding90DegreesSign = previousCollisionRuntimeParams.mySliding90DegreesSign;\r\n        collisionRuntimeParams.mySlidingRecompute90DegreesSign = previousCollisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n        if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n            let angleWithPreviousThreshold = 0.5;\r\n            if (!previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_isZero() && !surfaceAdjustedHorizontalMovement.vec3_isZero() &&\r\n                surfaceAdjustedHorizontalMovement.vec3_angle(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement) > angleWithPreviousThreshold) {\r\n                //previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n                if (!previousCollisionRuntimeParams.myLastValidIsSliding) {\r\n                    let angleSigned = surfaceAdjustedHorizontalMovement.vec3_angleSigned(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement, up);\r\n                    let angleSignedThreshold = 10;\r\n                    if (Math.abs(angleSigned) < 180 - angleSignedThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = Math.pp_sign(angleSigned);\r\n                        //console.error(\"special sign\");\r\n                    }\r\n                }\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                //console.error(\"direction new\");\r\n            }\r\n        }\r\n\r\n        previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n        if (previousFixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        } else {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousFixedHorizontalMovement);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_move\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_moveStep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_syncCollisionRuntimeParamsWithPrevious\", { enumerable: false });", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._teleport = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n    let originalFeetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let feetPositionOffsetToOriginal = vec3_create();\r\n    let offsetTeleportPosition = vec3_create();\r\n\r\n    let zero = vec3_create();\r\n    let forwardForHorizontal = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let fixedHorizontalMovement = vec3_create();\r\n    let fixedVerticalMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _teleport(teleportPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, isPositionCheck = false) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        offsetTeleportPosition.vec3_copy(teleportPosition);\r\n        originalFeetPosition = transformQuat.quat2_getPosition(originalFeetPosition);\r\n        feetPositionOffsetToOriginal = originalFeetPosition.vec3_sub(feetPosition, feetPositionOffsetToOriginal);\r\n        if (feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n            feetPositionOffsetToOriginal.vec3_zero();\r\n        } else {\r\n            offsetTeleportPosition = offsetTeleportPosition.vec3_sub(feetPositionOffsetToOriginal, offsetTeleportPosition);\r\n        }\r\n\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n        if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n            forwardForHorizontal.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForHorizontal.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n            forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n            if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            }\r\n        }\r\n\r\n        fixedHorizontalMovement = this._horizontalCheck(zero, offsetTeleportPosition, height, transformUp, forwardForHorizontal, false, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            newFeetPosition = offsetTeleportPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                forwardForVertical.vec3_copy(transformForward);\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            let downward = -1;\r\n            fixedVerticalMovement = this._verticalCheck(zero, downward, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n            if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n                newFeetPosition = newFeetPosition.vec3_add(fixedVerticalMovement, newFeetPosition);\r\n\r\n                forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnGround) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnGround && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnGround && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnCeiling) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnCeiling && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnCeiling && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnGroundAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnGroundAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnCeiling) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnCeilingAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnCeilingAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myTeleportCanceled) {\r\n                    if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                        collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                        collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                        collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                    }\r\n\r\n                    if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                        collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                        collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                        collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                    }\r\n                }\r\n\r\n                // Regather surface if invalid else use before\r\n            } else {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myTeleportCanceled = true;\r\n        }\r\n\r\n        if (!isPositionCheck) {\r\n            if (collisionCheckParams.myExtraTeleportCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraTeleportCheckCallback(\r\n                    offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        } else {\r\n            if (collisionCheckParams.myExtraCheckTransformCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraCheckTransformCheckCallback(\r\n                    endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(teleportPosition);\r\n\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            collisionRuntimeParams.myFixedTeleportPosition.vec3_copy(newFeetPosition);\r\n            if (!feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n                collisionRuntimeParams.myFixedTeleportPosition = collisionRuntimeParams.myFixedTeleportPosition.vec3_add(feetPositionOffsetToOriginal, collisionRuntimeParams.myFixedTeleportPosition);\r\n            }\r\n\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        } else {\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myOriginalPosition);\r\n        }\r\n\r\n        collisionRuntimeParams.myIsTeleport = true;\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n            this._debugRuntimeParams(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_teleport\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._positionCheck = function () {\r\n    let feetPosition = vec3_create();\r\n    return function _positionCheck(allowAdjustments, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        feetPosition = transformQuat.quat2_getPosition(feetPosition);\r\n\r\n        this._teleport(feetPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, true);\r\n\r\n        collisionRuntimeParams.myIsPositionOk = !collisionRuntimeParams.myTeleportCanceled;\r\n        collisionRuntimeParams.myIsPositionCheck = true;\r\n        collisionRuntimeParams.myOriginalPositionCheckPosition.vec3_copy(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        collisionRuntimeParams.myFixedPositionCheckPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        collisionRuntimeParams.myIsPositionCheckAllowAdjustments = allowAdjustments;\r\n\r\n        if (!allowAdjustments) {\r\n            collisionRuntimeParams.myIsPositionOk = collisionRuntimeParams.myIsPositionOk &&\r\n                collisionRuntimeParams.myOriginalPositionCheckPosition.vec_equals(collisionRuntimeParams.myFixedPositionCheckPosition, 0.00001);\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myFixedTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myTeleportCanceled = false;\r\n        collisionRuntimeParams.myIsTeleport = false;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_positionCheck\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalCheck = function () {\r\n    let fixedFeetPosition = vec3_create();\r\n    let newFixedFeetPosition = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    return function _horizontalCheck(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, avoidSlidingExtraCheck, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n        outFixedMovement.vec3_zero();\r\n\r\n        horizontalDirection = movement.vec3_normalize(horizontalDirection);\r\n        let surfaceTooSteepResults = this._surfaceTooSteep(up, horizontalDirection, collisionCheckParams, previousCollisionRuntimeParams);\r\n        if (movement.vec3_isZero(0.000001) ||\r\n            ((!surfaceTooSteepResults[0] || (allowSurfaceSteepFix && collisionCheckParams.myAllowGroundSteepFix)) &&\r\n                (!surfaceTooSteepResults[1] || (allowSurfaceSteepFix && collisionCheckParams.myAllowCeilingSteepFix)))) {\r\n            fixedFeetPosition = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.0001, fixedFeetPosition), fixedFeetPosition);\r\n            let fixedHeight = Math.max(0, height - collisionCheckParams.myDistanceFromFeetToIgnore - collisionCheckParams.myDistanceFromHeadToIgnore - 0.0001 * 2);\r\n\r\n            let canMove = true;\r\n            if (collisionCheckParams.myHorizontalMovementCheckEnabled && !movement.vec3_isZero(0.000001)) {\r\n                canMove = this._horizontalMovementCheck(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n\r\n            if (canMove) {\r\n                if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n                    newFixedFeetPosition = fixedFeetPosition.vec3_add(movement, newFixedFeetPosition);\r\n                    newFeetPosition = feetPosition.vec3_add(movement, newFeetPosition);\r\n                    let canStay = this._horizontalPositionCheck(newFeetPosition, height, newFixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n                    if (canStay) {\r\n                        outFixedMovement.vec3_copy(movement);\r\n                    }\r\n\r\n                    if (outFixedMovement.vec3_isZero(0.000001)) {\r\n                        outFixedMovement.vec3_zero();\r\n                    }\r\n                } else {\r\n                    outFixedMovement.vec3_copy(movement);\r\n                }\r\n            } else if (!avoidSlidingExtraCheck && collisionCheckParams.mySlidingEnabled && collisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal) {\r\n                this._horizontalCheckBetterSlideNormal(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckRaycast = function () {\r\n    let direction = vec3_create();\r\n    let fixedFeetPosition = vec3_create();\r\n    let fixedHitPosition = vec3_create();\r\n    return function _horizontalCheckRaycast(startPosition, endPosition, movementDirection, up,\r\n        ignoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n        feetPosition, fixHitOnCollision,\r\n        collisionCheckParams, collisionRuntimeParams, checkAllHits = false, ignoreHitsInsideCollisionIfObjectToIgnore = false) {\r\n\r\n        let origin = startPosition;\r\n        direction = endPosition.vec3_sub(origin, direction);\r\n\r\n        if (movementDirection != null && !direction.vec3_isConcordant(movementDirection)) {\r\n            direction.vec3_negate(direction);\r\n            origin = endPosition;\r\n        }\r\n\r\n        let distance = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        let raycastResult = this._raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, true, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isOk = true;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hitsToControl = checkAllHits ? raycastResult.myHits.length : 1;\r\n            let validHitIndex = 0;\r\n            for (let i = 0; i < hitsToControl; i++) {\r\n                let hit = raycastResult.myHits[i];\r\n                if ((ignoreGroundAngleCallback == null || !ignoreGroundAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore)) &&\r\n                    (ignoreCeilingAngleCallback == null || !ignoreCeilingAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore))) {\r\n                    isOk = false;\r\n                    validHitIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!isOk && validHitIndex > 0) {\r\n                for (let i = 0; i < validHitIndex; i++) {\r\n                    raycastResult.removeHit(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isOk && fixHitOnCollision) {\r\n            let hitPosition = raycastResult.myHits[0].myPosition;\r\n\r\n            fixedFeetPosition = feetPosition.vec3_copyComponentAlongAxis(hitPosition, up, fixedFeetPosition);\r\n            fixedHitPosition.vec3_copy(hitPosition);\r\n\r\n            let directionOffsetEpsilonValue = 0.0001;\r\n            direction = direction.vec3_componentAlongAxis(up, direction);\r\n            if (!direction.vec3_isZero(0.000001)) {\r\n                // If the check has an up part move the hit a bit on the that direction\r\n                direction.vec3_normalize(direction);\r\n                direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n\r\n                // This offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                fixedFeetPosition.vec3_add(direction, fixedFeetPosition);\r\n                fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n            }\r\n\r\n            // Move the hit a bit further to prevent miss\r\n            direction = fixedHitPosition.vec3_sub(fixedFeetPosition, direction);\r\n            direction.vec3_normalize(direction);\r\n            direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n            fixedHitPosition = fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n\r\n            let swapRaycastResult = this._myRaycastResult;\r\n            this._myRaycastResult = this._myFixRaycastResult;\r\n\r\n            isOk = this._horizontalCheckRaycast(fixedFeetPosition, fixedHitPosition, null, up,\r\n                false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                feetPosition, false,\r\n                collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (this._myRaycastResult.isColliding()) {\r\n                this._myFixRaycastResult = swapRaycastResult;\r\n            } else {\r\n                isOk = false;\r\n                this._myRaycastResult = swapRaycastResult;\r\n            }\r\n        }\r\n\r\n        return isOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._ignoreSurfaceAngle = function () {\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = vec3_create();\r\n    let hitDirection = vec3_create();\r\n    let hitMovement = vec3_create();\r\n    let projectAlongAxis = vec3_create();\r\n    return function _ignoreSurfaceAngle(feetPosition, height, movementOrForward, objectsToIgnore, outIgnoredObjects, isGround, isMovementCheck, up, collisionCheckParams, hit, ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n        let isIgnorable = false;\r\n\r\n        let surfaceIgnoreHeight = null;\r\n        let groundIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        let ceilingIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n        if (isGround && groundIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(groundIgnoreHeight + 0.0002, 0, height);\r\n        } else if (!isGround && ceilingIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(height - ceilingIgnoreHeight - 0.0002, 0, height);\r\n        }\r\n\r\n        let surfaceIgnoreMaxMovementLeft = null;\r\n        if (isMovementCheck) {\r\n            if (isGround && collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n            } else if (!isGround && collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n            }\r\n        }\r\n\r\n        if (!hit.myIsInsideCollision) {\r\n            movementDirection = movementOrForward.vec3_normalize(movementDirection);\r\n\r\n            let surfaceAngle = hit.myNormal.vec3_angle(up);\r\n            if (!isGround) {\r\n                surfaceAngle = 180 - surfaceAngle;\r\n            }\r\n\r\n            if (isGround && collisionCheckParams.myGroundAngleToIgnore > 0 && (surfaceAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001)) {\r\n                if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, true);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            } else if (!isGround && collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, false);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            }\r\n\r\n            if ((isGround && (collisionCheckParams.myGroundAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001)) ||\r\n                (!isGround && (collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001))) {\r\n                if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                    let surfaceHeightCheckOk = true;\r\n                    let maxMovementLeftCheckOk = true;\r\n\r\n                    if (surfaceIgnoreHeight != null) {\r\n                        surfaceHeightCheckOk = false;\r\n\r\n                        let feetPositionUp = feetPosition.vec3_valueAlongAxis(up);\r\n                        let hitUp = hit.myPosition.vec3_valueAlongAxis(up);\r\n                        let hitHeight = hitUp - feetPositionUp;\r\n                        if ((isGround && hitHeight <= surfaceIgnoreHeight) || (!isGround && hitHeight >= surfaceIgnoreHeight)) {\r\n                            surfaceHeightCheckOk = true;\r\n                        } else {\r\n                            //console.error(hitHeight.toFixed(6));\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && isMovementCheck) {\r\n                        if (surfaceIgnoreMaxMovementLeft != null) {\r\n                            let movementLength = movementOrForward.vec3_length();\r\n                            if (movementLength > surfaceIgnoreMaxMovementLeft) {\r\n                                maxMovementLeftCheckOk = false;\r\n\r\n                                let hitPosition = hit.myPosition;\r\n                                let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n                                hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n\r\n                                if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n                                } else {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n                                }\r\n\r\n                                hitMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, hitMovement);\r\n\r\n                                let hitMovementLength = hitMovement.vec3_length();\r\n                                let movementLeft = movementLength - hitMovementLength;\r\n\r\n                                if (movementLeft <= surfaceIgnoreMaxMovementLeft) {\r\n                                    maxMovementLeftCheckOk = true;\r\n                                } else {\r\n                                    //console.error(movementLeft.toFixed(3));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && maxMovementLeftCheckOk) {\r\n                        isIgnorable = true;\r\n                    }\r\n                }\r\n            }\r\n        } else if (ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n            // #TODO When raycast pierce will work, if it gives the normal even when inside check if the angle is ok and only ignore if that's the case\r\n            if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                isIgnorable = true;\r\n            }\r\n        }\r\n\r\n        if (isIgnorable) {\r\n            if (outIgnoredObjects != null) {\r\n                outIgnoredObjects.pp_pushUnique(hit.myObject, objectsEqualCallback);\r\n            }\r\n        }\r\n\r\n\r\n        return isIgnorable;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckRaycast\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_ignoreSurfaceAngle\", { enumerable: false });", "import { VisualArrowParams } from \"../../../../../../cauldron/visual/elements/visual_arrow\";\r\nimport { getDebugVisualManager } from \"../../../../../../debug/debug_globals\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../../../../../pp/default_resources_global\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalSlide = function () {\r\n    let previousHorizontalMovement = vec3_create();\r\n    return function _horizontalSlide(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        this._mySlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        outSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, outSlideMovement);\r\n\r\n        if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n            this._horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, this._myPrevCollisionRuntimeParams.myIsSliding, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement);\r\n\r\n            //console.error(\"post oppo:\", outSlideMovement.vec_toString());\r\n        }\r\n\r\n        //console.error(\" \");\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding && collisionCheckParams.mySlidingFlickeringPreventionType > 0) {\r\n            let isFlickering = this._horizontalSlideFlickerCheck(movement, outSlideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams);\r\n            this._mySlidingCollisionRuntimeParams.myIsSliding = !isFlickering;\r\n        }\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding) {\r\n            let backupFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            collisionRuntimeParams.copy(this._mySlidingCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = backupFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        } else {\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            //console.error(\"slide cancel\");\r\n            outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideCheckOpposite = function () {\r\n    let horizontalCollisionNormal = vec3_create();\r\n    let oppositeSlideMovement = vec3_create();\r\n    let hitNormal = vec3_create();\r\n    return function _horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, previousIsSliding, allowSurfaceSteepFix, collisionCheckParams, preSlideCollisionRuntimeParams, postSlideCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        horizontalCollisionNormal = preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, horizontalCollisionNormal);\r\n        horizontalCollisionNormal.vec3_normalize(horizontalCollisionNormal);\r\n\r\n        //console.error(\"oppo\", outSlideMovement.vec_toString(), movement.vec_toString(15));\r\n        let angleNormalWithMovementThreshold = 20;\r\n        if (horizontalCollisionNormal.vec3_angle(movement) > 180 - angleNormalWithMovementThreshold) {\r\n            //console.error(\"opposite normal ok\");\r\n            return;\r\n        } else if (previousIsSliding && postSlideCollisionRuntimeParams.myIsSliding && outSlideMovement.vec3_isConcordant(previousHorizontalMovement)) {\r\n            //console.error(\"previous direction ok\");\r\n            //console.error(postSlideCollisionRuntimeParams.myIsSliding, outSlideMovement.vec3_isConcordant(previousHorizontalMovement), outSlideMovement.vec_toString(), previousHorizontalMovement.vec_toString());\r\n            return;\r\n        } else {\r\n            //console.error(\"no fast exit\");\r\n        }\r\n\r\n        //console.error(horizontalCollisionNormal.vec3_angle(movement));\r\n\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams.copy(preSlideCollisionRuntimeParams);\r\n\r\n        oppositeSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingOppositeDirectionCollisionRuntimeParams, previousCollisionRuntimeParams, true, oppositeSlideMovement);\r\n\r\n        //console.error(previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n        if (this._mySlidingOppositeDirectionCollisionRuntimeParams.myIsSliding) {\r\n\r\n            let isOppositeBetter = false;\r\n            if (postSlideCollisionRuntimeParams.myIsSliding) {\r\n                if (movement.vec3_angle(oppositeSlideMovement) < movement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                    //console.error(\"oppo minor\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    if (Math.abs(movement.vec3_angle(oppositeSlideMovement) - movement.vec3_angle(outSlideMovement)) <= 0.0001) {\r\n                        if (previousHorizontalMovement.vec3_angle(oppositeSlideMovement) < previousHorizontalMovement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                            let angleNormalWithMovementThreshold = 5;\r\n                            if (horizontalCollisionNormal.vec3_angle(movement) < 90 + angleNormalWithMovementThreshold) {\r\n                                //console.error(\"oppo equal\");\r\n                                isOppositeBetter = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //console.error(movement.vec3_angle(outSlideMovement), movement.vec3_angle(oppositeSlideMovement));\r\n\r\n            } else {\r\n                let angleEpsilon = 0.001;\r\n                if (movement.vec3_isConcordant(oppositeSlideMovement) && movement.vec3_angle(oppositeSlideMovement) < 90 - angleEpsilon) {\r\n                    //console.error(\"oppo not\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    //console.error(\"oppo not prevention\");\r\n                }\r\n            }\r\n\r\n            if (isOppositeBetter) {\r\n                /* {\r\n                    hitNormal.vec3_copy(preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n \r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = slideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(0, 0, 1, 1);\r\n                    getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = oppositeSlideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(1, 0, 1, 1);\r\n                    getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = hitNormal.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(1, 1, 1, 1);\r\n                    getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                } */\r\n\r\n                outSlideMovement.vec3_copy(oppositeSlideMovement);\r\n                postSlideCollisionRuntimeParams.copy(this._mySlidingOppositeDirectionCollisionRuntimeParams);\r\n            } else {\r\n                //console.error(\"normal\", previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n            }\r\n        } else {\r\n            //console.error(\"oppo not sliding\");\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideFlickerCheck = function () {\r\n    let previousHorizontalMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let flickerFixSlideMovement = vec3_create();\r\n    return function _horizontalSlideFlickerCheck(movement, slideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        let isFlickering = false;\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        let shouldCheckFlicker =\r\n            this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented ||\r\n            previousHorizontalMovement.vec3_isZero(0.00001);\r\n\r\n        if (!shouldCheckFlicker) {\r\n            if (this._myPrevCollisionRuntimeParams.myIsSliding || !collisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding) {\r\n                let flickerCollisionAngle = 90;\r\n                let flickerMovementAngle = 85;\r\n                switch (collisionCheckParams.mySlidingFlickeringPreventionType) {\r\n                    case 1:\r\n                        shouldCheckFlicker = previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0);\r\n                        break;\r\n                    case 2:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n                        break;\r\n                    case 3:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n\r\n                        shouldCheckFlicker = shouldCheckFlicker || (\r\n                            Math.abs(Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) - flickerCollisionAngle) < 0.00001 &&\r\n                            Math.abs(collisionRuntimeParams.mySlidingMovementAngle) > flickerMovementAngle + 0.00001);\r\n                        break;\r\n                    case 4:\r\n                        shouldCheckFlicker = true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n        if (shouldCheckFlicker || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) {\r\n            if (shouldCheckFlicker) {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = collisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            } else {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = Math.max(0, this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter - 1);\r\n                //console.error(collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            //console.error(previousHorizontalMovement.vec3_signTo(movement, up, 0), slideMovement.vec3_signTo(movement, up, 0));\r\n            if ((collisionCheckParams.mySlidingFlickeringPreventionType != 1 || collisionRuntimeParams.myIsSlidingFlickerPrevented || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) &&\r\n                (this._myPrevCollisionRuntimeParams.myIsSliding && previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0))) {\r\n                isFlickering = true;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                //console.error(\"quick flicker fix\");\r\n            } else {\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.reset();\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySliding90DegreesSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n\r\n                //console.error(\"slide movement\", slideMovement.vec_toString(), feetPosition.vec_toString());\r\n                newFeetPosition = feetPosition.vec3_add(slideMovement, newFeetPosition);\r\n\r\n                let backupDebugActive = collisionCheckParams.myDebugActive;\r\n                collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(movement, newFeetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, previousCollisionRuntimeParams, false, fixedMovement);\r\n                collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n                if (fixedMovement.vec3_isZero(0.00001)) {\r\n                    this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.copy(this._mySlidingFlickeringFixCollisionRuntimeParams);\r\n\r\n                    flickerFixSlideMovement = this._internalHorizontalSlide(movement, newFeetPosition, height, up, forward, slideMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, flickerFixSlideMovement);\r\n\r\n                    if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n                        this._horizontalSlideCheckOpposite(movement, newFeetPosition, height, up, forward, slideMovement, true, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, flickerFixSlideMovement);\r\n                    }\r\n\r\n                    if (this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.myIsSliding) {\r\n                        if (slideMovement.vec3_signTo(movement, up, 0) != flickerFixSlideMovement.vec3_signTo(movement, up, 0)) {\r\n\r\n                            /* {\r\n                                hitNormal.vec3_copy(collisionRuntimeParams.mySlidingCollisionHit.myNormal);\r\n    \r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = slideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(0.5, 0.5, 0.5, 1);\r\n                                getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = flickerFixSlideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\n                                getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = hitNormal.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = getDefaultResources(this._myEngine).myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(1, 0, 0.5, 1);\r\n                                getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            } */\r\n\r\n                            isFlickering = true;\r\n                            collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                            //console.error(\"expensive flicker fix\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            //console.error(\"no flicker check\");\r\n        }\r\n\r\n        if (isFlickering) {\r\n            //console.error(\"flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        } else {\r\n            //console.error(\"no flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        }\r\n\r\n        return isFlickering;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._internalHorizontalSlide = function () {\r\n    let invertedNormal = vec3_create();\r\n    let slidingMovement = vec3_create();\r\n    let movement90 = vec3_create();\r\n    let currentMovement = vec3_create();\r\n    let slideMovementForward = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    return function _internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, checkOppositeDirection, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        //let copiedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.pp_clone();\r\n        invertedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_negate(invertedNormal);\r\n        invertedNormal.vec3_removeComponentAlongAxis(up, invertedNormal);\r\n        invertedNormal[0] = Math.abs(invertedNormal[0]) < 0.01 ? 0 : invertedNormal[0];\r\n        invertedNormal[2] = Math.abs(invertedNormal[2]) < 0.01 ? 0 : invertedNormal[2];\r\n        invertedNormal.vec3_normalize(invertedNormal);\r\n\r\n        collisionRuntimeParams.mySlidingCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        collisionRuntimeParams.mySlidingWallNormal.vec3_copy(collisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n\r\n        outSlideMovement.vec3_zero();\r\n\r\n        slidingMovement.vec3_copy(invertedNormal);\r\n        if (checkOppositeDirection) {\r\n            slidingMovement.vec3_copy(movement);\r\n            slidingMovement.vec3_normalize(slidingMovement);\r\n        }\r\n\r\n        if (!slidingMovement.vec3_isZero(0.00001)) {\r\n\r\n            slidingMovement.vec3_scale(movement.vec3_length(), slidingMovement);\r\n\r\n            let slidingSign = invertedNormal.vec3_signTo(movement, up);\r\n\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                let angleThreshold = 0.1;\r\n                if (invertedNormal.vec3_angle(movement) < angleThreshold && collisionRuntimeParams.mySliding90DegreesSign != 0) {\r\n                    //console.error(slidingSign, collisionRuntimeParams.mySliding90DegreesSign);\r\n                    slidingSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                } else if (collisionRuntimeParams.mySliding90DegreesSign == 0 || collisionRuntimeParams.mySlidingRecompute90DegreesSign) {\r\n                    collisionRuntimeParams.mySliding90DegreesSign = slidingSign;\r\n                } else {\r\n                    //console.error(\"no fix\");\r\n                }\r\n\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n            }\r\n\r\n            if (checkOppositeDirection) {\r\n                slidingSign *= -1;\r\n            }\r\n\r\n            let currentAngle = 90 * slidingSign;\r\n            let maxAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement.vec3_rotateAxis(90 * slidingSign, up, movement90), up) * slidingSign, true) * slidingSign;\r\n            let minAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement, up) * slidingSign, true) * slidingSign;\r\n\r\n            if (checkOppositeDirection) {\r\n                maxAngle = currentAngle;\r\n                minAngle = 0;\r\n            } else {\r\n                if (Math.abs(maxAngle) < Math.abs(minAngle)) {\r\n                    // This should only happens because of the 90 degrees adjustment\r\n                    //console.error(\"90 adjust\");\r\n                    minAngle = 0;\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    minAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(maxAngle) < Math.abs(currentAngle) || Math.abs(Math.abs(maxAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"max\", currentAngle.toFixed(15), maxAngle.toFixed(15));\r\n                    currentAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(currentAngle) < Math.abs(minAngle) || Math.abs(Math.abs(minAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"min\", currentAngle.toFixed(3), minAngle.toFixed(3));\r\n                    currentAngle = minAngle;\r\n                }\r\n\r\n                //console.error(maxAngle.toFixed(3), minAngle.toFixed(3));\r\n            }\r\n\r\n            if (checkOppositeDirection && !previousHorizontalMovement.vec3_isZero(0.000001)) {\r\n                let angleWithPrevious = movement.vec3_angleSigned(previousHorizontalMovement, up);\r\n                if (Math.pp_sign(angleWithPrevious) == Math.pp_sign(maxAngle) && Math.abs(maxAngle) > Math.abs(angleWithPrevious)) {\r\n                    currentAngle = angleWithPrevious;\r\n                    //console.error(\"better angle\", currentAngle, previousHorizontalMovement.vec_toString(10), movement.vec_toString(10));\r\n                }\r\n            }\r\n\r\n            currentMovement.vec3_zero();\r\n\r\n            let backupDebugActive = collisionCheckParams.myDebugActive;\r\n            collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n            let originalCurrentAngle = currentAngle;\r\n            for (let i = 0; i < collisionCheckParams.mySlidingMaxAttempts; i++) {\r\n                this._myInternalSlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n                currentMovement = slidingMovement.vec3_rotateAxis(currentAngle, up, currentMovement);\r\n\r\n                slideMovementForward.vec3_copy(forward);\r\n                if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                    if (!currentMovement.vec3_isZero()) {\r\n                        slideMovementForward = currentMovement.vec3_normalize(slideMovementForward);\r\n                    }\r\n                }\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(currentMovement, feetPosition, height, up, slideMovementForward, allowSurfaceSteepFix, collisionCheckParams, this._myInternalSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, true, fixedMovement);\r\n                if (!fixedMovement.vec3_isZero(0.00001)) {\r\n                    outSlideMovement.vec3_copy(currentMovement);\r\n                    collisionRuntimeParams.copy(this._myInternalSlidingCollisionRuntimeParams);\r\n                    collisionRuntimeParams.myIsSliding = true;\r\n                    collisionRuntimeParams.myIsSlidingIntoOppositeDirection = checkOppositeDirection;\r\n                    collisionRuntimeParams.mySlidingMovementAngle = movement.vec3_angleSigned(currentMovement, up);\r\n                    collisionRuntimeParams.mySlidingCollisionAngle = invertedNormal.vec3_angleSigned(currentMovement, up);\r\n\r\n                    maxAngle = currentAngle;\r\n                    currentAngle = (maxAngle + minAngle) / 2;\r\n                } else {\r\n                    if (currentAngle != maxAngle) {\r\n                        minAngle = currentAngle;\r\n                    }\r\n\r\n                    if (i == 0 && currentAngle != maxAngle) {\r\n                        currentAngle = maxAngle;\r\n                    } else {\r\n                        currentAngle = (minAngle + maxAngle) / 2;\r\n                    }\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    //console.error(\"fast slide exit\", maxAngle, minAngle, originalCurrentAngle, collisionRuntimeParams.myIsSliding, checkOppositeDirection);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            collisionCheckParams.myDebugActive = backupDebugActive;\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsSliding) {\r\n            collisionRuntimeParams.mySlidingCollisionHit.reset();\r\n        } else {\r\n            //console.error(\"slide angle\", movement.vec3_angleSigned(invertedNormal, up), invertedNormal.vec_toString(), copiedNormal.vec_toString());\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckBetterSlideNormal = function () {\r\n    let movementDirection = vec3_create();\r\n    let hitDirection = vec3_create();\r\n    let projectAlongAxis = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let newFixedFeetPosition = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    return function _horizontalCheckBetterSlideNormal(movement, originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        // Check for a better slide hit position and normal\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        let hitPosition = collisionRuntimeParams.myHorizontalCollisionHit.myPosition;\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n        if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n        } else {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n        }\r\n\r\n        fixedMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, fixedMovement);\r\n        /* if (fixedMovement.vec3_angle(movementDirection) >= 0.00001 || fixedMovement.vec3_length() > movement.vec3_length() + 0.00001) {\r\n            console.error(\"ERROR, project function should return a smaller movement in the same direction\",\r\n                fixedMovement.vec3_angle(movementDirection), fixedMovement.vec3_length(), movement.vec3_length());\r\n            // Maybe epsilon could be 0.0001? is higher but still 10 times less then a millimiter\r\n        } */\r\n\r\n        if (fixedMovement.vec3_isConcordant(movementDirection)) {\r\n            fixedMovement = movementDirection.vec3_scale(Math.min(fixedMovement.vec3_length(), movement.vec3_length()), fixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_zero();\r\n        }\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive) {\r\n            getDebugVisualManager(this._myEngine).drawArrow(0, feetPosition, movementDirection, fixedMovement.vec3_length(), vec4_create(1, 0, 1, 1));\r\n        }\r\n\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n\r\n        newFixedFeetPosition = feetPosition.vec3_add(fixedMovement, newFixedFeetPosition);\r\n        newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n\r\n        let backupDebugActive = collisionCheckParams.myDebugActive;\r\n        collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n        if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n            this._horizontalPositionCheck(originalFeetPosition, originalHeight, newFixedFeetPosition, height, up, forward, collisionCheckParams, this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n\r\n        collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n        if (this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally &&\r\n            !this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.myIsInsideCollision) {\r\n            collisionRuntimeParams.copy(this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._isSlidingNormalValid = function () {\r\n    let flatNormal = vec3_create();\r\n    return function _isSlidingNormalValid(movement, up, collisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        flatNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatNormal);\r\n        flatNormal.vec3_normalize(flatNormal);\r\n\r\n        if (!flatNormal.vec3_isZero(0.000001)) {\r\n            isValid = true;\r\n        }\r\n\r\n        // I wanted to check if the normal angle was not concordant and thought that in that case it shouldn't slide but it turns out it makes sense\r\n        // even for back hits which either can't resolve or at least makes me slide out of collision\r\n        // At least a check for the normal to be not up is ok\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideCheckOpposite\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideFlickerCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_internalHorizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckBetterSlideNormal\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_isSlidingNormalValid\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalMovementCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let heightStep = vec3_create();\r\n    let currentHeightOffset = vec3_create();\r\n    let leftRadialDirection = vec3_create();\r\n    let rightRadialDirection = vec3_create();\r\n    return function _horizontalMovementCheck(movement, originalFeetPosition, originalHeight, feetPosition, height, up, collisionCheckParams, collisionRuntimeParams) {\r\n        // #TODO Add a flag in the params to specify if u want to allow movement inside collision (to hope that it will end up in a non collision position)\r\n        // Also vertical check should check all hits like the position check\r\n        // For now is ok as it is, the movement check is not as important and could also be disabled it the movement per frame is very small\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let steplength = collisionCheckParams.myRadius / collisionCheckParams.myHorizontalMovementRadialStepAmount;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        {\r\n            leftRadialDirection = movementDirection.vec3_rotateAxis(halfConeAngle, up, leftRadialDirection);\r\n            rightRadialDirection = movementDirection.vec3_rotateAxis(-halfConeAngle, up, rightRadialDirection);\r\n            for (let i = 1; i <= collisionCheckParams.myHorizontalMovementRadialStepAmount; i++) {\r\n                // Left\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = leftRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n\r\n                // Right\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = rightRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n            }\r\n        }\r\n\r\n        // If result is inside a collision it's ignored, so that at least you can exit it before seeing if the new position works now\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // Gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundObjectsToIgnore, true, true, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundCeilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // Gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, ceilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // Check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, ceilingObjectsToIgnore, null, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountMovement > 0 && height > 0.000001) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountMovement;\r\n                heightStep = up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // We can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // The ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopMovement || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, currentHeightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalMovement) {\r\n                        this._horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, currentHeightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                    }\r\n\r\n                    if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementVerticalCheck = function () {\r\n    let movementStep = vec3_create();\r\n    let movementDirection = vec3_create();\r\n    let firstPosition = vec3_create();\r\n    let secondPosition = vec3_create();\r\n    let firstMovementPosition = vec3_create();\r\n    let secondMovementPosition = vec3_create();\r\n    let firstHeightPosition = vec3_create();\r\n    let secondHeightPosition = vec3_create();\r\n    let firstHeightMovementPosition = vec3_create();\r\n    let secondHeightMovementPosition = vec3_create();\r\n    return function _horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, heightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward) {\r\n                        firstHeightMovementPosition = firstPosition.vec3_add(movementStep, firstHeightMovementPosition);\r\n                        firstHeightMovementPosition = firstHeightMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward) {\r\n                        secondHeightMovementPosition = secondPosition.vec3_add(movementStep, secondHeightMovementPosition);\r\n                        secondHeightMovementPosition = secondHeightMovementPosition.vec3_sub(heightStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (m == 0) {\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                            secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                            let firstHeightPosition = firstPosition.vec3_sub(heightStep);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightMovementPosition = secondPosition.vec3_sub(heightStep, secondHeightMovementPosition).vec3_add(movementStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled && j == 0)) {\r\n                    if (m == 0) {\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        firstHeightMovementPosition = firstMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                    firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled && j == 0)) {\r\n                    firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstHeightMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                    collisionRuntimeParams.myHorizontalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementHorizontalCheck = function () {\r\n    let movementStep = vec3_create();\r\n    let movementDirection = vec3_create();\r\n    let firstPosition = vec3_create();\r\n    let secondPosition = vec3_create();\r\n    let firstMovementPosition = vec3_create();\r\n    let secondMovementPosition = vec3_create();\r\n    return function _horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                        // #TODO Ignore hits if inside could be a paramter, so you can specify if u want to be able to exit from a collision\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckHorizontalBorder) {\r\n                        if (m == 0) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        {\r\n                            firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                            secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondMovementPosition, firstMovementPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstMovementPosition, null, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementVerticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementHorizontalCheck\", { enumerable: false });", "import { RaycastHit } from \"../../../../../../cauldron/physics/physics_raycast_data\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalPositionCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let heightOffset = vec3_create();\r\n    let heightStep = vec3_create();\r\n    let currentHeightOffset = vec3_create();\r\n    let hitHeightOffset = vec3_create();\r\n    let hitHeightOffsetEpsilon = vec3_create();\r\n    let downwardHeightOffset = vec3_create();\r\n    let downwardHeightStep = vec3_create();\r\n\r\n    let verticalDirection = vec3_create();\r\n\r\n    let vertilCheckHit = new RaycastHit();\r\n\r\n    return function _horizontalPositionCheck(originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalPositionActive;\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 180);\r\n        let sliceAngle = halfConeAngle / collisionCheckParams.myHalfConeSliceAmount;\r\n        let tempCheckPosition = _localGetCachedCheckPosition();\r\n        checkPositions.push(feetPosition.vec3_add(forward.vec3_scale(collisionCheckParams.myRadius, tempCheckPosition), tempCheckPosition));\r\n        for (let i = 1; i <= collisionCheckParams.myHalfConeSliceAmount; i++) {\r\n            let currentAngle = i * sliceAngle;\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            let radialDirection = forward.vec3_rotateAxis(-currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            radialDirection = forward.vec3_rotateAxis(currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n        }\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // Gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundObjectsToIgnore, true, false, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundCeilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // Gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, ceilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // Check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, ceilingObjectsToIgnore, null, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountPosition > 0 && height > 0) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountPosition;\r\n                up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // We can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // The ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopPosition || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i != 0 && i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, currentHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalPosition) {\r\n                        // This offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                        // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                        let hitHeightOffsetEpsilonValue = 0.0001;\r\n\r\n                        if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 0 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                            verticalDirection.vec3_copy(up);\r\n                            this._horizontalPositionVerticalCheck(feetPosition, checkPositions, currentHeightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 1 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                                verticalDirection = up.vec3_negate(verticalDirection);\r\n                                downwardHeightOffset = currentHeightOffset.vec3_sub(heightStep, downwardHeightOffset);\r\n                                downwardHeightStep = heightStep.vec3_negate(downwardHeightStep);\r\n                                this._horizontalPositionVerticalCheck(feetPosition, checkPositions, downwardHeightOffset, downwardHeightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                            }\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionHorizontalCheck = function () {\r\n    let basePosition = vec3_create();\r\n    let forwardNegate = vec3_create();\r\n    let currentRadialPosition = vec3_create();\r\n    let previousRadialPosition = vec3_create();\r\n    return function _horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n\r\n        let halfRadialPositions = Math.floor(checkPositions.length / 2) + 1;\r\n        for (let j = 0; j < halfRadialPositions; j++) {\r\n            if (j > 0) {\r\n                let leftIndex = Math.max(0, j * 2);\r\n                let rightIndex = Math.max(0, (j * 2 - 1));\r\n                let leftAndRightEqual = checkPositions[leftIndex].vec_equals(checkPositions[rightIndex], 0.000001);\r\n\r\n                if (collisionCheckParams.myCheckConeBorder) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        let previousIndex = Math.max(0, currentIndex - 2);\r\n                        previousRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, forward.vec3_negate(forwardNegate), up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myCheckConeRay && isHorizontalCheckOk) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        if (r == 1 && leftAndRightEqual) {\r\n                            break;\r\n                        }\r\n\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                            false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, false,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckConeRay) {\r\n                    currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                        false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, false,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHorizontalCheckOk) {\r\n            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionVerticalCheck = function () {\r\n    let basePosition = vec3_create();\r\n    let previousBasePosition = vec3_create();\r\n    let currentRadialPosition = vec3_create();\r\n    let previousRadialPosition = vec3_create();\r\n    let previousCurrentRadialPosition = vec3_create();\r\n    let previousPreviousRadialPosition = vec3_create();\r\n    return function _horizontalPositionVerticalCheck(feetPosition, checkPositions, heightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n        previousBasePosition = basePosition.vec3_sub(heightStep, previousBasePosition);\r\n\r\n        for (let j = 0; j <= checkPositions.length; j++) {\r\n            let previousCheckPositionIsEqual = false;\r\n\r\n            if (j == checkPositions.length) {\r\n                currentRadialPosition.vec3_copy(basePosition);\r\n                previousRadialPosition.vec3_copy(previousBasePosition);\r\n            } else {\r\n                currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n                previousRadialPosition = currentRadialPosition.vec3_sub(heightStep, previousRadialPosition);\r\n\r\n                if (j > 0) {\r\n                    previousCheckPositionIsEqual = checkPositions[j].vec_equals(checkPositions[j - 1], 0.000001);\r\n                }\r\n            }\r\n\r\n            if (collisionCheckParams.myCheckVerticalStraight && !previousCheckPositionIsEqual) {\r\n                isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, null, up,\r\n                    collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                    feetPosition, true,\r\n                    collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    }\r\n\r\n                    if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (j < checkPositions.length) {\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayOutward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayOutward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousBasePosition, currentRadialPosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayInward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayInward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, basePosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (j > 0) {\r\n                    if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward || collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                        let previousIndex = Math.max(0, j - 2);\r\n                        previousCurrentRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousCurrentRadialPosition);\r\n                        previousPreviousRadialPosition = previousCurrentRadialPosition.vec3_sub(heightStep, previousPreviousRadialPosition);\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousPreviousRadialPosition, currentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, previousCurrentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionHorizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionVerticalCheck\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._verticalCheck = function () {\r\n    let newFeetPosition = vec3_create();\r\n    let additionalFixedMovement = vec3_create();\r\n    let zero = vec3_create(0, 0, 0);\r\n    return function _verticalCheck(verticalMovement, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingVertically = false;\r\n        collisionRuntimeParams.myVerticalCollisionHit.reset();\r\n\r\n        let movementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(up), -1);\r\n        let isMovementDownward = movementSign < 0;\r\n\r\n        outFixedMovement.vec3_copy(verticalMovement);\r\n        if (collisionCheckParams.myVerticalMovementCheckEnabled) {\r\n            outFixedMovement = this._verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            if (collisionCheckParams.myCheckVerticalBothDirection &&\r\n                (outFixedMovement.vec_equals(verticalMovement, 0.00001) || originalMovementSign == 0 || (movementSign != originalMovementSign))) {\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n                let isOppositeMovementDownward = !isMovementDownward;\r\n                additionalFixedMovement = this._verticalMovementAdjustment(zero, isOppositeMovementDownward, originalMovementSign, newFeetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, additionalFixedMovement);\r\n\r\n                outFixedMovement.vec3_add(additionalFixedMovement, outFixedMovement);\r\n                isMovementDownward = !isMovementDownward;\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myVerticalPositionCheckEnabled) {\r\n            newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n            let canStay = this._verticalPositionCheck(newFeetPosition, isMovementDownward, height, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            if (!canStay) {\r\n                outFixedMovement.vec3_zero();\r\n\r\n                // #TODO Probably this should not be reset, you should be required to check if the movement was ok to be sure this values have a meaning\r\n                collisionRuntimeParams.myHasSnappedOnGround = false;\r\n                collisionRuntimeParams.myHasSnappedOnCeiling = false;\r\n                collisionRuntimeParams.myHasPoppedOutGround = false;\r\n                collisionRuntimeParams.myHasPoppedOutCeiling = false;\r\n                collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalMovementAdjustment = function () {\r\n    let startOffset = vec3_create();\r\n    let endOffset = vec3_create();\r\n    let tempVector = vec3_create();\r\n    let furtherDirection = vec3_create();\r\n    let furtherDirectionPosition = vec3_create();\r\n    let upNegate = vec3_create();\r\n    let origin = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalMovementActive;\r\n\r\n        startOffset.vec3_zero();\r\n        endOffset.vec3_zero();\r\n\r\n        let popOutEnabled = false;\r\n        let snapEnabled = false;\r\n\r\n        if (isMovementDownward) {\r\n            startOffset.vec3_zero();\r\n            endOffset.vec3_copy(verticalMovement);\r\n\r\n            if (collisionCheckParams.myGroundPopOutExtraDistance > 0 && collisionCheckParams.myGroundPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(collisionCheckParams.myGroundPopOutExtraDistance + 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        } else {\r\n            startOffset = up.vec3_scale(height, startOffset);\r\n            endOffset = up.vec3_scale(height, endOffset).vec3_add(verticalMovement, endOffset);\r\n\r\n            if (collisionCheckParams.myCeilingPopOutExtraDistance > 0 && collisionCheckParams.myCeilingPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(-collisionCheckParams.myCeilingPopOutExtraDistance - 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        }\r\n\r\n        if (isMovementDownward && originalMovementSign <= 0 && this._myPrevCollisionRuntimeParams.myIsOnGround && collisionCheckParams.mySnapOnGroundEnabled && collisionCheckParams.mySnapOnGroundExtraDistance > 0) {\r\n            endOffset.vec3_add(up.vec3_scale(-collisionCheckParams.mySnapOnGroundExtraDistance - 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        } else if (!isMovementDownward && this._myPrevCollisionRuntimeParams.myIsOnCeiling && collisionCheckParams.mySnapOnCeilingEnabled && collisionCheckParams.mySnapOnCeilingExtraDistance > 0 &&\r\n            (originalMovementSign > 0 || (originalMovementSign == 0 && (!this._myPrevCollisionRuntimeParams.myIsOnGround || !collisionCheckParams.mySnapOnGroundEnabled)))) {\r\n            endOffset.vec3_add(up.vec3_scale(collisionCheckParams.mySnapOnCeilingExtraDistance + 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        }\r\n\r\n        outFixedMovement.vec3_zero();\r\n        if (startOffset.vec3_distance(endOffset) > 0.00001) {\r\n            let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            furtherDirection.vec3_copy(up);\r\n            if (!isMovementDownward) {\r\n                furtherDirection.vec3_negate(furtherDirection);\r\n            }\r\n\r\n            let furtherDirectionPositionSet = false;\r\n\r\n            for (let i = 0; i < checkPositions.length; i++) {\r\n                let currentPosition = checkPositions[i];\r\n\r\n                origin = currentPosition.vec3_add(startOffset, origin);\r\n                direction = currentPosition.vec3_add(endOffset, direction).vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.myHits.length > 0) {\r\n                    if (furtherDirectionPositionSet) {\r\n                        if (raycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(furtherDirectionPosition, furtherDirection)) {\r\n                            furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                        }\r\n                    } else {\r\n                        furtherDirectionPositionSet = true;\r\n                        furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (furtherDirectionPositionSet) {\r\n                upNegate = up.vec3_negate(upNegate);\r\n                if (isMovementDownward) {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition, outFixedMovement).vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        collisionRuntimeParams.myHasSnappedOnGround = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutGround = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                } else {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition.vec3_add(up.vec3_scale(height, outFixedMovement), outFixedMovement), outFixedMovement).\r\n                        vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        collisionRuntimeParams.myHasSnappedOnCeiling = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutCeiling = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                }\r\n\r\n                if (!popOutEnabled && !outFixedMovement.vec3_isConcordant(verticalMovement)) {\r\n                    outFixedMovement.vec3_zero();\r\n                }\r\n\r\n                if (!collisionCheckParams.myVerticalMovementReduceEnabled && collisionRuntimeParams.myHasReducedVerticalMovement) {\r\n                    outFixedMovement.vec3_copy(verticalMovement);\r\n                    collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n                }\r\n            } else {\r\n                outFixedMovement.vec3_copy(verticalMovement);\r\n            }\r\n        } else {\r\n            outFixedMovement.vec3_copy(verticalMovement);\r\n        }\r\n\r\n        if (outFixedMovement.vec3_length() < 0.00001) {\r\n            outFixedMovement.vec3_zero();\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalPositionCheck = function () {\r\n    let smallHeightFixOffset = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let startPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _verticalPositionCheck(feetPosition, checkUpward, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        if (height < 0.00001) {\r\n            return true;\r\n        }\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalPositionActive;\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isVerticalPositionOk = true;\r\n        let atLeastOneIsOk = false;\r\n\r\n        let adjustmentEpsilon = 0.00001;\r\n        smallHeightFixOffset = up.vec3_scale(adjustmentEpsilon, smallHeightFixOffset);\r\n        heightOffset = up.vec3_scale(height - adjustmentEpsilon, heightOffset);\r\n        if (height - adjustmentEpsilon < adjustmentEpsilon * 10) {\r\n            heightOffset = up.vec3_scale(adjustmentEpsilon * 10, heightOffset);\r\n        }\r\n\r\n        let insideHitSet = false;\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n\r\n            if (checkUpward) {\r\n                startPosition = currentPosition.vec3_add(smallHeightFixOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(heightOffset, endPosition);\r\n            } else {\r\n                startPosition = currentPosition.vec3_add(heightOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(smallHeightFixOffset, endPosition);\r\n            }\r\n\r\n            let origin = startPosition;\r\n            direction = endPosition.vec3_sub(origin, direction);\r\n            let distance = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n\r\n            let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let firstHitOutsideCollision = raycastResult.getFirstHitOutsideCollision();\r\n                if (firstHitOutsideCollision != null) {\r\n                    isVerticalPositionOk = false;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(firstHitOutsideCollision);\r\n                    break;\r\n                } else if (!insideHitSet) {\r\n                    insideHitSet = true;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    if (!collisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk) {\r\n                        isVerticalPositionOk = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                atLeastOneIsOk = true;\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myIsCollidingVertically = !isVerticalPositionOk || !atLeastOneIsOk;\r\n\r\n        return !collisionRuntimeParams.myIsCollidingVertically;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._getVerticalCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = vec3_create();\r\n    return function _getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        if (collisionCheckParams.myGroundCircumferenceAddCenter) {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = collisionCheckParams.myFeetRadius / collisionCheckParams.myGroundCircumferenceStepAmount;\r\n        let sliceAngle = 360 / collisionCheckParams.myGroundCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < collisionCheckParams.myGroundCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = forward.vec3_rotateAxis(currentStepRotation, up, currentDirection);\r\n            for (let j = 0; j < collisionCheckParams.myGroundCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, up, tempCheckPosition);\r\n                checkPositions.push(feetPosition.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += collisionCheckParams.myGroundCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalMovementAdjustment\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_getVerticalCheckPositions\", { enumerable: false });", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._updateSurfaceInfo = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n        if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n            forwardForVertical.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForVertical.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n            forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n            if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._postSurfaceCheck = function () {\r\n    let horizontalDirection = vec3_create();\r\n    return function _postSurfaceCheck(fixedHorizontalMovement, originalVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n\r\n        let isVerticalMovementZero = originalVerticalMovement.vec3_isZero(0.00001);\r\n        let isVerticalMovemenDownward = Math.pp_sign(originalVerticalMovement.vec3_lengthSigned(transformUp), -1) < 0;\r\n\r\n        let horizontalMovementIsZero = fixedHorizontalMovement.vec3_isZero(0.00001);\r\n        horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n\r\n        let groundPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myGroundNormal, horizontalDirection, transformUp, true);\r\n        let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myCeilingNormal, horizontalDirection, transformUp, false);\r\n\r\n        let mustRemainOnGroundOk = true;\r\n        if (collisionCheckParams.myMustStayOnGround) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !collisionRuntimeParams.myIsOnGround && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnGroundOk = false;\r\n            }\r\n        }\r\n\r\n        let mustRemainOnCeilingOk = true;\r\n        if (collisionCheckParams.myMustStayOnCeiling) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !collisionRuntimeParams.myIsOnCeiling && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnCeilingOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowGroundAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowGroundAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowGroundAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowGroundAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowGroundAngleDownhill, collisionCheckParams.myGroundAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                mustStayBelowGroundAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowCeilingAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowCeilingAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowCeilingAngleDownhill, collisionCheckParams.myCeilingAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                mustStayBelowCeilingAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnGroundHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnGroundHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundHitMaxAngle <= collisionCheckParams.myMovementMustStayOnGroundHitAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundHitMaxAngle > collisionCheckParams.myMovementMustStayOnGroundHitAngle + 0.0001) {\r\n                mustStayOnGroundHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnCeilingHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnCeilingHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingHitMaxAngle <= collisionCheckParams.myMovementMustStayOnCeilingHitAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingHitMaxAngle > collisionCheckParams.myMovementMustStayOnCeilingHitAngle + 0.0001) {\r\n                mustStayOnCeilingHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let isOnValidGroundAngleUphill = true;\r\n        let isOnValidGroundAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !horizontalMovementIsZero) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    isOnValidGroundAngleUphill = false;\r\n                    if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidGroundAngleUphill = Math.abs(groundPerceivedAngle) <= collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidGroundAngleDownhill) {\r\n                            isOnValidGroundAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnValidCeilingAngleUphill = true;\r\n        let isOnValidCeilingAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !horizontalMovementIsZero) {\r\n                if (ceilingPerceivedAngle > 0) {\r\n                    isOnValidCeilingAngleUphill = false;\r\n                    if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidCeilingAngleUphill = Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (ceilingPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidCeilingAngleDownhill) {\r\n                            isOnValidCeilingAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return mustRemainOnGroundOk && mustRemainOnCeilingOk && mustStayBelowGroundAngleOk && mustStayBelowCeilingAngleOk && mustStayOnGroundHitAngleOk && mustStayOnCeilingHitAngleOk && isOnValidGroundAngleUphill && isOnValidGroundAngleDownhill && isOnValidCeilingAngleUphill && isOnValidCeilingAngleDownhill;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._surfaceTooSteep = function () {\r\n    let surfaceSteepResults = [false, false];\r\n    return function _surfaceTooSteep(up, direction, collisionCheckParams, collisionRuntimeParams) {\r\n        let groundTooSteep = false;\r\n        let ceilingTooSteep = false;\r\n\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                collisionRuntimeParams.myGroundNormal,\r\n                direction, up, true);\r\n\r\n            groundTooSteep = groundPerceivedAngle > 0;\r\n            if (groundTooSteep &&\r\n                collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                groundTooSteep = Math.abs(groundPerceivedAngle) > collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n            }\r\n        }\r\n\r\n        if (!groundTooSteep) {\r\n            if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                ceilingTooSteep = ceilingPerceivedAngle > 0;\r\n                if (ceilingTooSteep &&\r\n                    collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    ceilingTooSteep = Math.abs(ceilingPerceivedAngle) > collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                }\r\n            }\r\n        }\r\n\r\n        surfaceSteepResults[0] = groundTooSteep;\r\n        surfaceSteepResults[1] = ceilingTooSteep;\r\n        return surfaceSteepResults;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._adjustVerticalMovementWithSurface = function () {\r\n    let horizontalDirection = vec3_create();\r\n    let extraVerticalMovement = vec3_create();\r\n    return function _adjustVerticalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedVerticalMovement) {\r\n        outAdjustedVerticalMovement.vec3_copy(verticalMovement);\r\n\r\n        if (horizontalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedVerticalMovement;\r\n        }\r\n\r\n        let extraVerticalLength = 0;\r\n        horizontalDirection = horizontalMovement.vec3_normalize(horizontalDirection);\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myGroundNormal,\r\n                horizontalDirection, up, true);\r\n\r\n            let groundExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n            groundExtraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n            if (Math.abs(groundExtraVerticalLength) > 0.00001) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = true;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myCeilingNormal,\r\n                horizontalDirection, up, false);\r\n\r\n            let ceilingExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n            ceilingExtraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n\r\n            if (Math.abs(ceilingExtraVerticalLength) > 0.00001) {\r\n                let sameSignThanGround = Math.pp_sign(extraVerticalLength) == Math.pp_sign(ceilingExtraVerticalLength);\r\n                if (extraVerticalLength == 0 || (sameSignThanGround && Math.abs(ceilingExtraVerticalLength) > Math.abs(extraVerticalLength))) {\r\n                    if (ceilingPerceivedAngle > 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                        }\r\n                    } else if (ceilingPerceivedAngle < 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Math.abs(extraVerticalLength) > 0.00001) {\r\n            let verticalMovementLength = verticalMovement.vec3_lengthSigned(up);\r\n            let sameSignThanExtra = Math.pp_sign(extraVerticalLength) == Math.pp_sign(verticalMovementLength);\r\n            extraVerticalMovement = up.vec3_scale(extraVerticalLength, extraVerticalMovement);\r\n            if (verticalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedVerticalMovement.vec3_copy(extraVerticalMovement);\r\n            } else if (sameSignThanExtra) {\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else if (!sameSignThanExtra && (\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill ||\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill)) {\r\n                // Do not add for downhill, since it means the vertical movement was about to go away from surface and u should not cancel that\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else {\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n            }\r\n        }\r\n\r\n        if (outAdjustedVerticalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedVerticalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedVerticalMovement;\r\n    }\r\n}();\r\n\r\nCollisionCheck.prototype._adjustHorizontalMovementWithSurface = function () {\r\n    let extraHorizontalMovement = vec3_create();\r\n    let groundHorizontalDirection = vec3_create();\r\n    let ceilingHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = vec3_create();\r\n    return function _adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedHorizontalMovement) {\r\n        outAdjustedHorizontalMovement.vec3_copy(horizontalMovement);\r\n\r\n        if (verticalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedHorizontalMovement;\r\n        }\r\n\r\n        let isMovementDownward = !verticalMovement.vec3_isConcordant(up);\r\n\r\n        extraHorizontalMovement.vec3_zero();\r\n        groundHorizontalDirection.vec3_zero();\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            groundHorizontalDirection = previousCollisionRuntimeParams.myGroundNormal.vec3_removeComponentAlongAxis(up, groundHorizontalDirection);\r\n            if (!groundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                groundHorizontalDirection.vec3_normalize(groundHorizontalDirection);\r\n\r\n                let groundExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myGroundAngle));\r\n                groundExtraHorizontalLength *= (isMovementDownward) ? 1 : -1;\r\n\r\n                if (Math.abs(groundExtraHorizontalLength) > 0.00001) {\r\n                    if (isMovementDownward) {\r\n                        if (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myGroundAngle >= collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle)) {\r\n                            extraHorizontalMovement = groundHorizontalDirection.vec3_scale(groundExtraHorizontalLength, extraHorizontalMovement);\r\n                            collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            ceilingHorizontalDirection = previousCollisionRuntimeParams.myCeilingNormal.vec3_removeComponentAlongAxis(up, ceilingHorizontalDirection);\r\n            if (!ceilingHorizontalDirection.vec3_isZero(0.00001)) {\r\n                ceilingHorizontalDirection.vec3_normalize(ceilingHorizontalDirection);\r\n\r\n                let ceilingExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myCeilingAngle));\r\n                ceilingExtraHorizontalLength *= (isMovementDownward) ? -1 : 1;\r\n\r\n                if (Math.abs(ceilingExtraHorizontalLength) > 0.00001) {\r\n                    let sameDirectionAsGround = ceilingHorizontalDirection.vec3_isConcordant(groundHorizontalDirection);\r\n                    if (extraHorizontalMovement.vec3_isZero() || sameDirectionAsGround) {\r\n                        if (!isMovementDownward) {\r\n                            if (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill &&\r\n                                (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myCeilingAngle >= collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle)) {\r\n                                scaledCeilingHorizontalDirection = ceilingHorizontalDirection.vec3_scale(ceilingExtraHorizontalLength, scaledCeilingHorizontalDirection);\r\n                                if (!groundHorizontalDirection.vec3_isZero()) {\r\n                                    scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_removeComponentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n                                    scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_componentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n\r\n                                    if (scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection.vec3_isFartherAlongAxis(extraHorizontalMovement, groundHorizontalDirection)) {\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n                                        extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    } else if (!scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                                        extraHorizontalMovement = extraHorizontalMovement.vec3_add(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection, extraHorizontalMovement);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    }\r\n                                } else {\r\n                                    extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                    collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!extraHorizontalMovement.vec3_isZero()) {\r\n            if (horizontalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedHorizontalMovement.vec3_copy(extraHorizontalMovement);\r\n            } else if (extraHorizontalMovement.vec3_isConcordant(horizontalMovement)) {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            } else {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            }\r\n        }\r\n\r\n        if (outAdjustedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedHorizontalMovement;\r\n    }\r\n}();\r\n\r\n// Useless now\r\nCollisionCheck.prototype._computeExtraSurfaceVerticalMovement = function () {\r\n    let direction = vec3_create();\r\n    let tempVector = vec3_create();\r\n    return function _computeExtraSurfaceVerticalMovement(horizontalMovement, up, collisionCheckParams, collisionRuntimeParams, outExtraSurfaceVerticalMovement) {\r\n        outExtraSurfaceVerticalMovement.vec3_zero();\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myGroundNormal,\r\n                    direction, up, true);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnGroundEnabled || extraVerticalLength > 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            } else if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n                extraVerticalLength *= -1;\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnCeilingEnabled || extraVerticalLength < 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            }\r\n        }\r\n\r\n        return outExtraSurfaceVerticalMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._gatherSurfaceInfo = function () {\r\n    let verticalDirection = vec3_create();\r\n    let startOffset = vec3_create();\r\n    let endOffset = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let smallOffset = vec3_create();\r\n    let smallStartPosition = vec3_create();\r\n    let smallEndPosition = vec3_create();\r\n    let surfaceNormal = vec3_create();\r\n    let surfaceHitMaxNormal = vec3_create();\r\n    let hitFromCurrentPosition = vec3_create();\r\n    let startPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _gatherSurfaceInfo(feetPosition, height, up, forwardForPerceivedAngle, forwardForVertical, isGround, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && ((isGround && collisionCheckParams.myDebugGroundInfoActive) || (!isGround && collisionCheckParams.myDebugCeilingInfoActive));\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forwardForVertical, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        let distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnGround;\r\n        let distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeGroundInfo;\r\n        let distanceToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxOutsideDistance;\r\n        let verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnGround;\r\n        let verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeGroundInfo;\r\n        let verticalFixToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxInsideDistance;\r\n        let isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnGroundIfInsideHit;\r\n        let isBaseInsideCollisionCheckEnabled = collisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n            distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnCeiling;\r\n            distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeCeilingInfo;\r\n            distanceToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxOutsideDistance;\r\n            verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnCeiling;\r\n            verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeCeilingInfo;\r\n            verticalFixToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxInsideDistance;\r\n            isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnCeilingIfInsideHit;\r\n            isBaseInsideCollisionCheckEnabled = collisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        }\r\n\r\n        startOffset = verticalDirection.vec3_scale(Math.max(verticalFixToBeOnSurface, verticalFixToComputeSurfaceInfo, verticalFixToFindSurfaceDistance, 0.00001), startOffset);\r\n        endOffset = verticalDirection.vec3_negate(endOffset).vec3_scale(Math.max(distanceToBeOnSurface, distanceToComputeSurfaceInfo, distanceToFindSurfaceDistance, 0.00001), endOffset);\r\n\r\n        heightOffset.vec3_zero();\r\n        if (!isGround) {\r\n            heightOffset = up.vec3_scale(height, heightOffset);\r\n        }\r\n\r\n        smallOffset = verticalDirection.vec3_scale(0.0001, smallOffset);\r\n\r\n        let isOnSurface = false;\r\n        let surfaceAngle = 0;\r\n        let surfacePerceivedAngle = 0;\r\n        surfaceNormal.vec3_zero();\r\n\r\n        let surfaceHitMaxAngle = 0;\r\n        surfaceHitMaxNormal.vec3_zero();\r\n\r\n        let surfaceDistance = null;\r\n        let isBaseInsideCollision = checkPositions.length > 0;\r\n\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n            currentPosition.vec3_add(heightOffset, currentPosition);\r\n\r\n            let baseHitIsInsideCollision = false;\r\n            if (isBaseInsideCollisionCheckEnabled) {\r\n                smallStartPosition = currentPosition.vec3_add(smallOffset, smallStartPosition);\r\n                smallEndPosition = currentPosition.vec3_sub(smallOffset, smallEndPosition);\r\n\r\n                let origin = smallStartPosition;\r\n                direction = smallEndPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    baseHitIsInsideCollision = raycastResult.myHits[0].myIsInsideCollision;\r\n                }\r\n            }\r\n\r\n            isBaseInsideCollision &&= baseHitIsInsideCollision;\r\n\r\n            if (!baseHitIsInsideCollision) {\r\n                startPosition = currentPosition.vec3_add(startOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(endOffset, endPosition);\r\n\r\n                let origin = startPosition;\r\n                direction = endPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    hitFromCurrentPosition = raycastResult.myHits[0].myPosition.vec3_sub(currentPosition, hitFromCurrentPosition);\r\n                    let hitFromCurrentPositionLength = hitFromCurrentPosition.vec3_lengthSigned(verticalDirection);\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToBeOnSurface + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToBeOnSurface + 0.00001)) {\r\n                        isOnSurface = true;\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToComputeSurfaceInfo + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToComputeSurfaceInfo + 0.00001)) {\r\n                        let currentSurfaceNormal = raycastResult.myHits[0].myNormal;\r\n                        surfaceNormal.vec3_add(currentSurfaceNormal, surfaceNormal);\r\n\r\n                        let surfaceHitAngle = currentSurfaceNormal.vec3_angle(verticalDirection);\r\n                        if (surfaceHitAngle > surfaceHitMaxAngle) {\r\n                            surfaceHitMaxAngle = surfaceHitAngle;\r\n                            surfaceHitMaxNormal.vec3_copy(currentSurfaceNormal);\r\n                        }\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToFindSurfaceDistance + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToFindSurfaceDistance + 0.00001)) {\r\n                        if (surfaceDistance == null) {\r\n                            surfaceDistance = -hitFromCurrentPositionLength;\r\n                        } else {\r\n                            if (Math.abs(hitFromCurrentPositionLength) < Math.abs(surfaceDistance)) {\r\n                                surfaceDistance = -hitFromCurrentPositionLength;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isOnSurfaceIfInsideHit) {\r\n                isOnSurface = true;\r\n            }\r\n        }\r\n\r\n        if (!surfaceNormal.vec3_isZero()) {\r\n            surfaceNormal.vec3_normalize(surfaceNormal);\r\n            surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n\r\n            if (surfaceAngle <= 0.0001) {\r\n                surfaceAngle = 0;\r\n                surfaceNormal.vec3_copy(verticalDirection);\r\n            } else if (surfaceAngle >= 180 - 0.0001) {\r\n                surfaceAngle = 180;\r\n                surfaceNormal = verticalDirection.vec3_negate(surfaceNormal);\r\n            }\r\n\r\n            surfacePerceivedAngle = this.computeSurfacePerceivedAngle(surfaceNormal, forwardForPerceivedAngle, up, isGround);\r\n        }\r\n\r\n        if (isGround) {\r\n            collisionRuntimeParams.myRealIsOnGround = isOnSurface;\r\n\r\n            collisionRuntimeParams.myGroundAngle = surfaceAngle;\r\n            collisionRuntimeParams.myGroundPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myGroundNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myGroundHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myGroundDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myGroundIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnGroundMaxSurfaceAngle == null || collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myIsOnGroundMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnGround = isOnSurface;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myRealIsOnCeiling = isOnSurface;\r\n\r\n            collisionRuntimeParams.myCeilingAngle = surfaceAngle;\r\n            collisionRuntimeParams.myCeilingPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myCeilingNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myCeilingHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myCeilingDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myCeilingIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnCeilingMaxSurfaceAngle == null || collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myIsOnCeilingMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnCeiling = isOnSurface;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype.computeSurfacePerceivedAngle = function () {\r\n    let forwardOnSurface = vec3_create();\r\n    let verticalDirection = vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n        surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n        let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}();\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_surfaceTooSteep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_computeExtraSurfaceVerticalMovement\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_gatherSurfaceInfo\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_updateSurfaceInfo\", { enumerable: false });", "import { RaycastHit } from \"../../../../cauldron/physics/physics_raycast_data\";\r\nimport { quat2_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CharacterCollisionResults {\r\n\r\n    constructor() {\r\n        this.myCheckType = null;\r\n\r\n        this.myTransformResults = new CharacterCollisionTransformResults();\r\n\r\n        this.myMovementResults = new CharacterCollisionMovementResults();\r\n        this.myHorizontalMovementResults = new CharacterCollisionMovementResults();\r\n        this.myVerticalMovementResults = new CharacterCollisionMovementResults();\r\n\r\n        this.myTeleportResults = new CharacterCollisionTeleportResults();\r\n\r\n        this.myCheckTransformResults = new CharacterCollisionCheckTransformResults();\r\n\r\n        this.myWallSlideResults = new CharacterCollisionWallSlideResults();\r\n\r\n        this.myGroundInfo = new CharacterCollisionSurfaceInfo();\r\n        this.myCeilingInfo = new CharacterCollisionSurfaceInfo();\r\n\r\n        this.myGroundResults = new CharacterCollisionSurfaceResults();\r\n        this.myCeilingResults = new CharacterCollisionSurfaceResults();\r\n\r\n        this.mySplitMovementResults = new CharacterCollisionSplitMovementResults();\r\n\r\n        this.myDebugResults = new CharacterCollisionDebugResults();\r\n\r\n        this.myInternalResults = new CharacterCollisionInternalResults();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterCollisionCheckType = {\r\n    CHECK_MOVEMENT: 0,\r\n    CHECK_TELEPORT: 1,\r\n    CHECK_TRANSFORM: 2,\r\n    UPDATE_SURFACE_INFO: 3,\r\n    UPDATE_GROUND_INFO: 4,\r\n    UPDATE_CEILING_INFO: 5\r\n};\r\n\r\nexport class CharacterCollisionSurfaceInfo {\r\n\r\n    constructor() {\r\n        this.myIsOnSurface = false;\r\n\r\n        this.mySurfaceAngle = 0;\r\n        this.mySurfacePerceivedAngle = 0;\r\n        this.mySurfaceNormal = vec3_create();\r\n\r\n        this.mySurfaceHitMaxAngle = 0;\r\n        this.mySurfaceHitMaxNormal = vec3_create();\r\n\r\n        this.mySurfaceDistance = null;\r\n\r\n        this.myIsBaseInsideCollision = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionWallSlideResults {\r\n\r\n    constructor() {\r\n        this.myHasSlid = false;\r\n        this.mySlideMovementAngle = 0;          // Signed angle between the start movement and the wall slide movement, basically telling you how much u had to change direction to slide\r\n        this.mySlideMovementWallAngle = 0;      // Signed angle between the inverted surface normal and the wall slide movement\r\n        this.myWallNormal = vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionTransformResults {\r\n\r\n    constructor() {\r\n        this.myStartTransformQuat = quat2_create();\r\n        this.myEndTransformQuat = quat2_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionMovementResults {\r\n\r\n    constructor() {\r\n        this.myStartMovement = vec3_create();\r\n        this.myEndMovement = vec3_create();\r\n        this.myMovementFailed = false;\r\n        this.myIsColliding = false;\r\n        this.myReferenceCollisionHit = new RaycastHit();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionTeleportResults {\r\n\r\n    constructor() {\r\n        this.myStartTeleportTransformQuat = quat2_create();\r\n        this.myEndTeleportTransformQuat = quat2_create();\r\n        this.myTeleportFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionCheckTransformResults {\r\n\r\n    constructor() {\r\n        this.myStartCheckTransformQuat = quat2_create();\r\n        this.myEndCheckTransformQuat = quat2_create();\r\n        this.myCheckTransformFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionSurfaceResults {\r\n\r\n    constructor() {\r\n        this.myHasSnappedOnSurface = false;\r\n        this.myHasPoppedOutSurface = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionSplitMovementResults {\r\n\r\n    constructor() {\r\n        this.myStepsToPerform = 0;\r\n        this.myStepsPerformed = 0;\r\n        this.myMovementInterrupted = false;\r\n        this.myMovementChecked = vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionDebugResults {\r\n\r\n    constructor() {\r\n        this._myRaycastsPerformed = 0;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionInternalResults {\r\n\r\n    constructor() {\r\n        this.myLastRelevantStartHorizontalMovement = vec3_create();\r\n        this.myLastRelevantAdjustedStartHorizontalMovement = vec3_create();\r\n        this.myLastRelevantEndHorizontalMovement = vec3_create();\r\n\r\n        this.myLastRelevantStartVerticalMovement = vec3_create();\r\n        this.myLastRelevantAdjustedStartVerticalMovement = vec3_create();\r\n        this.myLastRelevantEndVerticalMovement = vec3_create();\r\n\r\n        this.myLastRelevantHasWallSlid = false;\r\n        this.myHasWallSlidTowardOppositeDirection = false;\r\n        this.myLastRelevantWallSlideFlickerPrevented = false;\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        this.myWallSlide90DegreesDirectionSign = 0;\r\n        this.myWallSlide90DegreesRecomputeDirectionSign = true;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterCollisionResults.prototype.reset = function reset() {\r\n    this.myCheckType = null;\r\n\r\n    this.myTransformResults.reset();\r\n\r\n    this.myMovementResults.reset();\r\n    this.myHorizontalMovementResults.reset();\r\n    this.myVerticalMovementResults.reset();\r\n\r\n    this.myTeleportResults.reset();\r\n\r\n    this.myCheckTransformResults.reset();\r\n\r\n    this.myWallSlideResults.reset();\r\n\r\n    this.myGroundInfo.reset();\r\n    this.myCeilingInfo.reset();\r\n\r\n    this.myGroundResults.reset();\r\n    this.myCeilingResults.reset();\r\n\r\n    this.mySplitMovementResults.reset();\r\n\r\n    this.myInternalResults.reset();\r\n};\r\n\r\nCharacterCollisionResults.prototype.copy = function copy(other) {\r\n    this.myCheckType = other.myCheckType;\r\n\r\n    this.myTransformResults.copy(other.myTransformResults);\r\n\r\n    this.myMovementResults.copy(other.myMovementResults);\r\n    this.myHorizontalMovementResults.copy(other.myHorizontalMovementResults);\r\n    this.myVerticalMovementResults.copy(other.myVerticalMovementResults);\r\n\r\n    this.myTeleportResults.copy(other.myTeleportResults);\r\n\r\n    this.myCheckTransformResults.copy(other.myCheckTransformResults);\r\n\r\n    this.myWallSlideResults.copy(other.myWallSlideResults);\r\n\r\n    this.myGroundInfo.copy(other.myGroundInfo);\r\n    this.myCeilingInfo.copy(other.myCeilingInfo);\r\n\r\n    this.myGroundResults.copy(other.myGroundResults);\r\n    this.myCeilingResults.copy(other.myCeilingResults);\r\n\r\n    this.mySplitMovementResults.copy(other.mySplitMovementResults);\r\n\r\n    this.myInternalResults.copy(other.myInternalResults);\r\n};\r\n\r\nCharacterCollisionSurfaceInfo.prototype.reset = function reset() {\r\n    this.myIsOnSurface = false;\r\n\r\n    this.mySurfaceAngle = 0;\r\n    this.mySurfacePerceivedAngle = 0;\r\n    this.mySurfaceNormal.vec3_zero();\r\n\r\n    this.mySurfaceHitMaxAngle = 0;\r\n    this.mySurfaceHitMaxNormal.vec3_zero();\r\n\r\n    this.mySurfaceDistance = null;\r\n\r\n    this.myIsBaseInsideCollision = false;\r\n};\r\n\r\nCharacterCollisionSurfaceInfo.prototype.copy = function copy(other) {\r\n    this.myIsOnSurface = other.myIsOnSurface;\r\n\r\n    this.mySurfaceAngle = other.mySurfaceAngle;\r\n    this.mySurfacePerceivedAngle = other.mySurfacePerceivedAngle;\r\n    this.mySurfaceNormal.vec3_copy(other.mySurfaceNormal);\r\n\r\n    this.mySurfaceHitMaxAngle = other.mySurfaceHitMaxAngle;\r\n    this.mySurfaceHitMaxNormal.vec3_copy(other.mySurfaceHitMaxNormal);\r\n\r\n    this.mySurfaceDistance = other.mySurfaceDistance;\r\n\r\n    this.myIsBaseInsideCollision = other.myIsBaseInsideCollision;\r\n};\r\n\r\nCharacterCollisionWallSlideResults.prototype.reset = function reset() {\r\n    this.myHasSlid = false;\r\n    this.mySlideMovementAngle = 0;\r\n    this.mySlideMovementWallAngle = 0;\r\n    this.myWallNormal.vec3_zero();\r\n};\r\n\r\nCharacterCollisionWallSlideResults.prototype.copy = function copy(other) {\r\n    this.myHasSlid = other.myHasSlid;\r\n    this.mySlideMovementAngle = other.mySlideMovementAngle;\r\n    this.mySlideMovementWallAngle = other.mySlideMovementWallAngle;\r\n    this.myWallNormal.vec3_copy(other.myWallNormal);\r\n};\r\n\r\nCharacterCollisionTransformResults.prototype.reset = function reset() {\r\n    this.myStartTransformQuat.quat2_identity();\r\n    this.myEndTransformQuat.quat2_identity();\r\n};\r\n\r\nCharacterCollisionTransformResults.prototype.copy = function copy(other) {\r\n    this.myStartTransformQuat.quat2_copy(other.myStartTransformQuat);\r\n    this.myEndTransformQuat.quat2_copy(other.myEndTransformQuat);\r\n};\r\n\r\nCharacterCollisionMovementResults.prototype.reset = function reset() {\r\n    this.myStartMovement.vec3_zero();\r\n    this.myEndMovement.vec3_zero();\r\n    this.myMovementFailed = false;\r\n    this.myIsColliding = false;\r\n    this.myReferenceCollisionHit.reset();\r\n};\r\n\r\nCharacterCollisionMovementResults.prototype.copy = function copy(other) {\r\n    this.myStartMovement.vec3_copy(other.myStartMovement);\r\n    this.myEndMovement.vec3_copy(other.myEndMovement);\r\n    this.myMovementFailed = other.myMovementFailed;\r\n    this.myIsColliding = other.myIsColliding;\r\n    this.myReferenceCollisionHit.copy(other.myReferenceCollisionHit);\r\n};\r\n\r\nCharacterCollisionTeleportResults.prototype.reset = function reset() {\r\n    this.myStartTeleportTransformQuat.quat2_identity();\r\n    this.myEndTeleportTransformQuat.quat2_identity();\r\n    this.myTeleportFailed = false;\r\n};\r\n\r\nCharacterCollisionTeleportResults.prototype.copy = function copy(other) {\r\n    this.myStartTeleportTransformQuat.quat2_copy(other.myStartTeleportTransformQuat);\r\n    this.myEndTeleportTransformQuat.quat2_copy(other.myEndTeleportTransformQuat);\r\n    this.myTeleportFailed = other.myTeleportFailed;\r\n};\r\n\r\nCharacterCollisionCheckTransformResults.prototype.reset = function reset() {\r\n    this.myStartCheckTransformQuat.quat2_identity();\r\n    this.myEndCheckTransformQuat.quat2_identity();\r\n    this.myCheckTransformFailed = false;\r\n};\r\n\r\nCharacterCollisionCheckTransformResults.prototype.copy = function copy(other) {\r\n    this.myStartCheckTransformQuat.quat2_copy(other.myStartCheckTransformQuat);\r\n    this.myEndCheckTransformQuat.quat2_copy(other.myEndCheckTransformQuat);\r\n    this.myCheckTransformFailed = other.myCheckTransformFailed;\r\n};\r\n\r\nCharacterCollisionSurfaceResults.prototype.reset = function reset() {\r\n    this.myHasSnappedOnSurface = false;\r\n    this.myHasPoppedOutSurface = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n};\r\n\r\nCharacterCollisionSurfaceResults.prototype.copy = function copy(other) {\r\n    this.myHasSnappedOnSurface = other.myHasSnappedOnSurface;\r\n    this.myHasPoppedOutSurface = other.myHasPoppedOutSurface;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = other.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n};\r\n\r\nCharacterCollisionSplitMovementResults.prototype.reset = function reset() {\r\n    this.myStepsToPerform = 0;\r\n    this.myStepsPerformed = 0;\r\n    this.myMovementInterrupted = false;\r\n    this.myMovementChecked.vec3_zero();\r\n};\r\n\r\nCharacterCollisionSplitMovementResults.prototype.copy = function copy(other) {\r\n    this.myStepsToPerform = other.myStepsToPerform;\r\n    this.myStepsPerformed = other.myStepsPerformed;\r\n    this.myMovementInterrupted = other.myMovementInterrupted;\r\n    this.myMovementChecked.vec3_copy(other.myMovementChecked);\r\n};\r\n\r\nCharacterCollisionDebugResults.prototype.reset = function reset() {\r\n    this._myRaycastsPerformed = 0;\r\n};\r\n\r\nCharacterCollisionDebugResults.prototype.copy = function copy(other) {\r\n    this._myRaycastsPerformed = other._myRaycastsPerformed;\r\n};\r\n\r\nCharacterCollisionInternalResults.prototype.reset = function reset() {\r\n};\r\n\r\nCharacterCollisionInternalResults.prototype.copy = function copy(other) {\r\n    this.myLastRelevantStartHorizontalMovement.vec3_copy(other.myLastRelevantStartHorizontalMovement);\r\n    this.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(other.myLastRelevantAdjustedStartHorizontalMovement);\r\n    this.myLastRelevantEndHorizontalMovement.vec3_copy(other.myLastRelevantEndHorizontalMovement);\r\n\r\n    this.myLastRelevantStartVerticalMovement.vec3_copy(other.myLastRelevantStartVerticalMovement);\r\n    this.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(other.myLastRelevantAdjustedStartVerticalMovement);\r\n    this.myLastRelevantEndVerticalMovement.vec3_copy(other.myLastRelevantEndVerticalMovement);\r\n\r\n    this.myLastRelevantHasWallSlid = other.myLastRelevantHasWallSlid;\r\n    this.myHasWallSlidTowardOppositeDirection = other.myHasWallSlidTowardOppositeDirection;\r\n    this.myLastRelevantWallSlideFlickerPrevented = other.myLastRelevantWallSlideFlickerPrevented;\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n    this.myWallSlide90DegreesDirectionSign = other.myWallSlide90DegreesDirectionSign;\r\n    this.myWallSlide90DegreesRecomputeDirectionSign = other.myWallSlide90DegreesRecomputeDirectionSign;\r\n};", "import { quat_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { CharacterCollisionCheckType, CharacterCollisionResults } from \"./character_collision_results\";\r\nimport { CollisionCheck } from \"./legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"./legacy/collision_check/collision_params\";\r\n\r\nlet _myCollisionChecks = new WeakMap();\r\n\r\nexport function getCollisionCheck(engine = getMainEngine()) {\r\n    return _myCollisionChecks.get(engine);\r\n}\r\n\r\nexport function setCollisionCheck(collisionCheck, engine = getMainEngine()) {\r\n    _myCollisionChecks.set(engine, collisionCheck);\r\n}\r\n\r\nexport function initBridge(engine = getMainEngine()) {\r\n    setCollisionCheck(new CollisionCheck(engine), engine);\r\n}\r\n\r\nexport let checkMovement = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = getMainEngine()) {\r\n        this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        getCollisionCheck(engine).move(movement, currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let checkTeleportToTransform = function () {\r\n    let teleportPosition = vec3_create();\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = getMainEngine()) {\r\n        this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        teleportPosition = teleportTransformQuat.quat2_getPosition(teleportPosition);\r\n        getCollisionCheck(engine).teleport(teleportPosition, teleportTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let checkTransform = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = getMainEngine()) {\r\n        this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        getCollisionCheck(engine).positionCheck(true, checkTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, checkTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let updateGroundInfo = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = getMainEngine()) {\r\n        this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        collisionCheckParams.myComputeCeilingInfoEnabled = false;\r\n        getCollisionCheck(engine).updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let updateCeilingInfo = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = getMainEngine()) {\r\n        this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        collisionCheckParams.myComputeGroundInfoEnabled = false;\r\n        getCollisionCheck(engine).updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport function convertCharacterCollisionResultsToCollisionRuntimeParams(characterCollisionResults, outCollisionRuntimeParams) {\r\n    outCollisionRuntimeParams.reset();\r\n\r\n    characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPosition);\r\n    characterCollisionResults.myTransformResults.myEndTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myNewPosition);\r\n\r\n    characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getForward(outCollisionRuntimeParams.myOriginalForward);\r\n    characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getUp(outCollisionRuntimeParams.myOriginalUp);\r\n\r\n    // Ok: outCollisionRuntimeParams.myOriginalHeight = characterCollisionResults.myOriginalHeight;\r\n\r\n    outCollisionRuntimeParams.myOriginalMovement.vec3_copy(characterCollisionResults.myMovementResults.myStartMovement);\r\n    outCollisionRuntimeParams.myFixedMovement.vec3_copy(characterCollisionResults.myMovementResults.myEndMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myIsOnGround = characterCollisionResults.myGroundInfo.myIsOnSurface;\r\n    outCollisionRuntimeParams.myGroundAngle = characterCollisionResults.myGroundInfo.mySurfaceAngle;\r\n    outCollisionRuntimeParams.myGroundPerceivedAngle = characterCollisionResults.myGroundInfo.mySurfacePerceivedAngle;\r\n    outCollisionRuntimeParams.myGroundNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceNormal);\r\n    outCollisionRuntimeParams.myGroundHitMaxAngle = characterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle;\r\n    outCollisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal);\r\n    outCollisionRuntimeParams.myGroundDistance = characterCollisionResults.myGroundInfo.mySurfaceDistance;\r\n    outCollisionRuntimeParams.myGroundIsBaseInsideCollision = characterCollisionResults.myGroundInfo.myIsBaseInsideCollision;\r\n\r\n    outCollisionRuntimeParams.myIsOnCeiling = characterCollisionResults.myCeilingInfo.myIsOnSurface;\r\n    outCollisionRuntimeParams.myCeilingAngle = characterCollisionResults.myCeilingInfo.mySurfaceAngle;\r\n    outCollisionRuntimeParams.myCeilingPerceivedAngle = characterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle;\r\n    outCollisionRuntimeParams.myCeilingNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceNormal);\r\n    outCollisionRuntimeParams.myCeilingHitMaxAngle = characterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle;\r\n    outCollisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal);\r\n    outCollisionRuntimeParams.myCeilingDistance = characterCollisionResults.myCeilingInfo.mySurfaceDistance;\r\n    outCollisionRuntimeParams.myCeilingIsBaseInsideCollision = characterCollisionResults.myCeilingInfo.myIsBaseInsideCollision;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementCanceled = characterCollisionResults.myHorizontalMovementResults.myMovementFailed;\r\n    outCollisionRuntimeParams.myIsCollidingHorizontally = characterCollisionResults.myHorizontalMovementResults.myIsColliding;\r\n    outCollisionRuntimeParams.myHorizontalCollisionHit.copy(characterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit);\r\n\r\n    outCollisionRuntimeParams.myVerticalMovementCanceled = characterCollisionResults.myVerticalMovementResults.myMovementFailed;\r\n    outCollisionRuntimeParams.myIsCollidingVertically = characterCollisionResults.myVerticalMovementResults.myIsColliding;\r\n    outCollisionRuntimeParams.myVerticalCollisionHit.copy(characterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit);\r\n\r\n    outCollisionRuntimeParams.myHasSnappedOnGround = characterCollisionResults.myGroundResults.myHasSnappedOnSurface;\r\n    outCollisionRuntimeParams.myHasSnappedOnCeiling = characterCollisionResults.myCeilingResults.myHasSnappedOnSurface;\r\n    outCollisionRuntimeParams.myHasPoppedOutGround = characterCollisionResults.myGroundResults.myHasPoppedOutSurface;\r\n    outCollisionRuntimeParams.myHasPoppedOutCeiling = characterCollisionResults.myCeilingResults.myHasPoppedOutSurface;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = characterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = characterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n    // Ok: outCollisionRuntimeParams.myHasReducedVerticalMovement = characterCollisionResults.myVerticalMovementResults.myHasMovementBeenReduced;\r\n\r\n    outCollisionRuntimeParams.myIsSliding = characterCollisionResults.myWallSlideResults.myHasSlid;\r\n    outCollisionRuntimeParams.mySlidingMovementAngle = characterCollisionResults.myWallSlideResults.mySlideMovementAngle;\r\n    outCollisionRuntimeParams.mySlidingCollisionAngle = characterCollisionResults.myWallSlideResults.mySlideMovementWallAngle;\r\n    outCollisionRuntimeParams.mySlidingWallNormal.vec3_copy(characterCollisionResults.myWallSlideResults.myWallNormal);\r\n\r\n    outCollisionRuntimeParams.myIsSlidingIntoOppositeDirection = characterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection;\r\n    outCollisionRuntimeParams.myIsSlidingFlickerPrevented = characterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented;\r\n    outCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = characterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter;\r\n    outCollisionRuntimeParams.mySliding90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign;\r\n    outCollisionRuntimeParams.mySlidingRecompute90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign;\r\n    outCollisionRuntimeParams.myLastValidIsSliding = characterCollisionResults.myInternalResults.myLastRelevantHasWallSlid;\r\n    outCollisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n\r\n    outCollisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myStartTeleportTransformQuat);\r\n    outCollisionRuntimeParams.myFixedTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myEndTeleportTransformQuat);\r\n    outCollisionRuntimeParams.myTeleportCanceled = characterCollisionResults.myTeleportResults.myTeleportFailed;\r\n\r\n    outCollisionRuntimeParams.myIsPositionOk = characterCollisionResults.myCheckTransformResults.myCheckTransformFailed;\r\n    characterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPositionCheckPosition);\r\n    characterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myFixedPositionCheckPosition);\r\n\r\n    outCollisionRuntimeParams.myIsTeleport = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_TELEPORT;\r\n    outCollisionRuntimeParams.myIsMove = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n    outCollisionRuntimeParams.myIsPositionCheck = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n\r\n    outCollisionRuntimeParams.mySplitMovementSteps = characterCollisionResults.mySplitMovementResults.myStepsToPerform;\r\n    outCollisionRuntimeParams.mySplitMovementStepsPerformed = characterCollisionResults.mySplitMovementResults.myStepsPerformed;\r\n    outCollisionRuntimeParams.mySplitMovementStop = characterCollisionResults.mySplitMovementResults.myMovementInterrupted;\r\n    outCollisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(characterCollisionResults.mySplitMovementResults.myMovementChecked);\r\n\r\n    return outCollisionRuntimeParams;\r\n}\r\n\r\nexport let convertCollisionRuntimeParamsToCharacterCollisionResults = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults) {\r\n        outCharacterCollisionResults.reset();\r\n\r\n        if (collisionRuntimeParams.myIsMove) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n        } else if (collisionRuntimeParams.myIsTeleport) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_TELEPORT;\r\n        } else if (collisionRuntimeParams.myIsPositionCheck) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n        }\r\n\r\n        rotationQuat.quat_setForward(collisionRuntimeParams.myOriginalForward, collisionRuntimeParams.myOriginalUp);\r\n        outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myOriginalPosition, rotationQuat);\r\n        outCharacterCollisionResults.myTransformResults.myEndTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myNewPosition, rotationQuat);\r\n\r\n        outCharacterCollisionResults.myMovementResults.myStartMovement.vec3_copy(collisionRuntimeParams.myOriginalMovement);\r\n        outCharacterCollisionResults.myMovementResults.myEndMovement.vec3_copy(collisionRuntimeParams.myFixedMovement);\r\n        outCharacterCollisionResults.myMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled;\r\n        outCharacterCollisionResults.myMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally || collisionRuntimeParams.myIsCollidingVertically;\r\n        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        } else if (collisionRuntimeParams.myIsCollidingVertically) {\r\n            outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n        }\r\n\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled;\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally;\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n\r\n        outCharacterCollisionResults.myVerticalMovementResults.myMovementFailed = collisionRuntimeParams.myVerticalMovementCanceled;\r\n        outCharacterCollisionResults.myVerticalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingVertically;\r\n        outCharacterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n\r\n        outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n        outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n        outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedTeleportPosition);\r\n        outCharacterCollisionResults.myTeleportResults.myTeleportFailed = collisionRuntimeParams.myTeleportCanceled;\r\n\r\n        outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n        outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalPositionCheckPosition);\r\n        outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n        outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedPositionCheckPosition);\r\n        outCharacterCollisionResults.myCheckTransformResults.myCheckTransformFailed = !collisionRuntimeParams.myIsPositionOk;\r\n\r\n        outCharacterCollisionResults.myWallSlideResults.myHasSlid = collisionRuntimeParams.myIsSliding;\r\n        outCharacterCollisionResults.myWallSlideResults.mySlideMovementAngle = collisionRuntimeParams.mySlidingMovementAngle;\r\n        outCharacterCollisionResults.myWallSlideResults.mySlideMovementWallAngle = collisionRuntimeParams.mySlidingCollisionAngle;\r\n        outCharacterCollisionResults.myWallSlideResults.myWallNormal.vec3_copy(ollisionRuntimeParams.mySlidingWallNormal);\r\n\r\n        outCharacterCollisionResults.myGroundInfo.myIsOnSurface = collisionRuntimeParams.myIsOnGround;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceAngle = collisionRuntimeParams.myGroundAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myGroundPerceivedAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myGroundNormal);\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myGroundHitMaxAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myGroundHitMaxNormal);\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceDistance = collisionRuntimeParams.myGroundDistance;\r\n        outCharacterCollisionResults.myGroundInfo.myIsBaseInsideCollision = collisionRuntimeParams.myGroundIsBaseInsideCollision;\r\n\r\n        outCharacterCollisionResults.myCeilingInfo.myIsOnSurface = collisionRuntimeParams.myIsOnCeiling;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceAngle = collisionRuntimeParams.myCeilingAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myCeilingPerceivedAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myCeilingNormal);\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myCeilingHitMaxAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myCeilingHitMaxNormal);\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceDistance = collisionRuntimeParams.myCeilingDistance;\r\n        outCharacterCollisionResults.myCeilingInfo.myIsBaseInsideCollision = collisionRuntimeParams.myCeilingIsBaseInsideCollision;\r\n\r\n        outCharacterCollisionResults.myGroundResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnGround;\r\n        outCharacterCollisionResults.myGroundResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutGround;\r\n        outCharacterCollisionResults.myCeilingResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnCeiling;\r\n        outCharacterCollisionResults.myCeilingResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutCeiling;\r\n\r\n        outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n        outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n        outCharacterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n        outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n        outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n        outCharacterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n        outCharacterCollisionResults.mySplitMovementResults.myStepsToPerform = collisionRuntimeParams.mySplitMovementSteps;\r\n        outCharacterCollisionResults.mySplitMovementResults.myStepsPerformed = collisionRuntimeParams.mySplitMovementStepsPerformed;\r\n        outCharacterCollisionResults.mySplitMovementResults.myMovementInterrupted = collisionRuntimeParams.mySplitMovementStop;\r\n        outCharacterCollisionResults.mySplitMovementResults.myMovementChecked.vec3_copy(collisionRuntimeParams.mySplitMovementMovementChecked);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndVerticalMovement);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantHasWallSlid = collisionRuntimeParams.myLastValidIsSliding;\r\n        outCharacterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection = collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter = collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign = collisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n\r\n        outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_copy(currentTransformQuat);\r\n\r\n        return outCharacterCollisionResults;\r\n    }\r\n}();\r\n\r\nexport let convertCharacterColliderSetupToCollisionCheckParams = function () {\r\n    return function convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, outCollisionCheckParams) {\r\n        outCollisionCheckParams.myHeight = characterColliderSetup.myHeight;\r\n\r\n        outCollisionCheckParams.myRadius = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius;\r\n        outCollisionCheckParams.myDistanceFromFeetToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n        outCollisionCheckParams.myDistanceFromHeadToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementStepEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementStepMaxLength = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementRadialStepAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementCheckDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckHorizontalBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalPositionCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHalfConeAngle = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle;\r\n        outCollisionCheckParams.myHalfConeSliceAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices;\r\n        outCollisionCheckParams.myCheckConeBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n        outCollisionCheckParams.myCheckConeRay = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n        outCollisionCheckParams.myHorizontalPositionCheckVerticalDirectionType = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckDirection;\r\n\r\n        outCollisionCheckParams.myCheckHeight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled;\r\n\r\n        outCollisionCheckParams.myCheckHeightVerticalMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightVerticalPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightTopMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightTopPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightConeOnCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n        outCollisionCheckParams.myCheckHeightConeOnCollisionKeepHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n        outCollisionCheckParams.myHeightCheckStepAmountMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps;\r\n        outCollisionCheckParams.myHeightCheckStepAmountPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps;\r\n        outCollisionCheckParams.myCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalSearchFartherVerticalHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n        outCollisionCheckParams.myCheckHorizontalFixedForwardEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled;\r\n        outCollisionCheckParams.myCheckHorizontalFixedForward.vec3_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward);\r\n\r\n        outCollisionCheckParams.myVerticalMovementCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled;\r\n        outCollisionCheckParams.myVerticalPositionCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled;\r\n        outCollisionCheckParams.myFeetRadius = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius;\r\n\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myCheckVerticalFixedForwardEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled;\r\n        outCollisionCheckParams.myCheckVerticalFixedForward.vec3_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward);\r\n        outCollisionCheckParams.myCheckVerticalBothDirection = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n        outCollisionCheckParams.myVerticalMovementReduceEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled;\r\n\r\n        outCollisionCheckParams.myGroundCircumferenceAddCenter = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n        outCollisionCheckParams.myGroundCircumferenceSliceAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n        outCollisionCheckParams.myGroundCircumferenceStepAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps;\r\n        outCollisionCheckParams.myGroundCircumferenceRotationPerStep = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n        outCollisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n        outCollisionCheckParams.myHorizontalBlockLayerFlags.copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags);\r\n        outCollisionCheckParams.myVerticalBlockLayerFlags.copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags);\r\n        outCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore);\r\n        outCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore);\r\n\r\n        outCollisionCheckParams.mySnapOnGroundEnabled = characterColliderSetup.myGroundSetup.mySurfaceSnapEnabled;\r\n        outCollisionCheckParams.mySnapOnGroundExtraDistance = characterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n        outCollisionCheckParams.mySnapOnCeilingEnabled = characterColliderSetup.myCeilingSetup.mySurfaceSnapEnabled;\r\n        outCollisionCheckParams.mySnapOnCeilingExtraDistance = characterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance;\r\n\r\n        outCollisionCheckParams.myGroundPopOutEnabled = characterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n        outCollisionCheckParams.myGroundPopOutExtraDistance = characterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n        outCollisionCheckParams.myCeilingPopOutEnabled = characterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled;\r\n        outCollisionCheckParams.myCeilingPopOutExtraDistance = characterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance;\r\n\r\n        outCollisionCheckParams.myGroundAngleToIgnore = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n        outCollisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myCeilingAngleToIgnore = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore;\r\n        outCollisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n        outCollisionCheckParams.myComputeGroundInfoEnabled = characterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n        outCollisionCheckParams.myComputeCeilingInfoEnabled = characterColliderSetup.myCeilingSetup.myCollectSurfaceInfo;\r\n        outCollisionCheckParams.myDistanceToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n        outCollisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled;\r\n        outCollisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled;\r\n        outCollisionCheckParams.myIsOnGroundIfInsideHit = characterColliderSetup.myGroundSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n        outCollisionCheckParams.myIsOnCeilingIfInsideHit = characterColliderSetup.myCeilingSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n        outCollisionCheckParams.myFindGroundDistanceMaxOutsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n        outCollisionCheckParams.myFindGroundDistanceMaxInsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n        outCollisionCheckParams.myFindCeilingDistanceMaxOutsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n        outCollisionCheckParams.myFindCeilingDistanceMaxInsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n        outCollisionCheckParams.myAllowGroundSteepFix = characterColliderSetup.myGroundSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAllowCeilingSteepFix = characterColliderSetup.myCeilingSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n\r\n        outCollisionCheckParams.myMustStayOnGround = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurface;\r\n        outCollisionCheckParams.myMustStayOnCeiling = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurface;\r\n        outCollisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail = characterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n        outCollisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail = characterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n        outCollisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMovementMustStayOnGroundHitAngle = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n        outCollisionCheckParams.myMovementMustStayOnCeilingHitAngle = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myTeleportMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnGround = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurface;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnGround = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurface;\r\n        outCollisionCheckParams.myTeleportMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurface;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurface;\r\n\r\n        outCollisionCheckParams.mySlidingEnabled = characterColliderSetup.myWallSlideSetup.myWallSlideEnabled;\r\n        outCollisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit;\r\n        outCollisionCheckParams.mySlidingMaxAttempts = characterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts;\r\n        outCollisionCheckParams.mySlidingCheckBothDirections = characterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections;\r\n        outCollisionCheckParams.mySlidingFlickeringPreventionType = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode;\r\n        outCollisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n        outCollisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter;\r\n        outCollisionCheckParams.mySlidingAdjustSign90Degrees = characterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign;\r\n\r\n        outCollisionCheckParams.mySplitMovementEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled;\r\n        outCollisionCheckParams.mySplitMovementMaxLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength;\r\n        outCollisionCheckParams.mySplitMovementMaxStepsEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps != null;\r\n        outCollisionCheckParams.mySplitMovementMaxSteps = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps;\r\n        outCollisionCheckParams.mySplitMovementStepEqualLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength == null;\r\n        outCollisionCheckParams.mySplitMovementStepEqualLengthMinLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength;\r\n        outCollisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnHorizontalMovementFailed;\r\n        outCollisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnVerticalMovementFailed;\r\n        outCollisionCheckParams.mySplitMovementStopCallback = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnCallback;\r\n        outCollisionCheckParams.mySplitMovementStopReturnPrevious = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopReturnPreviousResults;\r\n\r\n        outCollisionCheckParams.myPositionOffsetLocal.vec3_copy(characterColliderSetup.myAdditionalSetup.myPositionOffsetLocal);\r\n        outCollisionCheckParams.myRotationOffsetLocalQuat.quat_copy(characterColliderSetup.myAdditionalSetup.myRotationOffsetLocalQuat);\r\n\r\n        outCollisionCheckParams.myDebugActive = characterColliderSetup.myDebugSetup.myVisualDebugActive;\r\n\r\n        outCollisionCheckParams.myDebugHorizontalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive;\r\n        outCollisionCheckParams.myDebugHorizontalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive;\r\n        outCollisionCheckParams.myDebugVerticalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive;\r\n        outCollisionCheckParams.myDebugVerticalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive;\r\n        outCollisionCheckParams.myDebugSlidingActive = characterColliderSetup.myDebugSetup.myVisualDebugSlideActive;\r\n\r\n        outCollisionCheckParams.myDebugGroundInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n        outCollisionCheckParams.myDebugCeilingInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n        outCollisionCheckParams.myDebugRuntimeParamsActive = characterColliderSetup.myDebugSetup.myVisualDebugResultsActive;\r\n        outCollisionCheckParams.myDebugMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugMovementActive;\r\n\r\n        return outCollisionCheckParams;\r\n    }\r\n}()\r\n\r\nexport let CollisionCheckBridge = {\r\n    initBridge,\r\n    checkMovement,\r\n    checkTeleportToTransform,\r\n    checkTransform,\r\n    updateGroundInfo,\r\n    updateCeilingInfo,\r\n    convertCharacterCollisionResultsToCollisionRuntimeParams,\r\n    convertCollisionRuntimeParamsToCharacterCollisionResults,\r\n    convertCharacterColliderSetupToCollisionCheckParams\r\n};", "import { PhysicsLayerFlags } from \"../../../../cauldron/physics/physics_layer_flags\";\r\nimport { quat_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CharacterColliderSetup {\r\n\r\n    constructor() {\r\n        this.myHeight = 0;\r\n\r\n        this.myHorizontalCheckSetup = new CharacterColliderHorizontalCheckSetup();\r\n        this.myVerticalCheckSetup = new CharacterColliderVerticalCheckSetup();\r\n\r\n        this.myWallSlideSetup = new CharacterColliderWallSlideSetup();\r\n\r\n        this.myGroundSetup = new CharacterColliderSurfaceSetup();\r\n        this.myCeilingSetup = new CharacterColliderSurfaceSetup();\r\n\r\n        this.mySplitMovementSetup = new CharacterColliderSplitMovementSetup();\r\n\r\n        this.myAdditionalSetup = new CharacterColliderAdditionalSetup();\r\n\r\n        this.myDebugSetup = new CharacterColliderDebugSetup();\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterColliderHorizontalPositionVerticalCheckDirection = {\r\n    UPWARD: 0,      // Gives less issues with a ground based movement, but may also collide a bit more, resulting in less sliding\r\n    DOWNWARD: 1,    // Gives less issues with a ceiling based movement (unusual), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n    BOTH: 2         // Check both directions, more expensive (2x checks) and better prevent collisions, sliding more, but is more expensive and gives more issues           \r\n\r\n    //                                                                                                                                                  _\r\n    // The issues means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n    // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n    // BOTH do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n    // The better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope (like this -> /-)\r\n    // The step that is created \"on the other side\" in fact can easily be ignored thanks to the myHorizontalCheckFeetDistanceToIgnore param\r\n    // If the level is properly created the best solution should be UPWARD\r\n    // and also myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false\r\n};\r\n\r\nexport class CharacterColliderHorizontalCheckSetup {\r\n\r\n    constructor() {\r\n        this.myHorizontalCheckConeRadius = 0;\r\n        this.myHorizontalCheckConeHalfAngle = 0;\r\n\r\n        this.myHorizontalHeightCheckEnabled = false;\r\n\r\n        this.myHorizontalCheckFeetDistanceToIgnore = 0;\r\n        this.myHorizontalCheckHeadDistanceToIgnore = 0;\r\n        // These distances can be used to make the character ignore small steps (like a stair step) so they can move on it\r\n        // It also needs the surface pop out to be enabeld to then snap on the step\r\n\r\n        this.myHorizontalCheckFixedForwardEnabled = false; // This is basically only useful if the cone angle is 180 degrees\r\n        this.myHorizontalCheckFixedForward = vec3_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementCheckRadialSteps = 0;\r\n\r\n        this.myHorizontalMovementCheckSplitMovementEnabled = false;\r\n        this.myHorizontalMovementCheckSplitMovementMaxSteps = null;\r\n        this.myHorizontalMovementCheckSplitMovementMaxStepLength = null;\r\n        this.myHorizontalMovementCheckSplitMovementMinStepLength = null;\r\n\r\n        this.myHorizontalMovementCheckGetBetterReferenceHit = false;\r\n        // If the horizontal movement finds a hit it stops looking, but could end up having a bad reference collision hit\r\n        // This makes it so it will check a better hit to use later for the slide\r\n\r\n        this.myHorizontalMovementHorizontalRadialCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementHeightCheckSteps = 0;\r\n        this.myHorizontalMovementHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalMovementHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n        this.myHorizontalPositionCheckConeHalfSlices = 0;\r\n        this.myHorizontalPositionHorizontalBorderCheckEnabled = false;\r\n        this.myHorizontalPositionHorizontalRadialCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionHeightCheckSteps = 0;\r\n        this.myHorizontalPositionHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalPositionHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalCheckGetFarthestHit = false; // Not very useful but already implemented so\r\n\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = false;\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = false;\r\n        // If the horizontal check does not hit the vertical hit will be restored\r\n        // The fact that the horizontal does not hit could be due to the fact that it thinks that the collision can be ignored\r\n        // so restoring the vertical hit can be a bit safer (since u are actually colliding) but also can lead to false positive\r\n\r\n        this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false; // true gives less issues, but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionVerticalCheckDirection = CharacterColliderHorizontalPositionVerticalCheckDirection.UPWARD;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderVerticalCheckSetup {\r\n\r\n    constructor() {\r\n        this.myVerticalCheckCircumferenceRadius = 0;\r\n\r\n        this.myVerticalCheckCircumferenceSlices = 0;\r\n        this.myVerticalCheckCircumferenceCentralCheckEnabled = false;\r\n        this.myVerticalCheckCircumferenceRadialSteps = 0;\r\n        this.myVerticalCheckCircumferenceRotationPerRadialStep = 0;\r\n\r\n        this.myVerticalCheckFixedForwardEnabled = false;\r\n        this.myVerticalCheckFixedForward = vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalMovementCheckReductionEnabled = false;\r\n        this.myVerticalMovementCheckPerformCheckOnBothSides = false;\r\n\r\n        this.myVerticalPositionCheckEnabled = false;\r\n\r\n        this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = false;\r\n        // If at least one vertical raycast is valid (no hit, outside collision) is it ok if the other checks are completely inside a collision\r\n        // let you keep moving vertically if only partially inside a wall\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterColliderSlideFlickerPreventionMode = {\r\n    NONE: 0,\r\n    USE_PREVIOUS_RESULTS: 1,                // Allow some flicker before stabilizing but avoid stopping for a 1 frame flicker only (false positive), is also less expensive\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES: 2,    // Prevents most flicker apart those on almost flat surface, can have some false positive, always check when sliding into opposite direction\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES: 3, // Less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES but more false positive, always check when sliding into opposite direction\r\n    ALWAYS: 4                               // Less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES but more false positive\r\n};\r\n\r\nexport class CharacterColliderWallSlideSetup {\r\n\r\n    constructor() {\r\n        this.myWallSlideEnabled = false;\r\n\r\n        this.myWallSlideMaxAttempts = 0;\r\n\r\n        this.myCheckBothWallSlideDirections = false;\r\n        // Expensive, 2 times the checks since it basically check again on the other slide direction\r\n        // This can fix some edge cases in which u can get stuck instead of sliding\r\n        // It basically require that u also add flicker prevention\r\n\r\n        this.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.NONE;\r\n\r\n        this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        // This flag make it so the prevention is done only if it was already sliding\r\n        // This can lead to a few frames of flicker if u go toward a corner directly, but allow the movement to be more fluid, avoiding getting stuck and false positive\r\n\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        // If the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // This help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // It's especially useful if combo-ed with CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS, making it a bit less fluid but also less flickering\r\n\r\n        this.my90DegreesWallSlideAdjustDirectionSign = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderSurfaceSetup {\r\n\r\n    constructor() {\r\n        this.mySurfaceSnapEnabled = false;\r\n        this.mySurfaceSnapMaxDistance = 0;\r\n\r\n        this.mySurfacePopOutEnabled = false;\r\n        this.mySurfacePopOutMaxDistance = 0;\r\n\r\n        this.mySurfaceAngleToIgnore = 0;\r\n\r\n        this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = null;\r\n        // Between this value and mySurfaceAngleToIgnore, use the perceived angle to see if u can actually ignore the surface\r\n        // This basically means that on steep surface u could still go up by moving diagonally\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        // If the collision with the surface is above this max value, even if the surface angle is ignorable do not ignore it\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = null;\r\n        // If the collision with the surface happens during the horizontal movement check, if the horizontal movement left (total movement to perform minus hit distance)\r\n        // is above this value do not ignore it otherwise you would ignore a surface but are actually going too much inside it\r\n\r\n        this.myCollectSurfaceInfo = false;\r\n\r\n        this.myIsOnSurfaceMaxOutsideDistance = 0;\r\n        this.myIsOnSurfaceMaxInsideDistance = 0;\r\n\r\n        this.myIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnSurfaceIfBaseInsideCollision = false;\r\n\r\n        this.myCollectSurfaceNormalMaxOutsideDistance = 0;\r\n        this.myCollectSurfaceNormalMaxInsideDistance = 0;\r\n\r\n        this.myFindSurfaceDistanceMaxOutsideDistance = 0;\r\n        this.myFindSurfaceDistanceMaxInsideDistance = 0;\r\n\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        // This make it so when a character moves horizontally on a slope it also add a vertical movement so that the movement is actually on the slope plane\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = null;\r\n        // This can be used to limit the adjustment so that on steep slopes u can bounce off, or anyway don't add a huge vertical movement due to a very steep slope\r\n\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n        // This make it so when a character moves vertically on a slope (sort of sliding down the slope) it also add a horizontal movement so that the movement is actually on the slope plane\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = null;\r\n        // This can be used to make it so the movement (and therefore the slide) only happens above a certain angle, like u want to slide down only on steep surfaces\r\n\r\n        this.myMovementMustStayOnSurface = false;\r\n        this.myMovementMustStayOnSurfaceHitMaxAngle = null;\r\n        this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = false;\r\n        this.myMovementMustStayOnSurfaceAngleDownhill = null;\r\n\r\n        this.myTeleportMustBeOnSurface = false;\r\n        this.myTeleportMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myTeleportMustBeOnSurfaceAngle = null;\r\n\r\n        this.myCheckTransformMustBeOnSurface = false;\r\n        this.myCheckTransformMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myCheckTransformMustBeOnSurfaceAngle = null;\r\n\r\n        this.myRecollectSurfaceInfoOnSurfaceCheckFailed = false;\r\n        // Instead of copying the previous surface info on fail, regather them\r\n\r\n        this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = false;\r\n        // If u start on a not ignorable perceived angle (above angle to ignore) u normally can't even try to move uphill, this will let you try and see if with that movement\r\n        // you could end up in a ignorable perceived angle position\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderSplitMovementSetup {\r\n\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n\r\n        this.mySplitMovementMaxSteps = null;\r\n        this.mySplitMovementMaxStepLength = null;\r\n        this.mySplitMovementMinStepLength = null;\r\n\r\n        this.mySplitMovementStopOnHorizontalMovementFailed = false;\r\n        this.mySplitMovementStopOnVerticalMovementFailed = false;\r\n\r\n        /*\r\n        this will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.mySplitMovementStopOnCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        */\r\n\r\n        this.mySplitMovementStopReturnPreviousResults = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderAdditionalSetup {\r\n\r\n    constructor() {\r\n        this.myPositionOffsetLocal = vec3_create();\r\n        this.myRotationOffsetLocalQuat = quat_create();\r\n\r\n        /*\r\n        these will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(paramsToBeDefined)\r\n        */\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderDebugSetup {\r\n\r\n    constructor() {\r\n        this.myVisualDebugActive = false;\r\n\r\n        this.myVisualDebugMovementActive = false;\r\n\r\n        this.myVisualDebugHorizontalMovementCheckActive = false;\r\n        this.myVisualDebugHorizontalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugVerticalMovementCheckActive = false;\r\n        this.myVisualDebugVerticalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugSlideActive = false;\r\n\r\n        this.myVisualDebugGroundInfoActive = false;\r\n        this.myVisualDebugCeilingInfoActive = false;\r\n\r\n        this.myVisualDebugResultsActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterColliderSetup.prototype.copy = function copy(other) {\r\n    this.myHeight = other.myHeight;\r\n\r\n    this.myHorizontalCheckSetup.copy(other.myHorizontalCheckSetup);\r\n    this.myVerticalCheckSetup.copy(other.myVerticalCheckSetup);\r\n\r\n    this.myWallSlideSetup.copy(other.myWallSlideSetup);\r\n\r\n    this.myGroundSetup.copy(other.myGroundSetup);\r\n    this.myCeilingSetup.copy(other.myCeilingSetup);\r\n\r\n    this.mySplitMovementSetup.copy(other.mySplitMovementSetup);\r\n\r\n    this.myAdditionalSetup.copy(other.myAdditionalSetup);\r\n\r\n    this.myDebugSetup.copy(other.myDebugSetup);\r\n};\r\n\r\nCharacterColliderHorizontalCheckSetup.prototype.copy = function copy(other) {\r\n    this.myHorizontalCheckConeRadius = other.myHorizontalCheckConeRadius;\r\n    this.myHorizontalCheckConeHalfAngle = other.myHorizontalCheckConeHalfAngle;\r\n\r\n    this.myHorizontalHeightCheckEnabled = other.myHorizontalHeightCheckEnabled;\r\n\r\n    this.myHorizontalCheckFeetDistanceToIgnore = other.myHorizontalCheckFeetDistanceToIgnore;\r\n    this.myHorizontalCheckHeadDistanceToIgnore = other.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n    this.myHorizontalCheckFixedForwardEnabled = other.myHorizontalCheckFixedForwardEnabled;\r\n    this.myHorizontalCheckFixedForward.vec3_copy(other.myHorizontalCheckFixedForward);\r\n\r\n    this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n\r\n    this.myHorizontalMovementCheckRadialSteps = other.myHorizontalMovementCheckRadialSteps;\r\n\r\n    this.myHorizontalMovementCheckSplitMovementEnabled = other.myHorizontalMovementCheckSplitMovementEnabled;\r\n    this.myHorizontalMovementCheckSplitMovementMaxSteps = other.myHorizontalMovementCheckSplitMovementMaxSteps;\r\n    this.myHorizontalMovementCheckSplitMovementMaxStepLength = other.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n    this.myHorizontalMovementCheckSplitMovementMinStepLength = other.myHorizontalMovementCheckSplitMovementMinStepLength;\r\n\r\n    this.myHorizontalMovementCheckGetBetterReferenceHit = other.myHorizontalMovementCheckGetBetterReferenceHit;\r\n\r\n    this.myHorizontalMovementHorizontalRadialCheckEnabled = other.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCheckEnabled = other.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n\r\n    this.myHorizontalMovementHeightCheckSteps = other.myHorizontalMovementHeightCheckSteps;\r\n    this.myHorizontalMovementHeightVerticalCheckEnabled = other.myHorizontalMovementHeightVerticalCheckEnabled;\r\n    this.myHorizontalMovementHeightHorizontalCheckEnabled = other.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalStraightCheckEnabled = other.myHorizontalMovementVerticalStraightCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n    this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n    this.myHorizontalPositionCheckConeHalfSlices = other.myHorizontalPositionCheckConeHalfSlices;\r\n    this.myHorizontalPositionHorizontalBorderCheckEnabled = other.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n    this.myHorizontalPositionHorizontalRadialCheckEnabled = other.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n\r\n    this.myHorizontalPositionHeightCheckSteps = other.myHorizontalPositionHeightCheckSteps;\r\n    this.myHorizontalPositionHeightHorizontalCheckEnabled = other.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n    this.myHorizontalPositionHeightVerticalCheckEnabled = other.myHorizontalPositionHeightVerticalCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalStraightCheckEnabled = other.myHorizontalPositionVerticalStraightCheckEnabled;\r\n    this.myHorizontalPositionVerticalStraightCentralCheckEnabled = other.myHorizontalPositionVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalCheckGetFarthestHit = other.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = other.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n    this.myHorizontalPositionVerticalCheckDirection = other.myHorizontalPositionVerticalCheckDirection;\r\n\r\n    this.myHorizontalCheckBlockLayerFlags.setMask(other.myHorizontalCheckBlockLayerFlags.getMask());\r\n    this.myHorizontalCheckObjectsToIgnore.pp_copy(other.myHorizontalCheckObjectsToIgnore);\r\n};\r\n\r\nCharacterColliderVerticalCheckSetup.prototype.copy = function copy(other) {\r\n    this.myVerticalCheckCircumferenceRadius = other.myVerticalCheckCircumferenceRadius;\r\n\r\n    this.myVerticalCheckCircumferenceSlices = other.myVerticalCheckCircumferenceSlices;\r\n    this.myVerticalCheckCircumferenceCentralCheckEnabled = other.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n    this.myVerticalCheckCircumferenceRadialSteps = other.myVerticalCheckCircumferenceRadialSteps;\r\n    this.myVerticalCheckCircumferenceRotationPerRadialStep = other.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n\r\n    this.myVerticalCheckFixedForwardEnabled = other.myVerticalCheckFixedForwardEnabled;\r\n    this.myVerticalCheckFixedForward.vec3_copy(other.myVerticalCheckFixedForward);\r\n\r\n    this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n    this.myVerticalMovementCheckReductionEnabled = other.myVerticalMovementCheckReductionEnabled;\r\n    this.myVerticalMovementCheckPerformCheckOnBothSides = other.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n    this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n\r\n    this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = other.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n    this.myVerticalCheckBlockLayerFlags.setMask(other.myVerticalCheckBlockLayerFlags.getMask());\r\n    this.myVerticalCheckObjectsToIgnore.pp_copy(other.myVerticalCheckObjectsToIgnore);\r\n};\r\n\r\nCharacterColliderWallSlideSetup.prototype.copy = function copy(other) {\r\n    this.myWallSlideEnabled = other.myWallSlideEnabled;\r\n\r\n    this.myWallSlideMaxAttempts = other.myWallSlideMaxAttempts;\r\n\r\n    this.myCheckBothWallSlideDirections = other.myCheckBothWallSlideDirections;\r\n\r\n    this.myWallSlideFlickerPreventionMode = other.myWallSlideFlickerPreventionMode;\r\n\r\n    this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = other.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n\r\n    this.my90DegreesWallSlideAdjustDirectionSign = other.my90DegreesWallSlideAdjustDirectionSign;\r\n};\r\n\r\nCharacterColliderSurfaceSetup.prototype.copy = function copy(other) {\r\n    this.mySurfaceSnapEnabled = other.mySurfaceSnapEnabled;\r\n    this.mySurfaceSnapMaxDistance = other.mySurfaceSnapMaxDistance;\r\n\r\n    this.mySurfacePopOutEnabled = other.mySurfacePopOutEnabled;\r\n    this.mySurfacePopOutMaxDistance = other.mySurfacePopOutMaxDistance;\r\n\r\n    this.mySurfaceAngleToIgnore = other.mySurfaceAngleToIgnore;\r\n    this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = other.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n    this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = other.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n    this.myCollectSurfaceInfo = other.myCollectSurfaceInfo;\r\n\r\n    this.myIsOnSurfaceMaxOutsideDistance = other.myIsOnSurfaceMaxOutsideDistance;\r\n    this.myIsOnSurfaceMaxInsideDistance = other.myIsOnSurfaceMaxInsideDistance;\r\n\r\n    this.myIsBaseInsideCollisionCheckEnabled = other.myIsBaseInsideCollisionCheckEnabled;\r\n    this.myIsOnSurfaceIfBaseInsideCollision = other.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n    this.myCollectSurfaceNormalMaxOutsideDistance = other.myCollectSurfaceNormalMaxOutsideDistance;\r\n    this.myCollectSurfaceNormalMaxInsideDistance = other.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    this.myFindSurfaceDistanceMaxOutsideDistance = other.myFindSurfaceDistanceMaxOutsideDistance;\r\n    this.myFindSurfaceDistanceMaxInsideDistance = other.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n    this.myMovementMustStayOnSurface = other.myMovementMustStayOnSurface;\r\n    this.myMovementMustStayOnSurfaceHitMaxAngle = other.myMovementMustStayOnSurfaceHitMaxAngle;\r\n    this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = other.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n    this.myMovementMustStayOnSurfaceAngleDownhill = other.myMovementMustStayOnSurfaceAngleDownhill;\r\n\r\n    this.myTeleportMustBeOnSurface = other.myTeleportMustBeOnSurface;\r\n    this.myTeleportMustBeOnIgnorableSurfaceAngle = other.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n    this.myTeleportMustBeOnSurfaceAngle = other.myTeleportMustBeOnSurfaceAngle;\r\n\r\n    this.myCheckTransformMustBeOnSurface = other.myCheckTransformMustBeOnSurface;\r\n    this.myCheckTransformMustBeOnIgnorableSurfaceAngle = other.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n    this.myCheckTransformMustBeOnSurfaceAngle = other.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n    this.myRecollectSurfaceInfoOnSurfaceCheckFailed = other.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n\r\n    this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = other.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n};\r\n\r\nCharacterColliderSplitMovementSetup.prototype.copy = function copy(other) {\r\n    this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n    this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n    this.mySplitMovementMaxStepLength = other.mySplitMovementMaxStepLength;\r\n    this.mySplitMovementMinStepLength = other.mySplitMovementMinStepLength;\r\n\r\n    this.mySplitMovementStopOnHorizontalMovementFailed = other.mySplitMovementStopOnHorizontalMovementFailed;\r\n    this.mySplitMovementStopOnVerticalMovementFailed = other.mySplitMovementStopOnVerticalMovementFailed;\r\n\r\n    /*\r\n    this.mySplitMovementStopOnCallback = other.mySplitMovementStopOnCallback;\r\n    */\r\n\r\n    this.mySplitMovementStopReturnPreviousResults = other.mySplitMovementStopReturnPreviousResults;\r\n};\r\n\r\nCharacterColliderAdditionalSetup.prototype.copy = function copy(other) {\r\n    this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n    this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n    /*\r\n    this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n    this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n    this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n    */\r\n};\r\n\r\nCharacterColliderDebugSetup.prototype.copy = function copy(other) {\r\n    this.myVisualDebugActive = other.myVisualDebugActive;\r\n\r\n    this.myVisualDebugMovementActive = other.myVisualDebugMovementActive;\r\n\r\n    this.myVisualDebugHorizontalMovementCheckActive = other.myVisualDebugHorizontalMovementCheckActive;\r\n    this.myVisualDebugHorizontalPositionCheckActive = other.myVisualDebugHorizontalPositionCheckActive;\r\n\r\n    this.myVisualDebugVerticalMovementCheckActive = other.myVisualDebugVerticalMovementCheckActive;\r\n    this.myVisualDebugVerticalPositionCheckActive = other.myVisualDebugVerticalPositionCheckActive;\r\n\r\n    this.myVisualDebugSlideActive = other.myVisualDebugSlideActive;\r\n\r\n    this.myVisualDebugGroundInfoActive = other.myVisualDebugGroundInfoActive;\r\n    this.myVisualDebugCeilingInfoActive = other.myVisualDebugCeilingInfoActive;\r\n\r\n    this.myVisualDebugResultsActive = other.myVisualDebugResultsActive;\r\n};", "import { PhysicsLayerFlags } from \"../../../../cauldron/physics/physics_layer_flags\";\r\nimport { CharacterColliderSetup, CharacterColliderSlideFlickerPreventionMode } from \"./character_collider_setup\";\r\n\r\nexport let CharacterColliderSetupSimplifiedCreationAccuracyLevel = {\r\n    VERY_LOW: 0,\r\n    LOW: 1,\r\n    MEDIUM: 2,\r\n    HIGH: 3,\r\n    VERY_HIGH: 4\r\n};\r\n\r\nexport class CharacterColliderSetupSimplifiedCreationParams {\r\n\r\n    constructor() {\r\n        this.myHeight = 0;\r\n        this.myRadius = 0;\r\n\r\n        this.myAccuracyLevel = CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW;\r\n\r\n        this.myIsPlayer = false;\r\n\r\n        this.myCheckOnlyFeet = false;\r\n\r\n        this.myAverageSpeed = 0;\r\n\r\n        this.myCanFly = false;\r\n\r\n        this.myShouldSlideAgainstWall = false;\r\n\r\n        this.myCollectGroundInfo = false;\r\n        this.myShouldSnapOnGround = false;\r\n        this.myMaxDistanceToSnapOnGround = 0;\r\n        this.myMaxWalkableGroundAngle = 0;\r\n        this.myMaxWalkableGroundStepHeight = 0;\r\n        this.myShouldNotFallFromEdges = false;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n\r\n        this.myHorizontalCheckDebugActive = false;\r\n        this.myVerticalCheckDebugActive = false;\r\n    }\r\n}\r\n\r\nexport function createCharacterColliderSetupSimplified(simplifiedCreationParams, outCharacterColliderSetup = new CharacterColliderSetup()) {\r\n    outCharacterColliderSetup.myHeight = simplifiedCreationParams.myHeight;\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius = simplifiedCreationParams.myRadius;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius = simplifiedCreationParams.myRadius / 2;\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled = true;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    if (!simplifiedCreationParams.myCheckOnlyFeet || simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n    }\r\n\r\n    outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled = simplifiedCreationParams.myShouldSlideAgainstWall;\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore = simplifiedCreationParams.myMaxWalkableGroundStepHeight;\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround > 0 ?\r\n        simplifiedCreationParams.myMaxDistanceToSnapOnGround : (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance = Math.max(outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance, outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore);\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = simplifiedCreationParams.myRadius;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo = simplifiedCreationParams.myCollectGroundInfo || simplifiedCreationParams.myMaxWalkableGroundAngle > 0;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapEnabled = simplifiedCreationParams.myShouldSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled = true;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore = simplifiedCreationParams.myMaxWalkableGroundAngle;\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = true;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance = 0.001;\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance = 0.001;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance = (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore = outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceInfo = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore = outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    }\r\n\r\n    if (simplifiedCreationParams.myShouldNotFallFromEdges) {\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurface = true;\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill = Math.max(60, outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore);\r\n    }\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags.copy(simplifiedCreationParams.myHorizontalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags.copy(simplifiedCreationParams.myVerticalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myVerticalCheckObjectsToIgnore);\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myHorizontalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myVerticalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive = true;\r\n    }\r\n\r\n\r\n\r\n    // ACCURACY\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 60;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled = true;\r\n\r\n        // Activate based on speed?\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 4;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 1;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 1;\r\n        outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.NONE;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 2;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.MEDIUM) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 2;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 6;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 3;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = true;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = true;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 4;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH) {\r\n        if (outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled) {\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit = true;\r\n\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n        }\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 8;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 4;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = true;\r\n        }\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n\r\n\r\n\r\n        let fps = 90;\r\n        if (simplifiedCreationParams.myAverageSpeed / fps > simplifiedCreationParams.myRadius) {\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps = Math.ceil((simplifiedCreationParams.myAverageSpeed / fps) / simplifiedCreationParams.myRadius);\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength = simplifiedCreationParams.myRadius;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_HIGH) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n    }\r\n\r\n    return outCharacterColliderSetup;\r\n}\r\n\r\nexport function createTeleportColliderFromMovementCollider(movementColliderSetup, outTeleportColliderSetup = new CharacterColliderSetup()) {\r\n    outTeleportColliderSetup.copy(movementColliderSetup);\r\n\r\n    outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 180;\r\n    outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices =\r\n        Math.round((outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle / movementColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle)\r\n            * movementColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices);\r\n\r\n    outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled = true;\r\n    outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    return outTeleportColliderSetup;\r\n}\r\n\r\nexport let CharacterColliderUtils = {\r\n    createCharacterColliderSetupSimplified,\r\n    createTeleportColliderFromMovementCollider\r\n}", "import { quat2_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { CharacterCollisionResults } from \"./character_collision_results\";\r\nimport { CollisionCheckBridge, getCollisionCheck } from \"./collision_check_bridge\";\r\n\r\nexport class CharacterCollisionSystem {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myLastCheckRaycastsPerformed = 0;\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        this._myMaxFrameRaycastsPerformed = 0;\r\n\r\n        this.myEngine = engine;\r\n\r\n        CollisionCheckBridge.initBridge(this.myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        getCollisionCheck(this.myEngine)._myTotalRaycasts = 0;\r\n    }\r\n\r\n    checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateSurfaceInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        let currentFramePerformedRaycasts = this._myCurrentFrameRaycastsPerformed;\r\n\r\n        this.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n        this.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - currentFramePerformedRaycasts;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterCollisionSystem.prototype.checkTeleportToPosition = function () {\r\n    let teleportTransformQuat = quat2_create();\r\n    return function checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults) {\r\n        teleportTransformQuat.quat2_copy(currentTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n    };\r\n}();", "let _myCharacterCollisionSystems = new WeakMap();\r\n\r\nexport function getCharacterCollisionSystem(engine = getMainEngine()) {\r\n    return _myCharacterCollisionSystems.get(engine);\r\n}\r\n\r\nexport function setCharacterCollisionSystem(characterCollisionSystem, engine = getMainEngine()) {\r\n    _myCharacterCollisionSystems.set(engine, characterCollisionSystem);\r\n}\r\n\r\nexport function removeCharacterCollisionSystem(engine = getMainEngine()) {\r\n    _myCharacterCollisionSystems.delete(engine);\r\n}\r\n\r\nexport function hasCharacterCollisionSystem(engine = getMainEngine()) {\r\n    return _myCharacterCollisionSystems.has(engine);\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { CharacterCollisionSystem } from \"../character_collision_system\";\r\nimport { getCharacterCollisionSystem, hasCharacterCollisionSystem, removeCharacterCollisionSystem, setCharacterCollisionSystem } from \"../character_collision_system_global\";\r\n\r\nexport class CharacterCollisionSystemComponent extends Component {\r\n    static TypeName = \"pp-character-collision-system\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myCharacterCollisionSystem = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!hasCharacterCollisionSystem(this.engine)) {\r\n            this._myCharacterCollisionSystem = new CharacterCollisionSystem(this.engine);\r\n\r\n            setCharacterCollisionSystem(this._myCharacterCollisionSystem, this.engine);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCharacterCollisionSystem != null) {\r\n            this._myCharacterCollisionSystem.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myCharacterCollisionSystem != null && getCharacterCollisionSystem(this.engine) == this._myCharacterCollisionSystem) {\r\n            removeCharacterCollisionSystem(this.engine);\r\n        }\r\n    }\r\n}", "export class CharacterController {\r\n\r\n    constructor() {\r\n    }\r\n}", "import { CharacterController } from \"./character_controller\";\r\n\r\nexport class SyncedCharacterController extends CharacterController {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "import { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport function computeGroundPerceivedAngle(surfaceNormal, direction, up) {\r\n    return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, true);\r\n}\r\n\r\nexport function computeCeilingPerceivedAngle(surfaceNormal, direction, up) {\r\n    return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, false);\r\n}\r\n\r\nexport let computeSurfacePerceivedAngle = function () {\r\n    let directionOnSurface = vec3_create();\r\n    let verticalDirection = vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, direction, up, isGround) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        directionOnSurface = direction.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, directionOnSurface);\r\n        surfacePerceivedAngle = directionOnSurface.vec3_angle(direction);\r\n\r\n        let isFartherOnUp = directionOnSurface.vec3_isFartherAlongAxis(direction, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}()\r\n\r\nexport let CharacterControllerUtils = {\r\n    computeGroundPerceivedAngle,\r\n    computeCeilingPerceivedAngle,\r\n    computeSurfacePerceivedAngle\r\n};", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { CharacterController } from \"../character_controller\";\r\n\r\nexport class CharacterControllerComponent extends Component {\r\n    static TypeName = \"pp-character-controller\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myCharacterController = new CharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCharacterController.update(dt);\r\n    }\r\n\r\n    getCharacterController() {\r\n        return this._myCharacterController;\r\n    }\r\n}", "import { SyncedCharacterController } from \"../synced_character_controller\";\r\n\r\nexport class PlayerCharacterController extends SyncedCharacterController {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "import { SyncedCharacterController } from \"../synced_character_controller\";\r\n\r\nexport class PlayerHeadCharacterController extends SyncedCharacterController {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "import { SyncedCharacterController } from \"../synced_character_controller\";\r\n\r\nexport class PlayerHandCharacterController extends SyncedCharacterController {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerCharacterController } from \"../player_character_controller\";\r\n\r\nexport class PlayerCharacterControllerComponent extends Component {\r\n    static TypeName = \"pp-player-character-controller\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerCharacterController = new PlayerCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerCharacterController() {\r\n        return this._myPlayerCharacterController;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerHeadCharacterController } from \"../player_head_character_controller\";\r\n\r\nexport class PlayerHeadCharacterControllerComponent extends Component {\r\n    static TypeName = \"pp-player-head-character-controller\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHeadCharacterController = new PlayerHeadCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerHeadCharacterController() {\r\n        return this._myPlayerHeadCharacterController;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerHandCharacterController } from \"../player_hand_character_controller\";\r\n\r\nexport class PlayerHandCharacterControllerComponent extends Component {\r\n    static TypeName = \"pp-player-hand-character-controller\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerHandCharacterController = new PlayerHandCharacterController();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHandCharacterController.update(dt);\r\n    }\r\n\r\n    getPlayerHandCharacterController() {\r\n        return this._myPlayerHandCharacterController;\r\n    }\r\n}", "import { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\n\r\nlet _myGlobalGravityAccelerations = new WeakMap();\r\nlet _myGlobalGravityDirections = new WeakMap();\r\n\r\nexport function getGlobalGravityAcceleration(engine = getMainEngine()) {\r\n    return _myGlobalGravityAccelerations.get(engine);\r\n}\r\n\r\nexport function setGlobalGravityAcceleration(globalGravityAcceleration, engine = getMainEngine()) {\r\n    _myGlobalGravityAccelerations.set(engine, globalGravityAcceleration);\r\n}\r\n\r\nexport function removeGlobalGravityAcceleration(engine = getMainEngine()) {\r\n    _myGlobalGravityAccelerations.delete(engine);\r\n}\r\n\r\nexport function hasGlobalGravityAcceleration(engine = getMainEngine()) {\r\n    return _myGlobalGravityAccelerations.has(engine);\r\n}\r\n\r\nexport function getGlobalGravityDirection(engine = getMainEngine()) {\r\n    return _myGlobalGravityDirections.get(engine);\r\n}\r\n\r\nexport function setGlobalGravityDirection(globalGravityDirection, engine = getMainEngine()) {\r\n    _myGlobalGravityDirections.set(engine, globalGravityDirection);\r\n}\r\n\r\nexport function removeGlobalGravityDirection(engine = getMainEngine()) {\r\n    _myGlobalGravityDirections.delete(engine);\r\n}\r\n\r\nexport function hasGlobalGravityDirection(engine = getMainEngine()) {\r\n    return _myGlobalGravityDirections.has(engine);\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\n\r\nexport class GlobalGravityComponent extends Component {\r\n    static TypeName = \"pp-global-gravity\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n}", "export class PlayerLocomotionSmooth {\r\n\r\n    constructor() {\r\n    }\r\n}", "export class PlayerLocomotionRotate {\r\n\r\n    constructor() {\r\n    }\r\n}", "export class PlayerLocomotionGravity {\r\n\r\n    constructor() {\r\n    }\r\n}", "export class PlayerLocomotionTeleport {\r\n\r\n    constructor() {\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerLocomotionTeleport } from \"../teleport/player_locomotion_teleport\";\r\n\r\nexport class PlayerLocomotionTeleportComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion-teleport\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionTeleport.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionTeleport() {\r\n        return this._myPlayerLocomotionTeleport;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerLocomotionSmooth } from \"../player_locomotion_smooth\";\r\n\r\nexport class PlayerLocomotionSmoothComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion-smooth\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionSmooth = new PlayerLocomotionSmooth();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionSmooth.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionSmooth() {\r\n        return this._myPlayerLocomotionSmooth;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerLocomotionRotate } from \"../player_locomotion_rotate\";\r\n\r\nexport class PlayerLocomotionRotateComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion-rotate\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionRotate = new PlayerLocomotionRotate();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionRotate.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionRotate() {\r\n        return this._myPlayerLocomotionRotate;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PlayerLocomotionGravity } from \"../player_locomotion_gravity\";\r\n\r\nexport class PlayerLocomotionGravityComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion-gravity\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n\r\n    start() {\r\n        this._myPlayerLocomotionGravity = new PlayerLocomotionGravity();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerLocomotionGravity.update(dt);\r\n    }\r\n\r\n    getPlayerLocomotionGravity() {\r\n        return this._myPlayerLocomotionGravity;\r\n    }\r\n}", "import { vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport let EPSILON = Math.PP_EPSILON;\r\nexport let EPSILON_DEGREES = Math.PP_EPSILON_DEGREES;\r\n\r\nexport let computeSurfacePerceivedAngle = function () {\r\n    let forwardOnSurface = vec3_create();\r\n    let verticalDirection = vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n        surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n        let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}();\r\n\r\nexport let LocomotionUtils = {\r\n    EPSILON,\r\n    EPSILON_DEGREES,\r\n    computeSurfacePerceivedAngle\r\n};", "import { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { getReferenceSpaceType, XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { getDebugVisualManager } from \"../../../../../debug/debug_globals\";\r\nimport { quat2_create, quat_create, vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { getPlayerObjects } from \"../../../../../pp/player_objects_global\";\r\n\r\nexport class PlayerHeadManagerParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.mySessionChangeResyncEnabled = false;\r\n\r\n        this.myBlurEndResyncEnabled = false;\r\n        this.myBlurEndResyncRotation = false;\r\n\r\n        this.myResetTransformOnViewResetEnabled = true;\r\n\r\n        this.myNextEnterSessionResyncHeight = false;\r\n        this.myEnterSessionResyncHeight = false;\r\n\r\n        this.myExitSessionResyncHeight = false;\r\n        this.myExitSessionResyncVerticalAngle = false;\r\n        this.myExitSessionRemoveRightTilt = false; // For now right tilt is removed even if this setting is false, if the vertical angle has to be adjusted\r\n        this.myExitSessionAdjustMaxVerticalAngle = false;\r\n        this.myExitSessionMaxVerticalAngle = 0;\r\n\r\n        this.myHeightOffsetVRWithFloor = null;\r\n        this.myHeightOffsetVRWithoutFloor = null;\r\n        this.myHeightOffsetNonVR = null;\r\n\r\n        this.myNextEnterSessionFloorHeight = null;\r\n        this.myEnterSessionFloorHeight = null;\r\n\r\n        this.myRotateFeetKeepUp = false;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n        // Can be used to always add a bit of height, for example to compensate the fact \r\n        // that the default height is actually the eye height and you may want to also add a forehead offset\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n}\r\n\r\n// Could be intended as the generic player body manager (maybe with hands and stuff also)\r\nexport class PlayerHeadManager {\r\n\r\n    constructor(params = new PlayerHeadManagerParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myCurrentHead = getPlayerObjects(this._myParams.myEngine).myHeadNonVR;\r\n\r\n        this._mySessionChangeResyncHeadTransform = null;\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myCurrentHeadTransformQuat = quat2_create();\r\n        this._myPreviousHeadTransformQuat = quat2_create();\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0; // Needed because VR head takes some frames to get the tracked position\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer = new Timer(5, false);\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._myIsSyncedDelayCounter = 0;\r\n\r\n        this._myActive = true;\r\n\r\n        // Setup\r\n\r\n        this._myResyncCounterFrames = 3;\r\n        this._myIsSyncedDelayCounterFrames = 1;\r\n    }\r\n\r\n    start() {\r\n        this._updateHeightOffset();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, true, this._myEngine);\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    getPlayer() {\r\n        return getPlayerObjects(this._myParams.myEngine).myPlayer;\r\n    }\r\n\r\n    getHead() {\r\n        return this._myCurrentHead;\r\n    }\r\n\r\n    getHeightHead() {\r\n        return this.getHeightEyes() + this._myParams.myForeheadExtraHeight;\r\n    }\r\n\r\n    getHeightEyes() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformFeetQuat(outTransformFeetQuat = quat2_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformFeetQuat = quat2_create()) {\r\n        return this.getHead().pp_getTransformQuat(outTransformFeetQuat);\r\n    }\r\n\r\n    getPositionFeet(outPositionFeet = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionHead(outPositionHead = vec3_create()) {\r\n        return this._myCurrentHead.pp_getPosition(outPositionHead);\r\n    }\r\n\r\n    getRotationFeetQuat(outRotationFeetQuat = quat_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotationHeadQuat(outRotationHeadQuat = quat_create()) {\r\n        return this.getHead().pp_getRotationQuat(outRotationHeadQuat);\r\n    }\r\n\r\n    isSynced() {\r\n        return this._myIsSyncedDelayCounter == 0 && this._myDelaySessionChangeResyncCounter == 0 && this._myDelayBlurEndResyncCounter == 0 && !this._myDelayBlurEndResyncTimer.isRunning() && !this._mySessionBlurred;\r\n    }\r\n\r\n    setHeight(height, setOnlyForActiveOne = false) {\r\n        if (!setOnlyForActiveOne || !this._mySessionActive) {\r\n            this._myParams.myHeightOffsetNonVR = height;\r\n        }\r\n\r\n        if (!setOnlyForActiveOne || this._mySessionActive) {\r\n            this._myParams.myHeightOffsetVRWithoutFloor = height;\r\n\r\n            if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                this._myParams.myHeightOffsetVRWithFloor = 0;\r\n            }\r\n            let isFloor = XRUtils.isReferenceSpaceLocalFloor(this._myParams.myEngine) || XRUtils.isDeviceEmulated();\r\n            if (this._mySessionActive && isFloor) {\r\n                this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (height - this.getHeight());\r\n            } else if (!this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = height;\r\n            }\r\n        }\r\n\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    moveFeet(movement) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    moveHead(movement) {\r\n        this.moveFeet(movement);\r\n    }\r\n\r\n    teleportPositionHead(teleportPosition) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPositionFeet(teleportPosition) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    rotateHeadQuat(rotationQuat) {\r\n        // #TODO Rotate feet with this and then rotate head freely if possible\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    canRotateFeet() {\r\n        return true;\r\n    }\r\n\r\n    canRotateHead() {\r\n        return !this._mySessionActive;\r\n    }\r\n\r\n    setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    setRotationHeadQuat() {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookAtHead(position, up = null) {\r\n    }\r\n\r\n    lookToHead(direction, up = null) {\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myIsSyncedDelayCounter != 0) {\r\n            this._myIsSyncedDelayCounter--;\r\n            this._myIsSyncedDelayCounter = Math.max(0, this._myIsSyncedDelayCounter);\r\n        }\r\n\r\n        if (this._myDelaySessionChangeResyncCounter > 0) {\r\n            this._myDelaySessionChangeResyncCounter--;\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                this._sessionChangeResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        if (this._myDelayBlurEndResyncCounter > 0 && !this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            this._myDelayBlurEndResyncCounter--;\r\n            if (this._myDelayBlurEndResyncCounter == 0) {\r\n                this._blurEndResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        // Not really used since visibility hidden end is not considered a special case anymore\r\n        if (this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            if (this._myDelayBlurEndResyncCounter > 0) {\r\n                this._myDelayBlurEndResyncCounter--;\r\n            } else {\r\n                this._myDelayBlurEndResyncTimer.update(dt);\r\n                if (this._myDelayBlurEndResyncTimer.isDone()) {\r\n                    this._blurEndResync();\r\n                    this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isSynced()) {\r\n            this._myPreviousHeadTransformQuat.quat2_copy(this._myCurrentHeadTransformQuat);\r\n            this._myCurrentHead.pp_getTransformQuat(this._myCurrentHeadTransformQuat);\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        getDebugVisualManager(this._myParams.myEngine).drawLineEnd(0, this.getPositionFeet(), this.getPositionHead(), vec4_create(1, 0, 0, 1), 0.01);\r\n\r\n        console.error(this.getHeightEyes());\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerHeadManager.prototype.getHeightEyes = function () {\r\n    let headPosition = vec3_create();\r\n    return function getHeightEyes() {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let eyesHeight = this._getPositionHeight(headPosition);\r\n\r\n        return eyesHeight;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getTransformFeetQuat = function () {\r\n    let feetPosition = vec3_create();\r\n    let feetRotationQuat = quat_create();\r\n    return function getTransformFeetQuat(outTransformFeetQuat = quat2_create()) {\r\n        outTransformFeetQuat.quat2_setPositionRotationQuat(this.getPositionFeet(feetPosition), this.getRotationFeetQuat(feetRotationQuat));\r\n        return outTransformFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getRotationFeetQuat = function () {\r\n    let playerUp = vec3_create();\r\n    let headForward = vec3_create();\r\n    return function getRotationFeetQuat(outRotationFeetQuat = quat_create()) {\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        headForward = this._myCurrentHead.pp_getForward(headForward);\r\n\r\n        // Feet are considered to always be flat on the player up\r\n        let angleWithUp = headForward.vec3_angle(playerUp);\r\n        let mingAngle = 10;\r\n        if (angleWithUp < mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getDown(headForward);\r\n        } else if (angleWithUp > 180 - mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getUp(headForward);\r\n        }\r\n\r\n        headForward = headForward.vec3_removeComponentAlongAxis(playerUp, headForward);\r\n        headForward.vec3_normalize(headForward);\r\n\r\n        outRotationFeetQuat.quat_setUp(playerUp, headForward);\r\n        return outRotationFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getPositionFeet = function () {\r\n    let headPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    return function getPositionFeet(outPositionFeet = vec3_create()) {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let headHeight = this._getPositionHeight(headPosition);\r\n\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        outPositionFeet = headPosition.vec3_sub(playerUp.vec3_scale(headHeight, outPositionFeet), outPositionFeet);\r\n\r\n        return outPositionFeet;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.moveFeet = function moveFeet(movement) {\r\n    getPlayerObjects(this._myParams.myEngine).myPlayer.pp_translate(movement);\r\n};\r\n\r\nPlayerHeadManager.prototype.rotateFeetQuat = function () {\r\n    let playerUp = vec3_create();\r\n    let rotationAxis = vec3_create();\r\n    let currentHeadPosition = vec3_create();\r\n    let currentFeetRotation = quat_create();\r\n    let newFeetRotation = quat_create();\r\n    let fixedNewFeetRotation = quat_create();\r\n    let newFeetForward = vec3_create();\r\n    let fixedRotation = quat_create();\r\n    let newHeadPosition = vec3_create();\r\n    let headAdjustmentMovement = vec3_create();\r\n    return function rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        let angle = rotationQuat.quat_getAngleRadians();\r\n        if (angle <= 0.00001) {\r\n            return;\r\n        }\r\n\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        rotationAxis = rotationQuat.quat_getAxis(rotationAxis);\r\n\r\n        if (!rotationAxis.vec3_isOnAxis(playerUp) &&\r\n            ((keepUpOverride == null && this._myParams.myFeetRotationKeepUp) || (keepUpOverride))) {\r\n            currentFeetRotation = this.getRotationFeetQuat(currentFeetRotation);\r\n\r\n            newFeetRotation = currentFeetRotation.quat_rotateQuat(rotationQuat, newFeetRotation);\r\n            newFeetForward = newFeetRotation.quat_getForward(newFeetForward);\r\n\r\n            fixedNewFeetRotation.quat_copy(newFeetRotation);\r\n            fixedNewFeetRotation.quat_setUp(playerUp, newFeetForward);\r\n\r\n            fixedRotation = currentFeetRotation.quat_rotationToQuat(fixedNewFeetRotation, fixedRotation);\r\n        } else {\r\n            fixedRotation.quat_copy(rotationQuat);\r\n        }\r\n\r\n        getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateAroundQuat(fixedRotation, currentHeadPosition);\r\n\r\n        newHeadPosition = this._myCurrentHead.pp_getPosition(newHeadPosition);\r\n\r\n        headAdjustmentMovement = currentHeadPosition.vec3_sub(newHeadPosition, headAdjustmentMovement);\r\n        if (headAdjustmentMovement.vec3_length() > 0.00001) {\r\n            this.moveFeet(headAdjustmentMovement);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.rotateHeadQuat = function () {\r\n    let newHeadRotation = quat_create();\r\n    let newHeadUp = vec3_create();\r\n    return function rotateHeadQuat(rotationQuat) {\r\n        if (this.canRotateHead()) {\r\n            this._myCurrentHead.pp_rotateQuat(rotationQuat);\r\n            newHeadRotation = this._myCurrentHead.pp_getRotationQuat(newHeadRotation);\r\n\r\n            getPlayerObjects(this._myParams.myEngine).myHead.pp_setRotationQuat(newHeadRotation);\r\n\r\n            newHeadRotation = newHeadRotation.quat_rotateAxisRadians(Math.PI, newHeadRotation.quat_getUp(newHeadUp), newHeadRotation);\r\n            getPlayerObjects(this._myParams.myEngine).myCameraNonVR.pp_setRotationQuat(newHeadRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationFeetQuat = function () {\r\n    let currentRotationQuat = quat_create();\r\n    let rotationQuatToRotate = quat_create();\r\n    return function setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        currentRotationQuat = this.getRotationFeetQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateFeetQuat(rotationQuatToRotate, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationHeadQuat = function () {\r\n    let currentRotationQuat = quat_create();\r\n    let rotationQuatToRotate = quat_create();\r\n    return function setRotationHeadQuat(rotationQuat) {\r\n        currentRotationQuat = this.getRotationHeadQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateHeadQuat(rotationQuatToRotate);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionHead = function () {\r\n    let currentHeadPosition = vec3_create();\r\n    let teleportMovementToPerform = vec3_create();\r\n    return function teleportPositionHead(teleportPosition) {\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentHeadPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionFeet = function () {\r\n    let currentFeetPosition = vec3_create();\r\n    let teleportMovementToPerform = vec3_create();\r\n    return function teleportPositionFeet(teleportPosition) {\r\n        currentFeetPosition = this.getPositionFeet(currentFeetPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentFeetPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPlayerToHeadTransformQuat = function () {\r\n    let headPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    let flatCurrentPlayerPosition = vec3_create();\r\n    let flatNewPlayerPosition = vec3_create();\r\n    let teleportMovement = vec3_create();\r\n    let playerForward = vec3_create();\r\n    let headForward = vec3_create();\r\n    let headForwardNegated = vec3_create();\r\n    let rotationToPerform = quat_create();\r\n    return function teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        headPosition = headTransformQuat.quat2_getPosition(headPosition);\r\n\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        flatCurrentPlayerPosition = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(flatCurrentPlayerPosition).vec3_removeComponentAlongAxis(playerUp, flatCurrentPlayerPosition);\r\n        flatNewPlayerPosition = headPosition.vec3_removeComponentAlongAxis(playerUp, flatNewPlayerPosition);\r\n\r\n        teleportMovement = flatNewPlayerPosition.vec3_sub(flatCurrentPlayerPosition, teleportMovement);\r\n        getPlayerObjects(this._myParams.myEngine).myPlayer.pp_translate(teleportMovement);\r\n\r\n        playerForward = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getForward(playerForward);\r\n        headForward = headTransformQuat.quat2_getForward(headForward);\r\n        headForwardNegated = headForward.vec3_negate(headForwardNegated); // The head is rotated 180 degrees from the player for rendering reasons\r\n\r\n        rotationToPerform = playerForward.vec3_rotationToPivotedQuat(headForwardNegated, playerUp, rotationToPerform);\r\n\r\n        getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtFeet = function () {\r\n    let direction = vec3_create();\r\n    let feetPosition = vec3_create();\r\n    return function lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        feetPosition = this.getPositionFeet(feetPosition);\r\n        direction = position.vec3_sub(feetPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToFeet(direction, up, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToFeet = function () {\r\n    let feetRotation = quat_create();\r\n    return function lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        feetRotation = this.getRotationFeetQuat(feetRotation);\r\n        feetRotation.quat_setForward(direction, up);\r\n        this.setRotationFeetQuat(feetRotation, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtHead = function () {\r\n    let direction = vec3_create();\r\n    let headPosition = vec3_create();\r\n    return function lookAtHead(position, up = null) {\r\n        headPosition = this.getPositionHead(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToHead(direction, up);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToHead = function () {\r\n    let headRotation = quat_create();\r\n    return function lookToHead(direction, up = null) {\r\n        headRotation = this.getRotationHeadQuat(headRotation);\r\n        headRotation.quat_setForward(direction, up);\r\n        this.setRotationHeadQuat(headRotation);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._getPositionHeight = function () {\r\n    let playerPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    let heightVector = vec3_create();\r\n    return function _getPositionHeight(position) {\r\n        playerPosition = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(playerPosition);\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n        heightVector = position.vec3_sub(playerPosition, heightVector).vec3_componentAlongAxis(playerUp, heightVector);\r\n        let height = heightVector.vec3_length();\r\n        if (!playerUp.vec3_isConcordant(heightVector)) {\r\n            height = -height;\r\n        }\r\n\r\n        return height;\r\n    };\r\n}();\r\n\r\n// #TODO What happens if the player go in the blurred state before wle has loaded?\r\nPlayerHeadManager.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(manualCall, session) {\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0;\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        session.requestReferenceSpace(getReferenceSpaceType(this._myParams.myEngine)).then(function (referenceSpace) {\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        session.addEventListener(\"visibilitychange\", function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                if (!this._mySessionBlurred) {\r\n                    this._onXRSessionBlurStart(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = session.visibilityState == \"hidden\";\r\n            } else {\r\n                if (this._mySessionBlurred) {\r\n                    this._onXRSessionBlurEnd(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = false;\r\n            }\r\n        }.bind(this));\r\n\r\n        if (this._myParams.mySessionChangeResyncEnabled && !manualCall && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadObject = this._myCurrentHead;\r\n                this._mySessionChangeResyncHeadTransform = previousHeadObject.pp_getTransformQuat();\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myCurrentHead = getPlayerObjects(this._myParams.myEngine).myHeadVR;\r\n\r\n        this._mySessionActive = true;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionEnd = function () {\r\n    return function _onXRSessionEnd(session) {\r\n        if (this._myParams.mySessionChangeResyncEnabled && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n\r\n                if (this._myBlurRecoverHeadTransform != null) {\r\n                    previousHeadTransform = this._myBlurRecoverHeadTransform;\r\n                }\r\n\r\n                this._mySessionChangeResyncHeadTransform = previousHeadTransform;\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        this._myCurrentHead = getPlayerObjects(this._myParams.myEngine).myHeadNonVR;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurStart = function () {\r\n    return function _onXRSessionBlurStart(session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform == null && this._mySessionActive) {\r\n                if (this._myDelaySessionChangeResyncCounter > 0) {\r\n                    this._myBlurRecoverHeadTransform = this._mySessionChangeResyncHeadTransform;\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n                }\r\n            } else if (!this._mySessionActive || !this._myParams.myBlurEndResyncEnabled) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n\r\n        this._mySessionBlurred = true;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurEnd = function () {\r\n    return function _onXRSessionBlurEnd(session) {\r\n        if (this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform != null && this._mySessionActive) {\r\n                    this._myDelayBlurEndResyncCounter = this._myResyncCounterFrames;\r\n                    if (this._myVisibilityHidden) {\r\n                        //this._myDelayBlurEndResyncTimer.start();\r\n\r\n                        // This was added because on the end of hidden u can have the resync delay cause of the guardian resync\r\n                        // but I just decided to skip this since it's not reliable and the guardian resync can happen in other cases\r\n                        // with no notification anyway\r\n                    }\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = null;\r\n                    this._myDelayBlurEndResyncCounter = 0;\r\n                }\r\n            } else {\r\n                this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._mySessionBlurred = false;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onViewReset = function () {\r\n    return function _onViewReset() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetTransformOnViewResetEnabled && this._mySessionActive && this.isSynced()) {\r\n                this.teleportPlayerToHeadTransformQuat(this._myPreviousHeadTransformQuat);\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._blurEndResync = function () {\r\n    let playerUp = vec3_create();\r\n    let currentHeadPosition = vec3_create();\r\n    let recoverHeadPosition = vec3_create();\r\n    let flatCurrentHeadPosition = vec3_create();\r\n    let flatRecoverHeadPosition = vec3_create();\r\n    let recoverMovement = vec3_create();\r\n    let recoverHeadForward = vec3_create();\r\n    let currentHeadForward = vec3_create();\r\n    let rotationToPerform = quat_create();\r\n    return function _blurEndResync() {\r\n        if (this._myBlurRecoverHeadTransform != null) {\r\n            if (this._mySessionChangeResyncHeadTransform != null) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n                this._sessionChangeResync();\r\n            } else {\r\n                playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                recoverHeadPosition = this._myBlurRecoverHeadTransform.quat2_getPosition(recoverHeadPosition);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatRecoverHeadPosition = recoverHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatRecoverHeadPosition);\r\n\r\n                recoverMovement = flatRecoverHeadPosition.vec3_sub(flatCurrentHeadPosition, recoverMovement);\r\n                this.moveFeet(recoverMovement);\r\n\r\n                recoverHeadForward = this._myBlurRecoverHeadTransform.quat2_getForward(recoverHeadForward);\r\n                currentHeadForward = this._myCurrentHead.pp_getForward(currentHeadForward);\r\n                rotationToPerform = currentHeadForward.vec3_rotationToPivotedQuat(recoverHeadForward, playerUp, rotationToPerform);\r\n\r\n                if (this._myParams.myBlurEndResyncRotation) {\r\n                    this.rotateFeetQuat(rotationToPerform);\r\n                }\r\n\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._sessionChangeResync = function () {\r\n    let currentHeadPosition = vec3_create();\r\n    let resyncHeadPosition = vec3_create();\r\n    let resyncHeadRotation = quat_create();\r\n    let playerUp = vec3_create();\r\n    let flatCurrentHeadPosition = vec3_create();\r\n    let flatResyncHeadPosition = vec3_create();\r\n    let resyncMovement = vec3_create();\r\n    let resyncHeadForward = vec3_create();\r\n    let resyncHeadUp = vec3_create();\r\n    let resyncHeadRight = vec3_create();\r\n    let playerPosition = vec3_create();\r\n    let newPlayerPosition = vec3_create();\r\n    let fixedHeadRight = vec3_create();\r\n    let fixedHeadRightNegate = vec3_create();\r\n    let fixedHeadUp = vec3_create();\r\n    let fixedHeadForward = vec3_create();\r\n    let fixedHeadRotation = quat_create();\r\n    return function _sessionChangeResync() {\r\n        if (this._myBlurRecoverHeadTransform == null && this._mySessionChangeResyncHeadTransform != null) {\r\n            if (this._mySessionActive) {\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                resyncMovement = flatResyncHeadPosition.vec3_sub(flatCurrentHeadPosition, resyncMovement);\r\n                this.moveFeet(resyncMovement);\r\n\r\n                let isFloor = XRUtils.isReferenceSpaceLocalFloor(this._myParams.myEngine) || XRUtils.isDeviceEmulated();\r\n                if (this._myParams.myEnterSessionResyncHeight || this._myParams.myNextEnterSessionResyncHeight) {\r\n                    this._myParams.myNextEnterSessionResyncHeight = false;\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    this._myParams.myHeightOffsetVRWithoutFloor = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (resyncHeadHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                } else if (isFloor && (this._myParams.myNextEnterSessionFloorHeight != null || this._myParams.myEnterSessionFloorHeight != null)) {\r\n                    let floorHeight = (this._myParams.myNextEnterSessionFloorHeight != null) ? this._myParams.myNextEnterSessionFloorHeight : this._myParams.myEnterSessionFloorHeight;\r\n                    floorHeight -= this._myParams.myForeheadExtraHeight;\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (floorHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                this._resyncHeadRotationForward(resyncHeadRotation);\r\n            } else {\r\n                playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                playerPosition = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(playerPosition);\r\n                newPlayerPosition = flatResyncHeadPosition.vec3_add(playerPosition.vec3_componentAlongAxis(playerUp, newPlayerPosition), newPlayerPosition);\r\n\r\n                getPlayerObjects(this._myParams.myEngine).myPlayer.pp_setPosition(newPlayerPosition);\r\n                getPlayerObjects(this._myParams.myEngine).myCameraNonVR.pp_resetPositionLocal();\r\n\r\n                if (this._myParams.myExitSessionResyncHeight) {\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    this._myParams.myHeightOffsetNonVR = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                if (this._myParams.myExitSessionRemoveRightTilt ||\r\n                    this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n\r\n                    fixedHeadRight = resyncHeadForward.vec3_cross(playerUp, fixedHeadRight);\r\n                    fixedHeadRight.vec3_normalize(fixedHeadRight);\r\n\r\n                    if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n                        let angleForwardUp = resyncHeadForward.vec3_angle(playerUp);\r\n                        let negateAngle = 45;\r\n                        if (angleForwardUp > (180 - negateAngle) || angleForwardUp < negateAngle) {\r\n                            // This way I get a good fixed result for both head upside down and head rotated on forward\r\n                            // When the head is looking down and a bit backward (more than 135 degrees), I want the forward to actually\r\n                            // be the opposite because it's like u rotate back the head up and look forward again\r\n                            fixedHeadRight.vec3_negate(fixedHeadRight);\r\n                        }\r\n                    }\r\n\r\n                    if (fixedHeadRight.vec3_isZero(0.000001)) {\r\n                        fixedHeadRight = resyncHeadRotation.quat_getRight(fixedHeadRight);\r\n                    }\r\n\r\n                    fixedHeadUp = fixedHeadRight.vec3_cross(resyncHeadForward, fixedHeadUp);\r\n                    fixedHeadUp.vec3_normalize(fixedHeadUp);\r\n                    fixedHeadForward = fixedHeadUp.vec3_cross(fixedHeadRight, fixedHeadForward);\r\n                    fixedHeadForward.vec3_normalize(fixedHeadForward);\r\n\r\n                    fixedHeadRotation.quat_fromAxes(fixedHeadRight.vec3_negate(fixedHeadRightNegate), fixedHeadUp, fixedHeadForward);\r\n                    resyncHeadRotation.quat_copy(fixedHeadRotation);\r\n                }\r\n\r\n                if (this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n                    resyncHeadRight = resyncHeadRotation.quat_getRight(resyncHeadRight);\r\n\r\n                    let maxVerticalAngle = Math.max(0, this._myParams.myExitSessionMaxVerticalAngle - 0.0001);\r\n                    if (!this._myParams.myExitSessionResyncVerticalAngle) {\r\n                        maxVerticalAngle = 0;\r\n                    }\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(resyncHeadUp.vec3_angleSigned(playerUp, resyncHeadRight));\r\n                    if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                        let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                        resyncHeadRotation = resyncHeadRotation.quat_rotateAxis(fixAngle, resyncHeadRight, resyncHeadRotation);\r\n                    }\r\n                }\r\n\r\n                this.setRotationHeadQuat(resyncHeadRotation);\r\n            }\r\n\r\n            if (this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = null;\r\n                this._myFirstEnterSessionResyncDone = true;\r\n            }\r\n\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._resyncHeadRotationForward = function () {\r\n    let playerUp = vec3_create();\r\n    let resyncHeadForward = vec3_create();\r\n    let resyncHeadUp = vec3_create();\r\n    let fixedResyncHeadRotation = quat_create();\r\n    return function _resyncHeadRotationForward(resyncHeadRotation) {\r\n        playerUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n        resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n        fixedResyncHeadRotation.quat_copy(resyncHeadRotation);\r\n        fixedResyncHeadRotation.quat_setUp(playerUp, resyncHeadForward);\r\n\r\n        if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n            // If it was upside down, it's like it has to rotate the neck back up,so the forward is actually on the opposite side\r\n            fixedResyncHeadRotation.quat_rotateAxis(180, playerUp, fixedResyncHeadRotation);\r\n        }\r\n\r\n        this.setRotationFeetQuat(fixedResyncHeadRotation);\r\n        return;\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._updateHeightOffset = function () {\r\n    return function _updateHeightOffset() {\r\n        if (this._mySessionActive) {\r\n            if (XRUtils.isDeviceEmulated()) {\r\n                this._setPlayerPivotHeightOffset(0, 0);\r\n            } else if (XRUtils.isReferenceSpaceLocalFloor(this._myParams.myEngine)) {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithFloor, 0);\r\n            } else {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithoutFloor, this._myParams.myForeheadExtraHeight);\r\n            }\r\n        } else {\r\n            this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetNonVR, this._myParams.myForeheadExtraHeight);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._setPlayerPivotHeightOffset = function () {\r\n    let playerPivotPosition = vec3_create();\r\n    return function _setPlayerPivotHeightOffset(offset, amountToRemove) {\r\n        if (offset != null) {\r\n            playerPivotPosition = getPlayerObjects(this._myParams.myEngine).myPlayerPivot.pp_getPositionLocal(playerPivotPosition);\r\n            getPlayerObjects(this._myParams.myEngine).myPlayerPivot.pp_setPositionLocal([playerPivotPosition[0], offset - amountToRemove, playerPivotPosition[2]]);\r\n        }\r\n    }\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_getPositionHeight\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onViewReset\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_blurEndResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_sessionChangeResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_setPlayerPivotHeightOffset\", { enumerable: false });", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { CollisionCheck } from \"../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CleanedPlayerLocomotion } from \"./cleaned/player_locomotion_cleaned\";\r\nimport { PlayerLocomotion, PlayerLocomotionParams } from \"./player_locomotion\";\r\n\r\nlet _myCollisionChecks = new WeakMap();\r\n\r\nexport function getCollisionCheck(engine = getMainEngine()) {\r\n    return _myCollisionChecks.get(engine);\r\n}\r\n\r\nexport function setCollisionCheck(collisionCheck, engine = getMainEngine()) {\r\n    _myCollisionChecks.set(engine, collisionCheck);\r\n}\r\n\r\nexport class PlayerLocomotionComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion\";\r\n    static Properties = {\r\n        _myPhysicsBlockLayerFlags: Property.string(\"1, 0, 0, 0, 0, 0, 0, 0\"),\r\n        _myMaxSpeed: Property.float(2),\r\n        _myMaxRotationSpeed: Property.float(100),\r\n        _myCharacterRadius: Property.float(0.3),\r\n        _myIsSnapTurn: Property.bool(true),\r\n        _mySnapTurnOnlyVR: Property.bool(true),\r\n        _mySnapTurnAngle: Property.float(30),\r\n        _mySnapTurnSpeedDegrees: Property.float(0),\r\n        _myFlyEnabled: Property.bool(false),\r\n        _myMinAngleToFlyUpNonVR: Property.float(30),\r\n        _myMinAngleToFlyDownNonVR: Property.float(50),\r\n        _myMinAngleToFlyUpVR: Property.float(60),\r\n        _myMinAngleToFlyDownVR: Property.float(1),\r\n        _myMinAngleToFlyRight: Property.float(60),\r\n        _myMainHand: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myVRDirectionReferenceType: Property.enum([\"Head\", \"Hand\", \"Custom Object\"], \"Hand\"),\r\n        _myVRDirectionReferenceObject: Property.object(),\r\n        _myTeleportParableStartReferenceObject: Property.object(),\r\n        _myTeleportPositionObject: Property.object(),\r\n        _myUseCleanedVersion: Property.bool(true),\r\n        _myMoveThroughCollisionShortcutEnabled: Property.bool(false),\r\n        _myMoveHeadShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    start() {\r\n        setCollisionCheck(new CollisionCheck(this.engine), this.engine);\r\n\r\n        let params = new PlayerLocomotionParams(this.engine);\r\n        params.myMaxSpeed = this._myMaxSpeed;\r\n        params.myMaxRotationSpeed = this._myMaxRotationSpeed;\r\n\r\n        params.myCharacterRadius = this._myCharacterRadius;\r\n\r\n        params.myIsSnapTurn = this._myIsSnapTurn;\r\n        params.mySnapTurnOnlyVR = this._mySnapTurnOnlyVR;\r\n        params.mySnapTurnAngle = this._mySnapTurnAngle;\r\n        params.mySnapTurnSpeedDegrees = this._mySnapTurnSpeedDegrees;\r\n\r\n        params.myFlyEnabled = this._myFlyEnabled;\r\n        params.myMinAngleToFlyUpNonVR = this._myMinAngleToFlyUpNonVR;\r\n        params.myMinAngleToFlyDownNonVR = this._myMinAngleToFlyDownNonVR;\r\n        params.myMinAngleToFlyUpVR = this._myMinAngleToFlyUpVR;\r\n        params.myMinAngleToFlyDownVR = this._myMinAngleToFlyDownVR;\r\n        params.myMinAngleToFlyRight = this._myMinAngleToFlyRight;\r\n\r\n        params.myMainHand = InputUtils.getHandednessByIndex(this._myMainHand);\r\n\r\n        params.myVRDirectionReferenceType = this._myVRDirectionReferenceType;\r\n        params.myVRDirectionReferenceObject = this._myVRDirectionReferenceObject;\r\n\r\n        params.myTeleportParableStartReferenceObject = this._myTeleportParableStartReferenceObject;\r\n\r\n        params.myForeheadExtraHeight = 0.1;\r\n\r\n        params.myTeleportPositionObject = this._myTeleportPositionObject;\r\n\r\n        params.myMoveThroughCollisionShortcutEnabled = this._myMoveThroughCollisionShortcutEnabled;\r\n        params.myMoveHeadShortcutEnabled = this._myMoveHeadShortcutEnabled;\r\n\r\n        params.myPhysicsBlockLayerFlags.copy(this._getPhysicsBlockLayersFlags());\r\n\r\n        if (this._myUseCleanedVersion) {\r\n            this._myPlayerLocomotion = new CleanedPlayerLocomotion(params);\r\n        } else {\r\n            this._myPlayerLocomotion = new PlayerLocomotion(params);\r\n        }\r\n\r\n        this._myStartCounter = 1;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myStartCounter > 0) {\r\n            this._myStartCounter--;\r\n            if (this._myStartCounter == 0) {\r\n                this._myPlayerLocomotion.start();\r\n\r\n                this._myPlayerLocomotion._myPlayerTransformManager.resetReal(true, false, false, true);\r\n                this._myPlayerLocomotion._myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n\r\n            this._myPlayerLocomotion._myPlayerHeadManager.update(dt);\r\n        } else {\r\n            getCollisionCheck(this.engine)._myTotalRaycasts = 0; // #TODO Debug stuff, remove later\r\n\r\n            this._myPlayerLocomotion.update(dt);\r\n        }\r\n\r\n        //getCollisionCheck(this.engine)._myTotalRaycastsMax = Math.max(getCollisionCheck(this.engine)._myTotalRaycasts, getCollisionCheck(this.engine)._myTotalRaycastsMax);\r\n        //console.error(getCollisionCheck(this.engine)._myTotalRaycastsMax);\r\n        //console.error(getCollisionCheck(this.engine)._myTotalRaycasts);\r\n    }\r\n\r\n    onActivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getPhysicsBlockLayersFlags() {\r\n        let physicsFlags = new PhysicsLayerFlags();\r\n\r\n        let flags = [...this._myPhysicsBlockLayerFlags.split(\",\")];\r\n        for (let i = 0; i < flags.length; i++) {\r\n            physicsFlags.setFlagActive(i, flags[i].trim() == \"1\");\r\n        }\r\n\r\n        return physicsFlags;\r\n    }\r\n}", "import { PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { getLeftGamepad } from \"../../../../../../input/cauldron/input_globals\";\r\nimport { InputUtils } from \"../../../../../../input/cauldron/input_utils\";\r\nimport { GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { EasingFunction } from \"../../../../../../plugin/js/extensions/math_extension\";\r\nimport { getPlayerObjects } from \"../../../../../../pp/player_objects_global\";\r\nimport { CharacterColliderSetupSimplifiedCreationAccuracyLevel, CharacterColliderSetupSimplifiedCreationParams, CharacterColliderUtils } from \"../../../../character_controller/collision/character_collider_utils\";\r\nimport { CollisionCheckBridge } from \"../../../../character_controller/collision/collision_check_bridge\";\r\nimport { CollisionCheckUtils } from \"../../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { LocomotionUtils } from \"../locomotion_utils\";\r\nimport { PlayerHeadManager, PlayerHeadManagerParams } from \"../player_head_manager\";\r\nimport { PlayerLocomotionMovementRuntimeParams } from \"../player_locomotion_movement\";\r\nimport { PlayerLocomotionRotate, PlayerLocomotionRotateParams } from \"../player_locomotion_rotate\";\r\nimport { PlayerLocomotionSmoothParams } from \"../player_locomotion_smooth\";\r\nimport { PlayerObscureManager, PlayerObscureManagerParams } from \"../player_obscure_manager\";\r\nimport { PlayerTransformManagerParams } from \"../player_transform_manager\";\r\nimport { PlayerLocomotionTeleport, PlayerLocomotionTeleportParams } from \"../teleport/player_locomotion_teleport\";\r\nimport { CleanedPlayerLocomotionSmooth } from \"./player_locomotion_smooth_cleaned\";\r\nimport { CleanedPlayerTransformManager } from \"./player_transform_manager_cleaned\";\r\n\r\nexport class CleanedPlayerLocomotion {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PlayerHeadManagerParams(this._myParams.myEngine);\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerTransformManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = false;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerTransformManager = new CleanedPlayerTransformManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerObscureManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.75;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 0.75;\r\n            params.myDistanceToStartObscureWhenFar = 0.75;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 0.5;\r\n\r\n            this._myPlayerObscureManager = new PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerLocomotionRotateParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > LocomotionUtils.EPSILON) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PlayerLocomotionSmoothParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                params.myMoveThroughCollisionShortcutEnabled = this._myParams.myMoveThroughCollisionShortcutEnabled;\r\n                params.myMoveHeadShortcutEnabled = this._myParams.myMoveHeadShortcutEnabled;\r\n\r\n                this._myPlayerLocomotionSmooth = new CleanedPlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PlayerLocomotionTeleportParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 4;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(params.myDetectionParams.myTeleportBlockLayerFlags);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n\r\n        this._myStarted = false;\r\n        this._myActive = true;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n\r\n        this._myStarted = true;\r\n\r\n        let currentActive = this._myActive\r\n        this._myActive = !this._myActive;\r\n        this.setActive(currentActive);\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (this._myStarted) {\r\n                if (this._myActive) {\r\n                    this._myPlayerObscureManager.start();\r\n                    if (!this._myIdle) {\r\n                        this._myLocomotionMovementFSM.perform(\"start\");\r\n                    }\r\n                } else {\r\n                    this._myLocomotionMovementFSM.perform(\"idle\");\r\n                    this._myPlayerObscureManager.stop();\r\n                }\r\n            }\r\n\r\n            this._myPlayerHeadManager.setActive(this._myActive);\r\n            this._myPlayerTransformManager.setActive(this._myActive);\r\n        }\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    canStop() {\r\n        let canStop = false;\r\n\r\n        if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n            canStop = true;\r\n        } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n            canStop = true;\r\n        }\r\n\r\n        return canStop;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (getLeftGamepad(this._myParams.myEngine).getButtonInfo(GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        this._myPlayerObscureManager.update(dt);\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        let simplifiedParams = new CharacterColliderSetupSimplifiedCreationParams();\r\n\r\n        simplifiedParams.myHeight = 1.75;\r\n        simplifiedParams.myRadius = this._myParams.myCharacterRadius;\r\n\r\n        simplifiedParams.myAccuracyLevel = CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH;\r\n\r\n        simplifiedParams.myIsPlayer = true;\r\n\r\n        simplifiedParams.myCheckOnlyFeet = false;\r\n\r\n        simplifiedParams.myAverageSpeed = this._myParams.myMaxSpeed;\r\n\r\n        simplifiedParams.myCanFly = this._myParams.myFlyEnabled;\r\n\r\n        simplifiedParams.myShouldSlideAgainstWall = true;\r\n\r\n        simplifiedParams.myCollectGroundInfo = true;\r\n        simplifiedParams.myShouldSnapOnGround = true;\r\n        simplifiedParams.myMaxDistanceToSnapOnGround = 0.1;\r\n        simplifiedParams.myMaxWalkableGroundAngle = 30;\r\n        simplifiedParams.myMaxWalkableGroundStepHeight = 0.1;\r\n        simplifiedParams.myShouldNotFallFromEdges = false;\r\n\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n        let physXComponents = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getComponents(PhysXComponent);\r\n        for (let physXComponent of physXComponents) {\r\n            simplifiedParams.myHorizontalCheckObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n        simplifiedParams.myVerticalCheckBlockLayerFlags.copy(simplifiedParams.myHorizontalCheckBlockLayerFlags);\r\n        simplifiedParams.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n        simplifiedParams.myHorizontalCheckDebugActive = false;\r\n        simplifiedParams.myVerticalCheckDebugActive = false;\r\n\r\n        let colliderSetup = CharacterColliderUtils.createCharacterColliderSetupSimplified(simplifiedParams);\r\n\r\n        this._myCollisionCheckParamsMovement = CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(colliderSetup, this._myCollisionCheckParamsMovement, this._myParams.myEngine);\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // Increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 61;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // This is needed for when u want to perform the teleport as a movement\r\n        // Maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // When you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // If nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // You could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // Get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            getPlayerObjects(this._myParams.myEngine).myPlayer.pp_resetRotation();\r\n            getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new FSM();\r\n        //this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n}", "\r\n\r\nexport class PlayerLocomotionMovementRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myIsFlying = false;\r\n        this.myCollisionRuntimeParams = null;\r\n\r\n        this.myIsTeleportDetecting = false;\r\n        this.myIsTeleporting = false;\r\n        this.myTeleportJustPerformed = false;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionMovement {\r\n\r\n    constructor(locomotionRuntimeParams) {\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    canStop() {\r\n        return true;\r\n    }\r\n}", "import { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { getGamepads } from \"../../../../../input/cauldron/input_globals\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { GamepadAxesID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat_create, vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { getEasyTuneVariables } from \"../../../../../tool/easy_tune/easy_tune_globals\";\r\nimport { EasyTuneNumber } from \"../../../../../tool/easy_tune/easy_tune_variable_types\";\r\nimport { LocomotionUtils } from \"./locomotion_utils\";\r\n\r\nexport class PlayerLocomotionRotateParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMaxRotationSpeed = 0;\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n\r\n        this.mySmoothSnapActive = true;\r\n        this.mySmoothSnapSpeedDegrees = 240;\r\n\r\n        this.myRotationMinStickIntensityThreshold = 0;\r\n        this.mySnapTurnActivateThreshold = 0;\r\n        this.mySnapTurnResetThreshold = 0;\r\n\r\n        this.myClampVerticalAngle = true;\r\n        this.myMaxVerticalAngle = 0;\r\n\r\n        this.myHandedness = Handedness.RIGHT;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionRotate {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._mySnapCharge = false;\r\n\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n\r\n        //getEasyTuneVariables(this._myParams.myEngine).add(new EasyTuneNumber(\"Teleport Smooth Speed\", this._myParams.mySmoothSnapSpeedDegrees, 10, 3, 0, undefined, this._myParams.myEngine));\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    stop() {\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myParams.mySmoothSnapSpeedDegrees = getEasyTuneVariables(this._myParams.myEngine).get(\"Teleport Smooth Speed\");\r\n\r\n        this._rotateHeadHorizontally(dt);\r\n\r\n        if (this._myParams.myPlayerHeadManager.canRotateHead()) {\r\n            this._rotateHeadVertically(dt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadHorizontally = function () {\r\n    let playerUp = vec3_create();\r\n    let headRotation = quat_create();\r\n    return function _rotateHeadHorizontally(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headRotation.quat_identity();\r\n\r\n        let axes = getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !XRUtils.isSessionActive(this._myParams.myEngine))) {\r\n            if (Math.abs(axes[0]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = -axes[0];\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity);\r\n\r\n                headRotation.quat_fromAxis(speed * dt, playerUp);\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapHorizontalRunning) {\r\n                if (Math.abs(axes[0]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    let angleToRotate = -Math.pp_sign(axes[0]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    if (!this._myParams.mySmoothSnapActive) {\r\n                        headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n                    } else {\r\n                        this._mySmoothSnapHorizontalRunning = true;\r\n                        this._mySmoothSnapHorizontalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapHorizontalRunning) {\r\n            let angleToRotate = Math.pp_sign(this._mySmoothSnapHorizontalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapHorizontalAngleToPerform) - LocomotionUtils.EPSILON) {\r\n                angleToRotate = this._mySmoothSnapHorizontalAngleToPerform;\r\n            }\r\n\r\n            headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n            this._mySmoothSnapHorizontalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapHorizontalAngleToPerform) < LocomotionUtils.EPSILON) {\r\n                this._mySmoothSnapHorizontalRunning = false;\r\n                this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (headRotation.quat_getAngle() > LocomotionUtils.EPSILON_DEGREES) {\r\n            this._myParams.myPlayerTransformManager.rotateQuat(headRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadVertically = function () {\r\n    let headForward = vec3_create();\r\n    let headUp = vec3_create();\r\n    let referenceUp = vec3_create();\r\n    let referenceUpNegate = vec3_create();\r\n    let referenceRight = vec3_create();\r\n    let newUp = vec3_create();\r\n    let headRotation = quat_create();\r\n    return function _rotateHeadVertically(dt) {\r\n        let head = this._myParams.myPlayerHeadManager.getHead();\r\n\r\n        headForward = head.pp_getForward(headForward);\r\n        headUp = head.pp_getUp(headUp);\r\n\r\n        referenceUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(referenceUp);\r\n        referenceUpNegate = referenceUp.vec3_negate(referenceUpNegate);\r\n        referenceRight = headForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n        let minAngle = 1;\r\n        if (headForward.vec3_angle(referenceUp) < minAngle) {\r\n            referenceRight = headUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n        } else if (headForward.vec3_angle(referenceUpNegate) < minAngle) {\r\n            referenceRight = headUp.vec3_cross(referenceUp, referenceRight);\r\n        } else if (!headUp.vec3_isConcordant(referenceUp)) {\r\n            referenceRight.vec3_negate(referenceRight);\r\n        }\r\n\r\n        referenceRight.vec3_normalize(referenceRight);\r\n\r\n        let axes = getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n        let angleToRotate = 0;\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !XRUtils.isSessionActive(this._myParams.myEngine))) {\r\n            if (Math.abs(axes[1]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = axes[1];\r\n                angleToRotate = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity) * dt;\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapVerticalRunning) {\r\n                if (Math.abs(axes[1]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    angleToRotate = Math.pp_sign(axes[1]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    // Adjust rotation to closest snap step\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(headUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                    let snapStep = Math.round(angleWithUp / this._myParams.mySnapTurnAngle);\r\n\r\n                    let snapAngle = Math.pp_angleClamp(snapStep * this._myParams.mySnapTurnAngle);\r\n                    let angleToAlign = -Math.pp_angleDistanceSigned(angleWithUp, snapAngle);\r\n\r\n                    if (Math.abs(angleToAlign) > 1) {\r\n                        if (Math.pp_sign(angleToRotate) == Math.pp_sign(angleToAlign)) {\r\n                            angleToRotate = angleToAlign;\r\n                        } else {\r\n                            angleToRotate = (-Math.pp_sign(angleToAlign) * this._myParams.mySnapTurnAngle) + angleToAlign;\r\n                        }\r\n                    } else if (Math.abs(angleToAlign) > LocomotionUtils.EPSILON_DEGREES) {\r\n                        angleToRotate += angleToAlign;\r\n                    }\r\n\r\n                    if (this._myParams.mySmoothSnapActive) {\r\n                        this._mySmoothSnapVerticalRunning = true;\r\n                        this._mySmoothSnapVerticalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapVerticalRunning) {\r\n            angleToRotate = Math.pp_sign(this._mySmoothSnapVerticalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapVerticalAngleToPerform) - LocomotionUtils.EPSILON) {\r\n                angleToRotate = this._mySmoothSnapVerticalAngleToPerform;\r\n            }\r\n\r\n            this._mySmoothSnapVerticalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapVerticalAngleToPerform) < LocomotionUtils.EPSILON) {\r\n                this._mySmoothSnapVerticalRunning = false;\r\n                this._mySmoothSnapVerticalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (angleToRotate != 0) {\r\n            headRotation.quat_fromAxis(angleToRotate, referenceRight);\r\n            this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n\r\n            if (this._myParams.myClampVerticalAngle) {\r\n                let maxVerticalAngle = this._myParams.myMaxVerticalAngle - 0.0001;\r\n                newUp = head.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    headRotation.quat_fromAxis(fixAngle, referenceRight);\r\n                    this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadHorizontally\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadVertically\", { enumerable: false });", "import { PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { FSM } from \"../../../../../cauldron/fsm/fsm\";\r\nimport { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { getLeftGamepad } from \"../../../../../input/cauldron/input_globals\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { GamepadButtonID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { EasingFunction } from \"../../../../../plugin/js/extensions/math_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { CollisionCheckUtils } from \"../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { LocomotionUtils } from \"./locomotion_utils\";\r\nimport { PlayerHeadManager, PlayerHeadManagerParams } from \"./player_head_manager\";\r\nimport { PlayerLocomotionMovementRuntimeParams } from \"./player_locomotion_movement\";\r\nimport { PlayerLocomotionRotate, PlayerLocomotionRotateParams } from \"./player_locomotion_rotate\";\r\nimport { PlayerLocomotionSmooth, PlayerLocomotionSmoothParams } from \"./player_locomotion_smooth\";\r\nimport { PlayerObscureManager, PlayerObscureManagerParams } from \"./player_obscure_manager\";\r\nimport { PlayerTransformManager, PlayerTransformManagerParams } from \"./player_transform_manager\";\r\nimport { PlayerLocomotionTeleport, PlayerLocomotionTeleportParams } from \"./teleport/player_locomotion_teleport\";\r\n\r\nexport let PlayerLocomotionDirectionReferenceType = {\r\n    HEAD: 0,\r\n    HAND: 1,\r\n    CUSTOM_OBJECT: 2,\r\n};\r\n\r\nexport class PlayerLocomotionParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myMaxSpeed = 0;\r\n        this.myMaxRotationSpeed = 0;\r\n\r\n        this.myCharacterRadius = 0;\r\n\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n        this.mySnapTurnAngle = 0;\r\n        this.mySnapTurnSpeedDegrees = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myMainHand = Handedness.LEFT;\r\n\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n\r\n        this.myTeleportPositionObject = null;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false;\r\n        this.myMoveHeadShortcutEnabled = false;\r\n\r\n        this.myPhysicsBlockLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\n// #TODO Add lerped snap on vertical over like half a second to avoid the \"snap effect\"\r\n// This could be done by detatching the actual vertical position of the player from the collision real one when a snap is detected above a certain threshold\r\n// with a timer, after which the vertical position is just copied, while during the detatching is lerped toward the collision vertical one\r\nexport class PlayerLocomotion {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PlayerHeadManagerParams(this._myParams.myEngine);\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerTransformManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = true;\r\n\r\n            params.myDebugActive = true;\r\n\r\n            this._myPlayerTransformManager = new PlayerTransformManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerObscureManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.2;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 1;\r\n            params.myDistanceToStartObscureWhenFar = 1;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 5;\r\n\r\n            this._myPlayerObscureManager = new PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerLocomotionRotateParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > LocomotionUtils.EPSILON) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PlayerLocomotionSmoothParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                params.myMoveThroughCollisionShortcutEnabled = this._myParams.myMoveThroughCollisionShortcutEnabled;\r\n                params.myMoveHeadShortcutEnabled = this._myParams.myMoveHeadShortcutEnabled;\r\n\r\n                this._myPlayerLocomotionSmooth = new PlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PlayerLocomotionTeleportParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 4;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (getLeftGamepad(this._myParams.myEngine).getButtonInfo(GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        //this._myPlayerObscureManager.update(dt);\r\n        if (getLeftGamepad(this._myParams.myEngine).getButtonInfo(GamepadButtonID.SELECT).isPressEnd(2)) {\r\n            if (this._myPlayerObscureManager.isFading()) {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isFadingOut() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            } else {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isObscured() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        this._myCollisionCheckParamsMovement.mySplitMovementEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySplitMovementMaxLength = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myRadius = this._myParams.myCharacterRadius;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromFeetToIgnore = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromHeadToIgnore = 0.1;\r\n\r\n        //this._myCollisionCheckParamsMovement.myPositionOffsetLocal.vec3_set(0, 1, 0)\r\n        //this._myCollisionCheckParamsMovement.myRotationOffsetLocalQuat.quat_fromAxis(45, vec3_create(1, 1, 0).vec3_normalize());\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepEnabled = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepMaxLength = 0;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementRadialStepAmount = 1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHalfConeAngle = 60;\r\n        this._myCollisionCheckParamsMovement.myHalfConeSliceAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckConeBorder = true;\r\n        this._myCollisionCheckParamsMovement.myCheckConeRay = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalDirectionType = 2; // Somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementReduceEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myFeetRadius = 0.1;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleDownhill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithCeilingAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = 30;\r\n\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceAddCenter = true;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceSliceAmount = 8;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceStepAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceRotationPerStep = 22.5;\r\n        this._myCollisionCheckParamsMovement.myVerticalAllowHitInsideCollisionIfOneOk = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckHeight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollision = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollisionKeepHit = false;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountMovement = 2;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountPosition = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForwardEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForward = vec3_create(0, 0, 1);\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalBothDirection = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalStraight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalSearchFartherVerticalHit = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundAngleToIgnore = 30;\r\n        this._myCollisionCheckParamsMovement.myCeilingAngleToIgnore = 30;\r\n\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionGroundAngleIgnoreHeight = 0.1;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionCeilingAngleIgnoreHeight = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHeight = 1;\r\n\r\n        this._myCollisionCheckParamsMovement.myComputeGroundInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myComputeCeilingInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnGround = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeGroundInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnCeiling = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeCeilingInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnGround = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeGroundInfo = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnCeiling = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeCeilingInfo = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myMustStayOnGround = false;\r\n        this._myCollisionCheckParamsMovement.myMustStayOnCeiling = false;\r\n        this._myCollisionCheckParamsMovement.myRegatherGroundInfoOnSurfaceCheckFail = true;\r\n        this._myCollisionCheckParamsMovement.myRegatherCeilingInfoOnSurfaceCheckFail = true;\r\n        //this._myCollisionCheckParamsMovement.myExtraMovementCheckCallback = function () { return [0, 0, 0.01]; }\r\n\r\n        this._myCollisionCheckParamsMovement.mySlidingEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingHorizontalMovementCheckBetterNormal = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingMaxAttempts = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingCheckBothDirections = true;        // Expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionType = 1;      // Expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickerPreventionCheckAnywayCounter = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingAdjustSign90Degrees = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n        let physXComponents = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getComponents(PhysXComponent);\r\n        for (let physXComponent of physXComponents) {\r\n            this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalBlockLayerFlags.copy(this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags);\r\n        this._myCollisionCheckParamsMovement.myVerticalObjectsToIgnore.pp_copy(this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore);\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugActive = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalPositionActive = true;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalPositionActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugSlidingActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugGroundInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugCeilingInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugRuntimeParamsActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugMovementActive = false;\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // Increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 60;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // This is needed for when u want to perform the teleport as a movement\r\n        // Maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // When you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // If nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // You could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // Get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            getPlayerObjects(this._myParams.myEngine).myPlayer.pp_resetRotation();\r\n            getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new FSM();\r\n        //this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n}", "// Even if this can be sued to generally fade, it should be called collision obscure to hint that is meant for collision obscuring\r\n\r\nimport { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { FSM } from \"../../../../../cauldron/fsm/fsm\";\r\nimport { MaterialUtils } from \"../../../../../cauldron/utils/material_utils\";\r\nimport { VisualMesh, VisualMeshParams } from \"../../../../../cauldron/visual/elements/visual_mesh\";\r\nimport { getVisualData } from \"../../../../../cauldron/visual/visual_globals\";\r\nimport { vec3_create, vec4_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { EasingFunction } from \"../../../../../plugin/js/extensions/math_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { getDefaultResources } from \"../../../../../pp/default_resources_global\";\r\n\r\n// Occlude\r\nexport class PlayerObscureManagerParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myObscureObject = null;\r\n        this.myObscureMaterial = null;\r\n        this.myObscureRadius = 0;\r\n\r\n        this.myObscureFadeOutSeconds = 0.1;\r\n        this.myObscureFadeInSeconds = 0.1;\r\n\r\n        this.myObscureFadeEasingFunction = EasingFunction.linear;\r\n\r\n        this.myDistanceToStartObscureWhenHeadColliding = 0;\r\n        this.myDistanceToStartObscureWhenBodyColliding = 0;\r\n        this.myDistanceToStartObscureWhenFloating = 0;\r\n        this.myDistanceToStartObscureWhenFar = 0;\r\n\r\n        this.myRelativeDistanceToMaxObscureWhenHeadColliding = 0; // Relative to the start distance, 1 means that in 1 meters after it started it will be completely obscured\r\n        this.myRelativeDistanceToMaxObscureWhenBodyColliding = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFloating = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFar = 0;\r\n\r\n        this.myObscureLevelRelativeDistanceEasingFunction = EasingFunction.linear;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerObscureManager {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myObscureMaterial = null;\r\n        this._myObscureParentObject = null;\r\n\r\n        this._myCurrentObscureLevel = 0;\r\n        this._myTargetObscureLevel = 0;\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n\r\n        this._myFadeTimer = new Timer(0, false);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setDebugLogActive(true, \" Obscure\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n\r\n        this._myFSM.addState(\"inactive\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"fading\", this._fadingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"end\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fading\", \"fade\", this._startFading.bind(this));\r\n        this._myFSM.addTransition(\"fading\", \"idle\", \"done\", this._fadingDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"idle\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"fading\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._setupVisuals();\r\n\r\n        this._myFSM.perform(\"end\");\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myObscureParentObject.pp_resetTransformLocal();\r\n\r\n        this._updateObscured();\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    isStarted() {\r\n        return !this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    isObscured() {\r\n        return this._myCurrentObscureLevel > 0;\r\n    }\r\n\r\n    isFading() {\r\n        return this._myFSM.isInState(\"fading\");\r\n    }\r\n\r\n    isFadingIn() {\r\n        return this.isFading() && this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n    }\r\n\r\n    isFadingOut() {\r\n        return this.isFading() && this._myCurrentObscureLevel <= this._myTargetObscureLevel;\r\n    }\r\n\r\n    getObscureLevel() {\r\n        return this._myCurrentObscureLevel;\r\n    }\r\n\r\n    getTargetObscureLevel() {\r\n        return this._myTargetObscureLevel;\r\n    }\r\n\r\n    getCurrentObscureLevel() {\r\n        this._myCurrentObscureLevel;\r\n    }\r\n\r\n    obscureLevelOverride(obscureLevel, instantFade = false) {\r\n        this._myObscurelevelOverride = obscureLevel;\r\n\r\n        if (instantFade && this.isStarted()) {\r\n            this._setObscureLevel(obscureLevel);\r\n        }\r\n    }\r\n\r\n    resetObscureLevelOverride() {\r\n        this._myObscurelevelOverride = null;\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) > Math.PP_EPSILON) {\r\n            this._myFSM.perform(\"fade\");\r\n        }\r\n    }\r\n\r\n    _fadingUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON) {\r\n            this._myFSM.perform(\"done\");\r\n            return;\r\n        }\r\n\r\n        if (this._myLastTargetObscureLevel != this._myTargetObscureLevel) {\r\n            this._refreshFadeTimer();\r\n            this._myLastTargetObscureLevel = this._myTargetObscureLevel;\r\n        }\r\n\r\n        this._myFadeTimer.update(dt);\r\n\r\n        let newObscureLevel = this._myParams.myObscureFadeEasingFunction(this._myFadeTimer.getPercentage());\r\n\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n        if (!isFadingIn) {\r\n            newObscureLevel = Math.min(newObscureLevel, this._myTargetObscureLevel);\r\n        } else {\r\n            newObscureLevel = Math.pp_clamp(1 - newObscureLevel, 0, 1);\r\n            newObscureLevel = Math.max(newObscureLevel, this._myTargetObscureLevel);\r\n        }\r\n\r\n        this._setObscureAlpha(newObscureLevel);\r\n        this._myCurrentObscureLevel = newObscureLevel;\r\n\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON || this._myFadeTimer.isDone()) {\r\n            this._myFSM.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _startFading() {\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n    }\r\n\r\n    _fadingDone() {\r\n        this._setObscureLevel(this._myTargetObscureLevel);\r\n    }\r\n\r\n    _refreshFadeTimer() {\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n\r\n        if (this._myLastIsFadingIn != isFadingIn) {\r\n            this._setFadeTimerToObscureLevel(isFadingIn);\r\n        }\r\n\r\n        this._myLastIsFadingIn = isFadingIn;\r\n    }\r\n\r\n    _setFadeTimerToObscureLevel(isFadingIn) {\r\n        let percentage = 0;\r\n        let closestPercentage = 0;\r\n        let steps = 1000;\r\n        let increment = 1 / steps;\r\n\r\n        while (percentage < 1) {\r\n            if (Math.abs(this._myParams.myObscureFadeEasingFunction(percentage) - this._myCurrentObscureLevel) <\r\n                Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n                closestPercentage = percentage;\r\n            }\r\n\r\n            percentage += increment;\r\n        }\r\n\r\n        if (Math.abs(this._myParams.myObscureFadeEasingFunction(1) - this._myCurrentObscureLevel) <\r\n            Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n            closestPercentage = 1;\r\n        }\r\n\r\n        if (isFadingIn) {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeInSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(1 - closestPercentage, 0, 1));\r\n        } else {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeOutSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(closestPercentage, 0, 1));\r\n        }\r\n    }\r\n\r\n    _setObscureLevel(obscureLevel) {\r\n        this._myTargetObscureLevel = obscureLevel;\r\n        this._myCurrentObscureLevel = obscureLevel;\r\n        this._setObscureAlpha(obscureLevel);\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    _setObscureAlpha(alpha) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            MaterialUtils.setAlpha(this._myObscureMaterial, alpha);\r\n        } else {\r\n            MaterialUtils.setObjectAlpha(this._myParams.myObscureObject, alpha);\r\n        }\r\n    }\r\n\r\n    _updateObscured() {\r\n        this._myTargetObscureLevel = 0;\r\n\r\n        if (this._myObscurelevelOverride != null) {\r\n            this._myTargetObscureLevel = this._myObscurelevelOverride;\r\n        } else {\r\n            // #TODO Check if VALID head is colliding, in that case use max obscure level\r\n            // This prevent being able to see when resetting head to real even though real is colliding\r\n            // For example if u stand up and go with the head in the ceiling and reset by moving\r\n            if (this._myParams.myPlayerTransformManager.isHeadColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToRealHead();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenHeadColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenHeadColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isBodyColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenBodyColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenBodyColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFloating()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFloating;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFloating, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFar()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFar;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFar, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupVisuals() {\r\n        this._myObscureMaterial = null;\r\n        if (this._myParams.myObscureMaterial != null) {\r\n            this._myObscureMaterial = this._myParams.myObscureMaterial;\r\n        } else {\r\n            this._myObscureMaterial = getDefaultResources(this._myParams.myEngine).myMaterials.myFlatTransparentNoDepth.clone();\r\n            this._myObscureMaterial.color = vec4_create(0, 0, 0, 1);\r\n        }\r\n\r\n        this._myObscureParentObject = getVisualData(this._myParams.myEngine).myRootObject.pp_addObject();\r\n\r\n        let obscureVisualParams = new VisualMeshParams(this._myParams.myEngine);\r\n        obscureVisualParams.myMesh = getDefaultResources(this._myParams.myEngine).myMeshes.myInvertedSphere;\r\n        obscureVisualParams.myMaterial = (this._myParams.myObscureMaterial != null) ? this._myParams.myObscureMaterial : this._myObscureMaterial;\r\n        obscureVisualParams.myParent = this._myObscureParentObject;\r\n        obscureVisualParams.myIsLocal = true;\r\n        obscureVisualParams.myTransform.mat4_setScale(vec3_create(this._myParams.myObscureRadius, this._myParams.myObscureRadius, this._myParams.myObscureRadius));\r\n        this._myObscureVisual = new VisualMesh(obscureVisualParams);\r\n\r\n        if (this._myParams.myObscureObject != null) {\r\n            this._myParams.myObscureObject.pp_setParent(this._myObscureParentObject, false);\r\n            this._myParams.myObscureObject.pp_resetTransformLocal();\r\n        }\r\n\r\n        this._setObscureVisible(false);\r\n    }\r\n\r\n    _setObscureVisible(visible) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            this._myObscureVisual.setVisible(visible);\r\n        } else {\r\n            this._myObscureVisual.setVisible(false);\r\n            this._myParams.myObscureObject.pp_setActive(visible);\r\n        }\r\n\r\n        if (visible) {\r\n            this._myObscureParentObject.pp_setParent(this._myParams.myPlayerTransformManager.getHead(), false);\r\n        } else {\r\n            this._myObscureParentObject.pp_setParent(null, false);\r\n        }\r\n    }\r\n}", "import { VisualLine, VisualLineParams } from \"../../../../../../cauldron/visual/elements/visual_line\";\r\nimport { VisualPoint, VisualPointParams } from \"../../../../../../cauldron/visual/elements/visual_point\";\r\nimport { VisualTorus, VisualTorusParams } from \"../../../../../../cauldron/visual/elements/visual_torus\";\r\nimport { getVisualData } from \"../../../../../../cauldron/visual/visual_globals\";\r\nimport { getDebugVisualManager } from \"../../../../../../debug/debug_globals\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../../../../../pp/default_resources_global\";\r\nimport { getEasyTuneVariables } from \"../../../../../../tool/easy_tune/easy_tune_globals\";\r\nimport { EasyTuneInt, EasyTuneNumber } from \"../../../../../../tool/easy_tune/easy_tune_variable_types\";\r\n\r\nexport class PlayerLocomotionTeleportDetectionVisualizerParams {\r\n\r\n    constructor() {\r\n        this.myTeleportParableValidMaterial = null;\r\n        this.myTeleportParableInvalidMaterial = null;\r\n\r\n        this.myTeleportPositionObject = null;\r\n\r\n        this.myTeleportParableLineEndOffset = 0.05;\r\n        this.myTeleportParableMinVerticalDistanceToShowVerticalLine = 0.25;\r\n\r\n        this.myTeleportParablePositionUpOffset = 0.05;\r\n\r\n        this.myTeleportParablePositionVisualAlignOnSurface = true;\r\n\r\n        this.myVisualTeleportPositionLerpActive = true;\r\n        this.myVisualTeleportPositionLerpFactor = 10;\r\n        this.myVisualTeleportPositionMinDistanceToResetLerp = 0.005;\r\n        this.myVisualTeleportPositionMinDistanceToLerp = 0.15;\r\n        this.myVisualTeleportPositionMaxDistanceToLerp = 5;\r\n\r\n        this.myVisualTeleportPositionMinDistanceToCloseLerpFactor = 0.02;\r\n        this.myVisualTeleportPositionCloseLerpFactor = 30;\r\n\r\n        this.myVisualTeleportPositionMinAngleDistanceToResetLerp = 0.1;\r\n        this.myVisualTeleportPositionMinAngleDistanceToLerp = 1;\r\n        this.myVisualTeleportPositionMaxAngleDistanceToLerp = 180;\r\n    }\r\n};\r\n\r\nexport class PlayerLocomotionTeleportDetectionVisualizer {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, detectionRuntimeParams) {\r\n        this._myDetectionRuntimeParams = detectionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformQuat = quat2_create();\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Min Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp, 1, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp, 1, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Min Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n\r\n        this._setupVisuals();\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    end() {\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        this._hideTeleportPosition();\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Min Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Min Angle Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Angle Distance Lerp\");\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._showTeleportPosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n            this._hideTeleportPosition();\r\n        }\r\n    }\r\n\r\n    _showTeleportPosition(dt) {\r\n        this._hideTeleportPosition();\r\n\r\n        this._showTeleportParable(dt);\r\n    }\r\n\r\n    _hideTeleportPosition() {\r\n        for (let visualLine of this._myValidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        for (let visualLine of this._myInvalidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        this._myValidVisualPoint.setVisible(false);\r\n        this._myInvalidVisualPoint.setVisible(false);\r\n\r\n        this._myValidVisualVerticalLine.setVisible(false);\r\n\r\n        this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n        this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n    }\r\n\r\n    _addVisualLines(amount) {\r\n        for (let i = 0; i < amount; i++) {\r\n            {\r\n                let visualParams = new VisualLineParams(this._myTeleportParams.myEngine);\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n                }\r\n\r\n                this._myValidVisualLines.push(new VisualLine(visualParams));\r\n            }\r\n\r\n            {\r\n                let visualParams = new VisualLineParams(this._myTeleportParams.myEngine);\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n                }\r\n\r\n                this._myInvalidVisualLines.push(new VisualLine(visualParams));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._setupVisuals = function () {\r\n    let innerTorusPosition = vec3_create();\r\n    return function _setupVisuals() {\r\n        this._myTeleportParableValidMaterial = getDefaultResources(this._myTeleportParams.myEngine).myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableValidMaterial.color = vec4_create(0, 0.5, 1, 1);\r\n        this._myTeleportParableInvalidMaterial = getDefaultResources(this._myTeleportParams.myEngine).myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableInvalidMaterial.color = vec4_create(0.75, 0.05, 0, 1);\r\n\r\n        this._myValidVisualLines = [];\r\n        this._myInvalidVisualLines = [];\r\n        this._addVisualLines(30);\r\n\r\n        {\r\n            let visualParams = new VisualPointParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualPoint = new VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualPointParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n            }\r\n\r\n            this._myInvalidVisualPoint = new VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualLineParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualVerticalLine = new VisualLine(visualParams);\r\n        }\r\n\r\n        this._myVisualTeleportPositionObject = getVisualData(this._myTeleportParams.myEngine).myRootObject.pp_addObject();\r\n\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Radius\", 0.175, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneInt(\"Teleport Torus Segments\", 24, 1, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Thickness\", 0.02, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Inner Radius\", 0.04, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n\r\n        {\r\n            let visualParams = new VisualTorusParams(this._myTeleportParams.myEngine);\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            this._myValidVisualTeleportPositionTorus = new VisualTorus(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualTorusParams(this._myTeleportParams.myEngine);\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            let visualTorusParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n\r\n            let innerTorusCenter = (visualTorusParams.myRadius - (visualTorusParams.mySegmentThickness / 2)) / 2;\r\n            innerTorusPosition.vec3_set(0, 0, innerTorusCenter);\r\n\r\n            visualParams.myTransform.mat4_setPosition(innerTorusPosition);\r\n\r\n            this._myValidVisualTeleportPositionTorusInner = new VisualTorus(visualParams);\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setParent(this._myVisualTeleportPositionObject);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_resetTransformLocal();\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n\r\n        this._hideTeleportPosition();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParable = function () {\r\n    let currentPosition = vec3_create();\r\n    let nextPosition = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    let upDifference = vec3_create();\r\n    return function _showTeleportParable(dt) {\r\n        let showParableDistance = Math.max(this._myDetectionRuntimeParams.myParableDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableLineEndOffset);\r\n        let lastParableIndex = this._myDetectionRuntimeParams.myParable.getPositionIndexByDistance(showParableDistance);\r\n        let lastParableIndexDistance = this._myDetectionRuntimeParams.myParable.getDistance(lastParableIndex);\r\n\r\n        if (lastParableIndex + 1 > this._myValidVisualLines.length) {\r\n            this._addVisualLines(lastParableIndex + 1, this._myValidVisualLines.length);\r\n        }\r\n\r\n        for (let i = 0; i <= lastParableIndex; i++) {\r\n            currentPosition = this._myDetectionRuntimeParams.myParable.getPosition(i, currentPosition);\r\n            nextPosition = this._myDetectionRuntimeParams.myParable.getPosition(i + 1, nextPosition);\r\n\r\n            let visuaLine = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualLines[i] : this._myInvalidVisualLines[i];\r\n\r\n            let currentVisualLineParams = visuaLine.getParams();\r\n\r\n            if (i == lastParableIndex) {\r\n                let stepLength = Math.max(0, showParableDistance - lastParableIndexDistance);\r\n                nextPosition = nextPosition.vec3_sub(currentPosition, nextPosition).vec3_normalize(nextPosition);\r\n                nextPosition = currentPosition.vec3_add(nextPosition.vec3_scale(stepLength, nextPosition), nextPosition);\r\n            }\r\n\r\n            currentVisualLineParams.setStartEnd(currentPosition, nextPosition);\r\n            currentVisualLineParams.myThickness = 0.005;\r\n\r\n            visuaLine.paramsUpdated();\r\n            visuaLine.setVisible(true);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n                getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, currentPosition, vec4_create(1, 0, 0, 1), 0.01);\r\n            }\r\n        }\r\n\r\n        let visualPoint = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualPoint : this._myInvalidVisualPoint;\r\n        let visualPointParams = visualPoint.getParams();\r\n        visualPointParams.myPosition.vec3_copy(nextPosition);\r\n        visualPointParams.myRadius = 0.01;\r\n        visualPoint.paramsUpdated();\r\n        visualPoint.setVisible(true);\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            upDifference = nextPosition.vec3_sub(this._myTeleportRuntimeParams.myTeleportPosition, upDifference).vec3_componentAlongAxis(playerUp, upDifference);\r\n            let upDistance = upDifference.vec3_length();\r\n            if (upDistance >= this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine) {\r\n                let lineLength = Math.min(upDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine, this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine);\r\n\r\n                let visualLineParams = this._myValidVisualVerticalLine.getParams();\r\n\r\n                visualLineParams.myStart.vec3_copy(nextPosition);\r\n                visualLineParams.myDirection = playerUp.vec3_negate(visualLineParams.myDirection);\r\n                visualLineParams.myLength = lineLength;\r\n                visualLineParams.myThickness = 0.005;\r\n\r\n                this._myValidVisualVerticalLine.paramsUpdated();\r\n                this._myValidVisualVerticalLine.setVisible(true);\r\n\r\n            }\r\n\r\n            this._showTeleportParablePosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParablePosition = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let feetRotationQuat = quat_create();\r\n\r\n    let visualPosition = vec3_create();\r\n    let visualForward = vec3_create();\r\n    let visualRotationQuat = quat_create();\r\n\r\n    let currentVisualTeleportTransformQuat = quat2_create();\r\n    let currentVisualTeleportPosition = vec3_create();\r\n    let currentVisualTeleportRotationQuat = quat_create();\r\n    let differenceRotationQuat = quat_create();\r\n\r\n    return function _showTeleportParablePosition(dt) {\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n        feetRotationQuat = feetRotationQuat.quat_rotateAxis(this._myTeleportRuntimeParams.myTeleportRotationOnUp, playerUp, feetRotationQuat);\r\n        visualForward = feetRotationQuat.quat_getForward(visualForward);\r\n\r\n        visualPosition = this._myTeleportRuntimeParams.myTeleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myVisualizerParams.myTeleportParablePositionUpOffset, visualPosition), visualPosition);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportParablePositionVisualAlignOnSurface) {\r\n            visualRotationQuat.quat_setUp(this._myDetectionRuntimeParams.myTeleportSurfaceNormal, visualForward);\r\n        } else {\r\n            visualRotationQuat.quat_setUp(playerUp, visualForward);\r\n        }\r\n\r\n        this._myVisualTeleportTransformQuat.quat2_setPositionRotationQuat(visualPosition, visualRotationQuat);\r\n\r\n        if (this._myVisualTeleportTransformQuatReset || !this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpActive) {\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(this._myVisualTeleportTransformQuat);\r\n            this._myVisualTeleportTransformQuatReset = false;\r\n        } else {\r\n            currentVisualTeleportTransformQuat = this._myVisualTeleportPositionObject.pp_getTransformQuat(currentVisualTeleportTransformQuat);\r\n            currentVisualTeleportPosition = currentVisualTeleportTransformQuat.quat2_getPosition(currentVisualTeleportPosition);\r\n            currentVisualTeleportRotationQuat = currentVisualTeleportTransformQuat.quat2_getRotationQuat(currentVisualTeleportRotationQuat);\r\n            currentVisualTeleportRotationQuat.quat_rotationToQuat(visualRotationQuat, differenceRotationQuat);\r\n\r\n            let positionDistance = currentVisualTeleportPosition.vec3_distance(visualPosition);\r\n            let rotationAngleDistance = differenceRotationQuat.quat_getAngle();\r\n\r\n            if ((!this._myVisualTeleportTransformPositionLerping || positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToResetLerp) &&\r\n                (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp)) {\r\n                this._myVisualTeleportTransformPositionLerping = false;\r\n                currentVisualTeleportPosition.vec3_copy(visualPosition);\r\n            } else {\r\n                this._myVisualTeleportTransformPositionLerping = true;\r\n\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n                if (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToCloseLerpFactor) {\r\n                    interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionCloseLerpFactor * dt;\r\n                }\r\n                currentVisualTeleportPosition.vec3_lerp(visualPosition, interpolationValue, currentVisualTeleportPosition);\r\n            }\r\n\r\n            if ((!this._myVisualTeleportTransformRotationLerping || rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToResetLerp) &&\r\n                (rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp)) {\r\n                this._myVisualTeleportTransformRotationLerping = false;\r\n                currentVisualTeleportRotationQuat.quat_copy(visualRotationQuat);\r\n            } else {\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n\r\n                this._myVisualTeleportTransformRotationLerping = true;\r\n                currentVisualTeleportRotationQuat.quat_slerp(visualRotationQuat, interpolationValue, currentVisualTeleportRotationQuat);\r\n            }\r\n\r\n            currentVisualTeleportTransformQuat.quat2_setPositionRotationQuat(currentVisualTeleportPosition, currentVisualTeleportRotationQuat);\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(currentVisualTeleportTransformQuat);\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorus.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorusInner.getParams();\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorusInner.paramsUpdated();\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject == null) {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(true);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(true);\r\n        } else {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n            getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, this._myTeleportRuntimeParams.myTeleportPosition, vec4_create(0, 0, 1, 1), 0.02);\r\n        }\r\n    };\r\n}();", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class PlayerLocomotionTeleportParable {\r\n\r\n    constructor() {\r\n        this._myStartPosition = vec3_create();\r\n\r\n        this._myForward = vec3_create();\r\n        this._myUp = vec3_create();\r\n\r\n        this._mySpeed = 0;\r\n        this._myGravity = 0;\r\n        this._myStepLength = 0;\r\n    }\r\n\r\n    setStartPosition(startPosition) {\r\n        this._myStartPosition.vec3_copy(startPosition);\r\n    }\r\n\r\n    setForward(forward) {\r\n        this._myForward.vec3_copy(forward);\r\n    }\r\n\r\n    setUp(up) {\r\n        this._myUp.vec3_copy(up);\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        this._mySpeed = speed;\r\n    }\r\n\r\n    setGravity(gravity) {\r\n        this._myGravity = gravity;\r\n    }\r\n\r\n    setStepLength(stepLength) {\r\n        this._myStepLength = stepLength;\r\n    }\r\n\r\n    getPosition(positionIndex, outPosition = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistance(positionIndex) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionIndexByDistance(distance) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionByDistance(distance, outPosition = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getFlatDistanceOverDistance(distance) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPosition = function () {\r\n    let forwardPosition = vec3_create();\r\n    let upPosition = vec3_create();\r\n    return function getPosition(positionIndex, outPosition = vec3_create()) {\r\n        let deltaTimePerStep = this._myStepLength / this._mySpeed;\r\n\r\n        let elapsedTime = deltaTimePerStep * positionIndex;\r\n\r\n        forwardPosition = this._myForward.vec3_scale(this._mySpeed * elapsedTime, forwardPosition);\r\n        forwardPosition = forwardPosition.vec3_add(this._myStartPosition, forwardPosition);\r\n\r\n        upPosition = this._myUp.vec3_scale(this._myGravity * elapsedTime * elapsedTime / 2, upPosition);\r\n\r\n        outPosition = forwardPosition.vec3_add(upPosition, outPosition);\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    return function getDistance(positionIndex) {\r\n        let distance = 0;\r\n        prevPosition.vec3_copy(this._myStartPosition);\r\n\r\n        for (let i = 1; i <= positionIndex; i++) {\r\n            currentPosition = this.getPosition(i, currentPosition);\r\n            distance += currentPosition.vec3_distance(prevPosition);\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return distance;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionIndexByDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    return function getPositionIndexByDistance(distance) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        while (currentDistance < distance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.max(0, currentIndex - 1);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionByDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    let prevToCurrent = vec3_create();\r\n    return function getPositionByDistance(distance, outPosition = vec3_create()) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        let found = false;\r\n\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n        while (!found) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            if (currentDistance > distance) {\r\n                let lengthToRemove = currentDistance - distance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let lengthToAdd = prevToCurrent.vec3_length() - lengthToRemove;\r\n                prevToCurrent.vec3_normalize(prevToCurrent);\r\n\r\n                outPosition = prevPosition.vec3_add(prevToCurrent.vec3_scale(lengthToAdd, outPosition), outPosition);\r\n                found = true;\r\n            }\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistanceOverFlatDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let flatCurrentPosition = vec3_create();\r\n    let flatStartPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    let prevToCurrent = vec3_create();\r\n    let startToCurrentFlat = vec3_create();\r\n    return function getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        if (flatDistance < 0.00001) {\r\n            return 0;\r\n        }\r\n\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        let distanceOverFlatDistance = 0;\r\n\r\n        while (currentDistance <= maxParableDistance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            flatCurrentPosition = currentPosition.vec3_removeComponentAlongAxis(this._myUp, flatCurrentPosition);\r\n            startToCurrentFlat = flatCurrentPosition.vec3_sub(flatStartPosition, startToCurrentFlat);\r\n            let currentFlatDistance = startToCurrentFlat.vec3_length();\r\n            if (currentFlatDistance >= flatDistance) {\r\n                let flatDifference = currentFlatDistance - flatDistance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let angleWithFlat = prevToCurrent.vec3_angleRadians(startToCurrentFlat);\r\n                let cos = Math.cos(angleWithFlat);\r\n                let lengthToRemove = prevToCurrent.vec3_length();\r\n                if (cos != 0) {\r\n                    lengthToRemove = flatDifference / Math.cos(angleWithFlat);\r\n                }\r\n\r\n                distanceOverFlatDistance = currentDistance - lengthToRemove;\r\n                break;\r\n\r\n            } else {\r\n                distanceOverFlatDistance = currentDistance;\r\n            }\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.min(maxParableDistance, distanceOverFlatDistance);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getFlatDistanceOverDistance = function () {\r\n    let positionByDistance = vec3_create();\r\n    let flatPositionByDistance = vec3_create();\r\n    let flatStartPosition = vec3_create();\r\n    return function getFlatDistanceOverDistance(distance) {\r\n        positionByDistance = this.getPositionByDistance(distance, positionByDistance);\r\n\r\n        flatPositionByDistance = positionByDistance.vec3_removeComponentAlongAxis(this._myUp, flatPositionByDistance);\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n\r\n        return flatStartPosition.vec3_distance(flatPositionByDistance);\r\n    };\r\n}();", "import { State } from \"../../../../../../cauldron/fsm/state\";\r\nimport { getGamepads } from \"../../../../../../input/cauldron/input_globals\";\r\nimport { InputUtils } from \"../../../../../../input/cauldron/input_utils\";\r\nimport { GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, quat_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { getCollisionCheck } from \"../player_locomotion_component\";\r\n\r\nexport class PlayerLocomotionTeleportState extends State {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super();\r\n\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleport = function () {\r\n    return function _checkTeleport(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams = null) {\r\n        getCollisionCheck(this._myTeleportParams.myEngine).teleport(teleportPosition, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n        if (checkTeleportCollisionRuntimeParams != null) {\r\n            checkTeleportCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleportAsMovement = function () {\r\n    let checkTeleportMovementCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let feetRotationQuat = quat_create();\r\n    let feetPosition = vec3_create();\r\n    let feetUp = vec3_create();\r\n    let teleportFeetForward = vec3_create();\r\n    let teleportFeetRotationQuat = quat_create();\r\n    let teleportFeetTransformQuat = quat2_create();\r\n\r\n    let currentFeetPosition = vec3_create();\r\n    let fixedTeleportPosition = vec3_create();\r\n\r\n    let teleportMovement = vec3_create();\r\n    let extraVerticalMovement = vec3_create();\r\n    let movementToTeleportPosition = vec3_create();\r\n    let movementFeetTransformQuat = quat2_create();\r\n    return function _checkTeleportAsMovement(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams) {\r\n        feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n\r\n        // First try a normal teleport\r\n        feetUp = feetRotationQuat.quat_getUp(feetUp);\r\n        teleportFeetForward = teleportPosition.vec3_sub(feetPosition, teleportFeetForward).vec3_removeComponentAlongAxis(feetUp, teleportFeetForward);\r\n        teleportFeetForward.vec3_normalize(teleportFeetForward);\r\n        if (teleportFeetForward.vec3_isZero(0.00001)) {\r\n            teleportFeetForward = feetRotationQuat.quat_getForward(teleportFeetForward);\r\n        }\r\n\r\n        teleportFeetRotationQuat.quat_setUp(feetUp, teleportFeetForward);\r\n        teleportFeetTransformQuat.quat2_setPositionRotationQuat(feetPosition, teleportFeetRotationQuat);\r\n\r\n        this._checkTeleport(teleportPosition, teleportFeetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n\r\n        // If teleport is ok then we can check movement knowing we have to move toward the teleported position (which has also snapped/fixed the position)\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            let teleportMovementValid = false;\r\n\r\n            checkTeleportMovementCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            fixedTeleportPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n            currentFeetPosition.vec3_copy(feetPosition);\r\n            for (let i = 0; i < this._myTeleportParams.myTeleportAsMovementMaxSteps; i++) {\r\n                teleportMovement = fixedTeleportPosition.vec3_sub(currentFeetPosition, teleportMovement);\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementRemoveVerticalMovement) {\r\n                    teleportMovement = teleportMovement.vec3_removeComponentAlongAxis(feetUp, teleportMovement);\r\n                }\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter != 0) {\r\n                    let meters = teleportMovement.vec3_length();\r\n                    let extraVerticalMovementValue = meters * this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter;\r\n                    extraVerticalMovement = feetUp.vec3_scale(extraVerticalMovementValue, extraVerticalMovement);\r\n                    teleportMovement = teleportMovement.vec3_add(extraVerticalMovement, teleportMovement);\r\n                }\r\n\r\n                movementFeetTransformQuat.quat2_setPositionRotationQuat(currentFeetPosition, feetRotationQuat);\r\n                getCollisionCheck(this._myTeleportParams.myEngine).move(teleportMovement, movementFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, checkTeleportMovementCollisionRuntimeParams);\r\n\r\n                if (!checkTeleportMovementCollisionRuntimeParams.myHorizontalMovementCanceled && !checkTeleportMovementCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    movementToTeleportPosition = fixedTeleportPosition.vec3_sub(checkTeleportMovementCollisionRuntimeParams.myNewPosition, movementToTeleportPosition);\r\n                    //console.error(movementToTeleportPosition.vec3_length());\r\n                    if (movementToTeleportPosition.vec3_length() < this._myTeleportParams.myTeleportAsMovementMaxDistanceFromTeleportPosition + 0.00001) {\r\n                        teleportMovementValid = true;\r\n                        break;\r\n                    } else {\r\n                        teleportMovement.vec3_copy(movementToTeleportPosition);\r\n                        currentFeetPosition.vec3_copy(checkTeleportMovementCollisionRuntimeParams.myNewPosition);\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!teleportMovementValid) {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n\r\n            this._myTeleportAsMovementFailed = !teleportMovementValid;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._teleportToPosition = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let newFeetTransformQuat = quat2_create();\r\n    let newFeetRotationQuat = quat_create();\r\n    let teleportRotation = quat_create();\r\n    return function _teleportToPosition(teleportPosition, rotationOnUp, collisionRuntimeParams, forceTeleport = false) {\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        newFeetRotationQuat = feetTransformQuat.quat2_getRotationQuat(newFeetRotationQuat);\r\n        if (rotationOnUp != 0) {\r\n            newFeetRotationQuat = newFeetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, newFeetRotationQuat);\r\n        }\r\n\r\n        newFeetTransformQuat.quat2_setPositionRotationQuat(teleportPosition, newFeetRotationQuat);\r\n\r\n        if (getGamepads(this._myTeleportParams.myEngine)[InputUtils.getOppositeHandedness(this._myTeleportParams.myHandedness)].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            getCollisionCheck(this._myTeleportParams.myEngine).positionCheck(true, newFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(teleportPosition);\r\n            if (rotationOnUp != 0) {\r\n                teleportRotation.quat_fromAxis(rotationOnUp, playerUp);\r\n                this._myTeleportParams.myPlayerHeadManager.rotateFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            // Should teleport then rotate\r\n            this._myTeleportParams.myPlayerTransformManager.teleportTransformQuat(newFeetTransformQuat, collisionRuntimeParams, forceTeleport);\r\n        }\r\n    };\r\n}();", "import { PhysicsLayerFlags } from \"../../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { RaycastResults, RaycastSetup } from \"../../../../../../cauldron/physics/physics_raycast_data\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { getDebugVisualManager } from \"../../../../../../debug/debug_globals\";\r\nimport { getGamepads, getMouse } from \"../../../../../../input/cauldron/input_globals\";\r\nimport { MouseButtonID } from \"../../../../../../input/cauldron/mouse\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getPlayerObjects } from \"../../../../../../pp/player_objects_global\";\r\nimport { getEasyTuneVariables } from \"../../../../../../tool/easy_tune/easy_tune_globals\";\r\nimport { EasyTuneNumber } from \"../../../../../../tool/easy_tune/easy_tune_variable_types\";\r\nimport { CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { PlayerLocomotionTeleportDetectionVisualizer } from \"./player_locomotion_teleport_detection_visualizer\";\r\nimport { PlayerLocomotionTeleportParable } from \"./player_locomotion_teleport_parable\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportDetectionParams {\r\n\r\n    constructor() {\r\n        this.myMaxDistance = 0;\r\n        this.myMaxHeightDifference = 0;\r\n        this.myGroundAngleToIgnoreUpward = 0;\r\n        // This can be used to make it so the teleport position is valid on a steeper angle when going downward by setting the higher value on the collision params\r\n        // and then use this to specify that when going upward u want it to be less, basically to be able to teleprot down a cliff even on a steep ground\r\n        // that would not let you go up\r\n        this.myMustBeOnGround = false;\r\n\r\n        this.myTeleportBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myTeleportFloorLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myParableForwardMinAngleToBeValidUp = 30;\r\n        this.myParableForwardMinAngleToBeValidDown = 0;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        // Used if reference is null\r\n        this.myTeleportParableStartPositionOffset = vec3_create(0, -0.04, 0.08);\r\n        this.myTeleportParableStartRotationOffset = vec3_create(30, 0, 0);\r\n\r\n        this.myTeleportParableSpeed = 15;\r\n        this.myTeleportParableGravity = -30;\r\n        this.myTeleportParableStepLength = 0.25;\r\n\r\n        this.myRotationOnUpMinStickIntensity = 0.5;\r\n        this.myRotationOnUpActive = false;\r\n\r\n        this.myTeleportFeetPositionMustBeVisible = false;\r\n        this.myTeleportHeadPositionMustBeVisible = false;\r\n        this.myTeleportHeadOrFeetPositionMustBeVisible = false; // Wins over previous parameters\r\n\r\n        this.myVisibilityCheckRadius = 0.05;\r\n        this.myVisibilityCheckFeetPositionVerticalOffset = 0.1;\r\n        this.myVisibilityCheckDistanceFromHitThreshold = 0.1;\r\n        this.myVisibilityCheckCircumferenceSliceAmount = 6;\r\n        this.myVisibilityCheckCircumferenceStepAmount = 1;\r\n        this.myVisibilityCheckCircumferenceRotationPerStep = 30;\r\n        this.myVisibilityBlockLayerFlags = new PhysicsLayerFlags();\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportDetectionRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myTeleportDetectionValid = false;\r\n        this.myTeleportPositionValid = false;\r\n        this.myTeleportSurfaceNormal = vec3_create();\r\n\r\n        this.myParable = new PlayerLocomotionTeleportParable();\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportDetectionState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myDetectionRuntimeParams = new PlayerLocomotionTeleportDetectionRuntimeParams();\r\n\r\n        this._myVisualizer = new PlayerLocomotionTeleportDetectionVisualizer(this._myTeleportParams, this._myTeleportRuntimeParams, this._myDetectionRuntimeParams);\r\n\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Steps\", this._myTeleportParams.myDetectionParams.myTeleportParableStepLength, 1, 3, 0.01, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Gravity\", this._myTeleportParams.myDetectionParams.myTeleportParableGravity, 10, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Speed\", this._myTeleportParams.myDetectionParams.myTeleportParableSpeed, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Distance\", this._myTeleportParams.myDetectionParams.myMaxDistance, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n    }\r\n\r\n    start() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = true;\r\n        this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        this._myDetectionRuntimeParams.myParable.setSpeed(this._myTeleportParams.myDetectionParams.myTeleportParableSpeed);\r\n        this._myDetectionRuntimeParams.myParable.setGravity(this._myTeleportParams.myDetectionParams.myTeleportParableGravity);\r\n        this._myDetectionRuntimeParams.myParable.setStepLength(this._myTeleportParams.myDetectionParams.myTeleportParableStepLength);\r\n\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myVisualizer.start();\r\n    }\r\n\r\n    end() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = false;\r\n        this._myVisualizer.end();\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._detectTeleportPosition();\r\n\r\n        this._myVisualizer.update(dt);\r\n\r\n        if (this._confirmTeleport()) {\r\n            if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n                fsm.perform(\"teleport\");\r\n            } else {\r\n                fsm.perform(\"cancel\");\r\n            }\r\n        } else if (this._cancelTeleport()) {\r\n            fsm.perform(\"cancel\");\r\n        }\r\n    }\r\n\r\n    _confirmTeleport() {\r\n        let confirmTeleport = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            if (getMouse(this._myTeleportParams.myEngine).isInsideView()) {\r\n                confirmTeleport = getMouse(this._myTeleportParams.myEngine).isButtonPressEnd(MouseButtonID.MIDDLE);\r\n            }\r\n        } else {\r\n            let axes = getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                confirmTeleport = true;\r\n            }\r\n        }\r\n\r\n        return confirmTeleport;\r\n    }\r\n\r\n    _cancelTeleport() {\r\n        let cancelTeleport = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            cancelTeleport = getMouse(this._myTeleportParams.myEngine).isButtonPressEnd(MouseButtonID.RIGHT) || !getMouse(this._myTeleportParams.myEngine).isInsideView();\r\n        } else {\r\n            cancelTeleport = getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed();\r\n        }\r\n\r\n        return cancelTeleport;\r\n    }\r\n\r\n    _detectTeleportPosition() {\r\n        //this._myDetectionRuntimeParams.myParable.setSpeed(getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Speed\"));\r\n        //this._myDetectionRuntimeParams.myParable.setGravity(getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Gravity\"));\r\n        //this._myDetectionRuntimeParams.myParable.setStepLength(getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Steps\"));\r\n        //this._myTeleportParams.myDetectionParams.myMaxDistance = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Distance\");\r\n\r\n        if (XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            this._detectTeleportRotationVR();\r\n            this._detectTeleportPositionVR();\r\n        } else {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n            this._detectTeleportPositionNonVR();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionNonVR = function () {\r\n    let mousePosition = vec3_create();\r\n    let mouseDirection = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    return function _detectTeleportPositionNonVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        getMouse(this._myTeleportParams.myEngine).getOriginWorld(mousePosition);\r\n        getMouse(this._myTeleportParams.myEngine).getDirectionWorld(mouseDirection);\r\n\r\n        this._detectTeleportPositionParable(mousePosition, mouseDirection, playerUp);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionVR = function () {\r\n    let teleportStartTransformLocal = quat2_create();\r\n    let teleportStartTransformWorld = quat2_create();\r\n\r\n    let teleportStartPosition = vec3_create();\r\n    let teleportDirection = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    let playerUpNegate = vec3_create();\r\n    return function _detectTeleportPositionVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = false;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject == null) {\r\n            let referenceObject = getPlayerObjects(this._myTeleportParams.myEngine).myHands[this._myTeleportParams.myHandedness];\r\n\r\n            teleportStartTransformLocal.quat2_setPositionRotationDegrees(this._myTeleportParams.myDetectionParams.myTeleportParableStartPositionOffset, this._myTeleportParams.myDetectionParams.myTeleportParableStartRotationOffset);\r\n            teleportStartTransformWorld = referenceObject.pp_convertTransformObjectToWorldQuat(teleportStartTransformLocal, teleportStartTransformWorld);\r\n        } else {\r\n            let referenceObject = this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject;\r\n\r\n            referenceObject.pp_getTransformQuat(teleportStartTransformWorld);\r\n        }\r\n\r\n        teleportStartPosition = teleportStartTransformWorld.quat2_getPosition(teleportStartPosition);\r\n        teleportDirection = teleportStartTransformWorld.quat2_getForward(teleportDirection);\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        playerUpNegate = playerUp.vec3_negate(playerUpNegate);\r\n\r\n        if (teleportDirection.vec3_angle(playerUp) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidUp &&\r\n            teleportDirection.vec3_angle(playerUpNegate) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidDown\r\n        ) {\r\n            this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n        }\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._detectTeleportPositionParable(teleportStartPosition, teleportDirection, playerUp);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionParable = function () {\r\n    let parablePosition = vec3_create();\r\n    let prevParablePosition = vec3_create();\r\n    let parableFinalPosition = vec3_create();\r\n\r\n    let raycastSetup = new RaycastSetup();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let parableHitPosition = vec3_create();\r\n    let parableHitNormal = vec3_create();\r\n\r\n    let verticalHitOrigin = vec3_create();\r\n    let verticalHitDirection = vec3_create();\r\n\r\n    let flatTeleportHorizontalHitNormal = vec3_create();\r\n    let flatParableHitNormal = vec3_create();\r\n    let flatParableDirectionNegate = vec3_create();\r\n\r\n    let teleportCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _detectTeleportPositionParable(startPosition, direction, up) {\r\n        this._myDetectionRuntimeParams.myParable.setStartPosition(startPosition);\r\n        this._myDetectionRuntimeParams.myParable.setForward(direction);\r\n        this._myDetectionRuntimeParams.myParable.setUp(up);\r\n\r\n        let currentPositionIndex = 1;\r\n        let positionFlatDistance = 0;\r\n        let positionParableDistance = 0;\r\n        prevParablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex - 1, prevParablePosition);\r\n\r\n        raycastSetup.myPhysics = this._myTeleportParams.myEngine.physics\r\n\r\n        raycastSetup.myIgnoreHitsInsideCollision = true;\r\n        raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportBlockLayerFlags.getMask());\r\n\r\n        raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n            raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n        }\r\n\r\n        let maxParableDistance = this._myTeleportParams.myDetectionParams.myMaxDistance * 2;\r\n\r\n        do {\r\n            parablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex, parablePosition);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(prevParablePosition);\r\n            raycastSetup.myDirection = parablePosition.vec3_sub(prevParablePosition, raycastSetup.myDirection);\r\n            raycastSetup.myDistance = raycastSetup.myDirection.vec3_length();\r\n            raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            prevParablePosition.vec3_copy(parablePosition);\r\n            positionFlatDistance = parablePosition.vec3_sub(startPosition, parablePosition).vec3_removeComponentAlongAxis(up, parablePosition).vec3_length();\r\n            positionParableDistance = this._myDetectionRuntimeParams.myParable.getDistance(currentPositionIndex);\r\n\r\n            currentPositionIndex++;\r\n        } while (\r\n            positionFlatDistance <= this._myTeleportParams.myDetectionParams.myMaxDistance &&\r\n            positionParableDistance <= maxParableDistance &&\r\n            !raycastResult.isColliding());\r\n\r\n        let maxParableDistanceOverFlatDistance = this._myDetectionRuntimeParams.myParable.getDistanceOverFlatDistance(this._myTeleportParams.myDetectionParams.myMaxDistance, maxParableDistance);\r\n\r\n        let fixedPositionParableDistance = positionParableDistance;\r\n        if (positionParableDistance > maxParableDistanceOverFlatDistance || positionParableDistance > maxParableDistance) {\r\n            fixedPositionParableDistance = Math.min(maxParableDistanceOverFlatDistance, maxParableDistance);\r\n        }\r\n\r\n        this._myDetectionRuntimeParams.myParableDistance = fixedPositionParableDistance;\r\n\r\n        let hitCollisionValid = false;\r\n\r\n        let bottomCheckMaxLength = 100;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hit = raycastResult.myHits.pp_first();\r\n\r\n            let hitParableDistance = positionParableDistance - (raycastSetup.myDistance - hit.myDistance);\r\n\r\n            if (hitParableDistance <= fixedPositionParableDistance) {\r\n                hitCollisionValid = true;\r\n\r\n                this._myDetectionRuntimeParams.myParableDistance = hitParableDistance;\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                parableHitPosition.vec3_copy(hit.myPosition);\r\n                parableHitNormal.vec3_copy(hit.myNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    verticalHitOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(0.01, verticalHitOrigin), verticalHitOrigin);\r\n                    verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n                    raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n                    raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                    raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                    raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                    if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                        getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                    }\r\n\r\n                    if (raycastResult.isColliding()) {\r\n                        let hit = raycastResult.myHits.pp_first();\r\n\r\n                        teleportCollisionRuntimeParams.reset();\r\n                        this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                        this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                        this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                            !this._myTeleportAsMovementFailed &&\r\n                            teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                            teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                            if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                                flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastSetup.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"2\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableHitNormal = parableHitNormal.vec3_removeComponentAlongAxis(up, flatParableHitNormal);\r\n                            if (!flatParableHitNormal.vec3_isZero(0.00001)) {\r\n                                flatParableHitNormal.vec3_normalize(flatParableHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastSetup.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"3\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                            if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                                flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastSetup.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"4\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n                    }\r\n                } else {\r\n                    //console.error(\"1\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(\"-\");\r\n\r\n        if (!hitCollisionValid) {\r\n            parableFinalPosition = this._myDetectionRuntimeParams.myParable.getPositionByDistance(this._myDetectionRuntimeParams.myParableDistance, parableFinalPosition);\r\n\r\n            verticalHitOrigin.vec3_copy(parableFinalPosition);\r\n            verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n            raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n            raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                    !this._myTeleportAsMovementFailed &&\r\n                    teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                    teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                    flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                    if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                        flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastSetup.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                            getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                    if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                        flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastSetup.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                            getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportRotationVR = function () {\r\n    let axesVec3 = vec3_create();\r\n    let axesForward = vec3_create(0, 0, 1);\r\n    let axesUp = vec3_create(0, 1, 0);\r\n    return function _detectTeleportRotationVR(dt) {\r\n        let axes = getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (axes.vec2_length() > this._myTeleportParams.myDetectionParams.myRotationOnUpMinStickIntensity) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = this._myTeleportRotationOnUpNext;\r\n\r\n            axesVec3.vec3_set(axes[0], 0, axes[1]);\r\n            this._myTeleportRotationOnUpNext = axesVec3.vec3_angleSigned(axesForward, axesUp);\r\n        }\r\n\r\n        if (!this._myTeleportParams.myDetectionParams.myRotationOnUpActive) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportHitValid = function () {\r\n    let raycastSetup = new RaycastSetup();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let playerUp = vec3_create();\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isTeleportHitValid(hit, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        if (hit.isValid() && !hit.myIsInsideCollision) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            if (true || hit.myNormal.vec3_isConcordant(playerUp)) {\r\n                // #TODO When the flags on the physx will be available just check that the hit object physx has the floor flag\r\n\r\n                raycastSetup.myPhysics = this._myTeleportParams.myEngine.physics\r\n\r\n                raycastSetup.myIgnoreHitsInsideCollision = true;\r\n                raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportFloorLayerFlags.getMask());\r\n\r\n                raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n                for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                    raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n                }\r\n\r\n                let distanceToCheck = 0.01;\r\n                raycastSetup.myOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(distanceToCheck, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                raycastSetup.myDirection = hit.myNormal.vec3_negate(raycastSetup.myDirection);\r\n                raycastSetup.myDistance = distanceToCheck * 1.25;\r\n                raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n                raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    let floorHit = raycastResult.myHits.pp_first();\r\n                    if (floorHit.myObject.pp_equals(hit.myObject)) {\r\n                        isValid = this._isTeleportPositionValid(hit.myPosition, rotationOnUp, checkTeleportCollisionRuntimeParams);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionValid = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let feetRotationQuat = quat_create();\r\n    let feetPosition = vec3_create();\r\n    let differenceOnUpVector = vec3_create();\r\n    let teleportCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function _isTeleportPositionValid(teleportPosition, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        let positionVisible = this._isTeleportPositionVisible(teleportPosition);\r\n\r\n        if (positionVisible) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n            feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n            if (rotationOnUp != 0) {\r\n                feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n                feetRotationQuat = feetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, feetRotationQuat);\r\n                feetTransformQuat.quat2_setPositionRotationQuat(feetPosition, feetRotationQuat);\r\n            }\r\n\r\n            let differenceOnUp = teleportPosition.vec3_sub(feetPosition, differenceOnUpVector).vec3_componentAlongAxis(playerUp, differenceOnUpVector).vec3_length();\r\n\r\n            if (differenceOnUp < this._myTeleportParams.myDetectionParams.myMaxHeightDifference + 0.00001) {\r\n                let teleportCheckValid = false;\r\n                teleportCheckCollisionRuntimeParams.copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n\r\n                if (!this._myTeleportParams.myPerformTeleportAsMovement) {\r\n                    this._checkTeleport(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                } else {\r\n                    this._checkTeleportAsMovement(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                }\r\n\r\n                if (!teleportCheckCollisionRuntimeParams.myTeleportCanceled) {\r\n                    teleportCheckValid = true;\r\n                }\r\n\r\n                if (teleportCheckValid && (!this._myTeleportParams.myDetectionParams.myMustBeOnGround || teleportCheckCollisionRuntimeParams.myIsOnGround)) {\r\n\r\n                    let groundAngleValid = true;\r\n                    let isTeleportingUpward = teleportCheckCollisionRuntimeParams.myNewPosition.vec3_isFartherAlongAxis(feetPosition, playerUp);\r\n                    if (isTeleportingUpward) {\r\n                        groundAngleValid = teleportCheckCollisionRuntimeParams.myGroundAngle < this._myTeleportParams.myDetectionParams.myGroundAngleToIgnoreUpward + 0.0001;\r\n                    }\r\n\r\n                    if (groundAngleValid) {\r\n                        isValid = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();", "import { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../../../../pp/default_resources_global\";\r\nimport { vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { TimerState } from \"../../../../../../cauldron/fsm/states/timer_state\";\r\nimport { NumberOverValue } from \"../../../../../cauldron/cauldron/number_over_value\";\r\nimport { Timer } from \"../../../../../../cauldron/cauldron/timer\";\r\n\r\nexport class PlayerLocomotionTeleportTeleportBlinkState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myBlinkSphere = this._myTeleportParams.myEngine.scene.pp_addObject();\r\n        this._myBlinkSphereMeshComponent = this._myBlinkSphere.pp_addComponent(MeshComponent);\r\n        this._myBlinkSphereMeshComponent.mesh = getDefaultResources(this._myTeleportParams.myEngine).myMeshes.myInvertedSphere;\r\n        this._myBlinkSphereMeshComponent.material = getDefaultResources(this._myTeleportParams.myEngine).myMaterials.myFlatTransparentNoDepth.clone();\r\n        this._myBlinkSphereMaterialColor = vec4_create(\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[0] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[1] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[2] / 255,\r\n            0);\r\n\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n        this._myBlinkSphere.pp_setScaleLocal(this._myTeleportParams.myTeleportParams.myBlinkSphereScale);\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Blink\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"fade_out\", this._fadeOutUpdate.bind(this));\r\n        this._myFSM.addState(\"wait\", new TimerState(this._myTeleportParams.myTeleportParams.myBlinkWaitSeconds, \"done\"));\r\n        this._myFSM.addState(\"fade_in\", this._fadeInUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fade_out\", \"teleport\", this._startFadeOut.bind(this));\r\n        this._myFSM.addTransition(\"fade_out\", \"wait\", \"done\", this._teleport.bind(this));\r\n        this._myFSM.addTransition(\"wait\", \"fade_in\", \"done\", this._startFadeIn.bind(this));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"fade_out\", \"idle\", \"stop\", this._stop.bind(this, true));\r\n        this._myFSM.addTransition(\"wait\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myFadeInTimer = new Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeInSeconds);\r\n        this._myFadeOutTimer = new Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeOutSeconds);\r\n        this._myFadeOutAlphaOverTime = new NumberOverValue(0, 1, 0, 1);\r\n        this._myFadeInAlphaOverTime = new NumberOverValue(1, 0, 0, 1);\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n        this._myBlinkSphere.pp_setParent(null, false);\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myBlinkSphere.pp_setParent(this._myTeleportParams.myPlayerHeadManager.getHead(), false);\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startFadeOut() {\r\n        this._myFadeOutTimer.start();\r\n        this._myBlinkSphereMaterialColor[3] = 0;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n        this._myBlinkSphere.pp_setActive(true);\r\n\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n    }\r\n\r\n    _startFadeIn() {\r\n        this._myFadeInTimer.start();\r\n    }\r\n\r\n    _fadeOutUpdate(dt, fsm) {\r\n        this._myFadeOutTimer.update(dt);\r\n\r\n        let alpha = this._myFadeOutAlphaOverTime.get(this._myFadeOutTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeOutTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _fadeInUpdate(dt, fsm) {\r\n        this._myFadeInTimer.update(dt);\r\n\r\n        let alpha = this._myFadeInAlphaOverTime.get(this._myFadeInTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeInTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _stop(teleport) {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        if (teleport) {\r\n            this._teleport();\r\n        }\r\n    }\r\n\r\n    _teleport() {\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n}", "import { Timer } from \"../../../../../../cauldron/cauldron/timer\";\r\nimport { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getEasyTuneVariables } from \"../../../../../../tool/easy_tune/easy_tune_globals\";\r\nimport { EasyTuneNumber } from \"../../../../../../tool/easy_tune/easy_tune_variable_types\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportTeleportShiftState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Shift\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"shifting\", this._shiftingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"shifting\", \"teleport\", this._startShifting.bind(this));\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"stop\", this._stop.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myShiftMovementTimer = new Timer(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n        this._myShiftRotateTimer = new Timer(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, false);\r\n\r\n        this._myFeetStartPosition = vec3_create();\r\n\r\n        this._myCurrentRotationOnUp = 0;\r\n        this._myStartRotationOnUp = 0;\r\n\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Movement Seconds\", this._myTeleportParams.myTeleportParams.myShiftMovementSeconds, 0.5, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Rotate Seconds\", this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, 0.5, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Rotate Start Percentage\", this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage, 0.5, 3, 0, 1, this._myTeleportParams.myEngine));\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        //this._myTeleportParams.myTeleportParams.myShiftMovementSeconds = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Movement Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateSeconds = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Rotate Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage = getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Rotate Start Percentage\");\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startShifting() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = true;\r\n\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n        this._myFeetStartPosition = this._myTeleportParams.myPlayerHeadManager.getPositionFeet(this._myFeetStartPosition);\r\n\r\n        this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n\r\n        if (this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction) {\r\n            let distance = this._myTeleportRuntimeParams.myTeleportPosition.vec3_distance(this._myFeetStartPosition);\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction(distance);\r\n            this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds * multiplier);\r\n        }\r\n\r\n        this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds);\r\n        if (this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction) {\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction(Math.abs(this._myTeleportRuntimeParams.myTeleportRotationOnUp));\r\n            this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds * multiplier);\r\n        }\r\n\r\n        this._myStartRotationOnUp = this._myTeleportRuntimeParams.myTeleportRotationOnUp;\r\n        this._myCurrentRotationOnUp = 0;\r\n    }\r\n\r\n    _stop() {\r\n        this._teleport();\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._teleport();\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _teleport() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = false;\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myStartRotationOnUp - this._myCurrentRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportTeleportShiftState.prototype._shiftingUpdate = function () {\r\n    let movementToTeleportFeet = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    return function _shiftingUpdate(dt, fsm) {\r\n        this._myShiftMovementTimer.update(dt);\r\n        this._myShiftRotateTimer.update(dt);\r\n\r\n        if (this._myShiftRotateTimer.isDone() && this._myShiftMovementTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        } else {\r\n            newFeetPosition.vec3_copy(this._myTeleportRuntimeParams.myTeleportPosition);\r\n\r\n            if (this._myShiftMovementTimer.isStarted() || this._myShiftMovementTimer.isJustDone()) {\r\n\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftMovementEasingFunction(this._myShiftMovementTimer.getPercentage());\r\n\r\n                if (interpolationValue >= this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage && !this._myShiftRotateTimer.isStarted()) {\r\n                    this._myShiftRotateTimer.start();\r\n                    this._myShiftRotateTimer.update(dt);\r\n                }\r\n\r\n                movementToTeleportFeet = this._myTeleportRuntimeParams.myTeleportPosition.vec3_sub(this._myFeetStartPosition, movementToTeleportFeet);\r\n                movementToTeleportFeet.vec3_scale(interpolationValue, movementToTeleportFeet);\r\n                newFeetPosition = this._myFeetStartPosition.vec3_add(movementToTeleportFeet, newFeetPosition);\r\n            }\r\n\r\n            let rotationOnUp = 0;\r\n            if (this._myShiftRotateTimer.isRunning() || this._myShiftRotateTimer.isJustDone()) {\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftRotateEasingFunction(this._myShiftRotateTimer.getPercentage());\r\n\r\n                let newCurrentRotationOnUp = this._myStartRotationOnUp * interpolationValue;\r\n                rotationOnUp = newCurrentRotationOnUp - this._myCurrentRotationOnUp;\r\n\r\n                this._myCurrentRotationOnUp = newCurrentRotationOnUp;\r\n            }\r\n\r\n            this._teleportToPosition(newFeetPosition, rotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionTeleportTeleportShiftState.prototype, \"_shiftingUpdate\", { enumerable: false });", "import { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { EasingFunction } from \"../../../../../../plugin/js/extensions/math_extension\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\nimport { PlayerLocomotionTeleportTeleportBlinkState } from \"./player_locomotion_teleport_teleport_blink_state\";\r\nimport { PlayerLocomotionTeleportTeleportShiftState } from \"./player_locomotion_teleport_teleport_shift_state\";\r\n\r\nexport let PlayerLocomotionTeleportTeleportType = {\r\n    INSTANT: 0,\r\n    BLINK: 1,\r\n    SHIFT: 2\r\n};\r\n\r\nexport class PlayerLocomotionTeleportTeleportParams {\r\n\r\n    constructor() {\r\n        this.myTeleportType = PlayerLocomotionTeleportTeleportType.SHIFT;\r\n\r\n        this.myBlinkFadeOutSeconds = 0.1;\r\n        this.myBlinkFadeInSeconds = 0.1;\r\n        this.myBlinkWaitSeconds = 0.1;\r\n        this.myBlinkSphereColor = vec3_create();\r\n        this.myBlinkSphereScale = 0.1;\r\n\r\n        this.myShiftMovementSeconds = 0.15;\r\n        this.myShiftMovementSecondsMultiplierOverDistanceFunction = null;\r\n        this.myShiftMovementEasingFunction = EasingFunction.easeInOut;\r\n\r\n        this.myShiftRotateSeconds = 1;\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = null;\r\n        this.myShiftRotateEasingFunction = EasingFunction.easeOut;\r\n        this.myShiftRotateStartAfterMovementPercentage = 0.7;\r\n\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = function (angle) {\r\n            return EasingFunction.easeOut(angle / 180);\r\n        };\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportTeleportState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myBlinkState = new PlayerLocomotionTeleportTeleportBlinkState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n        this._myShiftState = new PlayerLocomotionTeleportTeleportShiftState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM.addState(\"instant_teleport\", this._instantUpdate.bind(this));\r\n        this._myFSM.addState(\"blink_teleport\", this._myBlinkState);\r\n        this._myFSM.addState(\"shift_teleport\", this._myShiftState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"instant_teleport\", \"start_instant\");\r\n        this._myFSM.addTransition(\"idle\", \"blink_teleport\", \"start_blink\");\r\n        this._myFSM.addTransition(\"idle\", \"shift_teleport\", \"start_shift\");\r\n\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"stop\", this._instantStop.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"stop\");\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        switch (this._myTeleportParams.myTeleportParams.myTeleportType) {\r\n            case PlayerLocomotionTeleportTeleportType.INSTANT:\r\n                this._myFSM.perform(\"start_instant\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.BLINK:\r\n                this._myFSM.perform(\"start_blink\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.SHIFT:\r\n                this._myFSM.perform(\"start_shift\");\r\n                break;\r\n            default:\r\n                this._myFSM.perform(\"start_instant\");\r\n        }\r\n    }\r\n\r\n    end() {\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    completeTeleport() {\r\n        this._myFSM.perform(\"stop\");\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n\r\n    _instantUpdate(dt, fsm) {\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        fsm.perform(\"done\");\r\n    }\r\n\r\n    _instantStop(fsm) {\r\n        this._instantUpdate(0, fsm);\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n}", "import { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { getGamepads, getMouse } from \"../../../../../../input/cauldron/input_globals\";\r\nimport { Handedness } from \"../../../../../../input/cauldron/input_types\";\r\nimport { MouseButtonID } from \"../../../../../../input/cauldron/mouse\";\r\nimport { GamepadAxesID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../../cauldron/wl/engine_globals\";\r\nimport { getCollisionCheck } from \"../player_locomotion_component\";\r\nimport { PlayerLocomotionMovement } from \"../player_locomotion_movement\";\r\nimport { PlayerLocomotionTeleportDetectionParams, PlayerLocomotionTeleportDetectionState } from \"./player_locomotion_teleport_detection_state\";\r\nimport { PlayerLocomotionTeleportDetectionVisualizerParams } from \"./player_locomotion_teleport_detection_visualizer\";\r\nimport { PlayerLocomotionTeleportTeleportParams, PlayerLocomotionTeleportTeleportState } from \"./player_locomotion_teleport_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myDetectionParams = new PlayerLocomotionTeleportDetectionParams();\r\n        this.myVisualizerParams = new PlayerLocomotionTeleportDetectionVisualizerParams();\r\n        this.myTeleportParams = new PlayerLocomotionTeleportTeleportParams();\r\n\r\n        this.myHandedness = Handedness.LEFT;\r\n\r\n        this.myPerformTeleportAsMovement = false;\r\n        this.myTeleportAsMovementMaxDistanceFromTeleportPosition = 0.001;\r\n        this.myTeleportAsMovementMaxSteps = 2;\r\n        // When checking teleport as movement u may need to move more times to get to the position due to snap and gravity\r\n        // This specifies how many movement u can try to get to the teleport position\r\n\r\n        this.myTeleportAsMovementRemoveVerticalMovement = true;\r\n        // This can be used to remove the vertical movement from the difference from the current and teleport position so that u can apply just\r\n        // the gravity as vertical movement\r\n        this.myTeleportAsMovementExtraVerticalMovementPerMeter = 1; // This simulate the gravity for the teleport movement\r\n\r\n        this.myStickIdleThreshold = 0.1;\r\n\r\n        this.myAdjustPositionEveryFrame = false;\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugActive = false;\r\n        this.myDebugDetectActive = false;\r\n        this.myDebugShowActive = false;\r\n        this.myDebugVisibilityActive = false;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myTeleportPosition = vec3_create();\r\n        this.myTeleportRotationOnUp = 0;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleport extends PlayerLocomotionMovement {\r\n\r\n    constructor(teleportParams, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = new PlayerLocomotionTeleportRuntimeParams();\r\n\r\n        this._myStickIdleCharge = true;\r\n        this._myGravitySpeed = 0;\r\n\r\n        this._myDetectionState = new PlayerLocomotionTeleportDetectionState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n        this._myTeleportState = new PlayerLocomotionTeleportTeleportState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"detect\", this._myDetectionState);\r\n        this._myFSM.addState(\"teleport\", this._myTeleportState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"detect\", \"detect\");\r\n        this._myFSM.addTransition(\"detect\", \"teleport\", \"teleport\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"cancel\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"done\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"stop\", this._completeTeleport.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start() {\r\n        this._myGravitySpeed = 0;\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    canStop() {\r\n        return this._myFSM.isInState(\"idle\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = false;\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        // No gravity if teleporting\r\n        if (this._myTeleportParams.myAdjustPositionEveryFrame || this._myTeleportParams.myGravityAcceleration != 0) {\r\n            this._applyGravity(dt);\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (this._startDetecting()) {\r\n            this._myFSM.perform(\"detect\");\r\n        }\r\n    }\r\n\r\n    _startDetecting() {\r\n        let startDetecting = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            startDetecting = getMouse(this._myTeleportParams.myEngine).isButtonPressStart(MouseButtonID.MIDDLE) &&\r\n                getMouse(this._myTeleportParams.myEngine).isTargetingRenderCanvas();\r\n        } else {\r\n            let axes = getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                this._myStickIdleCharge = true;\r\n            }\r\n\r\n            if (this._myStickIdleCharge && axes[1] >= 0.75) {\r\n                this._myStickIdleCharge = false;\r\n                startDetecting = true;\r\n            }\r\n        }\r\n\r\n        return startDetecting;\r\n    }\r\n\r\n    _completeTeleport() {\r\n        this._myTeleportState.completeTeleport();\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleport.prototype._applyGravity = function () {\r\n    let playerUp = vec3_create();\r\n    let gravityMovement = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    return function _applyGravity(dt) {\r\n        // If gravity is zero it's still important to move to remain snapped and gather proper surface data even when not teleporting\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        this._myGravitySpeed += this._myTeleportParams.myGravityAcceleration * dt;\r\n        gravityMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, gravityMovement);\r\n\r\n        if (this._myLocomotionRuntimeParams.myIsFlying) {\r\n            gravityMovement.vec3_zero();\r\n        }\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        getCollisionCheck(this._myTeleportParams.myEngine).move(gravityMovement, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        if (!this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myNewPosition);\r\n        }\r\n\r\n        if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n            this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myGravitySpeed = 0;\r\n        }\r\n    };\r\n}();", "import { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { getGamepads } from \"../../../../../input/cauldron/input_globals\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { getPlayerObjects } from \"../../../../../pp/player_objects_global\";\r\nimport { Direction2DTo3DConverter, Direction2DTo3DConverterParams } from \"../../../../cauldron/cauldron/direction_2D_to_3D_converter\";\r\nimport { PlayerLocomotionDirectionReferenceType } from \"./player_locomotion\";\r\nimport { getCollisionCheck } from \"./player_locomotion_component\";\r\nimport { PlayerLocomotionMovement } from \"./player_locomotion_movement\";\r\nimport { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\n\r\nexport class PlayerLocomotionSmoothParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myMaxSpeed = 0;\r\n\r\n        this.myMovementMinStickIntensityThreshold = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myHandedness = Handedness.LEFT;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false;\r\n        this.myMoveHeadShortcutEnabled = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionSmooth extends PlayerLocomotionMovement {\r\n\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n\r\n        this._myStickIdleTimer = new Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new Direction2DTo3DConverterParams();\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new Direction2DTo3DConverterParams();\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myLocomotionRuntimeParams.myIsFlying = false;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = vec3_create();\r\n    let headMovement = vec3_create();\r\n    let direction = vec3_create();\r\n    let directionOnUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n\r\n    let directionReferenceTransformQuat = quat2_create();\r\n    return function update(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SELECT).isPressed()) {\r\n                    movementIntensity = 0.1;\r\n                }\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n\r\n                if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsSliding) {\r\n\r\n                    //speed = Math.pp_lerp(speed * 0.05, speed, 1 - Math.abs(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.mySlidingMovementAngle) / 90);\r\n                    //speed = speed * 0.1;\r\n                    speed = speed / 2;\r\n                }\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SQUEEZE).isPressed()) {\r\n            if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n        }\r\n\r\n        if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n\r\n        if (getGamepads(this._myParams.myEngine)[InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            if (!getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying && false) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n\r\n                getCollisionCheck(this._myParams.myEngine).move(headMovement, feetTransformQuat, this._myParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n                headMovement.vec3_copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement);\r\n            }\r\n\r\n            if (!headMovement.vec3_isZero(0.000001)) {\r\n                this._myParams.myPlayerHeadManager.moveFeet(headMovement);\r\n            }\r\n        } else {\r\n            if (!getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            } else {\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "import { Timer } from \"../../../../../../cauldron/cauldron/timer\";\r\nimport { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { getGamepads } from \"../../../../../../input/cauldron/input_globals\";\r\nimport { InputUtils } from \"../../../../../../input/cauldron/input_utils\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { getPlayerObjects } from \"../../../../../../pp/player_objects_global\";\r\nimport { Direction2DTo3DConverter, Direction2DTo3DConverterParams } from \"../../../../../cauldron/cauldron/direction_2D_to_3D_converter\";\r\nimport { PlayerLocomotionMovement } from \"../player_locomotion_movement\";\r\n\r\nexport class CleanedPlayerLocomotionSmooth extends PlayerLocomotionMovement {\r\n\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n\r\n        this._myStickIdleTimer = new Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new Direction2DTo3DConverterParams(this._myParams.myEngine);\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new Direction2DTo3DConverterParams(this._myParams.myEngine);\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myLocomotionRuntimeParams.myIsFlying = false;\r\n\r\n        this._myGravitySpeed = 0;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCleanedPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = vec3_create();\r\n    let headMovement = vec3_create();\r\n    let direction = vec3_create();\r\n    let directionOnUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n\r\n    let directionReferenceTransformQuat = quat2_create();\r\n    return function update(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        let horizontalMovement = false;\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n\r\n                horizontalMovement = true;\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myFlyEnabled) {\r\n            if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n\r\n            if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myMoveHeadShortcutEnabled && getGamepads(this._myParams.myEngine)[InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.getPlayerHeadManager().moveFeet(headMovement);\r\n        } else if (this._myParams.myMoveThroughCollisionShortcutEnabled && getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n        } else {\r\n            if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                this._myGravitySpeed += this._myParams.myGravityAcceleration * dt;\r\n                verticalMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n            }\r\n\r\n            if (getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SQUEEZE).isPressed()) {\r\n                //headMovement.vec3_zero();\r\n            }\r\n\r\n            feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n\r\n            if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n                this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n                this._myGravitySpeed = 0;\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nCleanedPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nCleanedPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = getPlayerObjects(this._myParams.myEngine).myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "import { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheckUtils } from \"../../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { getCollisionCheck } from \"../player_locomotion_component\";\r\nimport { PlayerTransformManagerSyncFlag } from \"../player_transform_manager\";\r\n\r\nexport class CleanedPlayerTransformManager {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = vec3_create();\r\n        this._myValidRotationQuat = quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n\r\n        this._myActive = true;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // For sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // In generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // Collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // Maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // Collision check and move\r\n\r\n        // Move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // Also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n        // Use current valid rotation\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(this._myValidPosition), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getPosition(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(this._myValidPositionHead), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // On purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualCall, session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnEnterSession && !manualCall) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnExitSession) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPosition, vec4_create(1, 0, 0, 1), 0.05);\r\n        getDebugVisualManager(this._myParams.myEngine).drawLineEnd(0, this._myValidPosition, this.getPositionReal(), vec4_create(1, 0, 0, 1), 0.05);\r\n        getDebugVisualManager(this._myParams.myEngine).drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPositionHead, vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCleanedPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = vec3_create();\r\n    let validUp = vec3_create();\r\n    let position = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    let transformUp = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function update(dt) {\r\n        // #TODO This should update ground and ceiling info but not sliding info        \r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = vec3_create();\r\n    let position = vec3_create();\r\n    let positionReal = vec3_create();\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let newPosition = vec3_create();\r\n    let newPositionHead = vec3_create();\r\n    let movementStep = vec3_create();\r\n    let currentMovementStep = vec3_create();\r\n    let transformUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let movementChecked = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let floatingTransformQuat = quat2_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // Check if new head is ok and update the data\r\n        // If head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection);\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; // #TODO Temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                // #TODO Utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // Get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                // Reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // This make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add move callback\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = vec3_create();\r\n    let teleportPositionVec = vec3_create();\r\n    let teleportRotation = quat_create();\r\n    let rotatedTransformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add teleport callback\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nCleanedPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n// #TODO Sliding info, surface info, update", "import { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { getDebugVisualManager } from \"../../../../../debug/debug_globals\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { getMainEngine } from \"../../../../../cauldron/wl/engine_globals\";\r\nimport { CollisionCheckUtils } from \"../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { getCollisionCheck } from \"./player_locomotion_component\";\r\n\r\nexport let PlayerTransformManagerSyncFlag = {\r\n    BODY_COLLIDING: 0,\r\n    HEAD_COLLIDING: 1,\r\n    FAR: 2,\r\n    FLOATING: 3\r\n};\r\n\r\nexport class PlayerTransformManagerParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMovementCollisionCheckParams = null;\r\n        this.myTeleportCollisionCheckParams = null; // Can be left null and will be generated from the movement one\r\n        this.myTeleportCollisionCheckParamsCopyFromMovement = false;\r\n        this.myTeleportCollisionCheckParamsCheck360 = false;\r\n\r\n        // Sync for VR and NOn VR\r\n        this.mySyncEnabledFlagMap = new Map();\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionFlagMap = new Map();\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionHeadFlagMap = new Map();\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncRotationFlagMap = new Map();\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncHeightFlagMap = new Map();\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.myIsLeaningValidAboveDistance = false;\r\n        this.myLeaningValidDistance = 0;\r\n\r\n        // Settings for both hop and lean\r\n        this.myIsFloatingValidIfVerticalMovement = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndRealOnGround = false; // #TODO This is more an override\r\n        this.myIsFloatingValidIfRealOnGround = false;\r\n        this.myIsFloatingValidIfSteepGround = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n\r\n        this.myFloatingSplitCheckEnabled = false;\r\n        this.myFloatingSplitCheckMaxLength = 0;\r\n        this.myFloatingSplitCheckMaxSteps = null;\r\n        this.myFloatingSplitCheckStepEqualLength = false;\r\n        this.myFloatingSplitCheckStepEqualLengthMinLength = 0;\r\n\r\n        this.myIsMaxDistanceFromRealToSyncEnabled = false;\r\n        this.myMaxDistanceFromRealToSync = 0;\r\n        // Max distance to resync valid with head, if you head is further do not resync\r\n\r\n        this.myHeadRadius = 0;\r\n        this.myHeadCollisionBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHeadCollisionObjectsToIgnore = [];\r\n\r\n        this.myRotateOnlyIfSynced = false;\r\n        this.myResetRealResetRotationIfUpChanged = true;\r\n\r\n        //this.myDistanceToStartApplyGravityWhenFloating = 0; // This should be moved outisde, that is, if it is floating stop gravity\r\n\r\n        // Set valid if head synced (head manager)\r\n\r\n        this.myRealMovementAllowVerticalAdjustments = false;\r\n        // This true means that the real movement should also snap on ground or fix the vertical to pop from it\r\n        // You may want this if u want that while real moving u can also climb stairs\r\n\r\n        // Real movement apply vertical snap or not (other option to apply gravity) \r\n        // (gravity inside this class?) only when movement is applied not for head only)\r\n\r\n        this.myUpdateRealPositionValid = false;\r\n        this.myUpdatePositionValid = false;\r\n\r\n        this.myMinHeight = null;\r\n        this.myMaxHeight = null;\r\n\r\n        // These and the callbacks does not makes much sense\r\n        // The colliding things are made to not sync the real position, but if the height is below and the body is not colliding\r\n        // There is not reason not to resync, even if u put the real back on the valid the height will stay the same\r\n        // If someone puts the head in the ground, there is no way for me to resync and make the head pop out sadly\r\n        // In this case u either accept that u can move without seeing, or stop moving until the obscure is on\r\n        this.myIsBodyCollidingWhenHeightBelowValue = null; // Could be removed and added with the custom check callback if u want it\r\n        this.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n        this.myIsBodyCollidingExtraCheckCallback = null;      // Signature: callback(transformManager) -> bool\r\n        this.myIsLeaningExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsHoppingExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsFarExtraCheckCallback = null;                // Signature: callback(transformManager) -> bool\r\n\r\n        this.myResetToValidOnEnterSession = false;\r\n        this.myResetToValidOnExitSession = false;\r\n\r\n        this.myAlwaysResetRealPositionNonVR = false;\r\n        this.myAlwaysResetRealRotationNonVR = false;\r\n        this.myAlwaysResetRealHeightNonVR = false;\r\n\r\n        this.myAlwaysResetRealPositionVR = false;\r\n        this.myAlwaysResetRealRotationVR = false;\r\n        this.myAlwaysResetRealHeightVR = false;\r\n\r\n        this.myNeverResetRealPositionNonVR = false;\r\n        this.myNeverResetRealRotationNonVR = false;\r\n        this.myNeverResetRealHeightNonVR = false;\r\n\r\n        this.myNeverResetRealPositionVR = false;\r\n        this.myNeverResetRealRotationVR = false;\r\n        this.myNeverResetRealHeightVR = false;\r\n\r\n        this.myResetRealOnMove = false;\r\n        this.myResetRealOnTeleport = false;\r\n\r\n        this.mySyncPositionDisabled = false;\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n}\r\n\r\nexport class PlayerTransformManager {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = vec3_create();\r\n        this._myValidRotationQuat = quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // For sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // In generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // Collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // Maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // Collision check and move\r\n\r\n        // Move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // Also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n        // Use current valid rotation\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(this._myValidPosition), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getPosition(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(this._myValidPositionHead), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // On purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualCall, session) {\r\n        if (this._myParams.myResetToValidOnEnterSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myParams.myResetToValidOnExitSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPosition, vec4_create(1, 0, 0, 1), 0.05);\r\n        getDebugVisualManager(this._myParams.myEngine).drawLineEnd(0, this._myValidPosition, this.getPositionReal(), vec4_create(1, 0, 0, 1), 0.05);\r\n        getDebugVisualManager(this._myParams.myEngine).drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPositionHead, vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = vec3_create();\r\n    let validUp = vec3_create();\r\n    let position = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    let transformUp = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function update(dt) {\r\n        // #TODO This should update ground and ceiling info but not sliding info        \r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = vec3_create();\r\n    let position = vec3_create();\r\n    let positionReal = vec3_create();\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let newPosition = vec3_create();\r\n    let newPositionHead = vec3_create();\r\n    let movementStep = vec3_create();\r\n    let currentMovementStep = vec3_create();\r\n    let transformUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let movementChecked = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let floatingTransformQuat = quat2_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // Check if new head is ok and update the data\r\n        // If head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection);\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; // #TODO Temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                // #TODO Utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // Get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                // Reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (resetRealEnabled) { // No\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionVR) && !this._myParams.myNeverResetRealPositionVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationVR) && !this._myParams.myNeverResetRealRotationVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightVR) && !this._myParams.myNeverResetRealHeightVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                } else {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionNonVR) && !this._myParams.myNeverResetRealPositionNonVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationNonVR) && !this._myParams.myNeverResetRealRotationNonVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightNonVR) && !this._myParams.myNeverResetRealHeightNonVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // This make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add move callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = vec3_create();\r\n    let teleportPositionVec = vec3_create();\r\n    let teleportRotation = quat_create();\r\n    let rotatedTransformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add teleport callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n// #TODO Sliding info, surface info, update", "import { RaycastResults, RaycastSetup } from \"../../../../../../cauldron/physics/physics_raycast_data\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { getDebugVisualManager } from \"../../../../../../debug/debug_globals\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { PlayerLocomotionTeleportDetectionState } from \"./player_locomotion_teleport_detection_state\";\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionVisible = function () {\r\n    let playerUp = vec3_create();\r\n\r\n    let offsetFeetTeleportPosition = vec3_create();\r\n    let headTeleportPosition = vec3_create();\r\n    return function _isTeleportPositionVisible(teleportPosition) {\r\n        let isVisible = true;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible) {\r\n\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n            let isHeadVisible = false;\r\n            let isFeetVisible = false;\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible) {\r\n                let headheight = this._myTeleportParams.myPlayerHeadManager.getHeightHead();\r\n                headTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(headheight, headTeleportPosition), headTeleportPosition);\r\n                isHeadVisible = this._isPositionVisible(headTeleportPosition);\r\n            } else {\r\n                isHeadVisible = true;\r\n            }\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible && isHeadVisible) {\r\n                isFeetVisible = true;\r\n            } else {\r\n                if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                    (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible && isHeadVisible)) {\r\n                    offsetFeetTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myDetectionParams.myVisibilityCheckFeetPositionVerticalOffset, offsetFeetTeleportPosition), offsetFeetTeleportPosition);\r\n                    isFeetVisible = this._isPositionVisible(offsetFeetTeleportPosition);\r\n                } else {\r\n                    isFeetVisible = true;\r\n                }\r\n            }\r\n\r\n            isVisible = isHeadVisible && isFeetVisible;\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isPositionVisible = function () {\r\n    let playerUp = vec3_create();\r\n    let standardUp = vec3_create(0, 1, 0);\r\n    let standardForward = vec3_create(0, 0, 1);\r\n    let referenceUp = vec3_create();\r\n    let headPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    let fixedRight = vec3_create();\r\n    let fixedForward = vec3_create();\r\n    let fixedUp = vec3_create();\r\n    let raycastEndPosition = vec3_create();\r\n\r\n    let raycastSetup = new RaycastSetup();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isPositionVisible(position) {\r\n        let isVisible = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        let currentHead = this._myTeleportParams.myPlayerHeadManager.getHead();\r\n        headPosition = currentHead.pp_getPosition(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        referenceUp.vec3_copy(standardUp);\r\n        if (direction.vec3_angle(standardUp) < 0.0001) {\r\n            referenceUp.vec3_copy(standardForward);\r\n        }\r\n\r\n        fixedRight = direction.vec3_cross(referenceUp, fixedRight);\r\n        fixedUp = fixedRight.vec3_cross(direction, fixedUp);\r\n        fixedForward.vec3_copy(direction);\r\n\r\n        fixedUp.vec3_normalize(fixedUp);\r\n        fixedForward.vec3_normalize(fixedForward);\r\n\r\n        let checkPositions = this._getVisibilityCheckPositions(headPosition, fixedUp, fixedForward);\r\n\r\n        let distance = headPosition.vec3_distance(position);\r\n\r\n        for (let checkPosition of checkPositions) {\r\n            raycastSetup.myPhysics = this._myTeleportParams.myEngine.physics;\r\n            raycastSetup.myOrigin.vec3_copy(checkPosition);\r\n            raycastSetup.myDirection.vec3_copy(fixedForward);\r\n            raycastSetup.myDistance = distance;\r\n\r\n            raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myVisibilityBlockLayerFlags.getMask());\r\n\r\n            raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            raycastSetup.myIgnoreHitsInsideCollision = true;\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugVisibilityActive) {\r\n                getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                raycastEndPosition = checkPosition.vec3_add(fixedForward.vec3_scale(distance, raycastEndPosition), raycastEndPosition);\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                if (this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold == 0 || hit.myPosition.vec3_distance(raycastEndPosition) > this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold + 0.00001) {\r\n                    isVisible = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._getVisibilityCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = vec3_create();\r\n    return function _getVisibilityCheckPositions(position, up, forward) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(position);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = this._myTeleportParams.myDetectionParams.myVisibilityCheckRadius / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount;\r\n        let sliceAngle = 360 / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = up.vec3_rotateAxis(currentStepRotation, forward, currentDirection);\r\n            for (let j = 0; j < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, forward, tempCheckPosition);\r\n                checkPositions.push(position.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();", "import { Collider, CollisionComponent, Component, Property } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\nimport { InputSourceType, TrackedHandJointID } from \"../input_types\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class FingerCursorComponent extends Component {\r\n    static TypeName = \"pp-finger-cursor\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myMultipleClicksEnabled: Property.bool(true),\r\n        _myCollisionGroup: Property.int(1),\r\n        _myCollisionSize: Property.float(0.0125),\r\n        _myCursorObject: Property.object(null)\r\n    };\r\n\r\n    init() {\r\n        this._myLastTarget = null;\r\n        this._myReferenceSpace = null;\r\n        this._myHandInputSource = null;\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myDoubleClickTimer = 0;\r\n        this._myTripleClickTimer = 0;\r\n        this._myMultipleClickObject = null;\r\n        this._myMultipleClickDelay = 0.3;\r\n    }\r\n\r\n    start() {\r\n        this._myCursorObjectRoot = this.object.pp_addObject();\r\n\r\n        if (this._myCursorObject == null) {\r\n            this._myCursorObject = this._myCursorObjectRoot.pp_addObject();\r\n        } else {\r\n            this._myCursorObject.pp_setParent(this._myCursorObjectRoot);\r\n        }\r\n\r\n        this._myCollisionComponent = this._myCursorObject.pp_addComponent(CollisionComponent);\r\n        this._myCollisionComponent.collider = Collider.Sphere;\r\n        this._myCollisionComponent.group = 1 << this._myCollisionGroup;\r\n        this._myCollisionComponent.extents = vec3_create(this._myCollisionSize, this._myCollisionSize, this._myCollisionSize);\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this.engine);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDoubleClickTimer > 0) {\r\n            this._myDoubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this._myTripleClickTimer > 0) {\r\n            this._myTripleClickTimer -= dt;\r\n        }\r\n\r\n        this._myCursorObjectRoot.pp_setTransformQuat(getPlayerObjects(this.engine).myPlayerPivot.pp_getTransformQuat());\r\n        this._updateHand();\r\n\r\n        if (this._myHandInputSource) {\r\n            let overlaps = this._myCollisionComponent.queryOverlaps();\r\n            let overlapTarget = null;\r\n            for (let i = 0; i < overlaps.length; ++i) {\r\n                let object = overlaps[i].object;\r\n                let target = object.pp_getComponent(CursorTarget);\r\n                if (target && (overlapTarget == null || !target.isSurface)) {\r\n                    overlapTarget = target;\r\n                    if (!target.isSurface) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!overlapTarget) {\r\n                this._targetTouchEnd();\r\n            } else if (!overlapTarget.equals(this._myLastTarget)) {\r\n                this._targetTouchEnd();\r\n\r\n                this._myLastTarget = overlapTarget;\r\n\r\n                this._targetTouchStart();\r\n            }\r\n        } else {\r\n            this._targetTouchEnd();\r\n        }\r\n    }\r\n\r\n    _targetTouchStart() {\r\n        this._myLastTarget.onHover(this._myLastTarget.object, this);\r\n        this._myLastTarget.onDown(this._myLastTarget.object, this);\r\n    }\r\n\r\n    _targetTouchEnd() {\r\n        if (this._myLastTarget) {\r\n            if (this._myMultipleClicksEnabled && this._myTripleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.pp_equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onTripleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n            } else if (this._myMultipleClicksEnabled && this._myDoubleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.pp_equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onDoubleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = this._myMultipleClickDelay;\r\n                this._myDoubleClickTimer = 0;\r\n            } else {\r\n                this._myLastTarget.onClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n                this._myDoubleClickTimer = this._myMultipleClickDelay;\r\n                this._myMultipleClickObject = this._myLastTarget.object;\r\n            }\r\n\r\n            this._myLastTarget.onUp(this._myLastTarget.object, this);\r\n            this._myLastTarget.onUnhover(this._myLastTarget.object, this);\r\n\r\n            this._myLastTarget = null;\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        this._myCursorObjectRoot.pp_setActive(true);\r\n    }\r\n\r\n    onDeactivate() {\r\n        this._myCursorObjectRoot.pp_setActive(false);\r\n    }\r\n\r\n    _updateHand() {\r\n        this._myHandInputSource = InputUtils.getInputSource(this._myHandednessType, InputSourceType.TRACKED_HAND, this.engine);\r\n\r\n        if (this._myHandInputSource) {\r\n            let tip = XRUtils.getFrame(this.engine).getJointPose(this._myHandInputSource.hand.get(TrackedHandJointID.INDEX_FINGER_TIP), this._myReferenceSpace);\r\n\r\n            if (tip) {\r\n                this._myCursorObject.pp_setRotationLocalQuat([\r\n                    tip.transform.orientation.x,\r\n                    tip.transform.orientation.y,\r\n                    tip.transform.orientation.z,\r\n                    tip.transform.orientation.w]);\r\n\r\n                this._myCursorObject.pp_setPositionLocal([\r\n                    tip.transform.position.x,\r\n                    tip.transform.position.y,\r\n                    tip.transform.position.z]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.requestReferenceSpace(XRUtils.getReferenceSpaceType(this.engine)).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myReferenceSpace = null;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { InputSourceType } from \"../input_types\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class SwitchHandObjectComponent extends Component {\r\n    static TypeName = \"pp-switch-hand-object\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myGamepad: Property.object(),\r\n        _myTrackedHand: Property.object()\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n\r\n    onActivate() {\r\n        this._myFirstUpdate = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._start();\r\n        }\r\n\r\n        let inputSourceType = InputUtils.getInputSourceTypeByHandedness(this._myHandednessType, this.engine);\r\n        if (inputSourceType != null && this._myCurrentInputSourceType != inputSourceType) {\r\n            this._myCurrentInputSourceType = inputSourceType;\r\n\r\n            if (inputSourceType == InputSourceType.TRACKED_HAND) {\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(false);\r\n                }\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(true);\r\n                }\r\n            } else if (inputSourceType == InputSourceType.GAMEPAD) {\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(false);\r\n                }\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n        if (this._myGamepad != null) {\r\n            this._myGamepad.pp_setActive(false);\r\n        }\r\n\r\n        if (this._myTrackedHand != null) {\r\n            this._myTrackedHand.pp_setActive(false);\r\n        }\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n}", "import { Component, MeshComponent, Property } from \"@wonderlandengine/api\";\r\nimport { BasePoseParams } from \"../../pose/base_pose\";\r\nimport { TrackedHandJointPose } from \"../../pose/tracked_hand_joint_pose\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class TrackedHandDrawJointComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-joint\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myFixForward: Property.bool(true),\r\n        _myJointID: Property.enum(\r\n            [\r\n                \"Wrist\",\r\n                \"Thumb Metacarpal\", \"Thumb Phalanx Proximal\", \"Thumb Phalanx Distal\", \"Thumb Tip\",\r\n                \"Index Metacarpal\", \"Index Phalanx Proximal\", \"Index Phalanx Intermediate\", \"Index Phalanx Distal\", \"Index Tip\",\r\n                \"Middle Metacarpal\", \"Middle Phalanx Proximal\", \"Middle Phalanx Intermediate\", \"Middle Phalanx Distal\", \"Middle Tip\",\r\n                \"Ring Metacarpal\", \"Ring Phalanx Proximal\", \"Ring Phalanx Intermediate\", \"Ring Phalanx Distal\", \"Ring Tip\",\r\n                \"Pinky Metacarpal\", \"Pinky Phalanx Proximal\", \"Pinky Phalanx Intermediate\", \"Pinky Phalanx Distal\", \"Pinky Tip\"\r\n            ],\r\n            \"Wrist\"),\r\n        _myJointMesh: Property.mesh(),\r\n        _myJointMaterial: Property.material()\r\n    };\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new TrackedHandJointPose(this._myHandednessType, this._myJointIDInternal, new BasePoseParams(this.engine));\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n    }\r\n\r\n    start() {\r\n        this._myTrackedHandJointPose.start();\r\n\r\n        this._buildTrackedHandHierarchy();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n        this._myJointMeshObject.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat());\r\n        this._myJointMeshObject.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n    }\r\n\r\n    _buildTrackedHandHierarchy() {\r\n        this._myJointMeshObject = this.object.pp_addObject();\r\n\r\n        let mesh = this._myJointMeshObject.pp_addComponent(MeshComponent);\r\n        mesh.mesh = this._myJointMesh;\r\n        mesh.material = this._myJointMaterial;\r\n\r\n        this._myJointMeshObject.pp_setScaleLocal(0);\r\n    }\r\n}", "import { InputSourceType } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePose, BasePoseParams } from \"./base_pose\";\r\n\r\nexport class TrackedHandJointPose extends BasePose {\r\n\r\n    constructor(handedness, trackedHandJointID, basePoseParams = new BasePoseParams()) {\r\n        super(basePoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n\r\n        this._myJointRadius = 0;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getTrackedHandJointID() {\r\n        return this._myTrackedHandJointID;\r\n    }\r\n\r\n    setTrackedHandJointID(trackedHandJointID) {\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n    }\r\n\r\n    getJointRadius() {\r\n        return this._myJointRadius;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getJointPose(this._myInputSource.hand.get(this._myTrackedHandJointID), this._myReferenceSpace);\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n        if (xrPose != null) {\r\n            this._myJointRadius = xrPose.radius;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n        session.addEventListener(\"inputsourceschange\", function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        if (InputUtils.getInputSourceType(item) == InputSourceType.TRACKED_HAND) {\r\n                            this._myInputSource = item;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualCall && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    if (InputUtils.getInputSourceType(item) == InputSourceType.TRACKED_HAND) {\r\n                        this._myInputSource = item;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { TrackedHandJointID, TrackedHandJointIDIndex } from \"../input_types\";\r\nimport { TrackedHandDrawJointComponent } from \"./tracked_hand_draw_joint_component\";\r\n\r\nexport class TrackedHandDrawAllJointsComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-all-joints\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myFixForward: Property.bool(true),\r\n        _myHideMetacarpals: Property.bool(true),\r\n        _myJointMesh: Property.mesh(),\r\n        _myJointMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._buildTrackedHandHierarchy();\r\n    }\r\n\r\n    _buildTrackedHandHierarchy() {\r\n        this._myTrackedHandMeshObject = this.object.pp_addObject();\r\n\r\n        this._myJointMeshObjectList = [];\r\n\r\n        for (let jointIDKey in TrackedHandJointID) {\r\n            let jointID = TrackedHandJointID[jointIDKey];\r\n            if (!this._myHideMetacarpals ||\r\n                (jointID != TrackedHandJointID.THUMB_METACARPAL &&\r\n                    jointID != TrackedHandJointID.INDEX_FINGER_METACARPAL && jointID != TrackedHandJointID.MIDDLE_FINGER_METACARPAL &&\r\n                    jointID != TrackedHandJointID.RING_FINGER_METACARPAL && jointID != TrackedHandJointID.PINKY_FINGER_METACARPAL)\r\n            ) {\r\n                let jointObject = this._myTrackedHandMeshObject.pp_addObject();\r\n                this._myJointMeshObjectList[jointID] = jointObject;\r\n\r\n                jointObject.pp_addComponent(TrackedHandDrawJointComponent,\r\n                    {\r\n                        \"_myHandedness\": this._myHandedness,\r\n                        \"_myFixForward\": this._myFixForward,\r\n                        \"_myJointID\": TrackedHandJointIDIndex[jointIDKey],\r\n                        \"_myJointMesh\": this._myJointMesh,\r\n                        \"_myJointMaterial\": this._myJointMaterial,\r\n                    });\r\n\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { TrackedHandPose, TrackedHandPoseParams } from \"../../pose/tracked_hand_pose\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class TrackedHandDrawSkinComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-skin\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myFixForward: Property.bool(true),\r\n        _myHandSkin: Property.skin(null)\r\n    };\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myTrackedHandPose = new TrackedHandPose(this._myHandednessType, new TrackedHandPoseParams(true, this.engine));\r\n        this._myTrackedHandPose.setFixForward(this._myFixForward);\r\n    }\r\n\r\n    start() {\r\n        this._myTrackedHandPose.start();\r\n\r\n        this._prepareJoints();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myTrackedHandPose.update(dt);\r\n\r\n        for (let i = 0; i < this._myJoints.length; i++) {\r\n            let jointObject = this._myJoints[i];\r\n\r\n            let jointID = jointObject.pp_getName(); // Joint name must match the TrackedHandJointID enum value\r\n            let jointPose = this._myTrackedHandPose.getJointPose(jointID);\r\n\r\n            jointObject.pp_setTransformLocalQuat(jointPose.getTransformQuat());\r\n        }\r\n    }\r\n\r\n    _prepareJoints() {\r\n        this._myJoints = [];\r\n\r\n        let skinJointIDs = this._myHandSkin.jointIds;\r\n\r\n        for (let i = 0; i < skinJointIDs.length; i++) {\r\n            this._myJoints[i] = this.engine.wrapObject(skinJointIDs[i]);\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { TrackedHandJointID } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePoseParams } from \"./base_pose\";\r\nimport { TrackedHandJointPose } from \"./tracked_hand_joint_pose\";\r\n\r\nexport class TrackedHandPoseParams extends BasePoseParams {\r\n\r\n    constructor(addAllJointIDs = true, engine = getMainEngine()) {\r\n        super(engine);\r\n\r\n        this.myTrackedHandJointIDList = [];\r\n\r\n        if (addAllJointIDs) {\r\n            for (let key in TrackedHandJointID) {\r\n                this.myTrackedHandJointIDList.push([TrackedHandJointID[key]]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class TrackedHandPose {\r\n\r\n    constructor(handedness, trackedHandPoseParams = new TrackedHandPoseParams()) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myFixForward = trackedHandPoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = trackedHandPoseParams.myForceEmulatedVelocities;\r\n        this._myReferenceObject = trackedHandPoseParams.myReferenceObject;\r\n\r\n        this._myEngine = trackedHandPoseParams.myEngine;\r\n\r\n        this._myTrackedHandJointPoseParams = new BasePoseParams(this._myEngine);\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoseList = [];\r\n        for (let jointID of trackedHandPoseParams.myTrackedHandJointIDList) {\r\n            let trackedHandJointPose = new TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList[jointID] = trackedHandJointPose;\r\n        }\r\n    }\r\n\r\n    start() {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getEngine() {\r\n        this._myEngine;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getJointPoseList() {\r\n        return this._myTrackedHandJointPoseList;\r\n    }\r\n\r\n    getJointPose(jointID) {\r\n        return this._myTrackedHandJointPoseList[jointID];\r\n    }\r\n\r\n    getJointPoseByIndex(jointIDIndex) {\r\n        return this._myTrackedHandJointPoseList[InputUtils.getJointIDByIndex(jointIDIndex)];\r\n    }\r\n\r\n    addTrackedHandJointID(jointID) {\r\n        if (!this._myTrackedHandJointPoseList.pp_has(element => element.getTrackedHandJointID() == jointID)) {\r\n            let trackedHandJointPose = new TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList.push(trackedHandJointPose);\r\n        }\r\n    }\r\n\r\n    removeTrackedHandJointID(jointID) {\r\n        this._myTrackedHandJointPoseList.pp_remove(element => element.getTrackedHandJointID() == jointID);\r\n    }\r\n\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setReferenceObject(referenceObject);\r\n        }\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setFixForward(fixForward);\r\n        }\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setForceEmulatedVelocities(forceEmulatedVelocities);\r\n        }\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../cauldron/input_globals\";\r\nimport { HandednessIndex } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesEvent, GamepadAxesID, GamepadButtonEvent, GamepadButtonID } from \"../gamepad_buttons\";\r\n\r\nexport class GamepadMeshAnimatorComponent extends Component {\r\n    static TypeName = \"pp-gamepad-mesh-animator\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _mySelect: Property.object(null),\r\n        _mySqueeze: Property.object(null),\r\n        _myThumbstick: Property.object(null),\r\n        _myTopButton: Property.object(null),\r\n        _myBottomButton: Property.object(null),\r\n        _mySelectRotateAngle: Property.float(15),\r\n        _mySqueezeRotateAngle: Property.float(11),\r\n        _myThumbstickRotateAngle: Property.float(15),\r\n        _myThumbstickPressOffset: Property.float(0.000625),\r\n        _myTopButtonPressOffset: Property.float(0.0015),\r\n        _myBottomButtonPressOffset: Property.float(0.0015),\r\n        _myUsePressForSqueeze: Property.bool(false),\r\n        _mySqueezePressOffset: Property.float(0.0015)\r\n    };\r\n\r\n    start() {\r\n        let gamepad = null;\r\n        if (this._myHandedness == HandednessIndex.LEFT) {\r\n            gamepad = getLeftGamepad(this.engine);\r\n        } else {\r\n            gamepad = getRightGamepad(this.engine);\r\n        }\r\n\r\n        if (this._mySelect != null) {\r\n            this._mySelectOriginalRotation = this._mySelect.pp_getRotationLocalQuat();\r\n            this._mySelectOriginalLeft = this._mySelect.pp_getLeftLocal();\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            this._mySqueezeOriginalPosition = this._mySqueeze.pp_getPositionLocal();\r\n            this._mySqueezeOriginalRotation = this._mySqueeze.pp_getRotationLocalQuat();\r\n            this._mySqueezeOriginalLeft = this._mySqueeze.pp_getLeftLocal();\r\n            this._mySqueezeOriginalForward = this._mySqueeze.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myThumbstick != null) {\r\n            this._myThumbstickOriginalPosition = this._myThumbstick.pp_getPositionLocal();\r\n            this._myThumbstickOriginalRotation = this._myThumbstick.pp_getRotationLocalQuat();\r\n            this._myThumbstickOriginalLeft = this._myThumbstick.pp_getLeftLocal();\r\n            this._myThumbstickOriginalUp = this._myThumbstick.pp_getUpLocal();\r\n            this._myThumbstickOriginalForward = this._myThumbstick.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            this._myTopButtonOriginalPosition = this._myTopButton.pp_getPositionLocal();\r\n            this._myTopButtonOriginalUp = this._myTopButton.pp_getUpLocal();\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n            this._myBottomButtonOriginalPosition = this._myBottomButton.pp_getPositionLocal();\r\n            this._myBottomButtonOriginalUp = this._myBottomButton.pp_getUpLocal();\r\n        }\r\n\r\n        // PRESSED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.THUMBSTICK, GamepadButtonEvent.PRESS_START, this, this._thumbstickPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.THUMBSTICK, GamepadButtonEvent.PRESS_END, this, this._thumbstickPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.TOP_BUTTON, GamepadButtonEvent.PRESS_START, this, this._topButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.TOP_BUTTON, GamepadButtonEvent.PRESS_END, this, this._topButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n\r\n            gamepad.registerButtonEventListener(GamepadButtonID.BOTTOM_BUTTON, GamepadButtonEvent.PRESS_START, this, this._bottomButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.BOTTOM_BUTTON, GamepadButtonEvent.PRESS_END, this, this._bottomButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        // VALUE CHANGED\r\n        if (this._mySelect != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.VALUE_CHANGED, this, this._selectValueChanged.bind(this));\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.VALUE_CHANGED, this, this._squeezeValueChanged.bind(this));\r\n        }\r\n\r\n        // AXES CHANGED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerAxesEventListener(GamepadAxesID.THUMBSTICK, GamepadAxesEvent.AXES_CHANGED, this, this._thumbstickValueChanged.bind(this));\r\n        }\r\n    }\r\n\r\n    _thumbstickPressedStart() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _thumbstickPressedEnd(buttonInfo, gamepad) {\r\n        this._myThumbstick.pp_setPositionLocal(this._myThumbstickOriginalPosition);\r\n    }\r\n\r\n    _topButtonPressedStart(buttonInfo, gamepad) {\r\n        this._myTopButton.pp_translateAxisLocal(-this._myTopButtonPressOffset, this._myTopButtonOriginalUp);\r\n    }\r\n\r\n    _topButtonPressedEnd(buttonInfo, gamepad) {\r\n        this._myTopButton.pp_setPositionLocal(this._myTopButtonOriginalPosition);\r\n    }\r\n\r\n    _bottomButtonPressedStart(buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_translateAxisLocal(-this._myBottomButtonPressOffset, this._myBottomButtonOriginalUp);\r\n    }\r\n\r\n    _bottomButtonPressedEnd(buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_setPositionLocal(this._myBottomButtonOriginalPosition);\r\n    }\r\n\r\n    _selectValueChanged(buttonInfo, gamepad) {\r\n        this._mySelect.pp_setRotationLocalQuat(this._mySelectOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            this._mySelect.pp_rotateAxisLocal(this._mySelectRotateAngle * buttonInfo.myValue, this._mySelectOriginalLeft);\r\n        }\r\n    }\r\n\r\n    _squeezeValueChanged(buttonInfo, gamepad) {\r\n        this._mySqueeze.pp_setPositionLocal(this._mySqueezeOriginalPosition);\r\n        this._mySqueeze.pp_setRotationLocalQuat(this._mySqueezeOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            if (this._myUsePressForSqueeze) {\r\n                let translation = this._mySqueezePressOffset;\r\n                if (this._myHandedness == 1) {\r\n                    translation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_translateAxisLocal(translation * buttonInfo.myValue, this._mySqueezeOriginalLeft);\r\n            } else {\r\n                let rotation = -this._mySqueezeRotateAngle;\r\n                if (this._myHandedness == 1) {\r\n                    rotation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_rotateAxisLocal(rotation * buttonInfo.myValue, this._mySqueezeOriginalForward);\r\n            }\r\n        }\r\n    }\r\n\r\n    _thumbstickValueChanged(axesInfo, gamepad) {\r\n        this._myThumbstick.pp_setRotationLocalQuat(this._myThumbstickOriginalRotation);\r\n\r\n        let leftRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[1];\r\n        let forwardRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[0];\r\n\r\n        if (Math.abs(leftRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(leftRotation, this._myThumbstickOriginalLeft);\r\n        }\r\n\r\n        if (Math.abs(forwardRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(forwardRotation, this._myThumbstickOriginalForward);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nGamepadMeshAnimatorComponent.prototype._thumbstickPressedStart = function () {\r\n    let upTranslation = vec3_create();\r\n    return function _thumbstickPressedStart(buttonInfo, gamepad) {\r\n        // Since thumbstick object rotate you need to specifically use its original up to translate it\r\n        this._myThumbstickOriginalUp.vec3_scale(-this._myThumbstickPressOffset, upTranslation);\r\n        this._myThumbstick.pp_translateLocal(upTranslation);\r\n    };\r\n}();", "import { GamepadButtonID } from \"../gamepad_buttons\";\r\n\r\nlet _mySimultaneousPressMaxDelay = 0.15;\r\nlet _mySimultaneousTouchMaxDelay = 0.15;\r\n\r\nexport function setSimultaneousPressMaxDelay(simultaneousPressMaxDelay) {\r\n    _mySimultaneousPressMaxDelay = simultaneousPressMaxDelay;\r\n}\r\n\r\nexport function setSimultaneousTouchMaxDelay(simultaneousTouchMaxDelay) {\r\n    _mySimultaneousTouchMaxDelay = simultaneousTouchMaxDelay;\r\n}\r\n\r\nexport function getSimultaneousPressMaxDelay() {\r\n    return _mySimultaneousPressMaxDelay;\r\n}\r\n\r\nexport function getSimultaneousTouchMaxDelay() {\r\n    return _mySimultaneousTouchMaxDelay;\r\n}\r\n\r\n\r\n// gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n// If the first parameter is a number it's used as multiplePressCount\r\n// If the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\nexport function isAnyButtonPressStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let isOnePressStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isPressStart(multiplePressCount)) {\r\n                isOnePressStart = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isOnePressStart) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isOnePressStart;\r\n}\r\n\r\n// gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n// If the first parameter is a number it's used as multiplePressCount\r\n// If the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\nexport function areButtonsPressStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonPressedRecently = true;\r\n    let isOnePressStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(button.myIsPressed && (multiplePressCount == null || button.myMultiplePressStartCount == multiplePressCount) && button.myTimePressed < _mySimultaneousPressMaxDelay)) {\r\n                areButtonPressedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isPressStart(multiplePressCount)) {\r\n                isOnePressStart = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonPressedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonPressedRecently && isOnePressStart;\r\n}\r\n\r\nexport function isAnyButtonPressEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let isOnePressEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isPressEnd(multiplePressCount)) {\r\n                isOnePressEnd = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isOnePressEnd) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isOnePressEnd;\r\n}\r\n\r\nexport function areButtonsPressEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonNotPressedRecently = true;\r\n    let isOnePressEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(!button.myIsPressed && (multiplePressCount == null || button.myMultiplePressEndCount == multiplePressCount) && button.myTimeNotPressed < _mySimultaneousPressMaxDelay)) {\r\n                areButtonNotPressedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isPressEnd(multiplePressCount)) {\r\n                isOnePressEnd = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonNotPressedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonNotPressedRecently && isOnePressEnd;\r\n}\r\n\r\nexport function isAnyButtonTouchStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let isOneTouchStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isTouchStart(multiplePressCount)) {\r\n                isOneTouchStart = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isOneTouchStart) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isOneTouchStart;\r\n}\r\n\r\nexport function areButtonsTouchStart(...gamepadButtonIDsList) {\r\n    let multipleTouchCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multipleTouchCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonTouchedRecently = true;\r\n    let isOneTouchStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchStartCount == multipleTouchCount) && button.myTimeTouched < _mySimultaneousTouchMaxDelay)) {\r\n                areButtonTouchedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isTouchStart(multipleTouchCount)) {\r\n                isOneTouchStart = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonTouchedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonTouchedRecently && isOneTouchStart;\r\n}\r\n\r\nexport function isAnyButtonTouchEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let isOneTouchEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isTouchEnd(multiplePressCount)) {\r\n                isOneTouchEnd = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isOneTouchEnd) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isOneTouchEnd;\r\n}\r\n\r\nexport function areButtonsTouchEnd(...gamepadButtonIDsList) {\r\n    let multipleTouchCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multipleTouchCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonNotTouchedRecently = true;\r\n    let isOneTouchEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(!button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchEndCount == multipleTouchCount) && button.myTimeNotTouched < _mySimultaneousTouchMaxDelay)) {\r\n                areButtonNotTouchedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isTouchEnd(multipleTouchCount)) {\r\n                isOneTouchEnd = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonNotTouchedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonNotTouchedRecently && isOneTouchEnd;\r\n}\r\n\r\nexport let GamepadUtils = {\r\n    setSimultaneousPressMaxDelay,\r\n    setSimultaneousTouchMaxDelay,\r\n    getSimultaneousPressMaxDelay,\r\n    getSimultaneousTouchMaxDelay,\r\n    isAnyButtonPressStart,\r\n    areButtonsPressStart,\r\n    areButtonsPressEnd,\r\n    isAnyButtonTouchStart,\r\n    areButtonsTouchStart,\r\n    isAnyButtonTouchEnd,\r\n    areButtonsTouchEnd\r\n};", "import { Component, Property, MeshComponent, TextComponent, Alignment, Justification } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class GamepadControlSchemeComponent extends Component {\r\n    static TypeName = \"pp-gamepad-control-scheme\";\r\n    static Properties = {\r\n        _myShowOnStart: Property.bool(true),\r\n\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n\r\n        _mySelectText: Property.string(\"\"),\r\n        _mySqueezeText: Property.string(\"\"),\r\n        _myThumbstickText: Property.string(\"\"),\r\n        _myBottomButtonText: Property.string(\"\"),\r\n        _myTopButtonText: Property.string(\"\"),\r\n\r\n        _mySelect: Property.object(null),\r\n        _mySqueeze: Property.object(null),\r\n        _myThumbstick: Property.object(null),\r\n        _myBottomButton: Property.object(null),\r\n        _myTopButton: Property.object(null),\r\n\r\n        _myTextScaleMultiplier: Property.float(1),\r\n        _myTextOffsetMultiplier: Property.float(1),\r\n        _myLineLengthMultiplier: Property.float(1),\r\n        _myLineThicknessMultiplier: Property.float(1),\r\n        _myDistanceFromButtonsMultiplier: Property.float(1),\r\n\r\n        _myTextMaterial: Property.material(),\r\n        _myLineMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._myTextMaterialFinal = (this._myTextMaterial != null) ? this._myTextMaterial : getDefaultResources(this.engine).myMaterials.myText.clone();\r\n        this._myLineMaterialFinal = (this._myLineMaterial != null) ? this._myLineMaterial : getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myControlSchemeDirection = (this._myHandednessType == Handedness.LEFT) ? 1 : -1;\r\n\r\n        this._myVisible = false;\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._createControlScheme();\r\n        this.setVisible(this._myShowOnStart);\r\n\r\n        this._myVisibleBackup = this._myVisible;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this.setVisible(false);\r\n            this.setVisible(this._myVisibleBackup);\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    }\r\n\r\n    onDeactivate() {\r\n        this._myVisibleBackup = this._myVisible;\r\n        this.setVisible(false);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myVisible = visible;\r\n\r\n        if (this._myRootObject != null) {\r\n            this._myRootObject.pp_setActive(this._myVisible);\r\n\r\n            if (this._myVisible) {\r\n                this._hideEmptySchemes();\r\n            }\r\n        }\r\n    }\r\n\r\n    setSelectText(text) {\r\n        this._mySelectText = text;\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setSqueezeText(text) {\r\n        this._mySqueezeText = text;\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setThumbstickText(text) {\r\n        this._myThumbstickText = text;\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setBottomButtonText(text) {\r\n        this._myBottomButtonText = text;\r\n        this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setTopButtonText(text) {\r\n        this._myTopButtonText = text;\r\n        this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    _createControlScheme() {\r\n        this._myRootObject = this.object.pp_addObject();\r\n\r\n        let distanceFromButton = 0.02 * this._myDistanceFromButtonsMultiplier;\r\n        let lineLength = 0.0935 * this._myLineLengthMultiplier;\r\n\r\n        let referenceObject = this._myThumbstick;\r\n\r\n        this._mySelectObject = this._myRootObject.pp_addObject();\r\n        this._mySelectTextComponent = this._addScheme(this._mySelect, referenceObject,\r\n            vec3_create(0, 0, distanceFromButton),\r\n            vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySelectObject);\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n\r\n        this._mySqueezeObject = this._myRootObject.pp_addObject();\r\n        this._mySqueezeTextComponent = this._addScheme(this._mySqueeze, referenceObject,\r\n            vec3_create(distanceFromButton * this._myControlSchemeDirection, 0, 0),\r\n            vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySqueezeObject);\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n\r\n        this._myThumbstickObject = this._myRootObject.pp_addObject();\r\n        this._myThumbstickTextComponent = this._addScheme(this._myThumbstick, referenceObject,\r\n            vec3_create(0, distanceFromButton, 0),\r\n            vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._myThumbstickObject);\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n\r\n        let thumbstickPositionLocal = this._myThumbstick.pp_getPositionLocal();\r\n        let thumbstickUpLocal = this._myThumbstick.pp_getUpLocal();\r\n\r\n        {\r\n            let bottomButtonPositionLocal = this._myBottomButton.pp_getPositionLocal();\r\n            let difference = bottomButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myBottomButtonObject = this._myRootObject.pp_addObject();\r\n            this._myBottomButtonTextComponent = this._addScheme(this._myBottomButton, referenceObject,\r\n                vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                vec3_create(0, 0, -lineLength),\r\n                this._myBottomButtonObject);\r\n            this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        }\r\n\r\n        {\r\n            let topButtonPositionLocal = this._myTopButton.pp_getPositionLocal();\r\n            let difference = topButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myTopButtonObject = this._myRootObject.pp_addObject();\r\n            this._myTopButtonTextComponent = this._addScheme(this._myTopButton, referenceObject,\r\n                vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0).vec3_rotateAxis(-45 * this._myControlSchemeDirection, vec3_create(0, 1, 0)),\r\n                this._myTopButtonObject);\r\n            this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        }\r\n    }\r\n\r\n    _addScheme(buttonObject, referenceObject, startOffset, endOffset, parentObject) {\r\n        let buttonPosition = buttonObject.pp_getPositionLocal();\r\n        let referenceForward = referenceObject.pp_getForwardLocal();\r\n        let referenceRight = referenceObject.pp_getRightLocal();\r\n        let referenceUp = referenceObject.pp_getUpLocal();\r\n\r\n        let lineStart = buttonPosition.vec3_add(referenceRight.vec3_scale(startOffset[0]));\r\n        lineStart.vec3_add(referenceUp.vec3_scale(startOffset[1]), lineStart);\r\n        lineStart.vec3_add(referenceForward.vec3_scale(startOffset[2]), lineStart);\r\n\r\n        let lineEnd = lineStart.vec3_add(referenceRight.vec3_scale(endOffset[0]));\r\n        lineEnd.vec3_add(referenceUp.vec3_scale(endOffset[1]), lineEnd);\r\n        lineEnd.vec3_add(referenceForward.vec3_scale(endOffset[2]), lineEnd);\r\n\r\n        let textOffset = 0.01 * this._myTextOffsetMultiplier;\r\n        let textPosition = lineEnd.vec3_add(referenceForward.vec3_scale(-textOffset));\r\n\r\n        this._addLine(lineStart, lineEnd, parentObject);\r\n        let textComponent = this._addText(textPosition, referenceForward, referenceUp, parentObject);\r\n\r\n        return textComponent;\r\n    }\r\n\r\n    _addLine(start, end, parentObject) {\r\n        let lineDirection = end.vec3_sub(start);\r\n        let length = lineDirection.vec3_length();\r\n        lineDirection.vec3_normalize(lineDirection);\r\n\r\n        lineRootObject = parentObject.pp_addObject();\r\n        lineObject = lineRootObject.pp_addObject();\r\n\r\n        let lineMesh = lineObject.pp_addComponent(MeshComponent);\r\n        lineMesh.mesh = getDefaultResources(this.engine).myMeshes.myCylinder;\r\n        lineMesh.material = this._myLineMaterialFinal;\r\n\r\n        lineRootObject.pp_setPositionLocal(start);\r\n\r\n        let thickness = 0.001 * this._myLineThicknessMultiplier;\r\n        lineObject.pp_scaleObject(vec3_create(thickness / 2, length / 2, thickness / 2));\r\n\r\n        lineObject.pp_setUpLocal(lineDirection);\r\n        lineObject.pp_translateObject(vec3_create(0, length / 2, 0));\r\n    }\r\n\r\n    _addText(position, forward, up, parentObject) {\r\n        let textObject = parentObject.pp_addObject();\r\n        textObject.pp_setPositionLocal(position);\r\n        textObject.pp_lookToLocal(up, forward);\r\n        textObject.pp_scaleObject(0.0935 * this._myTextScaleMultiplier);\r\n\r\n        let textComponent = textObject.pp_addComponent(TextComponent);\r\n        textComponent.alignment = Alignment.Center;\r\n        textComponent.justification = Justification.Top;\r\n        textComponent.material = this._myTextMaterialFinal;\r\n\r\n        return textComponent;\r\n    }\r\n\r\n    _hideEmptySchemes() {\r\n        if (this._mySelectText.length == 0) {\r\n            this._mySelectObject.pp_setActive(false);\r\n        }\r\n        if (this._mySqueezeText.length == 0) {\r\n            this._mySqueezeObject.pp_setActive(false);\r\n        }\r\n        if (this._myThumbstickText.length == 0) {\r\n            this._myThumbstickObject.pp_setActive(false);\r\n        }\r\n        if (this._myBottomButtonText.length == 0) {\r\n            this._myBottomButtonObject.pp_setActive(false);\r\n        }\r\n        if (this._myTopButtonText.length == 0) {\r\n            this._myTopButtonObject.pp_setActive(false);\r\n        }\r\n    }\r\n}", "import { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class VirtualGamepadGamepadCore extends GamepadCore {\r\n\r\n    constructor(virtualGamepad, handPose) {\r\n        super(handPose);\r\n\r\n        this._myVirtualGamepad = virtualGamepad;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return this._myVirtualGamepad.isVisible();\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myVirtualGamepad.isButtonPressed(this.getHandedness(), buttonID)) {\r\n                this._myButtonData.myIsPressed = true;\r\n                this._myButtonData.myIsTouched = true;\r\n                this._myButtonData.myValue = 1;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            this._myVirtualGamepad.getAxes(this.getHandedness(), axesID, this._myAxesData);\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n}", "export let VirtualGamepadIconType = {\r\n    NONE: 0,\r\n    LABEL: 1,\r\n    IMAGE: 2,\r\n    DOT: 3,\r\n    CIRCLE: 4,\r\n    SQUARE: 5,\r\n    RING: 6,\r\n    FRAME: 7\r\n};\r\n\r\nexport class VirtualGamepadIconParams {\r\n\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n        this.myBackgroundPressedColor = \"\";\r\n        this.myIconColor = \"\";\r\n        this.myIconPressedColor = \"\";\r\n\r\n        this.myIconType = VirtualGamepadIconType.NONE;\r\n\r\n        this.myOverallHoveredBrightness = 1;\r\n\r\n        // If icon type is label\r\n\r\n        this.myLabel = \"\";\r\n        this.myLabelFontSize = 0;\r\n        this.myLabelFontFamily = \"\";\r\n        this.myLabelFontWeight = \"\";\r\n\r\n        // If icon type is image\r\n\r\n        this.myImageURL = \"\";\r\n        this.myImagePressedBrightness = 1;\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadIcon {\r\n\r\n    constructor(iconElementParent, iconParams, minSizeMultiplier, scale) {\r\n        this._myParams = iconParams;\r\n\r\n        this._myIconContainerElement = null;\r\n        this._myBackgroundElement = null;\r\n        this._myIconElement = null;\r\n\r\n        this._myPressed = false;\r\n\r\n        this._myIsMouseHover = false;\r\n        this._myIsMouseHoverActive = true;\r\n\r\n        this._build(iconElementParent, minSizeMultiplier, scale);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myPressed || !this._myIsMouseHover || !this._myIsMouseHoverActive) {\r\n            this._myIconContainerElement.style.filter = \"none\";\r\n        } else {\r\n            this._myIconContainerElement.style.filter = \"brightness(\" + this._myParams.myOverallHoveredBrightness + \")\";\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setPressed(false);\r\n        this._myIsMouseHover = false;\r\n        this._myIconContainerElement.style.filter = \"none\";\r\n    }\r\n\r\n    setPressed(pressed) {\r\n        if (this._myPressed != pressed) {\r\n            this._myPressed = pressed;\r\n\r\n            if (this._myPressed) {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundPressedColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconPressedColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconPressedColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"brightness(\" + this._myParams.myImagePressedBrightness + \")\";\r\n                    }\r\n                }\r\n            } else {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this._myIsMouseHover = true;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this._myIsMouseHover = false;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myIsMouseHoverActive = hoverActive;\r\n    }\r\n\r\n    _build(iconElementParent, minSizeMultiplier, scale) {\r\n        this._myIconContainerElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this._myIconContainerElement.style.position = \"absolute\";\r\n        this._myIconContainerElement.style.width = \"100%\";\r\n        this._myIconContainerElement.style.height = \"100%\";\r\n        iconElementParent.appendChild(this._myIconContainerElement);\r\n\r\n        this._myBackgroundElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"cx\", \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"cy\", \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"r\", \"50%\");\r\n        this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n        this._myIconContainerElement.appendChild(this._myBackgroundElement);\r\n\r\n        switch (this._myParams.myIconType) {\r\n            case VirtualGamepadIconType.NONE:\r\n                break;\r\n            case VirtualGamepadIconType.LABEL:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"50%\");\r\n                this._myIconElement.style.textAlign = \"center\";\r\n                this._myIconElement.style.textAnchor = \"middle\";\r\n                this._myIconElement.style.dominantBaseline = \"central\";\r\n                this._myIconElement.style.alignmentBaseline = \"central\";\r\n                this._myIconElement.style.fontFamily = this._myParams.myLabelFontFamily;\r\n                this._myIconElement.style.fontWeight = this._myParams.myLabelFontWeight;\r\n                this._myIconElement.style.fontSize = this._createSizeValue(this._myParams.myLabelFontSize * scale, minSizeMultiplier);\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.textContent = this._myParams.myLabel;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.IMAGE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"0%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"0%\");\r\n                this._myIconElement.setAttribute(\"href\", this._myParams.myImageURL);\r\n                this._myIconElement.style.width = \"100%\";\r\n                this._myIconElement.style.height = \"100%\";\r\n                this._myIconElement.style.filter = \"none\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.DOT:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"17.5%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.CIRCLE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"24%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.SQUARE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"28%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"28%\");\r\n                this._myIconElement.setAttributeNS(null, \"rx\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"ry\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"width\", \"44%\");\r\n                this._myIconElement.setAttributeNS(null, \"height\", \"44%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.RING:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"20%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.FRAME:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, \"rx\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"ry\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"width\", \"37%\");\r\n                this._myIconElement.setAttributeNS(null, \"height\", \"37%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _invertColors() {\r\n        if (this._myIconElement.style.strokeWidth.length > 0) {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.stroke = this._myParams.myBackgroundColor;\r\n        } else {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myBackgroundColor;\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../../../cauldron/wl/engine_globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadIconParams, VirtualGamepadIconType } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadButtonParams {\r\n\r\n    constructor() {\r\n        this.myIconParams = new VirtualGamepadIconParams();\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadThumbstickParams {\r\n\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n\r\n        this.myMaxDistanceFromCenterMultiplier = 1;\r\n\r\n        this.myReleaseTransitionSeconds = 0.2;\r\n        this.myMoveTransitionSeconds = 0;\r\n\r\n        this.myIncludeBackgroundToDetection = false; // You can press the background of the icon to move the thumbstick, makes it harder to miss it\r\n\r\n        this.myIconParams = new VirtualGamepadIconParams();\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadParams {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this.myShowOnDesktop = false;\r\n        this.myShowOnMobile = false;\r\n        this.myShowOnHeadset = false;   // Not 100% reliable, this is true if the device supports VR and it is Desktop\r\n\r\n        this.myAutoUpdateVisibility = false;\r\n\r\n        this.myOpacity = 1;\r\n\r\n        this.myInterfaceScale = 1;\r\n        this.myMarginScale = 1;\r\n\r\n        this.myReleaseOnPointerLeave = true;            // If mouse leaves the canvas it will be like it was released\r\n        this.myStopPropagatingMouseDownEvents = true;   // This can be used to make it so the rest of the game will ignore clicks on the virtual gamepad\r\n\r\n        // Advanced Params\r\n\r\n        this.myButtonParams = [];\r\n        this.myButtonParams[Handedness.LEFT] = [];\r\n        this.myButtonParams[Handedness.RIGHT] = [];\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON] = new VirtualGamepadButtonParams();\r\n\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON] = new VirtualGamepadButtonParams();\r\n\r\n        this.myThumbstickParams = [];\r\n        this.myThumbstickParams[Handedness.LEFT] = [];\r\n        this.myThumbstickParams[Handedness.RIGHT] = [];\r\n        this.myThumbstickParams[Handedness.LEFT][GamepadAxesID.THUMBSTICK] = new VirtualGamepadThumbstickParams();\r\n        this.myThumbstickParams[Handedness.RIGHT][GamepadAxesID.THUMBSTICK] = new VirtualGamepadThumbstickParams();\r\n\r\n        this.myButtonsOrder = [];\r\n        this.myButtonsOrder[Handedness.LEFT] = [null, null, null, null, null];\r\n        this.myButtonsOrder[Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        this.myThumbsticksOrder = [];\r\n        this.myThumbsticksOrder[Handedness.LEFT] = [null];\r\n        this.myThumbsticksOrder[Handedness.RIGHT] = [null];\r\n\r\n        // Even More Advanced Params\r\n\r\n        this.myValidPointerButtons = [];\r\n\r\n        this.myMarginLeft = 0;\r\n        this.myMarginRight = 0;\r\n        this.myMarginBottom = 0;\r\n\r\n        this.myThumbstickSize = 0;\r\n\r\n        this.myButtonSize = 0;\r\n        this.myButtonsRingRadius = 0;\r\n        this.myButtonsRingStartAngle = 0;\r\n        this.myButtonsRingEndAngle = 0;\r\n\r\n        this.myFontSize = 0;\r\n\r\n        this.myMinSizeMultiplier = 0;  // Can be used to specify a min size based on the view width for when the view is in portrait mode\r\n\r\n        this.myDisableMouseHoverWhenPressed = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n\r\n    defaultSetup() {\r\n        this.myShowOnMobile = true;\r\n        this.myAutoUpdateVisibility = true;\r\n\r\n        this.myOpacity = 0.5;\r\n\r\n        // Params\r\n\r\n        let backgroundColor = \"#616161\";\r\n        let iconColor = \"#e0e0e0\";\r\n\r\n        let buttonHoveredBrightness = 0.75;\r\n        let thumbstickHoveredBrightness = 0.75;\r\n\r\n        let thumbstickIncludeBackgroundToDetection = true;\r\n\r\n        for (let handedness in this.myButtonParams) {\r\n            for (let gamepadButtonID in this.myButtonParams[handedness]) {\r\n                let buttonParams = this.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = backgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                buttonParams.myIconParams.myIconColor = iconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                buttonParams.myIconParams.myOverallHoveredBrightness = buttonHoveredBrightness;\r\n            }\r\n        }\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE].myIconParams.myIconType = VirtualGamepadIconType.SQUARE;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE].myIconParams.myIconType = VirtualGamepadIconType.SQUARE;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT].myIconParams.myIconType = VirtualGamepadIconType.FRAME;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT].myIconParams.myIconType = VirtualGamepadIconType.FRAME;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.CIRCLE;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.CIRCLE;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.RING;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.RING;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK].myIconParams.myIconType = VirtualGamepadIconType.DOT;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK].myIconParams.myIconType = VirtualGamepadIconType.DOT;\r\n\r\n        for (let handedness in this.myThumbstickParams) {\r\n            for (let gamepadAxesID in this.myThumbstickParams[handedness]) {\r\n                let thumbstickParams = this.myThumbstickParams[handedness][gamepadAxesID];\r\n                thumbstickParams.myBackgroundColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myBackgroundColor = iconColor;\r\n                thumbstickParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                thumbstickParams.myIconParams.myIconColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myOverallHoveredBrightness = thumbstickHoveredBrightness;\r\n\r\n                thumbstickParams.myIncludeBackgroundToDetection = thumbstickIncludeBackgroundToDetection;\r\n            }\r\n        }\r\n\r\n        // Orders\r\n\r\n        this.myButtonsOrder[Handedness.LEFT][0] = [Handedness.LEFT, GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[Handedness.LEFT][1] = [Handedness.LEFT, GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[Handedness.LEFT][2] = [Handedness.LEFT, GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[Handedness.LEFT][3] = [Handedness.LEFT, GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[Handedness.LEFT][4] = [Handedness.LEFT, GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myButtonsOrder[Handedness.RIGHT][0] = [Handedness.RIGHT, GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[Handedness.RIGHT][1] = [Handedness.RIGHT, GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[Handedness.RIGHT][2] = [Handedness.RIGHT, GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[Handedness.RIGHT][3] = [Handedness.RIGHT, GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[Handedness.RIGHT][4] = [Handedness.RIGHT, GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myThumbsticksOrder[Handedness.LEFT][0] = [Handedness.LEFT, GamepadAxesID.THUMBSTICK];\r\n        this.myThumbsticksOrder[Handedness.RIGHT][0] = [Handedness.RIGHT, GamepadAxesID.THUMBSTICK];\r\n\r\n        // Sizes\r\n\r\n        this.myMarginLeft = 3;\r\n        this.myMarginRight = 3;\r\n        this.myMarginBottom = 3;\r\n\r\n        this.myThumbstickSize = 15;\r\n\r\n        this.myButtonSize = 5;\r\n        this.myButtonsRingRadius = 12;\r\n        this.myButtonsRingStartAngle = 385;\r\n        this.myButtonsRingEndAngle = 245;\r\n\r\n        this.myMinSizeMultiplier = 5 / 3;\r\n\r\n        // Cauldron\r\n\r\n        this.myDisableMouseHoverWhenPressed = true;\r\n        this.myValidPointerButtons = [0];\r\n    }\r\n}", "import { Handedness } from \"../../cauldron/input_types\";\r\nimport { VirtualGamepadIcon } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadVirtualButton {\r\n\r\n    constructor(buttonElementParent, virtualGamepadParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        this._myButtonElement = null;\r\n        this._myButtonIcon = null;\r\n        this._myButtonDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myButtonParams[gamepadButtonHandedness][gamepadButtonID];\r\n\r\n        this._build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex);\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"mouseenter\", this._onButtonEnter.bind(this));\r\n        this._myButtonDetectionElement.addEventListener(\"mouseleave\", this._onButtonLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myButtonIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myButtonIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myButtonIcon.setPressed(false);\r\n\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myButtonIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myButtonIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onButtonEnter(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onButtonLeave(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex) {\r\n        // Setup variables used for the sizes and the like\r\n\r\n        let buttonSize = this._myVirtualGamepadParams.myButtonSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n        let buttonsRingRadius = this._myVirtualGamepadParams.myButtonsRingRadius * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let buttonRingStartAngle = this._myVirtualGamepadParams.myButtonsRingStartAngle;\r\n        let buttonRingEndAngle = this._myVirtualGamepadParams.myButtonsRingEndAngle;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonsAmount = this._myVirtualGamepadParams.myButtonsOrder[Handedness.LEFT].length;\r\n\r\n        let angleStep = (buttonRingEndAngle - buttonRingStartAngle) / (buttonsAmount - 1);\r\n\r\n        let currentAngle = Math.pp_angleClamp(buttonRingStartAngle + angleStep * virtualButtonIndex);\r\n\r\n        if (virtualButtonHandedness == Handedness.RIGHT) {\r\n            currentAngle = 270 + (270 - currentAngle);\r\n            currentAngle = Math.pp_angleClamp(currentAngle, true);\r\n        }\r\n\r\n        let counterAngle = 360 - currentAngle;\r\n\r\n        // Actual button creation\r\n\r\n        let buttonPivot = document.createElement(\"div\");\r\n        buttonPivot.style.position = \"absolute\";\r\n        buttonPivot.style.width = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n        buttonPivot.style.height = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n\r\n        let centerOnThumbstickBottom = marginBottom + thumbstickSize / 2 - buttonSize / 2;\r\n\r\n        buttonPivot.style.bottom = this._createSizeValue(centerOnThumbstickBottom, minSizeMultiplier);\r\n\r\n        if (virtualButtonHandedness == Handedness.LEFT) {\r\n            let centerOnThumbstickLeft = marginLeft + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.left = this._createSizeValue(centerOnThumbstickLeft, minSizeMultiplier);\r\n        } else {\r\n            let centerOnThumbstickRight = marginRight + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.right = this._createSizeValue(centerOnThumbstickRight, minSizeMultiplier);\r\n        }\r\n\r\n        buttonPivot.style.transform = \"rotate(\" + currentAngle + \"deg) translateX(\" + this._createSizeValue(buttonsRingRadius, minSizeMultiplier) + \")\";\r\n        buttonElementParent.appendChild(buttonPivot);\r\n\r\n        this._myButtonElement = document.createElement(\"div\");\r\n        this._myButtonElement.style.position = \"absolute\";\r\n        this._myButtonElement.style.width = \"100%\";\r\n        this._myButtonElement.style.height = \"100%\";\r\n        this._myButtonElement.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(this._myButtonElement);\r\n\r\n        this._myButtonIcon = new VirtualGamepadIcon(this._myButtonElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonElementStill = document.createElement(\"div\");\r\n        buttonElementStill.style.position = \"absolute\";\r\n        buttonElementStill.style.width = \"100%\";\r\n        buttonElementStill.style.height = \"100%\";\r\n        buttonElementStill.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(buttonElementStill);\r\n\r\n        let buttonDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        buttonDetectionElementSVG.style.position = \"absolute\";\r\n        buttonDetectionElementSVG.style.width = \"100%\";\r\n        buttonDetectionElementSVG.style.height = \"100%\";\r\n        buttonElementStill.appendChild(buttonDetectionElementSVG);\r\n\r\n        let buttonDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        buttonDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, \"r\", \"50%\");\r\n        buttonDetectionElement.style.fill = \"#00000000\";\r\n        buttonDetectionElementSVG.appendChild(buttonDetectionElement);\r\n\r\n        this._myButtonDetectionElement = buttonDetectionElement;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n}", "import { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { VirtualGamepadIcon } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadVirtualThumbstick {\r\n\r\n    constructor(thumbstickElementParent, virtualGamepadParams, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID) {\r\n        this._myThumbstickElement = null;\r\n        this._myThumbstickIcon = null;\r\n        this._myThumbstickBackground = null;\r\n        this._myThumbstickDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null\r\n\r\n        this._myThumbstickDragStartPosition = vec2_create();\r\n\r\n        this._myAxes = vec2_create();\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myThumbstickParams[gamepadThumbstickHandedness][gamepadAxesID];\r\n\r\n        this._build(thumbstickElementParent, virtualThumbstickHandedness);\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._onPointerMove.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseenter\", this._onThumbstickEnter.bind(this));\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseleave\", this._onThumbstickLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    getAxes() {\r\n        return this._myAxes;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myThumbstickIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myThumbstickIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myThumbstickIcon.setPressed(false);\r\n\r\n        this._myAxes[0] = 0;\r\n        this._myAxes[1] = 0;\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myReleaseTransitionSeconds + \"s ease 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(0px, 0px)\";\r\n    }\r\n\r\n    update(dt) {\r\n        this._myThumbstickIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myThumbstickIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myThumbstickDragStartPosition[0] = event.clientX;\r\n        this._myThumbstickDragStartPosition[1] = event.clientY;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onThumbstickEnter(event) {\r\n        this._myThumbstickIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onThumbstickLeave(event) {\r\n        this._myThumbstickIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n\r\n        if (event.pointerId != this._myPointerID) return;\r\n\r\n        let mouseX = event.clientX;\r\n        let mouseY = event.clientY;\r\n\r\n        let backgroundRect = this._myThumbstickBackground.getBoundingClientRect();\r\n        let maxDistanceFromCenter = (backgroundRect.width / 2) * this._myParams.myMaxDistanceFromCenterMultiplier;\r\n\r\n        let xDiff = mouseX - this._myThumbstickDragStartPosition[0];\r\n        let yDiff = mouseY - this._myThumbstickDragStartPosition[1];\r\n\r\n        let angle = Math.atan2(yDiff, xDiff);\r\n        let distanceFromDragStart = Math.min(maxDistanceFromCenter, Math.hypot(xDiff, yDiff));\r\n\r\n        let translateThumbstickX = distanceFromDragStart * Math.cos(angle);\r\n        let translateThumbstickY = distanceFromDragStart * Math.sin(angle);\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myMoveTransitionSeconds + \"s ease-out 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(\" + translateThumbstickX + \"px, \" + translateThumbstickY + \"px)\";\r\n\r\n        this._myAxes[0] = translateThumbstickX / maxDistanceFromCenter;\r\n        this._myAxes[1] = -(translateThumbstickY / maxDistanceFromCenter);\r\n    }\r\n\r\n    _build(thumbstickElementParent, virtualThumbstickHandedness) {\r\n        // Setup variables used for the sizes and the like\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        // Actual thumbstick creation\r\n\r\n        let thumbstickContainer = document.createElement(\"div\");\r\n        thumbstickContainer.style.position = \"absolute\";\r\n        thumbstickContainer.style.width = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.height = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.bottom = this._createSizeValue(marginBottom, minSizeMultiplier);\r\n\r\n        if (virtualThumbstickHandedness == Handedness.LEFT) {\r\n            thumbstickContainer.style.left = this._createSizeValue(marginLeft, minSizeMultiplier);\r\n        } else {\r\n            thumbstickContainer.style.right = this._createSizeValue(marginRight, minSizeMultiplier);\r\n        }\r\n\r\n        thumbstickElementParent.appendChild(thumbstickContainer);\r\n\r\n        let thumbstickContainerSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        thumbstickContainerSVG.style.position = \"absolute\";\r\n        thumbstickContainerSVG.style.width = \"100%\";\r\n        thumbstickContainerSVG.style.height = \"100%\";\r\n        thumbstickContainer.appendChild(thumbstickContainerSVG);\r\n\r\n        this._myThumbstickBackground = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"cx\", \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"cy\", \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"r\", \"48%\");\r\n        this._myThumbstickBackground.style.fill = this._myParams.myBackgroundColor;\r\n        thumbstickContainerSVG.appendChild(this._myThumbstickBackground);\r\n\r\n        this._myThumbstickElement = document.createElement(\"div\");\r\n        this._myThumbstickElement.style.position = \"absolute\";\r\n        this._myThumbstickElement.style.width = \"34%\";\r\n        this._myThumbstickElement.style.height = \"34%\";\r\n        this._myThumbstickElement.style.top = \"33%\";\r\n        this._myThumbstickElement.style.left = \"33%\";\r\n        thumbstickContainer.appendChild(this._myThumbstickElement);\r\n\r\n        this._myThumbstickIcon = new VirtualGamepadIcon(this._myThumbstickElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myScale);\r\n\r\n        if (this._myParams.myIncludeBackgroundToDetection) {\r\n            let thumbstickBackgroundDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickBackgroundDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickBackgroundDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickBackgroundDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickContainer.appendChild(thumbstickBackgroundDetectionElementSVG);\r\n\r\n            let thumbstickBackgroundDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"r\", \"48%\");\r\n            thumbstickBackgroundDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickBackgroundDetectionElementSVG.appendChild(thumbstickBackgroundDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickBackgroundDetectionElement;\r\n        } else {\r\n            let thumbstickElementStill = document.createElement(\"div\");\r\n            thumbstickElementStill.style.position = \"absolute\";\r\n            thumbstickElementStill.style.width = \"34%\";\r\n            thumbstickElementStill.style.height = \"34%\";\r\n            thumbstickElementStill.style.top = \"33%\";\r\n            thumbstickElementStill.style.left = \"33%\";\r\n            thumbstickContainer.appendChild(thumbstickElementStill);\r\n\r\n            let thumbstickDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickElementStill.appendChild(thumbstickDetectionElementSVG);\r\n\r\n            let thumbstickDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"r\", \"50%\");\r\n            thumbstickDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickDetectionElementSVG.appendChild(thumbstickDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickDetectionElement;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n}", "import { BrowserUtils } from \"../../../cauldron/utils/browser_utils\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadParams } from \"./virtual_gamepad_params\";\r\nimport { VirtualGamepadVirtualButton } from \"./virtual_gamepad_virtual_button\";\r\nimport { VirtualGamepadVirtualThumbstick } from \"./virtual_gamepad_virtual_thumbstick\";\r\n\r\nexport class VirtualGamepad {\r\n\r\n    constructor(params = new VirtualGamepadParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = true;\r\n        this._myVirtualGamepadContainer = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons = [];\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT] = [];\r\n\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myButtonsAmount = this._myVirtualGamepadVirtualButtons[Handedness.LEFT].length;\r\n\r\n        this._myVirtualGamepadVirtualThumbsticks = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.RIGHT] = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.LEFT][GamepadAxesID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.RIGHT][GamepadAxesID.THUMBSTICK] = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVirtualGamepadContainer != null) {\r\n                if (this._myVisible) {\r\n                    this._myVirtualGamepadContainer.style.display = \"block\";\r\n                } else {\r\n                    this._myVirtualGamepadContainer.style.display = \"none\";\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                    for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                        if (button != null) {\r\n                            button.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                    for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                        if (thumbstick != null) {\r\n                            thumbstick.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isButtonPressed(handedness, gamepadButtonID) {\r\n        if (!this._myVisible) return false;\r\n\r\n        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n        if (button != null) {\r\n            return button.isPressed();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAxes(handedness, gamepadAxesID, outAxes = vec2_create(0, 0)) {\r\n        if (!this._myVisible) return outAxes;\r\n\r\n        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n        if (thumbstick != null) {\r\n            outAxes.vec2_copy(thumbstick.getAxes());\r\n        }\r\n\r\n        return outAxes;\r\n    }\r\n\r\n    start() {\r\n        this._buildVirtualGamepad();\r\n\r\n        let currentVisible = this._myVisible;\r\n        this._myVisible = !this._myVisible;\r\n        this.setVisible(currentVisible);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myAutoUpdateVisibility) {\r\n            if (XRUtils.isSessionActive(this._myParams.myEngine) && XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(false);\r\n            } else if (this._myParams.myShowOnDesktop && BrowserUtils.isDesktop() && !XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnHeadset && BrowserUtils.isDesktop() && XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnMobile && BrowserUtils.isMobile()) {\r\n                this.setVisible(true);\r\n            } else {\r\n                this.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myVisible) {\r\n            for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                    let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                    if (button != null) {\r\n                        button.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                    if (thumbstick != null) {\r\n                        thumbstick.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._setMouseHoverActive(!(this._myParams.myDisableMouseHoverWhenPressed && this._isAnyElementPressed()));\r\n        }\r\n    }\r\n\r\n    _buildVirtualGamepad() {\r\n        this._documentBodySetup();\r\n\r\n        this._myVirtualGamepadContainer = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.style.display = \"block\";\r\n        this._myVirtualGamepadContainer.style.opacity = this._myParams.myOpacity.toString();\r\n        document.body.appendChild(this._myVirtualGamepadContainer);\r\n\r\n        let leftDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(leftDiv);\r\n\r\n        let rightDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(rightDiv);\r\n\r\n        let buttonsAmount = this._myParams.myButtonsOrder[Handedness.LEFT].length;\r\n        for (let i = 0; i < buttonsAmount; i++) {\r\n            if (this._myParams.myButtonsOrder[Handedness.LEFT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[Handedness.LEFT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[Handedness.LEFT][i][1];\r\n                this._buildButton(leftDiv, Handedness.LEFT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n\r\n            if (this._myParams.myButtonsOrder[Handedness.RIGHT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[Handedness.RIGHT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[Handedness.RIGHT][i][1];\r\n                this._buildButton(rightDiv, Handedness.RIGHT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n        }\r\n\r\n        let thumbsticksAmount = this._myParams.myThumbsticksOrder[Handedness.LEFT].length;\r\n        for (let i = 0; i < thumbsticksAmount; i++) {\r\n            if (this._myParams.myThumbsticksOrder[Handedness.LEFT][i] != null) {\r\n                let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[Handedness.LEFT][i][0];\r\n                let gamepadAxesID = this._myParams.myThumbsticksOrder[Handedness.LEFT][i][1];\r\n                this._buildThumbstick(leftDiv, Handedness.LEFT, gamepadThumbstickHandedness, gamepadAxesID);\r\n            }\r\n\r\n            if (this._myParams.myThumbsticksOrder[Handedness.RIGHT][i] != null) {\r\n                let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[Handedness.RIGHT][i][0];\r\n                let gamepadAxesID = this._myParams.myThumbsticksOrder[Handedness.RIGHT][i][1];\r\n                this._buildThumbstick(rightDiv, Handedness.RIGHT, gamepadThumbstickHandedness, gamepadAxesID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _documentBodySetup() {\r\n        document.body.style.overflow = \"hidden\";\r\n        document.body.style.userSelect = \"none\";\r\n        document.body.style.webkitUserSelect = \"none\";\r\n        document.body.style.webkitTapHighlightColor = \"transparent\";\r\n        document.body.style.touchAction = \"none\";\r\n        document.addEventListener(\"gesturestart\", function (e) {\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    _buildButton(buttonElementParent, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        let virtualGamepadVirtualButton = new VirtualGamepadVirtualButton(buttonElementParent, this._myParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID);\r\n        this._myVirtualGamepadVirtualButtons[gamepadButtonHandedness][gamepadButtonID] = virtualGamepadVirtualButton;\r\n    }\r\n\r\n    _buildThumbstick(thumbstickElementParent, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID) {\r\n        let virtualGamepadVirtualThumbstick = new VirtualGamepadVirtualThumbstick(thumbstickElementParent, this._myParams, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID);\r\n        this._myVirtualGamepadVirtualThumbsticks[gamepadThumbstickHandedness][gamepadAxesID] = virtualGamepadVirtualThumbstick;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _isAnyElementPressed() {\r\n        let isAnyElementPressed = false;\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null && button.isPressed()) {\r\n                    isAnyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isAnyElementPressed) {\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                    if (thumbstick != null && thumbstick.isPressed()) {\r\n                        isAnyElementPressed = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isAnyElementPressed;\r\n    }\r\n\r\n    _setMouseHoverActive(hoverActive) {\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null) {\r\n                    button.setMouseHoverActive(hoverActive);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n            for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                if (thumbstick != null) {\r\n                    thumbstick.setMouseHoverActive(hoverActive);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../cauldron/input_globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadGamepadCore } from \"../gamepad_cores/virtual_gamepad_gamepad_core\";\r\nimport { VirtualGamepad } from \"./virtual_gamepad\";\r\nimport { VirtualGamepadParams } from \"./virtual_gamepad_params\";\r\n\r\nexport class VirtualGamepadComponent extends Component {\r\n    static TypeName = \"pp-virtual-gamepad\";\r\n    static Properties = {\r\n        _myShowOnDesktop: Property.bool(false),   // You may have to enable headset too\r\n        _myShowOnMobile: Property.bool(true),\r\n        _myShowOnHeadset: Property.bool(false),   // Not 100% reliable, this is true if the device supports VR and it is Desktop\r\n        _myAddToUniversalGamepad: Property.bool(true),\r\n        _myOpacity: Property.float(0.5),\r\n        _myIconColor: Property.string(\"#e0e0e0\"),\r\n        _myBackgroundColor: Property.string(\"#616161\"),\r\n        _myInterfaceScale: Property.float(1),\r\n        _myMarginScale: Property.float(1),\r\n\r\n        ADVANCED_PARAMS_BELOW: Property.string(\"\"),\r\n\r\n        _myLabelFontSize: Property.float(2),\r\n        _myLabelFontFamily: Property.string(\"sans-serif\"),\r\n        _myLabelFontWeight: Property.string(\"bold\"),\r\n        _myImagePressedBrightness: Property.float(0.5),\r\n\r\n        _myLeftSelectButtonVisible: Property.bool(true),\r\n        _myLeftSelectButtonOrderIndex: Property.int(1),\r\n        _myLeftSelectButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Frame\"),\r\n        _myLeftSelectButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftSqueezeButtonVisible: Property.bool(true),\r\n        _myLeftSqueezeButtonOrderIndex: Property.int(0),\r\n        _myLeftSqueezeButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Square\"),\r\n        _myLeftSqueezeButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftThumbstickButtonVisible: Property.bool(true),\r\n        _myLeftThumbstickButtonOrderIndex: Property.int(4),\r\n        _myLeftThumbstickButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Dot\"),\r\n        _myLeftThumbstickButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftTopButtonVisible: Property.bool(true),\r\n        _myLeftTopButtonOrderIndex: Property.int(2),\r\n        _myLeftTopButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Circle\"),\r\n        _myLeftTopButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftBottomButtonVisible: Property.bool(true),\r\n        _myLeftBottomButtonOrderIndex: Property.int(3),\r\n        _myLeftBottomButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Ring\"),\r\n        _myLeftBottomButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightSelectButtonVisible: Property.bool(true),\r\n        _myRightSelectButtonOrderIndex: Property.int(1),\r\n        _myRightSelectButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Frame\"),\r\n        _myRightSelectButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightSqueezeButtonVisible: Property.bool(true),\r\n        _myRightSqueezeButtonOrderIndex: Property.int(0),\r\n        _myRightSqueezeButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Square\"),\r\n        _myRightSqueezeButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightThumbstickButtonVisible: Property.bool(true),\r\n        _myRightThumbstickButtonOrderIndex: Property.int(4),\r\n        _myRightThumbstickButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Dot\"),\r\n        _myRightThumbstickButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightTopButtonVisible: Property.bool(true),\r\n        _myRightTopButtonOrderIndex: Property.int(2),\r\n        _myRightTopButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Circle\"),\r\n        _myRightTopButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightBottomButtonVisible: Property.bool(true),\r\n        _myRightBottomButtonOrderIndex: Property.int(3),\r\n        _myRightBottomButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Ring\"),\r\n        _myRightBottomButtonIconLabelOrImageUrl: Property.string(\"\")\r\n    };\r\n\r\n    start() {\r\n        let params = new VirtualGamepadParams(this.engine);\r\n        params.defaultSetup();\r\n\r\n        for (let handedness in params.myButtonParams) {\r\n            for (let gamepadButtonID in params.myButtonParams[handedness]) {\r\n                let buttonParams = params.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = this._myBackgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        for (let handedness in params.myThumbstickParams) {\r\n            for (let gamepadAxesID in params.myThumbstickParams[handedness]) {\r\n                let thumbstickParams = params.myThumbstickParams[handedness][gamepadAxesID];\r\n                thumbstickParams.myBackgroundColor = this._myBackgroundColor;\r\n                thumbstickParams.myIconParams.myBackgroundColor = this._myIconColor;\r\n                thumbstickParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                thumbstickParams.myIconParams.myIconColor = this._myBackgroundColor;\r\n                thumbstickParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        params.myOpacity = this._myOpacity;\r\n\r\n        params.myInterfaceScale = this._myInterfaceScale;\r\n        params.myMarginScale = this._myMarginScale;\r\n\r\n        params.myShowOnDesktop = this._myShowOnDesktop;\r\n        params.myShowOnMobile = this._myShowOnMobile;\r\n        params.myShowOnHeadset = this._myShowOnHeadset;\r\n\r\n        if (params.myShowOnDesktop || params.myShowOnMobile || params.myShowOnHeadset) {\r\n            params.myAutoUpdateVisibility = true;\r\n        } else {\r\n            params.myAutoUpdateVisibility = false;\r\n        }\r\n\r\n        this._advancedSetup(params);\r\n\r\n        this._myVirtualGamepad = new VirtualGamepad(params);\r\n        if (!params.myAutoUpdateVisibility) {\r\n            this._myVirtualGamepad.setVisible(false);\r\n        }\r\n\r\n        this._myVirtualGamepad.start();\r\n\r\n        this._myFirstUpdate = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n\r\n            if (this._myAddToUniversalGamepad) {\r\n                let leftVirtualGamepadGamepadCore = new VirtualGamepadGamepadCore(this._myVirtualGamepad, getLeftGamepad(this.engine).getGamepadCore(\"pp_left_xr_gamepad\").getHandPose());\r\n                let rightVirtualGamepadGamepadCore = new VirtualGamepadGamepadCore(this._myVirtualGamepad, getRightGamepad(this.engine).getGamepadCore(\"pp_right_xr_gamepad\").getHandPose());\r\n\r\n                getLeftGamepad(this.engine).addGamepadCore(\"pp_left_virtual_gamepad\", leftVirtualGamepadGamepadCore);\r\n                getRightGamepad(this.engine).addGamepadCore(\"pp_right_virtual_gamepad\", rightVirtualGamepadGamepadCore);\r\n            }\r\n        }\r\n\r\n        this._myVirtualGamepad.update(dt);\r\n    }\r\n\r\n    _advancedSetup(params) {\r\n        params.myButtonsOrder[Handedness.LEFT] = [null, null, null, null, null];\r\n        params.myButtonsOrder[Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSelectButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftSelectButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSqueezeButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftSqueezeButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myLeftThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftThumbstickButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftThumbstickButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftTopButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftTopButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftBottomButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftBottomButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myRightSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSelectButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightSelectButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myRightSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSqueezeButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightSqueezeButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myRightThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightThumbstickButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightThumbstickButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightTopButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightTopButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightBottomButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightBottomButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n    }\r\n}", "import { BasePose } from \"./base_pose\";\r\n\r\nexport class HeadPose extends BasePose {\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getViewerPose(this._myReferenceSpace);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class SetPlayerHeightComponent extends Component {\r\n    static TypeName = \"pp-set-player-height\";\r\n    static Properties = {\r\n        _myEyesHeight: Property.float(1.65),\r\n        _mySetOnlyOnStart: Property.bool(false)\r\n    };\r\n\r\n    start() {\r\n        let localPosition = this.object.pp_getPositionLocal();\r\n        this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n\r\n        this._myHeightSetOnce = false;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this.engine);\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        if (this.active && (!this._mySetOnlyOnStart || !this._myHeightSetOnce)) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            if (XRUtils.isReferenceSpaceLocalFloor(this.engine)) {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else if (XRUtils.isDeviceEmulated()) {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n            }\r\n\r\n            this._myHeightSetOnce = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this.active && !this._mySetOnlyOnStart) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\nimport { HandPose, HandPoseParams } from \"../hand_pose\";\r\n\r\nexport class SetHandLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-hand-local-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myFixForward: Property.bool(true),\r\n        _myUpdateOnViewReset: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myHandPose = new HandPose(InputUtils.getHandednessByIndex(this._myHandedness), new HandPoseParams(this.engine));\r\n        this._myHandPose.setFixForward(this._myFixForward);\r\n        this._myHandPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHandPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this._myHandPose.start();\r\n        this.update(0);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myHandPose.update(dt);\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHandLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let handPoseTransform = quat2_create()\r\n    return function onPoseUpdated() {\r\n        this.object.pp_setTransformLocalQuat(this._myHandPose.getTransformQuat(handPoseTransform));\r\n    };\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create, quat_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { BasePoseParams } from \"../base_pose\";\r\nimport { HeadPose } from \"../head_pose\";\r\n\r\nexport class SetHeadLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-head-local-transform\";\r\n    static Properties = {\r\n        _myCameraNonVR: Property.object(),\r\n        _myFixForward: Property.bool(true),\r\n        _myUpdateOnViewReset: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myHeadPose = new HeadPose(new BasePoseParams(this.engine));\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this._myHeadPose.start();\r\n        this.update(0);\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHeadLocalTransformComponent.prototype.update = function () {\r\n    let cameraNonVRRotation = quat_create();\r\n    let cameraNonVRUp = vec3_create();\r\n    let cameraNonVRPosition = vec3_create();\r\n    return function update(dt) {\r\n        if (XRUtils.isSessionActive(this.engine)) {\r\n            this._myHeadPose.update(dt);\r\n        } else {\r\n            cameraNonVRRotation = this._myCameraNonVR.pp_getRotationLocalQuat(cameraNonVRRotation);\r\n            if (this._myFixForward) {\r\n                cameraNonVRRotation.quat_rotateAxisRadians(Math.PI, cameraNonVRRotation.quat_getUp(cameraNonVRUp), cameraNonVRRotation);\r\n            }\r\n            this.object.pp_setPositionLocal(this._myCameraNonVR.pp_getPositionLocal(cameraNonVRPosition));\r\n            this.object.pp_setRotationLocalQuat(cameraNonVRRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nSetHeadLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let headPoseTransform = quat2_create();\r\n    return function onPoseUpdated() {\r\n        if (XRUtils.isSessionActive(this.engine)) {\r\n            this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n        }\r\n    }\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { BasePoseParams } from \"../base_pose\";\r\nimport { HeadPose } from \"../head_pose\";\r\n\r\nexport class SetHeadVRLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-head-vr-local-transform\";\r\n    static Properties = {\r\n        _myFixForward: Property.bool(true),\r\n        _myUpdateOnViewReset: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myHeadPose = new HeadPose(new BasePoseParams(this.engine));\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this._myHeadPose.start();\r\n        this.update(0);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myHeadPose.update(dt);\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHeadVRLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let headPoseTransform = quat2_create();\r\n    return function onPoseUpdated() {\r\n        this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n    }\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { quat_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class SetHeadNonVRLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-head-non-vr-local-transform\";\r\n    static Properties = {\r\n        _myCameraNonVR: Property.object(),\r\n        _myFixForward: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this.update(0);\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHeadNonVRLocalTransformComponent.prototype.update = function () {\r\n    let cameraNonVRRotation = quat_create();\r\n    let cameraNonVRUp = vec3_create();\r\n    let cameraNonVRPosition = vec3_create();\r\n    return function update(dt) {\r\n        cameraNonVRRotation = this._myCameraNonVR.pp_getRotationLocalQuat(cameraNonVRRotation);\r\n        if (this._myFixForward) {\r\n            cameraNonVRRotation.quat_rotateAxisRadians(Math.PI, cameraNonVRRotation.quat_getUp(cameraNonVRUp), cameraNonVRRotation);\r\n        }\r\n        this.object.pp_setPositionLocal(this._myCameraNonVR.pp_getPositionLocal(cameraNonVRPosition));\r\n        this.object.pp_setRotationLocalQuat(cameraNonVRRotation);\r\n    };\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\nimport { TrackedHandJointPose } from \"../tracked_hand_joint_pose\";\r\n\r\nexport class SetTrackedHandJointLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-tracked-hand-joint-local-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myFixForward: Property.bool(true),\r\n        _myUpdateOnViewReset: Property.bool(true),\r\n        _mySetLocalScaleAsJointRadius: Property.bool(false),\r\n        _myJointID: Property.enum(\r\n            [\r\n                \"Wrist\",\r\n                \"Thumb Metacarpal\", \"Thumb Phalanx Proximal\", \"Thumb Phalanx Distal\", \"Thumb Tip\",\r\n                \"Index Metacarpal\", \"Index Phalanx Proximal\", \"Index Phalanx Intermediate\", \"Index Phalanx Distal\", \"Index Tip\",\r\n                \"Middle Metacarpal\", \"Middle Phalanx Proximal\", \"Middle Phalanx Intermediate\", \"Middle Phalanx Distal\", \"Middle Tip\",\r\n                \"Ring Metacarpal\", \"Ring Phalanx Proximal\", \"Ring Phalanx Intermediate\", \"Ring Phalanx Distal\", \"Ring Tip\",\r\n                \"Pinky Metacarpal\", \"Pinky Phalanx Proximal\", \"Pinky Phalanx Intermediate\", \"Pinky Phalanx Distal\", \"Pinky Tip\"\r\n            ],\r\n            \"Wrist\")\r\n    };\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new TrackedHandJointPose(this._myHandednessType, this._myJointIDInternal, new BasePoseParams(this.engine));\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n        this._myTrackedHandJointPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myTrackedHandJointPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this._myTrackedHandJointPose.start();\r\n        this.update(0);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetTrackedHandJointLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let jointPoseTransform = quat2_create()\r\n    return function onPoseUpdated() {\r\n        this.object.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat(jointPoseTransform));\r\n\r\n        if (this._mySetLocalScaleAsJointRadius) {\r\n            this.object.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n        }\r\n    }\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class CopyHandTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-hand-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\")\r\n    };\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n    }\r\n\r\n    update(dt) {\r\n        let hand = getPlayerObjects(this.engine).myHands[this._myHandednessType];\r\n        this.object.pp_setTransformQuat(hand.pp_getTransformQuat());\r\n        this.object.pp_setScale(hand.pp_getScale());\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\n\r\nexport class CopyHeadTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-head-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let head = getPlayerObjects(this.engine).myHead;\r\n        this.object.pp_setTransformQuat(head.pp_getTransformQuat());\r\n        this.object.pp_setScale(head.pp_getScale());\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\n\r\nexport class CopyPlayerTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-player-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let player = getPlayerObjects(this.engine).myPlayer;\r\n        this.object.pp_setTransformQuat(player.pp_getTransformQuat());\r\n        this.object.pp_setScale(player.pp_getScale());\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\n\r\nexport class CopyPlayerPivotTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-player-pivot-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let playerPivot = getPlayerObjects(this.engine).myPlayerPivot;\r\n        this.object.pp_setTransformQuat(playerPivot.pp_getTransformQuat());\r\n        this.object.pp_setScale(playerPivot.pp_getScale());\r\n    }\r\n}", "export let ToolHandedness = {\r\n    NONE: null,\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nexport let ToolInputSourceType = {\r\n    NONE: null,\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};", "import { Component, MeshComponent, Property, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Cursor, CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { FingerCursorComponent } from \"../../../input/cauldron/components/finger_cursor_component\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../../input/cauldron/input_globals\";\r\nimport { InputUtils } from \"../../../input/cauldron/input_utils\";\r\nimport { quat2_create, vec3_create, vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { getPlayerObjects } from \"../../../pp/player_objects_global\";\r\n\r\nexport class ToolCursorComponent extends Component {\r\n    static TypeName = \"pp-tool-cursor\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myApplyDefaultCursorOffset: Property.bool(true),\r\n        _myPulseOnHover: Property.bool(false),\r\n        _myShowFingerCursor: Property.bool(false)\r\n    }\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myCursorPositionDefaultOffset = vec3_create(0, -0.035, 0.05);\r\n        this._myCursorRotationDefaultOffset = vec3_create(30, 0, 0);\r\n\r\n        this._myCursorMeshScale = vec3_create(0.0025, 0.0025, 0.0025);\r\n        this._myCursorColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this._myCursorTargetCollisionGroup = 7;\r\n    }\r\n\r\n    start() {\r\n        this._myToolCursorObject = this.object.pp_addObject();\r\n\r\n        this._myCursorObjectVR = this._myToolCursorObject.pp_addObject();\r\n\r\n        if (this._myApplyDefaultCursorOffset) {\r\n            this._myCursorObjectVR.pp_setPositionLocal(this._myCursorPositionDefaultOffset);\r\n            this._myCursorObjectVR.pp_rotateObject(this._myCursorRotationDefaultOffset);\r\n        }\r\n\r\n        {\r\n            this._myCursorMeshobject = this._myCursorObjectVR.pp_addObject();\r\n            this._myCursorMeshobject.pp_setScale(this._myCursorMeshScale);\r\n\r\n            let cursorMeshComponent = this._myCursorMeshobject.pp_addComponent(MeshComponent);\r\n            cursorMeshComponent.mesh = getDefaultResources(this.engine).myMeshes.mySphere;\r\n            cursorMeshComponent.material = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            cursorMeshComponent.material.color = this._myCursorColor;\r\n\r\n            this._myCursorComponentVR = this._myCursorObjectVR.pp_addComponent(Cursor, {\r\n                \"collisionGroup\": this._myCursorTargetCollisionGroup,\r\n                \"handedness\": this._myHandedness + 1,\r\n                \"cursorObject\": this._myCursorMeshobject\r\n            });\r\n\r\n            this._myCursorComponentVR.rayCastMode = 0; // Collision\r\n            if (this._myPulseOnHover) {\r\n                this._myCursorComponentVR.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n        }\r\n\r\n        this._myCursorObjectNonVR = this._myToolCursorObject.pp_addObject();\r\n\r\n        {\r\n            this._myCursorComponentNonVR = this._myCursorObjectNonVR.pp_addComponent(Cursor, {\r\n                \"collisionGroup\": this._myCursorTargetCollisionGroup,\r\n                \"handedness\": this._myHandedness + 1\r\n            });\r\n\r\n            this._myCursorComponentNonVR.rayCastMode = 0; // Collision\r\n            if (this._myPulseOnHover) {\r\n                this._myCursorComponentNonVR.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n            this._myCursorComponentNonVR.setViewComponent(getPlayerObjects(this.engine).myCameraNonVR.pp_getComponent(ViewComponent));\r\n        }\r\n\r\n        let fingerCursorMeshObject = null;\r\n        let fingerCollisionSize = 0.0125;\r\n\r\n        if (this._myShowFingerCursor) {\r\n            fingerCursorMeshObject = this._myToolCursorObject.pp_addObject();\r\n\r\n            let meshComponent = fingerCursorMeshObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = getDefaultResources(this.engine).myMeshes.mySphere;\r\n            meshComponent.material = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            meshComponent.material.color = this._myCursorColor;\r\n\r\n            fingerCursorMeshObject.pp_setScale(fingerCollisionSize);\r\n        }\r\n\r\n        this._myFingerCursorObject = this._myToolCursorObject.pp_addObject();\r\n        this._myFingerCursorComponent = this._myFingerCursorObject.pp_addComponent(FingerCursorComponent, {\r\n            \"_myHandedness\": this._myHandedness,\r\n            \"_myMultipleClicksEnabled\": true,\r\n            \"_myCollisionGroup\": this._myCursorTargetCollisionGroup,\r\n            \"_myCollisionSize\": fingerCollisionSize,\r\n            \"_myCursorObject\": fingerCursorMeshObject\r\n        });\r\n\r\n        this._myCursorComponentVR.active = false;\r\n        this._myCursorComponentNonVR.active = false;\r\n        this._myFingerCursorComponent.active = false;\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _isUsingHand() {\r\n        let isUsingHand = false;\r\n\r\n        if (XRUtils.getSession(this.engine) && XRUtils.getSession(this.engine).inputSources) {\r\n            for (let i = 0; i < XRUtils.getSession(this.engine).inputSources.length; i++) {\r\n                let input = XRUtils.getSession(this.engine).inputSources[i];\r\n                if (input.hand && input.handedness == this._myHandednessType) {\r\n                    isUsingHand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isUsingHand;\r\n    }\r\n\r\n    _pulseOnHover(object) {\r\n        let targetComponent = object.pp_getComponent(CursorTarget);\r\n\r\n        if (targetComponent && !targetComponent.isSurface) {\r\n            if (this._myHandedness == 0) {\r\n                if (getLeftGamepad(this.engine) != null) {\r\n                    getLeftGamepad(this.engine).pulse(0.4, 0);\r\n                }\r\n            } else {\r\n                if (getRightGamepad(this.engine) != null) {\r\n                    getRightGamepad(this.engine).pulse(0.4, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nToolCursorComponent.prototype.update = function () {\r\n    let transformQuat = quat2_create();\r\n    return function update(dt) {\r\n        let isUsingHand = this._isUsingHand();\r\n\r\n        this._myFingerCursorComponent.active = isUsingHand;\r\n\r\n        if (isUsingHand) {\r\n            this._myCursorComponentVR.active = false;\r\n            this._myCursorComponentNonVR.active = false;\r\n        } else {\r\n            if (XRUtils.isSessionActive(this.engine)) {\r\n                this._myCursorComponentVR.active = !isUsingHand;\r\n                this._myCursorComponentNonVR.active = false;\r\n            } else {\r\n                this._myCursorComponentNonVR.active = !isUsingHand;\r\n                this._myCursorComponentVR.active = false;\r\n\r\n                this._myCursorObjectNonVR.pp_setTransformQuat(getPlayerObjects(this.engine).myCameraNonVR.pp_getTransformQuat(transformQuat));\r\n            }\r\n        }\r\n    };\r\n}()", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { ConsoleVRWidgetMessageType } from \"./console_vr_types\";\r\n\r\nexport class ConsoleVRWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup() {\r\n        // General\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7; // Keep this in sync with ConsoleVRSetup\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myMessageTypeColors = [];\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG] = this.myDefaultTextColor;\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR] = vec4_create(255 / 255, 40 / 255, 40 / 255, 1);\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN] = vec4_create(250 / 255, 220 / 255, 40 / 255, 1);\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG] = vec4_create(60 / 255, 200 / 255, 255 / 255, 1);\r\n\r\n        // Messages\r\n        this.myMessagesPanelPosition = vec3_create(0, 0.075, 0);\r\n\r\n        this.myMessagesBackgroundScale = vec3_create(0.34, 0.15, 1);\r\n\r\n        {\r\n            let xPaddingPercentage = 0.03;\r\n            let yPaddingPercentage = xPaddingPercentage * this.myMessagesBackgroundScale[0] / this.myMessagesBackgroundScale[1] * 0.8; // A bit less padding\r\n            let xPosition = -this.myMessagesBackgroundScale[0] + this.myMessagesBackgroundScale[0] * xPaddingPercentage;\r\n            let yPosition = this.myMessagesBackgroundScale[1] - this.myMessagesBackgroundScale[1] * yPaddingPercentage;\r\n            this.myMessagesTextsPanelPosition = vec3_create(xPosition, yPosition, 0.007);\r\n        }\r\n        this.myMessagesTextsPanelScale = vec3_create(0.1, 0.1, 0.1);\r\n\r\n        this.myMessagesTextStartString = \".\\n\"; // To avoid issue with text component padding\r\n        this.myMessagesTextAlignment = 1; // Left\r\n        this.myMessagesTextJustification = 3; // Top\r\n\r\n        this.myMessagesTextPositions = [];\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.LOG] = vec3_create(0, 0, 0.00001);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.ERROR] = vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.WARN] = vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.DEBUG] = vec3_create(0, 0, 0);\r\n\r\n        this.myMessagesTextColors = [];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.LOG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.ERROR] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.WARN] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.DEBUG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG];\r\n\r\n        // Buttons     \r\n        this.myButtonsPanelPosition = vec3_create(0, -0.11, 0.015);\r\n\r\n        this.myButtonBackgroundScale = vec3_create(0.04, 0.02, 1);\r\n\r\n        this.myButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myButtonCursorTargetPosition[2] = this.myButtonTextPosition[2];\r\n\r\n        this.myButtonsCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myButtonsCollisionGroup = this.myCursorTargetCollisionGroup;\r\n        this.myButtonsCollisionExtents = this.myButtonBackgroundScale.pp_clone();\r\n        this.myButtonsCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myClearButtonTextLabel = \"clear\";\r\n        this.myUpButtonTextLabel = \"up\";\r\n        this.myDownButtonTextLabel = \"down\";\r\n\r\n        this.myFilterButtonsTextColors = [];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.LOG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.ERROR] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.WARN] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.DEBUG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG];\r\n\r\n        this.myFilterButtonsTextLabel = [];\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.LOG] = \"log\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.ERROR] = \"error\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.WARN] = \"warn\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.DEBUG] = \"debug\";\r\n\r\n        // Buttons positioning\r\n        {\r\n            let numberOfButtons = 7;\r\n            let buttonsHorizontalSpace = Math.max(0.68, this.myButtonBackgroundScale[0] * numberOfButtons);\r\n            // 2 at start, 3 between filters, 4 spaces between filter and clear and 4 spaces between clear and up/down, 1 space between up and down, 1 at end\r\n            let numberOfSpacesBetweenButtons = 2 + 3 + 4 + 4 + 1 + 2;\r\n            let spaceWidth = Math.max((buttonsHorizontalSpace - numberOfButtons * this.myButtonBackgroundScale[0] * 2) / numberOfSpacesBetweenButtons, 0);\r\n            let halfButtonWidth = this.myButtonBackgroundScale[0];\r\n            let initialPosition = - buttonsHorizontalSpace / 2;\r\n\r\n            this.myFilterButtonsPositions = [];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.LOG] = [initialPosition + spaceWidth * 2 + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.ERROR] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.LOG][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.WARN] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.ERROR][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.DEBUG] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.WARN][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n\r\n            this.myClearButtonPosition = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.DEBUG][0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myUpButtonPosition = [this.myClearButtonPosition[0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myDownButtonPosition = [this.myUpButtonPosition[0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n        }\r\n\r\n        // Notify Icon\r\n        this.myNotifyIconBackgroundScale = vec3_create(0.01, 0.01, 1);\r\n\r\n        this.myNotifyIconPanelPositions = [];\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE] = vec3_create(0, 0, 0);\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][0] = -this.myMessagesBackgroundScale[0] + this.myNotifyIconBackgroundScale[0] + 0.01;\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][1] = -this.myMessagesBackgroundScale[1] + this.myNotifyIconBackgroundScale[1] + 0.01;\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][2] = this.myMessagesTextsPanelPosition[2] - 0.00001; // Prevent glitches with text\r\n\r\n        this.myNotifyIconPanelPositions[ToolHandedness.LEFT] = this.myNotifyIconPanelPositions[ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconPanelPositions[ToolHandedness.RIGHT] = this.myNotifyIconPanelPositions[ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myNotifyIconCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - this.myMessagesTextsPanelPosition[2]; // A little behind the button target to avoid hiding it\r\n\r\n        this.myNotifyIconCollisionExtents = this.myNotifyIconBackgroundScale.pp_clone();\r\n        this.myNotifyIconCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNotifyIconColor = vec4_create(210 / 255, 210 / 255, 210 / 255, 1);\r\n\r\n        // Pointer\r\n        this.myPointerCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionGroup = this.myCursorTargetCollisionGroup;\r\n\r\n        {\r\n            let spaceBetweenMessagesAndButtons = Math.abs((this.myMessagesPanelPosition[1] - this.myMessagesBackgroundScale[1]) - (this.myButtonsPanelPosition[1] + this.myButtonBackgroundScale[1]));\r\n            let pointerCollisionHalfHeight = this.myMessagesBackgroundScale[1] + this.myButtonBackgroundScale[1] + spaceBetweenMessagesAndButtons / 2;\r\n            this.myPointerCollisionExtents = vec3_create(this.myMessagesBackgroundScale[0], pointerCollisionHalfHeight, this.myCursorTargetCollisionThickness);\r\n        }\r\n\r\n        this.myPointerCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myPointerCursorTargetPosition[1] = (this.myMessagesPanelPosition[1] + this.myMessagesBackgroundScale[1]) - this.myPointerCollisionExtents[1];\r\n        this.myPointerCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - 0.0001; // A little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myTabString = \"     \";\r\n        this.myAssertStartString = \"Assertion failed:\";\r\n\r\n        this.myMaxCharactersPerLine = 100;\r\n        this.myMaxLineSplits = 50; // Prevent infinite splitting\r\n        this.myMaxLines = 22;\r\n        this.myMaxMessages = 2000;\r\n        this.myMaxMessagesDeletePad = 2000; // To prevent deleting at every message, delay the delete after the limit is exceed by this value\r\n\r\n        this.myLinesBetweenMessages = 1;\r\n\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = vec4_create(110 / 255, 110 / 255, 110 / 255, 1);\r\n\r\n        this.myFilterButtonDisabledTextColor = this.myButtonDisabledTextColor;\r\n        this.myFilterButtonDisabledBackgroundColor = this.myButtonDisabledBackgroundColor;\r\n\r\n        this.myScrollDelay = 0.1;\r\n        this.myScrollAmount = 1;\r\n        this.myScrollThumbstickHandedness = ToolHandedness.RIGHT;\r\n        this.myScrollThumbstickDelay = 0.1;\r\n        this.myScrollThumbstickMinThreshold = 0.2;\r\n        this.myScrollThumbstickAmount = 3;\r\n\r\n        this.myPulseDelay = 5;\r\n        this.myPulseIntensity = 0.3;\r\n        this.myPulseDuration = 0.085;\r\n\r\n        this.myClearBrowserConsoleWhenClearPressed = true;\r\n\r\n        this.myGamepadScrollOnlyOnHover = true;\r\n    }\r\n}", "export let ConsoleVRWidgetConsoleFunction = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3,\r\n    INFO: 4,\r\n    ASSERT: 5\r\n};\r\n\r\nexport let ConsoleVRWidgetSender = {\r\n    BROWSER_CONSOLE: 0,\r\n    CONSOLE_VR: 1,\r\n    WINDOW: 2\r\n};\r\n\r\nexport let ConsoleVRWidgetPulseOnNewMessage = {\r\n    NEVER: 0,\r\n    ALWAYS: 1,\r\n    WHEN_HIDDEN: 2\r\n};\r\n\r\nexport let ConsoleVRWidgetMessageType = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3\r\n};", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { getDefaultResources } from \"../../pp/default_resources_global\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { ConsoleVRWidgetMessageType } from \"./console_vr_types\";\r\n\r\nexport class ConsoleVRWidgetUI {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myPlaneMesh = getDefaultResources(this._myEngine).myMeshes.myPlane;\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActive(visible);\r\n    }\r\n\r\n    // Skeleton\r\n    _createSkeleton() {\r\n        this.myPivotObject = this._myParentObject.pp_addObject();\r\n\r\n        this._createMessagesSkeleton();\r\n        this._createButtonsSkeleton();\r\n        this._createPointerSkeleton();\r\n    }\r\n\r\n    _createMessagesSkeleton() {\r\n        this.myMessagesPanel = this.myPivotObject.pp_addObject();\r\n        this.myMessagesBackground = this.myMessagesPanel.pp_addObject();\r\n        this.myMessagesTextsPanel = this.myMessagesPanel.pp_addObject();\r\n\r\n        this.myMessagesTexts = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myMessagesTexts[ConsoleVRWidgetMessageType[key]] = this.myMessagesTextsPanel.pp_addObject();\r\n        }\r\n\r\n        this.myNotifyIconPanel = this.myMessagesPanel.pp_addObject();\r\n        this.myNotifyIconBackground = this.myNotifyIconPanel.pp_addObject();\r\n        this.myNotifyIconCursorTarget = this.myNotifyIconPanel.pp_addObject();\r\n    }\r\n\r\n    _createButtonsSkeleton() {\r\n        this.myButtonsPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myFilterButtonsPanels = [];\r\n        this.myFilterButtonsBackgrounds = [];\r\n        this.myFilterButtonsTexts = [];\r\n        this.myFilterButtonsCursorTargets = [];\r\n\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]] = this.myButtonsPanel.pp_addObject();\r\n            this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n            this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n        }\r\n\r\n        this.myClearButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myClearButtonBackground = this.myClearButtonPanel.pp_addObject();\r\n        this.myClearButtonText = this.myClearButtonPanel.pp_addObject();\r\n        this.myClearButtonCursorTarget = this.myClearButtonPanel.pp_addObject();\r\n\r\n        this.myUpButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myUpButtonBackground = this.myUpButtonPanel.pp_addObject();\r\n        this.myUpButtonText = this.myUpButtonPanel.pp_addObject();\r\n        this.myUpButtonCursorTarget = this.myUpButtonPanel.pp_addObject();\r\n\r\n        this.myDownButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myDownButtonBackground = this.myDownButtonPanel.pp_addObject();\r\n        this.myDownButtonText = this.myDownButtonPanel.pp_addObject();\r\n        this.myDownButtonCursorTarget = this.myDownButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _createPointerSkeleton() {\r\n        this.myPointerCursorTarget = this.myPivotObject.pp_addObject();\r\n    }\r\n\r\n    // Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_markDirty();\r\n\r\n        this._setMessagesTransforms();\r\n        this._setButtonsTransforms();\r\n        this._setPointerTransform();\r\n    }\r\n\r\n    _setMessagesTransforms() {\r\n        this.myMessagesPanel.pp_setPositionLocal(this._mySetup.myMessagesPanelPosition);\r\n        this.myMessagesBackground.pp_scaleObject(this._mySetup.myMessagesBackgroundScale);\r\n\r\n        this.myMessagesTextsPanel.pp_setPositionLocal(this._mySetup.myMessagesTextsPanelPosition);\r\n        this.myMessagesTextsPanel.pp_scaleObject(this._mySetup.myMessagesTextsPanelScale);\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myMessagesTexts[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._mySetup.myMessagesTextPositions[ConsoleVRWidgetMessageType[key]]);\r\n        }\r\n\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n        this.myNotifyIconBackground.pp_scaleObject(this._mySetup.myNotifyIconBackgroundScale);\r\n        this.myNotifyIconCursorTarget.pp_setPositionLocal(this._mySetup.myNotifyIconCursorTargetPosition);\r\n    }\r\n\r\n    _setButtonsTransforms() {\r\n        this.myButtonsPanel.pp_setPositionLocal(this._mySetup.myButtonsPanelPosition);\r\n\r\n        // Filter Buttons\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._mySetup.myFilterButtonsPositions[ConsoleVRWidgetMessageType[key]]);\r\n\r\n            this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]].pp_scaleObject(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._mySetup.myButtonTextPosition);\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_scaleObject(this._mySetup.myButtonTextScale);\r\n\r\n            this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Clear\r\n        {\r\n            this.myClearButtonPanel.pp_setPositionLocal(this._mySetup.myClearButtonPosition);\r\n\r\n            this.myClearButtonBackground.pp_scaleObject(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myClearButtonText.pp_setPositionLocal(this._mySetup.myButtonTextPosition);\r\n            this.myClearButtonText.pp_scaleObject(this._mySetup.myButtonTextScale);\r\n\r\n            this.myClearButtonCursorTarget.pp_setPositionLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Up\r\n        {\r\n            this.myUpButtonPanel.pp_setPositionLocal(this._mySetup.myUpButtonPosition);\r\n\r\n            this.myUpButtonBackground.pp_scaleObject(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myUpButtonText.pp_setPositionLocal(this._mySetup.myButtonTextPosition);\r\n            this.myUpButtonText.pp_scaleObject(this._mySetup.myButtonTextScale);\r\n\r\n            this.myUpButtonCursorTarget.pp_setPositionLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Down\r\n        {\r\n            this.myDownButtonPanel.pp_setPositionLocal(this._mySetup.myDownButtonPosition);\r\n\r\n            this.myDownButtonBackground.pp_scaleObject(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myDownButtonText.pp_setPositionLocal(this._mySetup.myButtonTextPosition);\r\n            this.myDownButtonText.pp_scaleObject(this._mySetup.myButtonTextScale);\r\n\r\n            this.myDownButtonCursorTarget.pp_setPositionLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _setPointerTransform() {\r\n        this.myPointerCursorTarget.pp_setPositionLocal(this._mySetup.myPointerCursorTargetPosition);\r\n    }\r\n\r\n    // Components\r\n    _addComponents() {\r\n        this._addMessagesComponents();\r\n        this._addButtonsComponents();\r\n        this._addPointerComponents();\r\n    }\r\n\r\n    _addMessagesComponents() {\r\n        let messagesBackgroundMeshComp = this.myMessagesBackground.pp_addComponent(MeshComponent);\r\n        messagesBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n        messagesBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        messagesBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myMessagesTextComponents = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let textComp = this.myMessagesTexts[ConsoleVRWidgetMessageType[key]].pp_addComponent(TextComponent);\r\n\r\n            textComp.alignment = this._mySetup.myMessagesTextAlignment;\r\n            textComp.justification = this._mySetup.myMessagesTextJustification;\r\n            textComp.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n            textComp.material.color = this._mySetup.myMessagesTextColors[ConsoleVRWidgetMessageType[key]];\r\n            textComp.lineSpacing = 1.2;\r\n            textComp.text = this._mySetup.myMessagesTextStartString;\r\n\r\n            this.myMessagesTextComponents[ConsoleVRWidgetMessageType[key]] = textComp;\r\n        }\r\n\r\n        this.myNotifyIconBackgroundComponent = this.myNotifyIconBackground.pp_addComponent(MeshComponent);\r\n        this.myNotifyIconBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNotifyIconBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNotifyIconBackgroundComponent.material.color = this._mySetup.myNotifyIconColor;\r\n\r\n        this.myNotifyIconCursorTargetComponent = this.myNotifyIconCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n        this.myNotifyIconCollisionComponent = this.myNotifyIconCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myNotifyIconCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNotifyIconCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNotifyIconCollisionComponent.extents = this._mySetup.myNotifyIconCollisionExtents;\r\n    }\r\n\r\n    _addButtonsComponents() {\r\n        // Worship the code copy pasteness\r\n\r\n        this.myFilterButtonsBackgroundComponents = [];\r\n        this.myFilterButtonsTextComponents = [];\r\n        this.myFilterButtonsCursorTargetComponents = [];\r\n        this.myFilterButtonsCollisionComponents = [];\r\n\r\n        // Filter Buttons\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let buttonBackgroundMeshComp = this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]].pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.material.color = this._mySetup.myFilterButtonsTextColors[ConsoleVRWidgetMessageType[key]];\r\n            buttonTextComp.text = this._mySetup.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType[key]];\r\n\r\n            let buttonCursorTargetComp = this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]] = buttonBackgroundMeshComp;\r\n            this.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]] = buttonTextComp;\r\n            this.myFilterButtonsCursorTargetComponents[ConsoleVRWidgetMessageType[key]] = buttonCursorTargetComp;\r\n            this.myFilterButtonsCollisionComponents[ConsoleVRWidgetMessageType[key]] = buttonCollisionComp;\r\n        }\r\n\r\n        // Clear \r\n        {\r\n            let buttonBackgroundMeshComp = this.myClearButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myClearButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myClearButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myClearButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myClearButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myClearButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myClearButtonTextComponent = buttonTextComp;\r\n            this.myClearButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myClearButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        // Up \r\n        {\r\n            let buttonBackgroundMeshComp = this.myUpButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myUpButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myUpButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myUpButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myUpButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myUpButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myUpButtonTextComponent = buttonTextComp;\r\n            this.myUpButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myUpButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        // Down \r\n        {\r\n            let buttonBackgroundMeshComp = this.myDownButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myDownButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myDownButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myDownButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myDownButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myDownButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myDownButtonTextComponent = buttonTextComp;\r\n            this.myDownButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myDownButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n    }\r\n\r\n    _addPointerComponents() {\r\n        this.myPointerCursorTargetComponent = this.myPointerCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPointerCursorTargetComponent.isSurface = true;\r\n\r\n        let collisionComp = this.myPointerCursorTarget.pp_addComponent(CollisionComponent);\r\n        collisionComp.collider = this._mySetup.myPointerCollisionCollider;\r\n        collisionComp.group = 1 << this._mySetup.myPointerCollisionGroup;\r\n        collisionComp.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this.myPointerCollisionComponent = collisionComp;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._mySetup.myNotifyIconPanelPositions[ToolHandedness.NONE]);\r\n    }\r\n}", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { quat_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness, ToolInputSourceType } from \"../cauldron/tool_types\";\r\n\r\nexport class WidgetFrameSetup {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n\r\n        this._initializeBuildSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup(widgetLetterID, buttonsColumnIndex) {\r\n        // General\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myVisibilityButtonBackgroundScale = vec3_create(0.015, 0.015, 1);\r\n        this.myVisibilityButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myVisibilityButtonTextScale = this.myButtonTextScale;\r\n\r\n        let distanceBetweenToolsVisibilityButtons = 0.01;\r\n        let buttonXOffset = this.myVisibilityButtonBackgroundScale[0] * (2 * buttonsColumnIndex) + distanceBetweenToolsVisibilityButtons * buttonsColumnIndex;\r\n\r\n        this.myVisibilityButtonPosition = [];\r\n        this.myVisibilityButtonPosition[ToolHandedness.NONE] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition = vec3_create(-0.3 + buttonXOffset, -0.205, 0.035);\r\n\r\n        this.myVisibilityButtonPosition[ToolHandedness.LEFT] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.LEFT].myPosition = vec3_create(-0.2 + buttonXOffset, 0.025, 0.015);\r\n\r\n        this.myVisibilityButtonPosition[ToolHandedness.RIGHT] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.RIGHT].myPosition = vec3_create(0.2 - buttonXOffset, 0.025, 0.015);\r\n\r\n        this.myVisibilityButtonText = widgetLetterID;\r\n\r\n        this.myVisibilityButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myVisibilityButtonCursorTargetPosition[2] = this.myVisibilityButtonTextPosition[2];\r\n        this.myVisibilityButtonCollisionExtents = this.myVisibilityButtonBackgroundScale.pp_clone();\r\n        this.myVisibilityButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myFlagButtonBackgroundScale = vec3_create(0.0125, 0.0125, 1);\r\n        this.myFlagButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myFlagButtonTextScale = vec3_create(0.15, 0.15, 0.15);\r\n\r\n        let distanceBetweenFlagButtons = 0.0075;\r\n        let pinFlagIndex = 0;\r\n        let pinButtonYOffset = this.myVisibilityButtonBackgroundScale[1] + this.myFlagButtonBackgroundScale[1] + distanceBetweenFlagButtons +\r\n            this.myFlagButtonBackgroundScale[1] * (2 * pinFlagIndex) + distanceBetweenFlagButtons * pinFlagIndex;\r\n\r\n        this.myPinButtonPosition = [];\r\n        this.myPinButtonPosition[ToolHandedness.NONE] = {};\r\n        this.myPinButtonPosition[ToolHandedness.NONE].myPosition = this.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.NONE].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[ToolHandedness.LEFT] = {};\r\n        this.myPinButtonPosition[ToolHandedness.LEFT].myPosition = this.myVisibilityButtonPosition[ToolHandedness.LEFT].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.LEFT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT] = {};\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT].myPosition = this.myVisibilityButtonPosition[ToolHandedness.RIGHT].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonText = \"P\";\r\n\r\n        this.myPinButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myPinButtonCursorTargetPosition[2] = this.myFlagButtonTextPosition[2];\r\n        this.myPinButtonCollisionExtents = this.myFlagButtonBackgroundScale.pp_clone();\r\n        this.myPinButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this._initializeObjectsTransforms();\r\n\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = vec4_create(110 / 255, 110 / 255, 110 / 255, 1);\r\n    }\r\n\r\n    _initializeObjectsTransforms() {\r\n        this.myPivotObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation = quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation = quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation = quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation = quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation);\r\n\r\n        /*\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myPosition = vec3_create(-0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation = quat_create(0, 0.536, -0.43, 0.727);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myPosition = vec3_create(0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation = quat_create(0, -0.536, 0.43, 0.727);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation);\r\n        */\r\n\r\n        this.myWidgetObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myPosition = vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myPosition = vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myPosition = vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myPosition = vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this._myPivotObjectDistanceFromHeadNonVR = 0.6;\r\n    }\r\n\r\n    _createDefaultObjectTransforms() {\r\n        let defaultObjectTransforms = [];\r\n\r\n        for (let inputSourceTypeKey in ToolInputSourceType) {\r\n            let inputSourceType = ToolInputSourceType[inputSourceTypeKey];\r\n            defaultObjectTransforms[inputSourceType] = [];\r\n            for (let handednessKey in ToolHandedness) {\r\n                let handedness = ToolHandedness[handednessKey];\r\n                defaultObjectTransforms[inputSourceType][handedness] = {};\r\n                defaultObjectTransforms[inputSourceType][handedness].myPosition = vec3_create(0, 0, 0);\r\n                defaultObjectTransforms[inputSourceType][handedness].myRotation = quat_create(0, 0, 0, 1);\r\n            }\r\n        }\r\n\r\n        return defaultObjectTransforms;\r\n    }\r\n}", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { InputUtils } from \"../../input/cauldron/input_utils\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { getPlayerObjects } from \"../../pp/player_objects_global\";\r\nimport { MeshComponent, CollisionComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness, ToolInputSourceType } from \"../cauldron/tool_types\";\r\nimport { getDefaultResources } from \"../../pp/default_resources_global\";\r\n\r\nexport class WidgetFrameUI {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myInputSourceType = null;\r\n\r\n        this._myParentObject = null;\r\n        this._myIsPinned = false;\r\n\r\n        this._myWidgetVisible = true;\r\n        this._myVisibilityButtonVisible = true;\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n        this._myPlaneMesh = getDefaultResources(this._myEngine).myMeshes.myPlane;\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setWidgetVisible(visible) {\r\n        this._myWidgetVisible = visible;\r\n        this.myFlagsButtonPanel.pp_setActive(visible);\r\n        if (visible) {\r\n            this._updateObjectsTransforms(true);\r\n        }\r\n    }\r\n\r\n    setVisibilityButtonVisible(visible) {\r\n        this._myVisibilityButtonVisible = visible;\r\n        this.myVisibilityButtonPanel.pp_setActive(visible);\r\n    }\r\n\r\n    setPinned(pinned) {\r\n        if (pinned != this._myIsPinned) {\r\n            this._myIsPinned = pinned;\r\n            if (this._myIsPinned) {\r\n                this.myPivotObject.pp_setParent(null);\r\n            } else {\r\n                this.myPivotObject.pp_setParent(this.myFixForwardObject);\r\n\r\n                if (!XRUtils.isSessionActive(this._myEngine)) {\r\n                    this._setTransformForNonVR();\r\n                }\r\n\r\n                this._updateObjectsTransforms(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateObjectsTransforms(false);\r\n    }\r\n\r\n    _updateObjectsTransforms(forceRefreshObjectsTransforms) {\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            let inputSourceType = InputUtils.getInputSourceTypeByHandedness(this._myAdditionalSetup.myHandedness, this._myEngine);\r\n\r\n            if (inputSourceType != this._myInputSourceType || forceRefreshObjectsTransforms) {\r\n                this._myInputSourceType = inputSourceType;\r\n\r\n                if (!this._myIsPinned) {\r\n                    this.myPivotObject.pp_setPositionLocal(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPivotObject.pp_resetRotationLocal();\r\n                    this.myPivotObject.pp_rotateObjectQuat(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myWidgetObject.pp_setPositionLocal(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myWidgetObject.pp_resetRotationLocal();\r\n                    this.myWidgetObject.pp_rotateObjectQuat(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myVisibilityButtonPanel.pp_setPositionLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPinButtonPanel.pp_setPositionLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                }\r\n            }\r\n        } else {\r\n            this.myVisibilityButtonPanel.pp_setActive(this._myWidgetVisible || this._myVisibilityButtonVisible);\r\n        }\r\n    }\r\n\r\n    // Skeleton\r\n    _createSkeleton() {\r\n        this.myFixForwardObject = this._myParentObject.pp_addObject();\r\n        this.myFixForwardObject.pp_rotateObject(vec3_create(0, 180, 0));\r\n        this.myPivotObject = this.myFixForwardObject.pp_addObject();\r\n        this.myWidgetObject = this.myPivotObject.pp_addObject();\r\n\r\n        this.myVisibilityButtonPanel = this.myPivotObject.pp_addObject();\r\n        this.myVisibilityButtonBackground = this.myVisibilityButtonPanel.pp_addObject();\r\n        this.myVisibilityButtonText = this.myVisibilityButtonPanel.pp_addObject();\r\n        this.myVisibilityButtonCursorTarget = this.myVisibilityButtonPanel.pp_addObject();\r\n\r\n        this.myFlagsButtonPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myPinButtonPanel = this.myFlagsButtonPanel.pp_addObject();\r\n        this.myPinButtonBackground = this.myPinButtonPanel.pp_addObject();\r\n        this.myPinButtonText = this.myPinButtonPanel.pp_addObject();\r\n        this.myPinButtonCursorTarget = this.myPinButtonPanel.pp_addObject();\r\n\r\n        this.myNonVRParentObject = getPlayerObjects(this._myEngine).myCameraNonVR.pp_addObject();\r\n        this.myNonVRParentObject.pp_translateLocal(vec3_create(0, 0, -this._mySetup._myPivotObjectDistanceFromHeadNonVR));\r\n        this.myNonVRParentObject.pp_lookToLocal(vec3_create(0, 0, 1), vec3_create(0, 1, 0));\r\n\r\n    }\r\n\r\n    // Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_markDirty();\r\n\r\n        this.myVisibilityButtonPanel.pp_setPositionLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n        this.myVisibilityButtonBackground.pp_scaleObject(this._mySetup.myVisibilityButtonBackgroundScale);\r\n        this.myVisibilityButtonText.pp_setPositionLocal(this._mySetup.myVisibilityButtonTextPosition);\r\n        this.myVisibilityButtonText.pp_scaleObject(this._mySetup.myVisibilityButtonTextScale);\r\n        this.myVisibilityButtonCursorTarget.pp_setPositionLocal(this._mySetup.myVisibilityButtonCursorTargetPosition);\r\n\r\n        this.myPinButtonPanel.pp_setPositionLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n\r\n        this.myPinButtonBackground.pp_scaleObject(this._mySetup.myFlagButtonBackgroundScale);\r\n        this.myPinButtonText.pp_setPositionLocal(this._mySetup.myFlagButtonTextPosition);\r\n        this.myPinButtonText.pp_scaleObject(this._mySetup.myFlagButtonTextScale);\r\n        this.myPinButtonCursorTarget.pp_setPositionLocal(this._mySetup.myPinButtonCursorTargetPosition);\r\n    }\r\n\r\n    // Components\r\n    _addComponents() {\r\n        this.myVisibilityButtonBackgroundComponent = this.myVisibilityButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myVisibilityButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myVisibilityButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myVisibilityButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myVisibilityButtonTextComponent = this.myVisibilityButtonText.pp_addComponent(TextComponent);\r\n        this._setupButtonTextComponent(this.myVisibilityButtonTextComponent);\r\n        this.myVisibilityButtonTextComponent.text = this._mySetup.myVisibilityButtonText;\r\n\r\n        this.myVisibilityButtonCursorTargetComponent = this.myVisibilityButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myVisibilityButtonCollisionComponent = this.myVisibilityButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myVisibilityButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVisibilityButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVisibilityButtonCollisionComponent.extents = this._mySetup.myVisibilityButtonCollisionExtents;\r\n\r\n        this.myPinButtonBackgroundComponent = this.myPinButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPinButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPinButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPinButtonBackgroundComponent.material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n\r\n        this.myPinButtonTextComponent = this.myPinButtonText.pp_addComponent(TextComponent);\r\n        this._setupButtonTextComponent(this.myPinButtonTextComponent);\r\n        this.myPinButtonTextComponent.material.color = this._mySetup.myButtonDisabledTextColor;\r\n        this.myPinButtonTextComponent.text = this._mySetup.myPinButtonText;\r\n\r\n        this.myPinButtonCursorTargetComponent = this.myPinButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n        this.myPinButtonCollisionComponent = this.myPinButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPinButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPinButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPinButtonCollisionComponent.extents = this._mySetup.myPinButtonCollisionExtents;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this.myVisibilityButtonPanel.pp_setActive(this._myVisibilityButtonVisible);\r\n\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myFixForwardObject.pp_setParent(this._myParentObject);\r\n\r\n        this.myFixForwardObject.pp_resetTransformLocal();\r\n        this.myFixForwardObject.pp_rotateObject(vec3_create(0, 180, 0));\r\n\r\n        this._updateObjectsTransforms(true);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        if (!this._myIsPinned) {\r\n            this.myFixForwardObject.pp_setParent(this.myNonVRParentObject);\r\n            this.myFixForwardObject.pp_resetTransformLocal();\r\n\r\n            this.myPivotObject.pp_setPositionLocal(this._mySetup.myPivotObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myPosition);\r\n            this.myPivotObject.pp_resetRotationLocal();\r\n            this.myPivotObject.pp_rotateObjectQuat(this._mySetup.myPivotObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myRotation);\r\n\r\n            this.myWidgetObject.pp_setPositionLocal(this._mySetup.myWidgetObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myPosition);\r\n            this.myWidgetObject.pp_resetRotationLocal();\r\n            this.myWidgetObject.pp_rotateObjectQuat(this._mySetup.myWidgetObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myRotation);\r\n\r\n            this.myVisibilityButtonPanel.pp_setPositionLocal(this._mySetup.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition);\r\n            this.myPinButtonPanel.pp_setPositionLocal(this._mySetup.myPinButtonPosition[ToolHandedness.NONE].myPosition);\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { WidgetFrameSetup } from \"./widget_frame_setup\";\r\nimport { WidgetFrameUI } from \"./widget_frame_ui\";\r\n\r\nexport class WidgetFrame {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex, engine = getMainEngine()) {\r\n        this.myIsWidgetVisible = true;\r\n        this.myIsPinned = false;\r\n\r\n        this._mySetup = new WidgetFrameSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new WidgetFrameUI(engine);\r\n        this._myShowVisibilityButton = false;\r\n\r\n        this._myWidgetVisibleChangedCallbacks = new Map();      // Signature: callback(isWidgetVisible)\r\n        this._myPinChangedCallbacks = new Map();                // Signature: callback(isPinned)\r\n    }\r\n\r\n    getWidgetObject() {\r\n        return this._myUI.myWidgetObject;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myIsWidgetVisible = !visible;\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    isVisible() {\r\n        return this.myIsWidgetVisible;\r\n    }\r\n\r\n    toggleVisibility() {\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    togglePin() {\r\n        this._togglePin(false);\r\n    }\r\n\r\n    registerWidgetVisibleChangedEventListener(id, callback) {\r\n        this._myWidgetVisibleChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterWidgetVisibleChangedEventListener(id) {\r\n        this._myWidgetVisibleChangedCallbacks.delete(id);\r\n    }\r\n\r\n    registerPinChangedEventListener(id, callback) {\r\n        this._myPinChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPinChangedEventListener(id) {\r\n        this._myPinChangedCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setVisibilityButtonVisible(additionalSetup.myShowVisibilityButton);\r\n        this._myShowVisibilityButton = additionalSetup.myShowVisibilityButton;\r\n        if (!additionalSetup.myShowOnStart) {\r\n            this._toggleVisibility(false, false);\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myUI.update(dt);\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myPinButtonCursorTargetComponent.addClickFunction(this._togglePin.bind(this, true));\r\n        ui.myPinButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n        ui.myPinButtonCursorTargetComponent.addUnHoverFunction(this._pinUnHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n\r\n        ui.myVisibilityButtonCursorTargetComponent.addClickFunction(this._toggleVisibility.bind(this, true, true));\r\n        ui.myVisibilityButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n        ui.myVisibilityButtonCursorTargetComponent.addUnHoverFunction(this._visibilityUnHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _toggleVisibility(isButton, notify) {\r\n        this.myIsWidgetVisible = !this.myIsWidgetVisible;\r\n\r\n        this._myUI.setWidgetVisible(this.myIsWidgetVisible);\r\n\r\n        let textMaterial = this._myUI.myVisibilityButtonTextComponent.material;\r\n        let backgroundMaterial = this._myUI.myVisibilityButtonBackgroundComponent.material;\r\n        if (this.myIsWidgetVisible) {\r\n            textMaterial.color = this._mySetup.myDefaultTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n            }\r\n        } else {\r\n            textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n            }\r\n        }\r\n\r\n        if (notify) {\r\n            for (let callback of this._myWidgetVisibleChangedCallbacks.values()) {\r\n                callback(this.myIsWidgetVisible);\r\n            }\r\n        }\r\n\r\n        this._myUI.setVisibilityButtonVisible(this._myShowVisibilityButton);\r\n    }\r\n\r\n    _togglePin(isButton) {\r\n        if (this.myIsWidgetVisible) {\r\n            this.myIsPinned = !this.myIsPinned;\r\n\r\n            this._myUI.setPinned(this.myIsPinned);\r\n\r\n            let textMaterial = this._myUI.myPinButtonTextComponent.material;\r\n            let backgroundMaterial = this._myUI.myPinButtonBackgroundComponent.material;\r\n            if (this.myIsPinned) {\r\n                textMaterial.color = this._mySetup.myDefaultTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            } else {\r\n                textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n                }\r\n            }\r\n\r\n            for (let callback of this._myPinChangedCallbacks.values()) {\r\n                callback(this.myIsPinned);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _visibilityUnHover(material) {\r\n        if (this.myIsWidgetVisible) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _pinUnHover(material) {\r\n        if (this.myIsPinned) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n}", "let _myOriginalConsoleLog = console.log;\r\nlet _myOriginalConsoleError = console.error;\r\nlet _myOriginalConsoleWarn = console.warn;\r\nlet _myOriginalConsoleInfo = console.info;\r\nlet _myOriginalConsoleDebug = console.debug;\r\nlet _myOriginalConsoleAssert = console.assert;\r\nlet _myOriginalConsoleClear = console.clear;\r\n\r\nexport function getOriginalConsoleLog() {\r\n    return _myOriginalConsoleLog;\r\n}\r\n\r\nexport function getOriginalConsoleError() {\r\n    return _myOriginalConsoleError;\r\n}\r\n\r\nexport function getOriginalConsoleWarn() {\r\n    return _myOriginalConsoleWarn;\r\n}\r\n\r\nexport function getOriginalConsoleInfo() {\r\n    return _myOriginalConsoleInfo;\r\n}\r\n\r\nexport function getOriginalConsoleDebug() {\r\n    return _myOriginalConsoleDebug;\r\n}\r\n\r\nexport function getOriginalConsoleAssert() {\r\n    return _myOriginalConsoleAssert;\r\n}\r\n\r\nexport function getOriginalConsoleClear() {\r\n    return _myOriginalConsoleClear;\r\n}", "import { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\n\r\nlet _myConsoleVRs = new WeakMap();\r\n\r\nexport function getConsoleVR(engine = getMainEngine()) {\r\n    return _myConsoleVRs.get(engine);\r\n}\r\n\r\nexport function setConsoleVR(consoleVR, engine = getMainEngine()) {\r\n    _myConsoleVRs.set(engine, consoleVR);\r\n}\r\n\r\nexport function removeConsoleVR(engine = getMainEngine()) {\r\n    _myConsoleVRs.delete(engine);\r\n}\r\n\r\nexport function hasConsoleVR(engine = getMainEngine()) {\r\n    return _myConsoleVRs.has(engine);\r\n}", "import { getLeftGamepad, getRightGamepad } from \"../../input/cauldron/input_globals\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../input/gamepad/gamepad_buttons\";\r\nimport { getMainEngine } from \"../../cauldron/wl/engine_globals\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { WidgetFrame } from \"../widget_frame/widget_frame\";\r\nimport { getOriginalConsoleClear } from \"./console_original_functions\";\r\nimport { getConsoleVR } from \"./console_vr_global\";\r\nimport { ConsoleVRWidgetConsoleFunction, ConsoleVRWidgetMessageType, ConsoleVRWidgetPulseOnNewMessage, ConsoleVRWidgetSender } from \"./console_vr_types\";\r\nimport { ConsoleVRWidgetSetup } from \"./console_vr_widget_setup\";\r\nimport { ConsoleVRWidgetUI } from \"./console_vr_widget_ui\";\r\n\r\nexport class ConsoleVRWidgetAdditionalSetup {\r\n\r\n    constructor() {\r\n        this.myHandedness = ToolHandedness.NONE;\r\n        this.myOverrideBrowserConsole = false;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myPulseOnNewMessage = ConsoleVRWidgetPulseOnNewMessage.NEVER;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n    }\r\n}\r\n\r\nexport class ConsoleVRWidgetMessage {\r\n\r\n    constructor(messageType, messageLines) {\r\n        this.myType = messageType;\r\n        this.myLines = messageLines;\r\n\r\n        this._myOriginalText = messageLines.join(\"\\n\");\r\n\r\n        this._myMessagesCount = 1;\r\n    }\r\n\r\n    hasSameInfo(message) {\r\n        return this._myOriginalText == message._myOriginalText && this.myType == message.myType;\r\n    }\r\n\r\n    increaseCount() {\r\n        this._myMessagesCount += 1;\r\n\r\n        let countString = ((\"(x\").concat(this._myMessagesCount)).concat(\") \");\r\n\r\n        let text = this._myOriginalText.slice(0);\r\n        text = countString.concat(text);\r\n        this.myLines = text.split(\"\\n\");\r\n    }\r\n}\r\n\r\n// Doesn't support\r\n//  - Placeholder like %d and other similar kind of way to build strings\r\nexport class ConsoleVRWidget {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myWidgetFrame = new WidgetFrame(\"C\", 0, engine);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new ConsoleVRWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new ConsoleVRWidgetUI(engine);\r\n\r\n        this._myMessages = [];\r\n\r\n        this._myOldBrowserConsole = [];\r\n        this._myOldConsoleVR = [];\r\n\r\n        this._myTypeFilters = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n        }\r\n\r\n        this._myScrollUp = false;\r\n        this._myScrollDown = false;\r\n        this._myScrollOffset = 0;\r\n        this._myScrollTimer = 0;\r\n        this._myScrollThumbstickTimer = 0;\r\n\r\n        this._myPulseTimer = 0;\r\n\r\n        this._myGamepadScrollActive = true;\r\n        if (this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = false;\r\n        }\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myLeftGamepad = getLeftGamepad(this._myEngine);\r\n        this._myRightGamepad = getRightGamepad(this._myEngine);\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myUI.build(this._myWidgetFrame.getWidgetObject(), this._mySetup, additionalSetup);\r\n        this._myUI.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n        this._setNotifyIconActive(false);\r\n\r\n        this._addListeners();\r\n\r\n        this._overrideConsolesFunctions();\r\n    }\r\n\r\n    // This must be done only when all the setup is complete, to avoid issues with other part of the code calling the console and then triggering the console vr while not ready yet\r\n    _overrideConsolesFunctions() {\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.LOG] = console.log;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.ERROR] = console.error;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.WARN] = console.warn;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.INFO] = console.info;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.DEBUG] = console.debug;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.ASSERT] = console.assert;\r\n        this._myOldBrowserConsoleClear = console.clear;\r\n\r\n        if (this._myAdditionalSetup.myOverrideBrowserConsole) {\r\n            console.log = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.LOG, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.error = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.warn = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.WARN, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.info = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.INFO, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.debug = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.DEBUG, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.assert = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ASSERT, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.clear = this._clearConsole.bind(this, true, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n\r\n            window.addEventListener(\"error\", function (errorEvent) {\r\n                if (errorEvent.error != null) {\r\n                    this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught\", errorEvent.error.stack);\r\n                } else {\r\n                    this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught\", errorEvent.message);\r\n                }\r\n            }.bind(this));\r\n\r\n            window.addEventListener(\"unhandledrejection\", function (errorEvent) {\r\n                this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught (in promise)\", errorEvent.reason);\r\n            }.bind(this));\r\n        }\r\n\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.LOG] = getConsoleVR(this._myEngine).log;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.ERROR] = getConsoleVR(this._myEngine).error;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.WARN] = getConsoleVR(this._myEngine).warn;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.INFO] = getConsoleVR(this._myEngine).info;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.DEBUG] = getConsoleVR(this._myEngine).debug;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.ASSERT] = getConsoleVR(this._myEngine).assert;\r\n        this._myOldConsoleVRClear = getConsoleVR(this._myEngine).clear;\r\n\r\n        getConsoleVR(this._myEngine).log = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.LOG, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).error = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).warn = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.WARN, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).info = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.INFO, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).debug = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.DEBUG, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).assert = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ASSERT, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        getConsoleVR(this._myEngine).clear = this._clearConsole.bind(this, true, ConsoleVRWidgetSender.CONSOLE_VR);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._updateScroll(dt);\r\n        }\r\n\r\n        this._updateGamepadsExtraActions(dt);\r\n    }\r\n\r\n    // Text section\r\n\r\n    _updateText(messageType) {\r\n        let consoleText = \"\";\r\n\r\n        if (!this._myTypeFilters[messageType]) {\r\n            let linesCount = 0;\r\n            let i = this._myMessages.length - 1;\r\n\r\n            let scrollLinesToSkip = Math.round(this._myScrollOffset);\r\n\r\n            while (i >= 0 && linesCount < this._mySetup.myMaxLines) {\r\n                let message = this._myMessages[i];\r\n\r\n                // Skip filtered messages\r\n                if (this._myTypeFilters[message.myType]) {\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                let messageLines = message.myLines.length;\r\n\r\n                // Compute line to skip due to scroll offset\r\n                let linesToSkip = 0;\r\n                if (scrollLinesToSkip > 0) {\r\n                    let additionalEmptyLines = 0;\r\n                    if (i != this._myMessages.length - 1) {\r\n                        additionalEmptyLines = this._mySetup.myLinesBetweenMessages;\r\n                    }\r\n\r\n                    if (scrollLinesToSkip >= messageLines + additionalEmptyLines) { // + empty lines between messages\r\n                        scrollLinesToSkip -= messageLines + additionalEmptyLines;\r\n                        linesToSkip = messageLines + additionalEmptyLines;\r\n                    } else {\r\n                        linesToSkip = scrollLinesToSkip;\r\n                        scrollLinesToSkip = 0;\r\n                    }\r\n                }\r\n\r\n                // Add empty lines between messages\r\n                if (i != this._myMessages.length - 1) {\r\n                    let emptyLinesToSkip = this._mySetup.myLinesBetweenMessages - Math.max(this._mySetup.myLinesBetweenMessages - linesToSkip, 0);\r\n                    let emptyLinesToShow = this._mySetup.myLinesBetweenMessages - emptyLinesToSkip;\r\n                    if (linesCount + emptyLinesToShow > this._mySetup.myMaxLines) {\r\n                        emptyLinesToShow = this._myMaxLines - linesCount;\r\n                    }\r\n\r\n                    for (let j = 0; j < emptyLinesToShow; j++) {\r\n                        consoleText = (\"\\n\").concat(consoleText);\r\n                    }\r\n\r\n                    linesCount += emptyLinesToShow;\r\n                    linesToSkip -= emptyLinesToSkip;\r\n                }\r\n\r\n                // Computing the number of message lines to show\r\n                let linesToShow = messageLines - linesToSkip;\r\n                if (linesCount + linesToShow > this._mySetup.myMaxLines) {\r\n                    linesToShow = this._mySetup.myMaxLines - linesCount;\r\n                }\r\n\r\n                if (linesToShow > 0) {\r\n                    if (message.myType == messageType) {\r\n                        // If the message is the same type of this message text component, add the message lines\r\n\r\n                        let linesToPrint = message.myLines.slice(messageLines - linesToShow - linesToSkip, messageLines - linesToSkip);\r\n                        let text = linesToPrint.join(\"\\n\");\r\n                        consoleText = (text.concat(\"\\n\")).concat(consoleText);\r\n\r\n                        linesCount += linesToShow;\r\n                    } else {\r\n                        // Otherwise add empty lines, so that the text component with the correct type will have space to show this message\r\n\r\n                        for (let j = 0; j < linesToShow; j++) {\r\n                            consoleText = (\"\\n\").concat(consoleText);\r\n                        }\r\n\r\n                        linesCount += linesToShow;\r\n                    }\r\n                }\r\n\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        consoleText = this._mySetup.myMessagesTextStartString.concat(consoleText);\r\n\r\n        this._myUI.myMessagesTextComponents[messageType].text = consoleText;\r\n    }\r\n\r\n    _consolePrint(consoleFunction, sender, ...args) {\r\n        if (consoleFunction != ConsoleVRWidgetConsoleFunction.ASSERT || (args.length > 0 && !args[0])) {\r\n            let message = this._argsToMessage(consoleFunction, ...args);\r\n            this._addMessage(message);\r\n\r\n            if (this._myMessages.length >= this._mySetup.myMaxMessages + this._mySetup.myMaxMessagesDeletePad) {\r\n                this._myMessages = this._myMessages.slice(this._myMessages.length - this._mySetup.myMaxMessages);\r\n                this._clampScrollOffset();\r\n            }\r\n\r\n            this._updateAllTexts();\r\n\r\n            this._pulseGamepad();\r\n        }\r\n\r\n        switch (sender) {\r\n            case ConsoleVRWidgetSender.BROWSER_CONSOLE:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n            case ConsoleVRWidgetSender.CONSOLE_VR:\r\n                this._myOldConsoleVR[consoleFunction].apply(getConsoleVR(this._myEngine), args);\r\n                break;\r\n            default:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _argsToMessage(consoleFunction, ...args) {\r\n        if (consoleFunction == ConsoleVRWidgetConsoleFunction.ASSERT) {\r\n            args = args.slice(1);\r\n            args.splice(0, 0, this._mySetup.myAssertStartString);\r\n        }\r\n\r\n        let messageType = this._consoleFunctionToMessageType(consoleFunction);\r\n\r\n        let formattedText = this._formatArgs(...args);\r\n\r\n        let lines = this._splitLongLines(formattedText);\r\n\r\n        if (messageType == ConsoleVRWidgetMessageType.INFO) {\r\n            messageType = ConsoleVRWidgetMessageType.LOG;\r\n        } else if (messageType == ConsoleVRWidgetMessageType.EXCEPTION || messageType == ConsoleVRWidgetMessageType.ASSERT) {\r\n            messageType = ConsoleVRWidgetMessageType.ERROR;\r\n        }\r\n\r\n\r\n        let message = new ConsoleVRWidgetMessage(messageType, lines);\r\n\r\n        return message;\r\n    }\r\n\r\n    _consoleFunctionToMessageType(consoleFunction) {\r\n        let messageType = ConsoleVRWidgetMessageType.LOG;\r\n\r\n        if (consoleFunction < ConsoleVRWidgetConsoleFunction.INFO) {\r\n            messageType = consoleFunction;\r\n        } else if (consoleFunction == ConsoleVRWidgetConsoleFunction.INFO) {\r\n            messageType = ConsoleVRWidgetMessageType.LOG;\r\n        } else {\r\n            messageType = ConsoleVRWidgetMessageType.ERROR;\r\n        }\r\n\r\n        return messageType;\r\n    }\r\n\r\n    // Here the formatting using placeholder like %d could be implemented in the future\r\n    _formatArgs(...args) {\r\n        let stringifiedArgs = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (args[i] === undefined) {\r\n                stringifiedArgs.push(\"undefined\");\r\n            } else {\r\n                stringifiedArgs.push(this._stringifyItem(args[i]));\r\n            }\r\n        }\r\n\r\n        let formattedString = stringifiedArgs.join(\" \");\r\n\r\n        return formattedString;\r\n    }\r\n\r\n    _stringifyItem(item) {\r\n        if (typeof item === \"object\") {\r\n            let stringifiedItem = null;\r\n            let linesBetweenItems = 2;\r\n\r\n            try {\r\n                stringifiedItem = JSON.stringify(item, this._jsonReplacer.bind(this), linesBetweenItems);\r\n            } catch (error) {\r\n                let cache = new WeakSet();\r\n\r\n                stringifiedItem = JSON.stringify(item, function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (cache.has(value)) {\r\n                            return \"<stringify error: object already stringified>\"; // Try to avoid circular reference, a repeated object will be caught in this check too sadly\r\n                        }\r\n                        cache.add(value);\r\n                    }\r\n\r\n                    return this._jsonReplacer(key, value);\r\n                }.bind(this), linesBetweenItems);\r\n            }\r\n\r\n            stringifiedItem = stringifiedItem.replaceAll(\"\\\"[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"'[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]\\\"\", \"]\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]'\", \"]\");\r\n\r\n            return stringifiedItem;\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    _splitLongLines(messageText) {\r\n        let linesToSplit = messageText.split(\"\\n\");\r\n        let lines = [];\r\n        for (let i = 0; i < linesToSplit.length; i++) {\r\n            let lineToSplit = linesToSplit[i];\r\n\r\n            if (lineToSplit.length > this._mySetup.myMaxCharactersPerLine) {\r\n                let spacesAtStart = this._getSpacesAtStart(lineToSplit);\r\n                let spaceToAdd = this._mySetup.myTabString.concat(spacesAtStart);\r\n                let lineSplits = 0;\r\n\r\n                while (lineToSplit.length > this._mySetup.myMaxCharactersPerLine && lineSplits < this._mySetup.myMaxLineSplits) {\r\n                    let firstSub = lineToSplit.substr(0, this._mySetup.myMaxCharactersPerLine - 1);\r\n                    let secondSub = lineToSplit.substr(this._mySetup.myMaxCharactersPerLine - 1);\r\n                    secondSub = spaceToAdd.concat(secondSub);\r\n\r\n                    lines.push(firstSub);\r\n\r\n                    lineToSplit = secondSub;\r\n                    lineSplits++;\r\n                }\r\n                lines.push(lineToSplit);\r\n            } else {\r\n                lines.push(lineToSplit);\r\n            }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    _getSpacesAtStart(text) {\r\n        let spaces = \"\";\r\n        let i = 0;\r\n\r\n        while (i < text.length && text[i] == \" \") {\r\n            spaces = spaces.concat(\" \");\r\n            i++;\r\n        }\r\n\r\n        return spaces;\r\n    }\r\n\r\n    _addMessage(message) {\r\n        let hasSameInfoAsPrev = false;\r\n        if (this._myMessages.length > 0) {\r\n            let lastMessage = this._myMessages[this._myMessages.length - 1];\r\n            if (lastMessage.hasSameInfo(message)) {\r\n                lastMessage.increaseCount();\r\n                hasSameInfoAsPrev = true;\r\n            }\r\n        }\r\n\r\n        if (!hasSameInfoAsPrev) {\r\n            this._myMessages.push(message);\r\n        }\r\n\r\n        this._adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev);\r\n        this._updateNotifyIcon(message);\r\n    }\r\n\r\n    // If you have scrolled, new messages does not move the scroll position\r\n    _adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev) {\r\n        if (!hasSameInfoAsPrev && !(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._myScrollOffset += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n        }\r\n    }\r\n\r\n    _updateAllTexts() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                this._updateText(ConsoleVRWidgetMessageType[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateNotifyIcon(message) {\r\n        if (!(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._setNotifyIconActive(true);\r\n        }\r\n    }\r\n\r\n    _updateScroll(dt) {\r\n        if (this._myScrollUp) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset += this._mySetup.myScrollAmount;\r\n            }\r\n        } else if (this._myScrollDown) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset -= this._mySetup.myScrollAmount;\r\n            }\r\n        }\r\n\r\n        this._clampScrollOffset();\r\n\r\n        if (this._myScrollUp || this._myScrollDown) {\r\n            this._updateAllTexts();\r\n        }\r\n\r\n        if (this._myScrollOffset == 0) {\r\n            this._setNotifyIconActive(false);\r\n        }\r\n    }\r\n\r\n    _clampScrollOffset() {\r\n        let maxScroll = this._getMaxScrollOffset();\r\n        this._myScrollOffset = Math.pp_clamp(this._myScrollOffset, 0, maxScroll);\r\n    }\r\n\r\n    _getMaxScrollOffset() {\r\n        return Math.max(this._getLinesCount() - this._mySetup.myMaxLines, 0);\r\n    }\r\n\r\n    _getLinesCount() {\r\n        let linesCount = 0;\r\n        for (let message of this._myMessages) {\r\n            if (!this._myTypeFilters[message.myType]) {\r\n                linesCount += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n            }\r\n        }\r\n        linesCount -= this._mySetup.myLinesBetweenMessages; // Empty line is added only between messages\r\n        linesCount = Math.max(linesCount, 0);\r\n\r\n        return linesCount;\r\n    }\r\n\r\n    // Listener section\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let cursorTarget = ui.myFilterButtonsCursorTargetComponents[ConsoleVRWidgetMessageType[key]];\r\n            let backgroundMaterial = ui.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n            let textMaterial = ui.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n\r\n            cursorTarget.addTripleClickFunction(this._resetFilters.bind(this, ConsoleVRWidgetMessageType[key]));\r\n            cursorTarget.addDoubleClickFunction(this._filterAllButOne.bind(this, ConsoleVRWidgetMessageType[key], textMaterial));\r\n            cursorTarget.addClickFunction(this._toggleFilter.bind(this, ConsoleVRWidgetMessageType[key], textMaterial));\r\n            cursorTarget.addHoverFunction(this._filterHover.bind(this, ConsoleVRWidgetMessageType[key], backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._filterUnHover.bind(this, ConsoleVRWidgetMessageType[key], backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myClearButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myClearButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._clearConsole.bind(this, false, null));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myUpButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myUpButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollUp.bind(this, true));\r\n            cursorTarget.addDownFunction(this._setScrollUp.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myDownButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myDownButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addDownFunction(this._setScrollDown.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myNotifyIconCursorTargetComponent;\r\n            let backgroundMaterial = ui.myNotifyIconBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._notifyIconUnHover.bind(this));\r\n        }\r\n\r\n        ui.myPointerCursorTargetComponent.addHoverFunction(this._setGamepadScrollActive.bind(this, true));\r\n        ui.myPointerCursorTargetComponent.addUnHoverFunction(this._setGamepadScrollActive.bind(this, false));\r\n    }\r\n\r\n    _resetFilters(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n\r\n                this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n                filterTextMaterial.color = this._mySetup.myMessageTypeColors[ConsoleVRWidgetMessageType[key]];\r\n                if (ConsoleVRWidgetMessageType[key] != messageType) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _filterAllButOne(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                if (ConsoleVRWidgetMessageType[key] != messageType) {\r\n                    this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = true;\r\n                    backgroundMaterial.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n                    filterTextMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n                } else {\r\n                    this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n                    filterTextMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _toggleFilter(messageType, textMaterial) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n\r\n            this._myTypeFilters[messageType] = !this._myTypeFilters[messageType];\r\n            if (this._myTypeFilters[messageType]) {\r\n                textMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n            } else {\r\n                textMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _clearConsole(codeDrivenClear = false, sender = null) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || codeDrivenClear) {\r\n            this._myMessages = [];\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n\r\n            if (codeDrivenClear) {\r\n                switch (sender) {\r\n                    case ConsoleVRWidgetSender.BROWSER_CONSOLE:\r\n                        this._myOldBrowserConsoleClear.apply(console);\r\n                        break;\r\n                    case ConsoleVRWidgetSender.CONSOLE_VR:\r\n                        this._myOldConsoleVRClear.apply(getConsoleVR(this._myEngine));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else if (this._mySetup.myClearBrowserConsoleWhenClearPressed) {\r\n                getOriginalConsoleClear()();\r\n            }\r\n        }\r\n    }\r\n\r\n    _setScrollUp(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollUp = value;\r\n        }\r\n    }\r\n\r\n    _setScrollDown(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollDown = value;\r\n        }\r\n    }\r\n\r\n    _instantScrollUp() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = this._getMaxScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _instantScrollDown() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = 0;\r\n            this._setNotifyIconActive(false);\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _setNotifyIconActive(active) {\r\n        this._myUI.myNotifyIconPanel.pp_setActive(active && this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _notifyIconUnHover() {\r\n        let material = this._myUI.myNotifyIconBackgroundComponent.material;\r\n        material.color = this._mySetup.myNotifyIconColor;\r\n    }\r\n\r\n    _filterHover(messageType, material) {\r\n        this._genericHover(material);\r\n    }\r\n\r\n    _filterUnHover(messageType, material) {\r\n        if (this._myTypeFilters[messageType]) {\r\n            material.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    // Gamepad section\r\n\r\n    _updateGamepadsExtraActions(dt) {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            if ((this._myLeftGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressStart() && this._myRightGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).myIsPressed) ||\r\n                (this._myRightGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressStart() && this._myLeftGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n\r\n            this._myPulseTimer = Math.max(this._myPulseTimer - dt, 0);\r\n\r\n            this._updateScrollWithThumbstick(dt);\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        this._myUI.setVisible(visible);\r\n        if (visible) {\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _updateScrollWithThumbstick(dt) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myGamepadScrollActive) {\r\n            let axes = [0, 0];\r\n            if (this._mySetup.myScrollThumbstickHandedness == ToolHandedness.LEFT) {\r\n                axes = this._myLeftGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes;\r\n            } else if (this._mySetup.myScrollThumbstickHandedness == ToolHandedness.RIGHT) {\r\n                axes = this._myRightGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes;\r\n            }\r\n\r\n            if (Math.abs(axes[1]) > this._mySetup.myScrollThumbstickMinThreshold) {\r\n                this._myScrollThumbstickTimer += dt;\r\n\r\n                while (this._myScrollThumbstickTimer > this._mySetup.myScrollThumbstickDelay) {\r\n                    this._myScrollThumbstickTimer -= this._mySetup.myScrollThumbstickDelay;\r\n\r\n                    let normalizedScrollAmount = (Math.abs(axes[1]) - this._mySetup.myScrollThumbstickMinThreshold) / (1 - this._mySetup.myScrollThumbstickMinThreshold);\r\n                    this._myScrollOffset += Math.sign(axes[1]) * normalizedScrollAmount * this._mySetup.myScrollThumbstickAmount;\r\n                }\r\n\r\n                this._clampScrollOffset();\r\n                this._updateAllTexts();\r\n            } else {\r\n                this._myScrollThumbstickTimer = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _pulseGamepad() {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            let pulseType = this._myAdditionalSetup.myPulseOnNewMessage;\r\n            let pulseEnabled = pulseType == ConsoleVRWidgetPulseOnNewMessage.ALWAYS || (!this._myWidgetFrame.myIsWidgetVisible && pulseType == ConsoleVRWidgetPulseOnNewMessage.WHEN_HIDDEN);\r\n            if (pulseEnabled && this._myPulseTimer == 0) {\r\n                if (this._myAdditionalSetup.myHandedness == ToolHandedness.RIGHT) {\r\n                    this._myRightGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                } else {\r\n                    this._myLeftGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                }\r\n                this._myPulseTimer = this._mySetup.myPulseDelay;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isSimpleArray(array) {\r\n        if (this._isSpecialSimpleArray(array)) {\r\n            return true;\r\n        } else if (Array.isArray(array)) {\r\n            let isBuiltIn = true;\r\n            for (let element of array) {\r\n                if (element instanceof Object) {\r\n                    isBuiltIn = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return isBuiltIn;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _isSpecialSimpleArray(item) {\r\n        let arrayPrototypesToExtend = [\r\n            Array.prototype, Uint8ClampedArray.prototype, Uint8Array.prototype, Uint16Array.prototype, Uint32Array.prototype, Int8Array.prototype,\r\n            Int16Array.prototype, Int32Array.prototype, Float32Array.prototype, Float64Array.prototype];\r\n        return item && item.constructor &&\r\n            (\r\n                item.constructor.name == \"Uint8ClampedArray\" ||\r\n                item.constructor.name == \"Uint8Array\" ||\r\n                item.constructor.name == \"Uint16Array\" ||\r\n                item.constructor.name == \"Uint32Array\" ||\r\n                item.constructor.name == \"Int8Array\" ||\r\n                item.constructor.name == \"Int16Array\" ||\r\n                item.constructor.name == \"Int32Array\" ||\r\n                item.constructor.name == \"Float32Array\" ||\r\n                item.constructor.name == \"Float64Array\"\r\n            );\r\n    }\r\n\r\n    _setGamepadScrollActive(active) {\r\n        this._myGamepadScrollActive = active;\r\n\r\n        if (!this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = true;\r\n        }\r\n    }\r\n\r\n    _jsonReplacer(key, value) {\r\n        if (value instanceof Map) {\r\n            return Array.from(value.entries());\r\n        } else if (this._isSimpleArray(value)) {\r\n            let array = value;\r\n            if (this._isSpecialSimpleArray(array)) {\r\n                let arrayCopy = []; // Special arrays like Float32Array do not print like Array\r\n                for (let i = 0; i < array.length; i++) {\r\n                    arrayCopy[i] = array[i];\r\n                }\r\n\r\n                array = arrayCopy;\r\n            }\r\n\r\n            let stringifiedArray = JSON.stringify(array);\r\n            stringifiedArray = stringifiedArray.split(\",\").join(\", \");\r\n            return stringifiedArray;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}", "import { getOriginalConsoleAssert, getOriginalConsoleClear, getOriginalConsoleDebug, getOriginalConsoleError, getOriginalConsoleInfo, getOriginalConsoleLog, getOriginalConsoleWarn } from \"./console_original_functions\";\r\n\r\n\r\nexport class ConsoleVR {\r\n\r\n    constructor() {\r\n        this._myForwardToBrowserConsole = true;\r\n    }\r\n\r\n    log(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleLog().apply(console, args);\r\n        }\r\n    }\r\n\r\n    error(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleError().apply(console, args);\r\n        }\r\n    }\r\n\r\n    warn(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleWarn().apply(console, args);\r\n        }\r\n    }\r\n\r\n    info(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleInfo().apply(console, args);\r\n        }\r\n    }\r\n\r\n    debug(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleDebug().apply(console, args);\r\n        }\r\n    }\r\n\r\n    assert(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleAssert().apply(console, args);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        if (this._myForwardToBrowserConsole) {\r\n            getOriginalConsoleClear().apply(console);\r\n        }\r\n    }\r\n\r\n    setForwardToBrowserConsole(forwardToBrowserConsole) {\r\n        this._myForwardToBrowserConsole = forwardToBrowserConsole;\r\n    }\r\n\r\n    isForwardToBrowserConsole() {\r\n        return this._myForwardToBrowserConsole;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { isToolEnabled } from \"../../cauldron/tool_globals\";\r\nimport { ConsoleVRWidget, ConsoleVRWidgetAdditionalSetup } from \"../console_vr_widget\";\r\nimport { InitConsoleVRComponent } from \"./init_console_vr_component\";\r\n\r\nexport class ConsoleVRToolComponent extends Component {\r\n    static TypeName = \"pp-console-vr-tool\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"None\", \"Left\", \"Right\"], \"None\"),\r\n        _myOverrideBrowserConsole: Property.bool(true),\r\n        _myShowOnStart: Property.bool(false),\r\n        _myShowVisibilityButton: Property.bool(false),\r\n        _myPulseOnNewMessage: Property.enum([\"Never\", \"Always\", \"When Hidden\"], \"Never\")\r\n    };\r\n\r\n    init() {\r\n        // #TODO this should check for tool enabled but it might not have been initialized yet, not way to specify component order\r\n\r\n        this.object.pp_addComponent(InitConsoleVRComponent);\r\n\r\n        this._myWidget = new ConsoleVRWidget(this.engine);\r\n\r\n        this._myStarted = false;\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            let additionalSetup = new ConsoleVRWidgetAdditionalSetup(this.engine);\r\n            additionalSetup.myHandedness = [null, \"left\", \"right\"][this._myHandedness];\r\n            additionalSetup.myOverrideBrowserConsole = this._myOverrideBrowserConsole;\r\n            additionalSetup.myShowOnStart = this._myShowOnStart;\r\n            additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n            additionalSetup.myPulseOnNewMessage = this._myPulseOnNewMessage;\r\n            additionalSetup.myPlaneMaterial = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            additionalSetup.myTextMaterial = getDefaultResources(this.engine).myMaterials.myText.clone();\r\n\r\n            this._myWidget.start(this.object, additionalSetup);\r\n\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n            this._mySetVisibleNextUpdate = false;\r\n\r\n            this._myStarted = true;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                if (this._mySetVisibleNextUpdate) {\r\n                    this._mySetVisibleNextUpdate = false;\r\n                    this._myWidget.setVisible(false);\r\n                    this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n                }\r\n\r\n\r\n                this._myWidget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._mySetVisibleNextUpdate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n                this._myWidget.setVisible(false);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { ConsoleVR } from \"../console_vr\";\r\nimport { getConsoleVR, hasConsoleVR, removeConsoleVR, setConsoleVR } from \"../console_vr_global\";\r\n\r\nexport class InitConsoleVRComponent extends Component {\r\n    static TypeName = \"pp-init-console-vr\";\r\n    static Properties = {\r\n        _myInit: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myConsoleVR = null;\r\n\r\n        if (this._myInit) {\r\n            // Prevents double global from same engine\r\n            if (!hasConsoleVR(this.engine)) {\r\n                this._myConsoleVR = new ConsoleVR();\r\n\r\n                setConsoleVR(this._myConsoleVR, this.engine);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myConsoleVR != null && getConsoleVR(this.engine) == this._myConsoleVR) {\r\n            removeConsoleVR(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { getDefaultResources } from \"../../../pp/default_resources_global\";\r\nimport { isToolEnabled } from \"../../cauldron/tool_globals\";\r\nimport { getEasyTuneVariables } from \"../easy_tune_globals\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\nimport { EasyTuneWidget, EasyTuneWidgetAdditionalSetup } from \"../easy_tune_widgets/easy_tune_widget\";\r\nimport { InitEasyTuneVariablesComponent } from \"./init_easy_tune_variables_component\";\r\n\r\nexport class EasyTuneToolComponent extends Component {\r\n    static TypeName = \"pp-easy-tune-tool\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"None\", \"Left\", \"Right\"], \"None\"),\r\n        _myShowOnStart: Property.bool(false),\r\n        _myShowVisibilityButton: Property.bool(false),\r\n        _myGamepadScrollVariableEnabled: Property.bool(true),\r\n        _myVariablesImportExportButtonsEnabled: Property.bool(false),\r\n        _myVariablesImportURL: Property.string(\"\"),   // The URL can contain parameters inside brackets, like {param}\r\n        _myVariablesExportURL: Property.string(\"\"),   // Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\n        _myImportVariablesOnStart: Property.bool(false),\r\n        _myResetVariablesDefaultValueOnImport: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        // #TODO this should check for tool enabled but it might not have been initialized yet, not way to specify component order\r\n\r\n        this.object.pp_addComponent(InitEasyTuneVariablesComponent);\r\n\r\n        this._myWidget = new EasyTuneWidget(this.engine);\r\n\r\n        EasyTuneUtils.addSetEasyTuneWidgetActiveVariableCallback(this, function (variableName) {\r\n            this._myWidget.setActiveVariable(variableName);\r\n        }.bind(this), this.engine);\r\n\r\n        EasyTuneUtils.addRefreshEasyTuneWidgetCallback(this, function () {\r\n            this._myWidget.refresh();\r\n        }.bind(this), this.engine);\r\n\r\n        this._myStarted = false;\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            let additionalSetup = new EasyTuneWidgetAdditionalSetup();\r\n            additionalSetup.myHandedness = [null, \"left\", \"right\"][this._myHandedness];\r\n            additionalSetup.myShowOnStart = this._myShowOnStart;\r\n            additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n            additionalSetup.myAdditionalButtonsEnabled = true;\r\n            additionalSetup.myGamepadScrollVariableEnabled = this._myGamepadScrollVariableEnabled;\r\n            additionalSetup.myPlaneMaterial = getDefaultResources(this.engine).myMaterials.myFlatOpaque.clone();\r\n            additionalSetup.myTextMaterial = getDefaultResources(this.engine).myMaterials.myText.clone();\r\n\r\n            additionalSetup.myVariablesImportExportButtonsEnabled = this._myVariablesImportExportButtonsEnabled;\r\n            additionalSetup.myVariablesImportCallback = function (onSuccessCallback, onFailureCallback) {\r\n                EasyTuneUtils.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, onSuccessCallback, onFailureCallback, this.engine);\r\n            }.bind(this);\r\n            additionalSetup.myVariablesExportCallback = function (onSuccessCallback, onFailureCallback) {\r\n                EasyTuneUtils.exportEasyTuneVariables(this._myVariablesExportURL, onSuccessCallback, onFailureCallback, this.engine);\r\n            }.bind(this);\r\n\r\n            this._myWidget.start(this.object, additionalSetup, getEasyTuneVariables(this.engine));\r\n\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n            this._mySetVisibleNextUpdate = false;\r\n\r\n            this._myStarted = true;\r\n            this._myFirstUpdate = true;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                if (this._myFirstUpdate) {\r\n                    this._myFirstUpdate = false;\r\n                    if (this._myImportVariablesOnStart) {\r\n                        EasyTuneUtils.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, undefined, undefined, this.engine);\r\n                    }\r\n                }\r\n\r\n                if (this._mySetVisibleNextUpdate) {\r\n                    this._mySetVisibleNextUpdate = false;\r\n                    this._myWidget.setVisible(false);\r\n                    this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n                }\r\n\r\n                this._myWidget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._mySetVisibleNextUpdate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n                this._myWidget.setVisible(false);\r\n            }\r\n        }\r\n    }\r\n}", "import { Timer } from \"../../../../cauldron/cauldron/timer\";\r\n\r\nexport class EasyTuneBaseWidgetParams {\r\n\r\n    constructor() {\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n}\r\n\r\nexport class EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        this._mySetup = null;\r\n        this._myUI = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myVariable = null;\r\n\r\n        this._myIsVisible = true;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myAppendToVariableName = \"\";\r\n\r\n        this._myScrollVariableActive = false;\r\n        this._myScrollDirection = 0;\r\n        this._myScrollVariableTimer = 0;\r\n        this._myHasScrolled = false;\r\n\r\n        this._myResetImportLabelTimer = new Timer(0, false);\r\n        this._myResetExportLabelTimer = new Timer(0, false);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (visible) {\r\n            this._refreshUI();\r\n        }\r\n\r\n        this._myUI.setVisible(visible);\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        if ((typeof appendToVariableName) !== undefined) {\r\n            this._myAppendToVariableName = appendToVariableName;\r\n        } else {\r\n            this._myAppendToVariableName = \"\";\r\n        }\r\n\r\n        this._setEasyTuneVariableHook();\r\n\r\n        this._refreshUI();\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        return this._myScrollVariableActive;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        return this._myScrollDirection;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        this._myScrollVariableActive = active;\r\n        this._myScrollDirection = scrollDirection;\r\n        this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        this._myHasScrolled = false;\r\n    }\r\n\r\n    getWidget() {\r\n        return this;\r\n    }\r\n\r\n    syncWidget(otherEasyTuneWidget) {\r\n        if (otherEasyTuneWidget != null) {\r\n            if (otherEasyTuneWidget._myResetImportLabelTimer.isRunning()) {\r\n                this._myResetImportLabelTimer.start(otherEasyTuneWidget._myResetImportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetImportLabelTimer.reset();\r\n            }\r\n\r\n            if (otherEasyTuneWidget._myResetExportLabelTimer.isRunning()) {\r\n                this._myResetExportLabelTimer.start(otherEasyTuneWidget._myResetExportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetExportLabelTimer.reset();\r\n            }\r\n\r\n            this._myUI.myImportButtonTextComponent.text = otherEasyTuneWidget._myUI.myImportButtonTextComponent.text;\r\n            this._myUI.myExportButtonTextComponent.text = otherEasyTuneWidget._myUI.myExportButtonTextComponent.text;\r\n\r\n            this.setScrollVariableActive(otherEasyTuneWidget.isScrollVariableActive(), otherEasyTuneWidget.getScrollVariableDirection());\r\n        } else {\r\n            this._myResetImportLabelTimer.reset();\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n            this._myResetExportLabelTimer.reset();\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportSuccessButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onImportFailure() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportFailureButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportSuccess() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportSuccessButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportFailure() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportFailureButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._mySetup.build();\r\n\r\n        this._myResetImportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n        this._myResetExportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setImportExportButtonsActive(this._myAdditionalSetup.myVariablesImportExportButtonsEnabled);\r\n\r\n        this._startHook(parentObject, additionalSetup);\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._updateHook(dt);\r\n\r\n            this._updateScrollVariable(dt);\r\n\r\n            this._updateImportExportLabel(dt);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _setEasyTuneVariableHook() {\r\n    }\r\n\r\n    _refreshUIHook() {\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n    }\r\n\r\n    _addListenersHook() {\r\n    }\r\n\r\n    _updateHook(dt) {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _refreshUI() {\r\n        if (this._myVariable) {\r\n            if (this._myVariable.myName != null) {\r\n                this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\r\n            } else {\r\n                let name = \"Unknown\";\r\n                this._myUI.myVariableLabelTextComponent.text = name.concat(this._myAppendToVariableName);\r\n            }\r\n\r\n            this._refreshUIHook();\r\n        }\r\n    }\r\n\r\n    _updateScrollVariable(dt) {\r\n        if (this._myScrollVariableActive) {\r\n            if (this._myScrollVariableTimer <= 0) {\r\n                this._scrollVariableRequest(this._myScrollDirection);\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n                this._myHasScrolled = true;\r\n            } else {\r\n                this._myScrollVariableTimer -= dt;\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateImportExportLabel(dt) {\r\n        if (this._myResetImportLabelTimer.isRunning(dt)) {\r\n            this._myResetImportLabelTimer.update(dt);\r\n            if (this._myResetImportLabelTimer.isDone()) {\r\n                this._myResetImportLabelTimer.reset();\r\n                this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n            }\r\n        }\r\n\r\n        if (this._myResetExportLabelTimer.isRunning(dt)) {\r\n            this._myResetExportLabelTimer.update(dt);\r\n            if (this._myResetExportLabelTimer.isDone()) {\r\n                this._myResetExportLabelTimer.reset();\r\n                this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myNextButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n\r\n        ui.myPreviousButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n\r\n        ui.myImportButtonCursorTargetComponent.addUpFunction(this._importVariables.bind(this));\r\n        ui.myImportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n        ui.myImportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n\r\n        ui.myExportButtonCursorTargetComponent.addUpFunction(this._exportVariables.bind(this));\r\n        ui.myExportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n        ui.myExportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n\r\n        this._addListenersHook();\r\n    }\r\n\r\n    _setScrollVariableActive(active, scrollDirection, skipForceScroll) {\r\n        if (this._isActive() || !active) {\r\n            let forceScroll = !active && !this._myHasScrolled && !skipForceScroll;\r\n            let oldScrollDirection = this._myScrollDirection;\r\n\r\n            this.setScrollVariableActive(active, scrollDirection);\r\n\r\n            if (forceScroll) {\r\n                this._scrollVariableRequest(oldScrollDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        if (this._isActive() && amount != 0) {\r\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n                callback(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    _importVariables() {\r\n        if (this._myUI.myImportButtonTextComponent.text == this._mySetup.myImportButtonText) {\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportingButtonText;\r\n            this._myResetImportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesImportCallback();\r\n        }\r\n    }\r\n\r\n    _exportVariables() {\r\n        if (this._myUI.myExportButtonTextComponent.text == this._mySetup.myExportButtonText) {\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportingButtonText;\r\n            this._myResetExportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesExportCallback();\r\n        }\r\n    }\r\n}", "import { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\n\r\nexport class EasyTuneBaseArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad, engine = getMainEngine()) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myIsVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myCurrentArraySize = 0;\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n        this._myCurrentArraySize = this._myVariable.myValue.length;\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myIsVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n            callback(amount);\r\n        }\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, this._getEasyTuneArrayWidget(arraySize));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return null;\r\n    }\r\n}", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { vec3_create, vec4_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness } from \"../../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneBaseWidgetSetup {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    build() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getBackPanelMaxY() {\r\n        return this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + this._mySideButtonDistanceFromBorder * 1.25;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myDisplayPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this._mySideButtonPanelHalfWidth\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return -this._mySideButtonPanelHalfWidth;\r\n    }\r\n\r\n    // Small Z offset to avoid glitching with other widgets\r\n    _getPivotZOffset() {\r\n        return 0;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _initializeBuildSetup() {\r\n        // General\r\n\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myLabelTextScale = vec3_create(0.19, 0.19, 0.19);\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this._myPanelZOffset = 0.01;\r\n        this._myColliderZOffset = 0.017;\r\n        this._mySideButtonDistanceFromBorder = 0.0125;\r\n        this._mySideButtonPanelHalfWidth = 0.2;\r\n\r\n        // Pivot\r\n\r\n        this.myPivotObjectPositions = [];\r\n        this.myPivotObjectPositions[ToolHandedness.NONE] = vec3_create(0, 0, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[ToolHandedness.LEFT] = vec3_create(-0.04, 0.02, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[ToolHandedness.RIGHT] = vec3_create(-0.08, 0.02, this._getPivotZOffset());\r\n\r\n        this.mySideButtonBackgroundScale = vec3_create(0.015, 0.015, 1);\r\n        this.mySideButtonTextScale = this.myButtonTextScale;\r\n        this.mySideButtonTextPosition = vec3_create(0, 0, 0.007);\r\n\r\n        this.mySideButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.mySideButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.pp_clone();\r\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myLeftSideButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myLeftSideButtonPosition[0] = -this._mySideButtonPanelHalfWidth + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n\r\n        this.myRightSideButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myRightSideButtonPosition[0] = -this.myLeftSideButtonPosition[0];\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanelPosition = vec3_create(0, 0.1, 0);\r\n\r\n        this.myVariableLabelPanelPosition = vec3_create(0, 0.025, this._myPanelZOffset);\r\n        this.myVariableLabelTextScale = this.myLabelTextScale;\r\n\r\n        this.myVariableLabelCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myVariableLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myVariableLabelCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNextButtonText = \">\";\r\n        this.myPreviousButtonText = \"<\";\r\n\r\n        this._initializeBuildSetupHook();\r\n\r\n        // Background\r\n\r\n        {\r\n            let maxX = this._getBackPanelMaxX();\r\n            let minX = this._getBackPanelMinX();\r\n            let maxY = this._getBackPanelMaxY();\r\n            let minY = this._getBackPanelMinY();\r\n\r\n            this.myBackPanelPosition = [(maxX + minX) / 2, (maxY + minY) / 2, 0];\r\n            this.myBackBackgroundScale = [(maxX - minX) / 2, (maxY - minY) / 2, 1];\r\n\r\n            this.myBackBackgroundColor = vec4_create(70 / 255, 70 / 255, 70 / 255, 1);\r\n        }\r\n\r\n        // Import Export\r\n\r\n        this.myImportExportButtonBackgroundScale = vec3_create(0.04, 0.02, 1);\r\n        this.myImportExportButtonTextScale = this.myButtonTextScale;\r\n        this.myImportExportButtonTextPosition = vec3_create(0, 0, 0.007);\r\n\r\n        this.myImportExportPanelPosition = [0, this._getBackPanelMaxY() + this._mySideButtonDistanceFromBorder + this.myImportExportButtonBackgroundScale[1], this._myPanelZOffset];\r\n\r\n        this.myImportExportButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myImportExportButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myImportExportButtonCollisionExtents = this.myImportExportButtonBackgroundScale.pp_clone();\r\n        this.myImportExportButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myImportButtonText = \"Import\";\r\n        this.myExportButtonText = \"Export\";\r\n\r\n        this.myImportExportResetLabelSeconds = 2;\r\n\r\n        this.myImportingButtonText = \"...\";\r\n        this.myImportSuccessButtonText = \"Done\";\r\n        this.myImportFailureButtonText = \"Error\";\r\n\r\n        this.myExportingButtonText = \"...\";\r\n        this.myExportSuccessButtonText = \"Done\";\r\n        this.myExportFailureButtonText = \"Error\";\r\n\r\n        this.myImportButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myImportButtonPosition[0] = -this.myImportExportButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder / 2;\r\n\r\n        this.myExportButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myExportButtonPosition[0] = -this.myImportButtonPosition[0];\r\n\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.pp_clone();\r\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.pp_clone();\r\n        this.myPointerCursorTargetPosition[2] = this._myColliderZOffset - 0.0001; // A little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n\r\n        this._initializeRuntimeSetupHook();\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetSetup } from \"../base/easy_tune_base_widget_setup\";\r\n\r\nexport class EasyTuneBoolArrayWidgetSetup extends EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        return super._getBackPanelMinY() + this.myValuesPanelPosition[1] + valuePanelLastPosition;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00802713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myThumbstickToggleThreshold = 0.6;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneBoolArrayWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = this.myDisplayPanel.pp_addObject();\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = this.myValuesPanel.pp_addObject();\r\n            this.myValueTexts[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueCursorTargets[i] = this.myValuePanels[i].pp_addObject();\r\n\r\n            this.myValueIncreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonBackgrounds[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonTexts[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonCursorTargets[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myValueDecreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonBackgrounds[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonTexts[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonCursorTargets[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.pp_setPositionLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].pp_setPositionLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].pp_scaleObject(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].pp_setPositionLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../../cauldron/utils/xr_utils\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { getDefaultResources } from \"../../../../pp/default_resources_global\";\r\nimport { ToolHandedness } from \"../../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myImportExportButtonsActive = true;\r\n\r\n        this._myPlaneMesh = getDefaultResources(this._myEngine).myMeshes.myPlane;\r\n\r\n        this._buildHook();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActive(visible);\r\n\r\n        if (visible) {\r\n            this.setImportExportButtonsActive(this._myImportExportButtonsActive);\r\n        }\r\n\r\n        this._setVisibleHook(visible);\r\n    }\r\n\r\n    setImportExportButtonsActive(active) {\r\n        this._myImportExportButtonsActive = active;\r\n\r\n        this.myImportExportPanel.pp_setActive(this._myImportExportButtonsActive);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _buildHook() {\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n    }\r\n\r\n    _setTransformHook() {\r\n    }\r\n\r\n    _addComponentsHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    // Skeleton\r\n\r\n    _createSkeleton() {\r\n        this.myPivotObject = this._myParentObject.pp_addObject();\r\n\r\n        this.myBackPanel = this.myPivotObject.pp_addObject();\r\n        this.myBackBackground = this.myBackPanel.pp_addObject();\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myVariableLabelPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myVariableLabelText = this.myVariableLabelPanel.pp_addObject();\r\n        this.myVariableLabelCursorTarget = this.myVariableLabelPanel.pp_addObject();\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel = this.myVariableLabelPanel.pp_addObject();\r\n        this.myNextButtonBackground = this.myNextButtonPanel.pp_addObject();\r\n        this.myNextButtonText = this.myNextButtonPanel.pp_addObject();\r\n        this.myNextButtonCursorTarget = this.myNextButtonPanel.pp_addObject();\r\n\r\n        this.myPreviousButtonPanel = this.myVariableLabelPanel.pp_addObject();\r\n        this.myPreviousButtonBackground = this.myPreviousButtonPanel.pp_addObject();\r\n        this.myPreviousButtonText = this.myPreviousButtonPanel.pp_addObject();\r\n        this.myPreviousButtonCursorTarget = this.myPreviousButtonPanel.pp_addObject();\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myImportButtonPanel = this.myImportExportPanel.pp_addObject();\r\n        this.myImportButtonBackground = this.myImportButtonPanel.pp_addObject();\r\n        this.myImportButtonText = this.myImportButtonPanel.pp_addObject();\r\n        this.myImportButtonCursorTarget = this.myImportButtonPanel.pp_addObject();\r\n\r\n        this.myExportButtonPanel = this.myImportExportPanel.pp_addObject();\r\n        this.myExportButtonBackground = this.myExportButtonPanel.pp_addObject();\r\n        this.myExportButtonText = this.myExportButtonPanel.pp_addObject();\r\n        this.myExportButtonCursorTarget = this.myExportButtonPanel.pp_addObject();\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget = this.myPivotObject.pp_addObject();\r\n\r\n        this._createSkeletonHook();\r\n    }\r\n\r\n    // Transforms\r\n\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_setPositionLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n\r\n        this.myBackPanel.pp_setPositionLocal(this._mySetup.myBackPanelPosition);\r\n        this.myBackBackground.pp_scaleObject(this._mySetup.myBackBackgroundScale);\r\n\r\n        // Display\r\n        this.myDisplayPanel.pp_setPositionLocal(this._mySetup.myDisplayPanelPosition);\r\n\r\n        this.myVariableLabelPanel.pp_setPositionLocal(this._mySetup.myVariableLabelPanelPosition);\r\n        this.myVariableLabelText.pp_scaleObject(this._mySetup.myVariableLabelTextScale);\r\n        this.myVariableLabelCursorTarget.pp_setPositionLocal(this._mySetup.myVariableLabelCursorTargetPosition);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel.pp_setPositionLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myNextButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myNextButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myNextButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myNextButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPreviousButtonPanel.pp_setPositionLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myPreviousButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPreviousButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPreviousButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myPreviousButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel.pp_setPositionLocal(this._mySetup.myImportExportPanelPosition);\r\n\r\n        this.myImportButtonPanel.pp_setPositionLocal(this._mySetup.myImportButtonPosition);\r\n        this.myImportButtonBackground.pp_scaleObject(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myImportButtonText.pp_setPositionLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myImportButtonText.pp_scaleObject(this._mySetup.myImportExportButtonTextScale);\r\n        this.myImportButtonCursorTarget.pp_setPositionLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        this.myExportButtonPanel.pp_setPositionLocal(this._mySetup.myExportButtonPosition);\r\n        this.myExportButtonBackground.pp_scaleObject(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myExportButtonText.pp_setPositionLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myExportButtonText.pp_scaleObject(this._mySetup.myImportExportButtonTextScale);\r\n        this.myExportButtonCursorTarget.pp_setPositionLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget.pp_setPositionLocal(this._mySetup.myPointerCursorTargetPosition);\r\n\r\n        this._setTransformHook();\r\n    }\r\n\r\n    // Components\r\n\r\n    _addComponents() {\r\n        this.myBackBackgroundComponent = this.myBackBackground.pp_addComponent(MeshComponent);\r\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\r\n\r\n        // Display\r\n\r\n        this.myVariableLabelTextComponent = this.myVariableLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myVariableLabelTextComponent);\r\n        this.myVariableLabelTextComponent.text = \" \";\r\n\r\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myNextButtonTextComponent = this.myNextButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myNextButtonTextComponent);\r\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\r\n\r\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\r\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\r\n\r\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Import/Export\r\n\r\n        this.myImportButtonBackgroundComponent = this.myImportButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myImportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myImportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myImportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myImportButtonTextComponent = this.myImportButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myImportButtonTextComponent);\r\n        this.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n        this.myImportButtonCursorTargetComponent = this.myImportButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myImportButtonCollisionComponent = this.myImportButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myImportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myImportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myImportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        this.myExportButtonBackgroundComponent = this.myExportButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myExportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myExportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myExportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myExportButtonTextComponent = this.myExportButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myExportButtonTextComponent);\r\n        this.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n\r\n        this.myExportButtonCursorTargetComponent = this.myExportButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myExportButtonCollisionComponent = this.myExportButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myExportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myExportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myExportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this._addComponentsHook();\r\n    }\r\n\r\n    _setupTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myPivotObject.pp_setPositionLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myPivotObject.pp_setPositionLocal(this._mySetup.myPivotObjectPositions[ToolHandedness.NONE]);\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneBoolArrayWidgetSetup } from \"./easy_tune_bool_array_widget_setup\";\r\nimport { EasyTuneBoolArrayWidgetUI } from \"./easy_tune_bool_array_widget_ui\";\r\n\r\nexport class EasyTuneBoolArrayWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad, engine = getMainEngine()) {\r\n        super(params);\r\n\r\n        this._mySetup = new EasyTuneBoolArrayWidgetSetup(arraySize);\r\n        this._myUI = new EasyTuneBoolArrayWidgetUI(engine);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myValueEditIndex = 0;\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myValueEditActive = false;\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = (this._myVariable.myValue[i]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myAdditionalButtonsEnabled);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            stickVariableIntensity = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(valueIntensity) > this._mySetup.myThumbstickToggleThreshold) {\r\n            this._myVariable.myValue[this._myValueEditIndex] = valueIntensity > 0;\r\n            this._refreshUI();\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueEditIndex = index;\r\n                text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleWorld(this._mySetup.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = (this._myVariable.myValue[index]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.pp_setScaleWorld(originalScale);\r\n    }\r\n}", "import { EasyTuneBaseArrayWidgetSelector } from \"../base/easy_tune_base_array_widget_selector\";\r\nimport { EasyTuneBoolArrayWidget } from \"./easy_tune_bool_array_widget\";\r\n\r\nexport class EasyTuneBoolArrayWidgetSelector extends EasyTuneBaseArrayWidgetSelector {\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return new EasyTuneBoolArrayWidget(this._myParams, arraySize, this._myGamepad, this._myEngine);\r\n    }\r\n}", "import { ToolHandedness } from \"../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myGamepadHandedness = ToolHandedness.RIGHT;\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n        this.myScrollVariableMinXThreshold = 0.6;\r\n        this.myScrollVariableMaxYThreshold = 0.25;\r\n        this.myScrollVariableButtonID = null;\r\n\r\n        this.myRefreshVariablesDelay = null;\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetSetup } from \"../base/easy_tune_base_widget_setup\";\r\n\r\nexport class EasyTuneNoneWidgetSetup extends EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myTypeNotSupportedPanelPosition[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00804713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myTypeNotSupportedPanelPosition = vec3_create(0, -0.03, this._myPanelZOffset);\r\n        this.myTypeNotSupportedTextScale = vec3_create(0.275, 0.275, 0.275);\r\n        this.myTypeNotSupportedText = \"Type Not Supported\";\r\n    }\r\n}", "import { TextComponent } from \"@wonderlandengine/api\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneNoneWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myTypeNotSupportedPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myTypeNotSupportedText = this.myTypeNotSupportedPanel.pp_addObject();\r\n        this.myTypeNotSupportedCursorTarget = this.myTypeNotSupportedPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myTypeNotSupportedPanel.pp_setPositionLocal(this._mySetup.myTypeNotSupportedPanelPosition);\r\n        this.myTypeNotSupportedText.pp_scaleObject(this._mySetup.myTypeNotSupportedTextScale);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myTypeNotSupportedTextComponent = this.myTypeNotSupportedText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myTypeNotSupportedTextComponent);\r\n        this.myTypeNotSupportedTextComponent.text = this._mySetup.myTypeNotSupportedText;\r\n    }\r\n}", "import { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneNoneWidgetSetup } from \"./easy_tune_none_widget_setup\";\r\nimport { EasyTuneNoneWidgetUI } from \"./easy_tune_none_widget_ui\";\r\n\r\nexport class EasyTuneNoneWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, engine = getMainEngine()) {\r\n        super(params);\r\n\r\n        this._mySetup = new EasyTuneNoneWidgetSetup();\r\n        this._myUI = new EasyTuneNoneWidgetUI(engine);\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetSetup } from \"../base/easy_tune_base_widget_setup\";\r\n\r\nexport class EasyTuneNumberArrayWidgetSetup extends EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myStepPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00803713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        this.myStepPanelPosition = [0, this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneNumberArrayWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n        }\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n        this.myStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = this.myDisplayPanel.pp_addObject();\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = this.myValuesPanel.pp_addObject();\r\n            this.myValueTexts[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueCursorTargets[i] = this.myValuePanels[i].pp_addObject();\r\n\r\n            this.myValueIncreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonBackgrounds[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonTexts[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonCursorTargets[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myValueDecreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonBackgrounds[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonTexts[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonCursorTargets[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        this.myStepPanel = this.myPivotObject.pp_addObject();\r\n        this.myStepText = this.myStepPanel.pp_addObject();\r\n        this.myStepCursorTarget = this.myStepPanel.pp_addObject();\r\n\r\n        this.myStepIncreaseButtonPanel = this.myStepPanel.pp_addObject();\r\n        this.myStepIncreaseButtonBackground = this.myStepIncreaseButtonPanel.pp_addObject();\r\n        this.myStepIncreaseButtonText = this.myStepIncreaseButtonPanel.pp_addObject();\r\n        this.myStepIncreaseButtonCursorTarget = this.myStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myStepDecreaseButtonPanel = this.myStepPanel.pp_addObject();\r\n        this.myStepDecreaseButtonBackground = this.myStepDecreaseButtonPanel.pp_addObject();\r\n        this.myStepDecreaseButtonText = this.myStepDecreaseButtonPanel.pp_addObject();\r\n        this.myStepDecreaseButtonCursorTarget = this.myStepDecreaseButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.pp_setPositionLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].pp_setPositionLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].pp_scaleObject(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].pp_setPositionLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        this.myStepPanel.pp_setPositionLocal(this._mySetup.myStepPanelPosition);\r\n        this.myStepText.pp_scaleObject(this._mySetup.myStepTextScale);\r\n        this.myStepCursorTarget.pp_setPositionLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setPositionLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myStepIncreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepIncreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepIncreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myStepDecreaseButtonPanel.pp_setPositionLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myStepDecreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepDecreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepDecreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        this.myStepTextComponent = this.myStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepTextComponent);\r\n        this.myStepTextComponent.text = \" \";\r\n\r\n        this.myStepCursorTargetComponent = this.myStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepCollisionComponent = this.myStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myStepIncreaseButtonBackgroundComponent = this.myStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepIncreaseButtonTextComponent = this.myStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepIncreaseButtonTextComponent);\r\n        this.myStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myStepIncreaseButtonCursorTargetComponent = this.myStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepIncreaseButtonCollisionComponent = this.myStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myStepDecreaseButtonBackgroundComponent = this.myStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepDecreaseButtonTextComponent = this.myStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepDecreaseButtonTextComponent);\r\n        this.myStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myStepDecreaseButtonCursorTargetComponent = this.myStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepDecreaseButtonCollisionComponent = this.myStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneNumberArrayWidgetSetup } from \"./easy_tune_number_array_widget_setup\";\r\nimport { EasyTuneNumberArrayWidgetUI } from \"./easy_tune_number_array_widget_ui\";\r\n\r\nexport class EasyTuneNumberArrayWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad, engine = getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new EasyTuneNumberArrayWidgetSetup(arraySize);\r\n        this._myUI = new EasyTuneNumberArrayWidgetUI(engine);\r\n\r\n        this._myValueEditIndex = -1;\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myAdditionalButtonsEnabled);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myVariable.myStepPerSecond * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.pp_clamp(this._myValueRealValue, this._myVariable.myMin, this._myVariable.myMax);\r\n            } else if (this._myVariable.myMin != null) {\r\n                this._myValueRealValue = Math.max(this._myValueRealValue, this._myVariable.myMin);\r\n            } else if (this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.min(this._myValueRealValue, this._myVariable.myMax);\r\n            }\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            if (this._myVariable.myEditAllValuesTogether) {\r\n                let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                let difference = newValue - this._myVariable.myValue[this._myValueEditIndex];\r\n\r\n                for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n                    this._myVariable.myValue[i] = Math.round((this._myVariable.myValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                    if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.pp_clamp(this._myVariable.myValue[i], this._myVariable.myMin, this._myVariable.myMax);\r\n                    } else if (this._myVariable.myMin != null) {\r\n                        this._myVariable.myValue[i] = Math.max(this._myVariable.myValue[i], this._myVariable.myMin);\r\n                    } else if (this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.min(this._myVariable.myValue[i], this._myVariable.myMax);\r\n                    }\r\n\r\n                    this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                }\r\n\r\n            } else {\r\n                this._myVariable.myValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.pp_clamp(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin, this._myVariable.myMax);\r\n                } else if (this._myVariable.myMin != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.max(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin);\r\n                } else if (this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.min(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMax);\r\n                }\r\n\r\n                this._myUI.myValueTextComponents[this._myValueEditIndex].text = this._myVariable.myValue[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n            }\r\n        } else {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n\r\n        ui.myStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this));\r\n        ui.myStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, true));\r\n        ui.myStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, false));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n                text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleWorld(this._mySetup.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleWorld(this._mySetup.myStepTextScale);\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = this._myVariable.myValue[index].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _resetStep() {\r\n        if (this._isActive()) {\r\n            this._changeStep(this._myVariable.myDefaultStepPerSecond);\r\n        }\r\n    }\r\n\r\n    _changeStep(step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n        this._myVariable.myStepPerSecond = step;\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.pp_setScaleWorld(originalScale);\r\n    }\r\n}", "import { EasyTuneBaseArrayWidgetSelector } from \"../base/easy_tune_base_array_widget_selector\";\r\nimport { EasyTuneNumberArrayWidget } from \"./easy_tune_number_array_widget\";\r\n\r\nexport class EasyTuneNumberArrayWidgetSelector extends EasyTuneBaseArrayWidgetSelector {\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return new EasyTuneNumberArrayWidget(this._myParams, arraySize, this._myGamepad, this._myEngine);\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetSetup } from \"../base/easy_tune_base_widget_setup\";\r\n\r\nexport class EasyTuneTransformWidgetSetup extends EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myPositionPanelPosition[1] + this.myStepPanelPosition[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this.myDisplayPanelPosition[0] + this.myRotationPanelPosition[0] + this.myIncreaseButtonPosition[0] + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return this.myDisplayPanelPosition[0] + this.myScalePanelPosition[0] + this.myDecreaseButtonPosition[0] - this.mySideButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00805713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this.myDecreaseButtonPosition = vec3_create(-0.13, 0, -0.00001);\r\n        this.myIncreaseButtonPosition = vec3_create(-this.myDecreaseButtonPosition[0], 0, -0.00001);\r\n\r\n        let distanceBetweenComponents = Math.abs(this.myIncreaseButtonPosition[0]) + Math.abs(this.myRightSideButtonPosition[0]);\r\n        let distanceFromVariableLabel = 0.045;\r\n        this.myPositionPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myRotationPanelPosition = [this.myPositionPanelPosition[0] + distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myScalePanelPosition = [this.myPositionPanelPosition[0] - distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n\r\n        this.myPositionText = \"Position\";\r\n        this.myRotationText = \"Rotation\";\r\n        this.myScaleText = \"Scale\";\r\n\r\n        this.myComponentLabelTextScale = this.myLabelTextScale;\r\n        this.myComponentLabelCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myComponentLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myComponentLabelCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myComponentLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, -this._myValuePanelDistanceFromVariableLabelPanel, 0);\r\n        for (let i = 1; i < 3; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = this.myValuePanelsPositions[2][1];\r\n        this.myStepPanelPosition = [0, valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, 0];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneTransformWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n            this.myPositionDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myPositionStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n        this.myPositionStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n            this.myRotationDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myRotationStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n        this.myRotationStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n            this.myScaleDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myScaleStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n        this.myScaleStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myPositionLabelText = this.myPositionPanel.pp_addObject();\r\n        this.myPositionLabelCursorTarget = this.myPositionPanel.pp_addObject();\r\n\r\n        this.myPositionPanels = [];\r\n        this.myPositionTexts = [];\r\n        this.myPositionCursorTargets = [];\r\n\r\n        this.myPositionIncreaseButtonPanels = [];\r\n        this.myPositionIncreaseButtonBackgrounds = [];\r\n        this.myPositionIncreaseButtonTexts = [];\r\n        this.myPositionIncreaseButtonCursorTargets = [];\r\n\r\n        this.myPositionDecreaseButtonPanels = [];\r\n        this.myPositionDecreaseButtonBackgrounds = [];\r\n        this.myPositionDecreaseButtonTexts = [];\r\n        this.myPositionDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i] = this.myPositionPanel.pp_addObject();\r\n            this.myPositionTexts[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionCursorTargets[i] = this.myPositionPanels[i].pp_addObject();\r\n\r\n            this.myPositionIncreaseButtonPanels[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonBackgrounds[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonTexts[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonCursorTargets[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myPositionDecreaseButtonPanels[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonBackgrounds[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonTexts[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonCursorTargets[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myRotationLabelText = this.myRotationPanel.pp_addObject();\r\n        this.myRotationLabelCursorTarget = this.myRotationPanel.pp_addObject();\r\n\r\n        this.myRotationPanels = [];\r\n        this.myRotationTexts = [];\r\n        this.myRotationCursorTargets = [];\r\n\r\n        this.myRotationIncreaseButtonPanels = [];\r\n        this.myRotationIncreaseButtonBackgrounds = [];\r\n        this.myRotationIncreaseButtonTexts = [];\r\n        this.myRotationIncreaseButtonCursorTargets = [];\r\n\r\n        this.myRotationDecreaseButtonPanels = [];\r\n        this.myRotationDecreaseButtonBackgrounds = [];\r\n        this.myRotationDecreaseButtonTexts = [];\r\n        this.myRotationDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i] = this.myRotationPanel.pp_addObject();\r\n            this.myRotationTexts[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationCursorTargets[i] = this.myRotationPanels[i].pp_addObject();\r\n\r\n            this.myRotationIncreaseButtonPanels[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonBackgrounds[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonTexts[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonCursorTargets[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myRotationDecreaseButtonPanels[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonBackgrounds[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonTexts[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonCursorTargets[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel = this.myDisplayPanel.pp_addObject();\r\n        this.myScaleLabelText = this.myScalePanel.pp_addObject();\r\n        this.myScaleLabelCursorTarget = this.myScalePanel.pp_addObject();\r\n\r\n        this.myScalePanels = [];\r\n        this.myScaleTexts = [];\r\n        this.myScaleCursorTargets = [];\r\n\r\n        this.myScaleIncreaseButtonPanels = [];\r\n        this.myScaleIncreaseButtonBackgrounds = [];\r\n        this.myScaleIncreaseButtonTexts = [];\r\n        this.myScaleIncreaseButtonCursorTargets = [];\r\n\r\n        this.myScaleDecreaseButtonPanels = [];\r\n        this.myScaleDecreaseButtonBackgrounds = [];\r\n        this.myScaleDecreaseButtonTexts = [];\r\n        this.myScaleDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i] = this.myScalePanel.pp_addObject();\r\n            this.myScaleTexts[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleCursorTargets[i] = this.myScalePanels[i].pp_addObject();\r\n\r\n            this.myScaleIncreaseButtonPanels[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonBackgrounds[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonTexts[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonCursorTargets[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myScaleDecreaseButtonPanels[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonBackgrounds[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonTexts[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonCursorTargets[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel = this.myPositionPanel.pp_addObject();\r\n        this.myPositionStepText = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepCursorTarget = this.myPositionStepPanel.pp_addObject();\r\n\r\n        this.myPositionStepIncreaseButtonPanel = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonBackground = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonText = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonCursorTarget = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myPositionStepDecreaseButtonPanel = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonBackground = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonText = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonCursorTarget = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel = this.myRotationPanel.pp_addObject();\r\n        this.myRotationStepText = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepCursorTarget = this.myRotationStepPanel.pp_addObject();\r\n\r\n        this.myRotationStepIncreaseButtonPanel = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonBackground = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonText = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonCursorTarget = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myRotationStepDecreaseButtonPanel = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonBackground = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonText = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonCursorTarget = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel = this.myScalePanel.pp_addObject();\r\n        this.myScaleStepText = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepCursorTarget = this.myScaleStepPanel.pp_addObject();\r\n\r\n        this.myScaleStepIncreaseButtonPanel = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonBackground = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonText = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonCursorTarget = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myScaleStepDecreaseButtonPanel = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonBackground = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonText = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonCursorTarget = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel.pp_setPositionLocal(this._mySetup.myPositionPanelPosition);\r\n        this.myPositionLabelText.pp_scaleObject(this._mySetup.myComponentLabelTextScale);\r\n        this.myPositionLabelCursorTarget.pp_setPositionLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i].pp_setPositionLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myPositionTexts[i].pp_scaleObject(this._mySetup.myValueTextScale);\r\n            this.myPositionCursorTargets[i].pp_setPositionLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myPositionIncreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myPositionIncreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionIncreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionIncreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myPositionDecreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myPositionDecreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionDecreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionDecreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel.pp_setPositionLocal(this._mySetup.myRotationPanelPosition);\r\n        this.myRotationLabelText.pp_scaleObject(this._mySetup.myComponentLabelTextScale);\r\n        this.myRotationLabelCursorTarget.pp_setPositionLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i].pp_setPositionLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myRotationTexts[i].pp_scaleObject(this._mySetup.myValueTextScale);\r\n            this.myRotationCursorTargets[i].pp_setPositionLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myRotationIncreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myRotationIncreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationIncreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationIncreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myRotationDecreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myRotationDecreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationDecreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationDecreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel.pp_setPositionLocal(this._mySetup.myScalePanelPosition);\r\n        this.myScaleLabelText.pp_scaleObject(this._mySetup.myComponentLabelTextScale);\r\n        this.myScaleLabelCursorTarget.pp_setPositionLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i].pp_setPositionLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myScaleTexts[i].pp_scaleObject(this._mySetup.myValueTextScale);\r\n            this.myScaleCursorTargets[i].pp_setPositionLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myScaleIncreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myScaleIncreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleIncreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleIncreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myScaleDecreaseButtonPanels[i].pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myScaleDecreaseButtonBackgrounds[i].pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleDecreaseButtonTexts[i].pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleDecreaseButtonTexts[i].pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel.pp_setPositionLocal(this._mySetup.myStepPanelPosition);\r\n        this.myPositionStepText.pp_scaleObject(this._mySetup.myStepTextScale);\r\n        this.myPositionStepCursorTarget.pp_setPositionLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myPositionStepIncreaseButtonPanel.pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myPositionStepIncreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepIncreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepIncreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPositionStepDecreaseButtonPanel.pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myPositionStepDecreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepDecreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepDecreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel.pp_setPositionLocal(this._mySetup.myStepPanelPosition);\r\n        this.myRotationStepText.pp_scaleObject(this._mySetup.myStepTextScale);\r\n        this.myRotationStepCursorTarget.pp_setPositionLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myRotationStepIncreaseButtonPanel.pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myRotationStepIncreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepIncreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepIncreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myRotationStepDecreaseButtonPanel.pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myRotationStepDecreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepDecreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepDecreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel.pp_setPositionLocal(this._mySetup.myStepPanelPosition);\r\n        this.myScaleStepText.pp_scaleObject(this._mySetup.myStepTextScale);\r\n        this.myScaleStepCursorTarget.pp_setPositionLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myScaleStepIncreaseButtonPanel.pp_setPositionLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myScaleStepIncreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepIncreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepIncreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myScaleStepDecreaseButtonPanel.pp_setPositionLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myScaleStepDecreaseButtonBackground.pp_scaleObject(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepDecreaseButtonText.pp_setPositionLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepDecreaseButtonText.pp_scaleObject(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        // Position\r\n\r\n        this.myPositionLabelTextComponent = this.myPositionLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionLabelTextComponent);\r\n        this.myPositionLabelTextComponent.text = this._mySetup.myPositionText;\r\n\r\n        this.myPositionLabelCursorTargetComponent = this.myPositionLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionLabelCollisionComponent = this.myPositionLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myPositionTextComponents = [];\r\n        this.myPositionCursorTargetComponents = [];\r\n        this.myPositionCollisionComponents = [];\r\n\r\n        this.myPositionIncreaseButtonBackgroundComponents = [];\r\n        this.myPositionIncreaseButtonTextComponents = [];\r\n        this.myPositionIncreaseButtonCursorTargetComponents = [];\r\n        this.myPositionIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myPositionDecreaseButtonBackgroundComponents = [];\r\n        this.myPositionDecreaseButtonTextComponents = [];\r\n        this.myPositionDecreaseButtonCursorTargetComponents = [];\r\n        this.myPositionDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionTextComponents[i] = this.myPositionTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionTextComponents[i]);\r\n            this.myPositionTextComponents[i].text = \" \";\r\n\r\n            this.myPositionCursorTargetComponents[i] = this.myPositionCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionCollisionComponents[i] = this.myPositionCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myPositionIncreaseButtonBackgroundComponents[i] = this.myPositionIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionIncreaseButtonTextComponents[i] = this.myPositionIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionIncreaseButtonTextComponents[i]);\r\n            this.myPositionIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myPositionIncreaseButtonCursorTargetComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionIncreaseButtonCollisionComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myPositionDecreaseButtonBackgroundComponents[i] = this.myPositionDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionDecreaseButtonTextComponents[i] = this.myPositionDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionDecreaseButtonTextComponents[i]);\r\n            this.myPositionDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myPositionDecreaseButtonCursorTargetComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionDecreaseButtonCollisionComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationLabelTextComponent = this.myRotationLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationLabelTextComponent);\r\n        this.myRotationLabelTextComponent.text = this._mySetup.myRotationText;\r\n\r\n        this.myRotationLabelCursorTargetComponent = this.myRotationLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationLabelCollisionComponent = this.myRotationLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myRotationTextComponents = [];\r\n        this.myRotationCursorTargetComponents = [];\r\n        this.myRotationCollisionComponents = [];\r\n\r\n        this.myRotationIncreaseButtonBackgroundComponents = [];\r\n        this.myRotationIncreaseButtonTextComponents = [];\r\n        this.myRotationIncreaseButtonCursorTargetComponents = [];\r\n        this.myRotationIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myRotationDecreaseButtonBackgroundComponents = [];\r\n        this.myRotationDecreaseButtonTextComponents = [];\r\n        this.myRotationDecreaseButtonCursorTargetComponents = [];\r\n        this.myRotationDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationTextComponents[i] = this.myRotationTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationTextComponents[i]);\r\n            this.myRotationTextComponents[i].text = \" \";\r\n\r\n            this.myRotationCursorTargetComponents[i] = this.myRotationCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationCollisionComponents[i] = this.myRotationCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myRotationIncreaseButtonBackgroundComponents[i] = this.myRotationIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationIncreaseButtonTextComponents[i] = this.myRotationIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationIncreaseButtonTextComponents[i]);\r\n            this.myRotationIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myRotationIncreaseButtonCursorTargetComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationIncreaseButtonCollisionComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myRotationDecreaseButtonBackgroundComponents[i] = this.myRotationDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationDecreaseButtonTextComponents[i] = this.myRotationDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationDecreaseButtonTextComponents[i]);\r\n            this.myRotationDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myRotationDecreaseButtonCursorTargetComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationDecreaseButtonCollisionComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScaleLabelTextComponent = this.myScaleLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleLabelTextComponent);\r\n        this.myScaleLabelTextComponent.text = this._mySetup.myScaleText;\r\n\r\n        this.myScaleLabelCursorTargetComponent = this.myScaleLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleLabelCollisionComponent = this.myScaleLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myScaleTextComponents = [];\r\n        this.myScaleCursorTargetComponents = [];\r\n        this.myScaleCollisionComponents = [];\r\n\r\n        this.myScaleIncreaseButtonBackgroundComponents = [];\r\n        this.myScaleIncreaseButtonTextComponents = [];\r\n        this.myScaleIncreaseButtonCursorTargetComponents = [];\r\n        this.myScaleIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myScaleDecreaseButtonBackgroundComponents = [];\r\n        this.myScaleDecreaseButtonTextComponents = [];\r\n        this.myScaleDecreaseButtonCursorTargetComponents = [];\r\n        this.myScaleDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleTextComponents[i] = this.myScaleTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleTextComponents[i]);\r\n            this.myScaleTextComponents[i].text = \" \";\r\n\r\n            this.myScaleCursorTargetComponents[i] = this.myScaleCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleCollisionComponents[i] = this.myScaleCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myScaleIncreaseButtonBackgroundComponents[i] = this.myScaleIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleIncreaseButtonTextComponents[i] = this.myScaleIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleIncreaseButtonTextComponents[i]);\r\n            this.myScaleIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myScaleIncreaseButtonCursorTargetComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleIncreaseButtonCollisionComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myScaleDecreaseButtonBackgroundComponents[i] = this.myScaleDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleDecreaseButtonTextComponents[i] = this.myScaleDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleDecreaseButtonTextComponents[i]);\r\n            this.myScaleDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myScaleDecreaseButtonCursorTargetComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleDecreaseButtonCollisionComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position \r\n        this.myPositionStepTextComponent = this.myPositionStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepTextComponent = this.myRotationStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepTextComponent = this.myScaleStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _addStepComponents() {\r\n        // Position\r\n        this.myPositionStepTextComponent = this.myPositionStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n        this.myRotationStepTextComponent = this.myRotationStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n        this.myScaleStepTextComponent = this.myScaleStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { getMainEngine } from \"../../../../cauldron/wl/engine_globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneTransformWidgetSetup } from \"./easy_tune_transform_widget_setup\";\r\nimport { EasyTuneTransformWidgetUI } from \"./easy_tune_transform_widget_ui\";\r\n\r\nexport class EasyTuneTransformWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, gamepad, engine = getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new EasyTuneTransformWidgetSetup();\r\n        this._myUI = new EasyTuneTransformWidgetUI(engine);\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myComponentStepValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n\r\n        this._myValueEditIndex = -1;\r\n        this._myComponentIndex = 0;\r\n        this._myStepIndex = 0;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myPositionTextComponents[i].text = this._myVariable.myPosition[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myRotationTextComponents[i].text = this._myVariable.myRotation[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myAdditionalButtonsEnabled);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myComponentStepValue * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myPositionTextComponents[this._myValueEditIndex].text = this._myVariable.myPosition[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    if (this._myValueRealValue > 180) {\r\n                        while (this._myValueRealValue > 180) {\r\n                            this._myValueRealValue -= 180;\r\n                        }\r\n                        this._myValueRealValue = -180 + this._myValueRealValue;\r\n                    }\r\n\r\n                    if (this._myValueRealValue < -180) {\r\n                        while (this._myValueRealValue < - 180) {\r\n                            this._myValueRealValue += 180;\r\n                        }\r\n                        this._myValueRealValue = 180 - this._myValueRealValue;\r\n                    }\r\n\r\n                    this._myVariable.myRotation[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myRotationTextComponents[this._myValueEditIndex].text = this._myVariable.myRotation[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    if (this._myValueRealValue <= 0) {\r\n                        this._myValueRealValue = 1 / decimalPlacesMultiplier;\r\n                    }\r\n\r\n                    if (this._myVariable.myScaleAsOne) {\r\n                        let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        let difference = newValue - this._myVariable.myScale[this._myValueEditIndex];\r\n\r\n                        for (let i = 0; i < 3; i++) {\r\n                            this._myVariable.myScale[i] = Math.round((this._myVariable.myScale[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                            this._myVariable.myScale[i] = Math.max(this._myVariable.myScale[i], 1 / decimalPlacesMultiplier);\r\n                            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                        }\r\n                    } else {\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.max(this._myVariable.myScale[this._myValueEditIndex], 1 / decimalPlacesMultiplier);\r\n                        this._myUI.myScaleTextComponents[this._myValueEditIndex].text = this._myVariable.myScale[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                let stepValue = 0;\r\n                switch (this._myStepIndex) {\r\n                    case 0:\r\n                        stepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        stepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        stepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                    default:\r\n                        stepValue = 0;\r\n                }\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        ui.myPositionLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 0));\r\n        ui.myPositionLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myPositionLabelText));\r\n        ui.myPositionLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myPositionLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myPositionCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 0, i));\r\n            ui.myPositionCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], true));\r\n            ui.myPositionCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], false));\r\n        }\r\n\r\n        ui.myRotationLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 1));\r\n        ui.myRotationLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myRotationLabelText));\r\n        ui.myRotationLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myRotationLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myRotationCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 1, i));\r\n            ui.myRotationCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], true));\r\n            ui.myRotationCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], false));\r\n        }\r\n\r\n        ui.myScaleLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 2));\r\n        ui.myScaleLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myScaleLabelText));\r\n        ui.myScaleLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myScaleLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myScaleCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 2, i));\r\n            ui.myScaleCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], true));\r\n            ui.myScaleCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], false));\r\n        }\r\n\r\n        ui.myPositionStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 0));\r\n        ui.myPositionStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, true));\r\n        ui.myPositionStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, false));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myRotationStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 1));\r\n        ui.myRotationStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, true));\r\n        ui.myRotationStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, false));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myScaleStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 2));\r\n        ui.myScaleStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, true));\r\n        ui.myScaleStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, false));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n\r\n    }\r\n\r\n    _setValueEditIntensity(componentIndex, index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(componentIndex, index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n                text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleWorld(this._mySetup.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleWorld(this._mySetup.myStepTextScale);\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _resetValue(componentIndex, index) {\r\n        if (this._isActive()) {\r\n            switch (componentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[index] = this._myVariable.myDefaultPosition[index];\r\n                    this._myUI.myPositionTextComponents[index].text = this._myVariable.myPosition[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    this._myVariable.myRotation[index] = this._myVariable.myDefaultRotation[index];\r\n                    this._myUI.myRotationTextComponents[index].text = this._myVariable.myRotation[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    this._myVariable.myScale[index] = this._myVariable.myDefaultScale[index];\r\n                    this._myUI.myScaleTextComponents[index].text = this._myVariable.myScale[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetComponentValues(i);\r\n        }\r\n    }\r\n\r\n    _resetComponentValues(index) {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetValue(index, i);\r\n        }\r\n    }\r\n\r\n    _resetStep(index) {\r\n        if (this._isActive()) {\r\n            let defaultValue = 0;\r\n            switch (index) {\r\n                case 0:\r\n                    defaultValue = this._myVariable.myDefaultPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    defaultValue = this._myVariable.myDefaultRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    defaultValue = this._myVariable.myDefaultScaleStepPerSecond;\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n\r\n            this._changeStep(index, defaultValue);\r\n        }\r\n    }\r\n\r\n    _changeStep(index, step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n\r\n        switch (index) {\r\n            case 0:\r\n                this._myVariable.myPositionStepPerSecond = step;\r\n                this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n                break;\r\n            case 1:\r\n                this._myVariable.myRotationStepPerSecond = step;\r\n                this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n                break;\r\n            case 2:\r\n                this._myVariable.myScaleStepPerSecond = step;\r\n                this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.pp_setScaleWorld(originalScale);\r\n    }\r\n}", "import { getLeftGamepad, getRightGamepad } from \"../../../input/cauldron/input_globals\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { ToolHandedness } from \"../../cauldron/tool_types\";\r\nimport { WidgetFrame } from \"../../widget_frame/widget_frame\";\r\nimport { EasyTuneVariableType } from \"../easy_tune_variable_types\";\r\nimport { EasyTuneBaseWidgetParams } from \"./base/easy_tune_base_widget\";\r\nimport { EasyTuneBoolArrayWidgetSelector } from \"./bool/easy_tune_bool_array_widget_selector\";\r\nimport { EasyTuneWidgetSetup } from \"./easy_tune_widget_setup\";\r\nimport { EasyTuneNoneWidget } from \"./none/easy_tune_none_widget\";\r\nimport { EasyTuneNumberArrayWidgetSelector } from \"./number/easy_tune_number_widget_selector\";\r\nimport { EasyTuneTransformWidget } from \"./transform/easy_tune_transform_widget\";\r\n\r\nexport class EasyTuneWidgetAdditionalSetup {\r\n\r\n    constructor() {\r\n        this.myHandedness = ToolHandedness.NONE;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myAdditionalButtonsEnabled = false;\r\n        this.myGamepadScrollVariableEnabled = false;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n\r\n        this.myVariablesImportExportButtonsEnabled = false;\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n}\r\n\r\nexport class EasyTuneWidget {\r\n\r\n    constructor(engine = getMainEngine()) {\r\n        this._myIsStarted = false;\r\n        this._myStartVariable = null;\r\n\r\n        this._myWidgetFrame = new WidgetFrame(\"E\", 1, engine);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new EasyTuneWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = [];\r\n\r\n        this._myEasyTuneVariables = null;\r\n        this._myEasyTuneLastSize = 0;\r\n        this._myVariableNames = null;\r\n\r\n        this._myCurrentWidget = null;\r\n        this._myCurrentVariable = null;\r\n\r\n        this._myScrollVariableTimer = 0;\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myRefreshVariablesTimer = 0;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    setActiveVariable(variableName) {\r\n        if (!this._myIsStarted) {\r\n            this._myStartVariable = variableName;\r\n        } else if (this._myEasyTuneVariables.has(variableName)) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(variableName);\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            console.log(\"Can't set easy tune active variable\");\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myDirty = true;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup, easyTuneVariables) {\r\n        this._myRightGamepad = getRightGamepad(this._myEngine);\r\n        this._myLeftGamepad = getLeftGamepad(this._myEngine);\r\n        if (this._mySetup.myGamepadHandedness == ToolHandedness.RIGHT) {\r\n            this._myGamepad = this._myRightGamepad;\r\n        } else if (this._mySetup.myGamepadHandedness == ToolHandedness.LEFT) {\r\n            this._myGamepad = this._myLeftGamepad;\r\n        }\r\n\r\n        this._myIsStarted = true;\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myEasyTuneVariables = easyTuneVariables;\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n        }\r\n\r\n        if (this._myStartVariable) {\r\n            if (this._myEasyTuneVariables.has(this._myStartVariable)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myStartVariable);\r\n            } else {\r\n                console.log(\"Can't set easy tune active variable\");\r\n            }\r\n        }\r\n\r\n        this._initializeWidgets();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myEasyTuneVariables.length() != this._myEasyTuneLastSize || this._myDirty) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myEasyTuneVariables.length() > 0) {\r\n            if (this._mySetup.myRefreshVariablesDelay != null) {\r\n                this._myRefreshVariablesTimer += dt;\r\n                if (this._myRefreshVariablesTimer > this._mySetup.myRefreshVariablesDelay) {\r\n                    this._myRefreshVariablesTimer = 0;\r\n                    this._refreshEasyTuneVariables();\r\n                }\r\n            }\r\n\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.update(dt);\r\n            }\r\n\r\n            if (this._myAdditionalSetup.myGamepadScrollVariableEnabled) {\r\n                this._updateGamepadScrollVariable(dt);\r\n            }\r\n        }\r\n\r\n        this._updateGamepadWidgetVisibility();\r\n\r\n        this._updateActiveVariable();\r\n    }\r\n\r\n    _initializeWidgets() {\r\n        let widgetParams = new EasyTuneBaseWidgetParams();\r\n        widgetParams.myVariablesImportCallback = this._importVariables.bind(this);\r\n        widgetParams.myVariablesExportCallback = this._exportVariables.bind(this);\r\n\r\n        this._myWidgets[EasyTuneVariableType.NONE] = new EasyTuneNoneWidget(widgetParams, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.NUMBER] = new EasyTuneNumberArrayWidgetSelector(widgetParams, this._myGamepad, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.BOOL] = new EasyTuneBoolArrayWidgetSelector(widgetParams, this._myGamepad, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.TRANSFORM] = new EasyTuneTransformWidget(widgetParams, this._myGamepad, this._myEngine);\r\n\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.start(this._myWidgetFrame.getWidgetObject(), this._myAdditionalSetup);\r\n                widget.setVisible(false);\r\n                widget.registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\r\n            }\r\n        }\r\n\r\n        this._selectCurrentWidget();\r\n    }\r\n\r\n    _selectCurrentWidget() {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let prevWidget = null;\r\n        if (this._myCurrentWidget != null) {\r\n            prevWidget = this._myCurrentWidget.getWidget();\r\n        }\r\n\r\n        if (this._myCurrentVariable.myType in this._myWidgets) {\r\n            this._myCurrentWidget = this._myWidgets[this._myCurrentVariable.myType];\r\n        } else {\r\n            this._myCurrentWidget = this._myWidgets[EasyTuneVariableType.NONE];\r\n        }\r\n\r\n        this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\r\n        this._myCurrentWidget.getWidget().syncWidget(prevWidget);\r\n\r\n        if (prevWidget != null) {\r\n            prevWidget.setVisible(false);\r\n        }\r\n\r\n        this._myCurrentWidget.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _refreshEasyTuneVariables() {\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            if (this._myCurrentVariable && this._myEasyTuneVariables.has(this._myCurrentVariable.myName)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myCurrentVariable.myName);\r\n            } else {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n            }\r\n\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            this._myCurrentVariable = null;\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.setVisible(false);\r\n                this._myCurrentWidget = null;\r\n            }\r\n        }\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _updateGamepadWidgetVisibility() {\r\n        if (this._myGamepad) {\r\n            if ((this._myGamepad.getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (this._myGamepad.getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentWidget) {\r\n            if (this._myEasyTuneVariables.length() > 0) {\r\n                this._myCurrentWidget.setVisible(visible);\r\n            } else {\r\n                this._myCurrentWidget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (visible) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _updateGamepadScrollVariable(dt) {\r\n        if (this._myGamepad && (!this._mySetup.myScrollVariableButtonID || this._myGamepad.getButtonInfo(this._mySetup.myScrollVariableButtonID).myIsPressed)) {\r\n            let x = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[0];\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n            if (Math.abs(x) > this._mySetup.myScrollVariableMinXThreshold && Math.abs(y) < this._mySetup.myScrollVariableMaxYThreshold) {\r\n                this._myScrollVariableTimer += dt;\r\n                while (this._myScrollVariableTimer > this._mySetup.myScrollVariableDelay) {\r\n                    this._myScrollVariableTimer -= this._mySetup.myScrollVariableDelay;\r\n                    this._scrollVariable(Math.sign(x));\r\n                }\r\n            } else {\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n            }\r\n        } else {\r\n            this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        }\r\n    }\r\n\r\n    _scrollVariable(amount) {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let variableIndex = this._getVariableIndex(this._myCurrentVariable);\r\n        if (variableIndex >= 0) {\r\n            // Manage negative numbers\r\n            let newIndex = (((variableIndex + amount) % this._myVariableNames.length) + this._myVariableNames.length) % this._myVariableNames.length;\r\n            if (this._myEasyTuneVariables.has(this._myVariableNames[newIndex])) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[newIndex]);\r\n                this._selectCurrentWidget();\r\n            } else {\r\n                this._refreshEasyTuneVariables();\r\n            }\r\n        } else {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _createIndexString() {\r\n        let indexString = \" (\";\r\n        let index = (this._getVariableIndex(this._myCurrentVariable) + 1).toString();\r\n        let length = (this._myEasyTuneVariables.length()).toString();\r\n        while (index.length < length.length) {\r\n            index = \"0\".concat(index);\r\n        }\r\n\r\n        indexString = indexString.concat(index).concat(\" - \").concat(length).concat(\")\");\r\n\r\n        return indexString;\r\n    }\r\n\r\n    _getVariableIndex(variable) {\r\n        let variableIndex = this._myVariableNames.indexOf(variable.myName);\r\n        return variableIndex;\r\n    }\r\n\r\n    _updateActiveVariable() {\r\n        this._myEasyTuneVariables.getEasyTuneVariablesList().forEach(function (value) {\r\n            value.myIsActive = false;\r\n        });\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myCurrentVariable) {\r\n            this._myCurrentVariable.myIsActive = true;\r\n        }\r\n    }\r\n\r\n    _importVariables() {\r\n        this._myAdditionalSetup.myVariablesImportCallback(this._onImportSuccess.bind(this), this._onImportFailure.bind(this));\r\n    }\r\n\r\n    _exportVariables() {\r\n        this._myAdditionalSetup.myVariablesExportCallback(this._onExportSuccess.bind(this), this._onExportFailure.bind(this));\r\n    }\r\n\r\n    _onImportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    _onImportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    _onExportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    _onExportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportFailure();\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\n\r\nexport class EasyTuneImportVariablesComponent extends Component {\r\n    static TypeName = \"pp-easy-tune-import-variables\";\r\n    static Properties = {\r\n        _myVariablesImportURL: Property.string(\"\"),\r\n        _myResetVariablesDefaultValueOnImport: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myFirstUpdate = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            EasyTuneUtils.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, undefined, undefined, this.engine);\r\n        }\r\n    }\r\n}", "import { LightComponent } from \"@wonderlandengine/api\";\r\nimport { EasyTuneNumber } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyLightAttenuation extends EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = \"Light Attenuation \";\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumber(variableName, this._getDefaultValue(), 0.01, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let attenuation = this._getLightAttenuation(object);\r\n        return attenuation;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let attenuation = value;\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            light.color[3] = attenuation;\r\n        }\r\n    }\r\n\r\n    _getLightAttenuation(object) {\r\n        let attenuation = this._getDefaultValue();\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            attenuation = light.color[3];\r\n        }\r\n\r\n        return attenuation;\r\n    }\r\n}", "import { LightComponent } from \"@wonderlandengine/api\";\r\nimport { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../../input/cauldron/input_globals\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneIntArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyLightColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Light RGB \";\r\n        } else {\r\n            nameFirstPart = \"Light HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let lightColor = this._getLightColor(object);\r\n        if (lightColor) {\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbCodeToHuman(lightColor);\r\n            } else {\r\n                color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHsv(lightColor));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = ColorUtils.hsvToRgb(ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            light.color[0] = color[0];\r\n            light.color[1] = color[1];\r\n            light.color[2] = color[2];\r\n            light.color[3] = light.color[3];\r\n        }\r\n\r\n        if ((getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n            (getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHsv(color));\r\n            let rgbColor = ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getLightColor(object) {\r\n        let color = null;\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            color = light.color.slice(0, 3);\r\n        }\r\n\r\n        return color;\r\n    }\r\n}", "import { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../../input/cauldron/input_globals\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneIntArray, EasyTuneNumberArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyMeshColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = [\"color\", \"diffuseColor\", \"ambientColor\", \"specularColor\", \"emissiveColor\", \"fogColor\", \"ambientFactor\",];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh RGB \";\r\n        } else {\r\n            nameFirstPart = \"Mesh HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        if (this._myColorType == 6) {\r\n            return new EasyTuneNumberArray(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n        }\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            if (this._myColorType != 6) {\r\n                color = meshMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n                if (this._myColorModel == 0) {\r\n                    color = ColorUtils.rgbCodeToHuman(color);\r\n                } else {\r\n                    color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHsv(color));\r\n                }\r\n            } else {\r\n                color = [meshMaterial[this._myColorVariableNames[this._myColorType]]];\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        if (this._myColorType == 6) {\r\n            return [0];\r\n        }\r\n\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorType != 6) {\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbHumanToCode(color);\r\n            } else {\r\n                color = ColorUtils.hsvToRgb(ColorUtils.hsvHumanToCode(color));\r\n            }\r\n        }\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if (this._myColorType != 6) {\r\n            if ((getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n                let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHsv(color));\r\n                let rgbColor = ColorUtils.color1To255(color);\r\n\r\n                console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponent(MeshComponent);\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneNumberArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyScale extends EasyObjectTuner {\r\n\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Scale \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumberArray(variableName, this._getDefaultValue(), 1, 3, 0.001, null, this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getScaleLocal() : object.pp_getScale();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create(1, 1, 1);\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setScaleLocal(value);\r\n        } else {\r\n            object.pp_setScale(value);\r\n        }\r\n    }\r\n}", "import { EasyTuneNumber } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyMeshAmbientFactor extends EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh AF \";\r\n        } else {\r\n            nameFirstPart = \"Mesh AF \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumber(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let ambientFactor = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            ambientFactor = meshMaterial.ambientFactor;\r\n        } else {\r\n            ambientFactor = this._getDefaultValue();\r\n        }\r\n\r\n        return ambientFactor;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let ambientFactor = value;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial.ambientFactor = ambientFactor;\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponent(MeshComponent);\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { getLeftGamepad, getRightGamepad } from \"../../../input/cauldron/input_globals\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneIntArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyTextColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget, engine) {\r\n        super(object, variableName, setAsDefault, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = [\"color\", \"effectColor\"];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Text RGB \";\r\n        } else {\r\n            nameFirstPart = \"Text HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            color = textMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbCodeToHuman(color);\r\n            } else {\r\n                color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHsv(color));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = ColorUtils.hsvToRgb(ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            textMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if ((getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n            (getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHsv(color));\r\n            let rgbColor = ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getTextMaterial(object) {\r\n        let material = null;\r\n        let text = object.pp_getComponent(TextComponent);\r\n        if (text) {\r\n            material = text.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyLightAttenuation } from \"../easy_light_attenuation\";\r\n\r\nexport class EasyLightAttenuationComponent extends Component {\r\n    static TypeName = \"pp-easy-light-attenuation\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyLightAttenuation(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyLightColor } from \"../easy_light_color\";\r\n\r\nexport class EasyLightColorComponent extends Component {\r\n    static TypeName = \"pp-easy-light-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\")\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyLightColor(this._myColorModel, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyMeshAmbientFactor } from \"../easy_mesh_ambient_factor\";\r\n\r\nexport class EasyMeshAmbientFactorComponent extends Component {\r\n    static TypeName = \"pp-easy-mesh-ambient-factor\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _mySetAsDefault: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyMeshAmbientFactor(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget\r\n        });\r\n\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyMeshColor } from \"../easy_mesh_color\";\r\n\r\nexport class EasyMeshColorComponent extends Component {\r\n    static TypeName = \"pp-easy-mesh-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\"),\r\n        _myColorType: Property.enum([\"Color\", \"Diffuse Color\", \"Ambient Color\", \"Specular Color\", \"Emissive Color\", \"Fog Color\", \"Ambient Factor\"], \"Color\"),\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyMeshColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myColorModel\": this._myColorModel,\r\n            \"_myColorType\": this._myColorType,\r\n        });\r\n\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyScale } from \"../easy_scale\";\r\n\r\nexport class EasyScaleComponent extends Component {\r\n    static TypeName = \"pp-easy-scale\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myIsLocal: Property.bool(false),\r\n        _myScaleAsOne: Property.bool(true) // Edit all scale values together\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyScale(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { getEasyTuneTarget, getEasyTuneVariables, removeEasyTuneTarget, setEasyTuneTarget } from \"../../easy_tune_globals\";\r\nimport { EasyTuneUtils } from \"../../easy_tune_utils\";\r\n\r\nexport class EasySetTuneTargetChildNumberComponent extends Component {\r\n    static TypeName = \"pp-easy-set-tune-target-child-number\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n    };\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyTuneVariableName = \"Target Child \";\r\n\r\n            if (this._myVariableName == \"\") {\r\n                this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this.object.pp_getID());\r\n            } else {\r\n                this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this._myVariableName);\r\n            }\r\n\r\n            let childrenCount = this.object.pp_getChildren().length;\r\n            let min = 1;\r\n            let max = childrenCount;\r\n            if (childrenCount == 0) {\r\n                min = 0;\r\n                max = 0;\r\n            }\r\n\r\n            getEasyTuneVariables(this.engine).add(new EasyTuneInt(this._myEasyTuneVariableName, 0, 10, min, max));\r\n            if (this._mySetAsDefault) {\r\n                EasyTuneUtils.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName, this.engine);\r\n            }\r\n\r\n            this._myCurrentChildIndex = -1;\r\n            this._myCurrentChildrenCount = childrenCount;\r\n\r\n            this._myEasyTuneTarget = null;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (getEasyTuneVariables(this.engine).isActive(this._myEasyTuneVariableName)) {\r\n                let childrenCount = this.object.pp_getChildren().length;\r\n                if (childrenCount != this._myCurrentChildrenCount) {\r\n                    this._myCurrentChildrenCount = childrenCount;\r\n\r\n                    let min = 1;\r\n                    let max = childrenCount;\r\n                    if (childrenCount == 0) {\r\n                        min = 0;\r\n                        max = 0;\r\n                    }\r\n\r\n                    let easyTuneVariable = getEasyTuneVariables(this.engine).getEasyTuneVariable(this._myEasyTuneVariableName);\r\n                    easyTuneVariable.setMin(min);\r\n                    easyTuneVariable.setMax(max);\r\n                }\r\n\r\n                let childIndex = getEasyTuneVariables(this.engine).get(this._myEasyTuneVariableName);\r\n                if (childIndex != this._myCurrentChildIndex) {\r\n                    if (childIndex == 0 && this._myCurrentChildIndex != -1) {\r\n                        if (getEasyTuneTarget(this.engine) == this._myEasyTuneTarget) {\r\n                            removeEasyTuneTarget(this.engine);\r\n                        }\r\n                        this._myEasyTuneTarget = null;\r\n                    } else if (childIndex > 0) {\r\n                        this._myEasyTuneTarget = this.object.pp_getChildren()[childIndex - 1];\r\n                        setEasyTuneTarget(this._myEasyTuneTarget, this.engine);\r\n                    }\r\n\r\n                    this._myCurrentChildIndex = childIndex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { GrabberHandComponent } from \"../../../../gameplay/grab_throw/grabber_hand_component\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { getEasyTuneTarget, removeEasyTuneTarget, setEasyTuneTarget } from \"../../easy_tune_globals\";\r\n\r\nexport class EasySetTuneTargeetGrabComponent extends Component {\r\n    static TypeName = \"pp-easy-set-tune-target-grab\";\r\n    static Properties = {};\r\n\r\n    start() {\r\n        this._myGrabber = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myGrabber = this.object.pp_getComponent(GrabberHandComponent);\r\n            this._myEasyTuneTarget = null;\r\n        }\r\n    }\r\n\r\n    _onRelease(grabber, grabbable) {\r\n        this._myEasyTuneTarget = grabbable.object;\r\n        setEasyTuneTarget(this._myEasyTuneTarget, this.engine);\r\n    }\r\n\r\n    _onGrab(grabber, grabbable) {\r\n        if (getEasyTuneTarget(this.engine) == this._myEasyTuneTarget) {\r\n            removeEasyTuneTarget(this.engine);\r\n        }\r\n        this._myEasyTuneTarget = null;\r\n    }\r\n\r\n    onActivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myGrabber != null) {\r\n                //this._myGrabber.registerGrabEventListener(this, this._onGrab.bind(this));\r\n                this._myGrabber.registerThrowEventListener(this, this._onRelease.bind(this));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myGrabber != null) {\r\n                //this._myGrabber.unregisterGrabEventListener(this);\r\n                this._myGrabber.unregisterThrowEventListener(this);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { isToolEnabled } from \"../../../cauldron/tool_globals\";\r\nimport { EasyTextColor } from \"../easy_text_color\";\r\n\r\nexport class EasyTextColorComponent extends Component {\r\n    static TypeName = \"pp-easy-text-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsDefault: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\"),\r\n        _myColorType: Property.enum([\"Color\", \"Effect Color\"], \"Color\")\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyTextColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,quBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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",
  "names": ["BasePoseParams", "CAUtils", "EasingFunction", "EasyTuneInt", "getDebugVisualManager", "getMainEngine", "getPlayerObjects", "vec3_create", "vec4_create", "vec3_create", "vec4_create", "length", "vec3_create", "quat", "mat3", "mat4", "vec4_create", "quat2", "vec3_create", "_quat_setAxes", "EasingFunction", "engine", "engine", "type", "vec3_create", "quat", "pp_getTransformLocalMatrix", "engine", "type", "engine", "MeshComponent", "TextComponent", "engine", "getMainEngine", "engine", "getMainEngine", "vec3_create", "vec4_create", "cloneMesh", "invertMesh", "MeshComponent", "TextComponent", "engine", "getMainEngine", "engine", "getMainEngine", "vec3_create", "cursorTarget", "CursorTarget", "vec3_create", "engine", "engine", "Cursor", "CursorTarget", "MouseLookComponent", "engine", "engine", "engine", "getPlayerObjects", "engine", "getMainEngine", "engine", "getMainEngine", "Component", "Property", "Component", "Property", "Howler", "Howler", "engine", "getMainEngine", "Component", "Component", "Property", "engine", "getMainEngine", "MeshComponent", "engine", "getMainEngine", "vec3_create", "other", "MeshComponent", "MeshComponent", "engine", "getMainEngine", "vec3_create", "other", "copy", "MeshComponent", "engine", "getMainEngine", "other", "MeshComponent", "copy", "MeshComponent", "engine", "getMainEngine", "vec3_create", "other", "MeshComponent", "copy", "vec3_create", "raycast", "getMainEngine", "vec3_create", "result", "copy", "length", "engine", "getMainEngine", "result", "other", "copy", "TextComponent", "engine", "getMainEngine", "other", "TextComponent", "copy", "engine", "getMainEngine", "other", "vec3_create", "copy", "engine", "getMainEngine", "other", "vec3_create", "copy", "engine", "getMainEngine", "visualElements", "type", "Component", "vec4_create", "Component", "Property", "Component", "Property", "Component", "Property", "engine", "getMainEngine", "getDebugVisualManager", "Alignment", "Justification", "engine", "length", "vec4_create", "Alignment", "Justification", "raycastResult", "vec3_create", "engine", "getMainEngine", "Component", "Component", "Property", "BasePoseParams", "engine", "getMainEngine", "vec3_create", "BasePoseParams", "engine", "vec3_create", "engine", "getMainEngine", "callbacks", "ViewComponent", "engine", "getMainEngine", "vec3_create", "getPlayerObjects", "ViewComponent", "engine", "getMainEngine", "Component", "getPlayerObjects", "Property", "Component", "Property", "engine", "getMainEngine", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "getPlayerObjects", "Property", "Component", "Property", "engine", "Component", "Property", "Component", "Property", "Howler", "Component", "Property", "Howler", "Component", "Howler", "Component", "Property", "Howler", "Component", "vec3_create", "Howler", "Property", "Component", "PhysXComponent", "Property", "PhysXComponent", "type", "PhysXComponent", "Component", "vec3_create", "getDebugVisualManager", "PhysXComponent", "Property", "Component", "MeshComponent", "TextComponent", "Property", "Component", "Property", "engine", "getMainEngine", "response", "type", "engine", "getMainEngine", "EasyTuneInt", "engine", "getMainEngine", "engine", "Component", "Property", "Component", "vec3_create", "reset", "vec4_create", "getPlayerObjects", "MeshComponent", "TextComponent", "Property", "defaultValue", "engine", "getMainEngine", "result", "defaultValue", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "PhysXComponent", "Component", "PhysXComponent", "Property", "Component", "Property", "Component", "vec3_create", "vec4_create", "Property", "getPlayerObjects", "result", "MeshComponent", "vec4_create", "setAlpha", "MeshComponent", "TextComponent", "Component", "Property", "Component", "Property", "other", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "CollisionComponent", "Component", "InputComponent", "MeshComponent", "TextComponent", "Property", "ViewComponent", "Component", "MeshComponent", "CollisionComponent", "InputComponent", "TextComponent", "ViewComponent", "Property", "vec3_create", "EasingFunction", "startNumber", "endNumber", "Component", "Property", "PhysXComponent", "Component", "PhysXComponent", "vec3_create", "Property", "Component", "Property", "PhysXComponent", "Component", "vec3_create", "PhysXComponent", "EasingFunction", "getDebugVisualManager", "vec4_create", "Property", "result", "CAUtils", "CAUtils", "Component", "Property", "TextComponent", "Component", "TextComponent", "Property", "Component", "Property", "Component", "Component", "Property", "Component", "vec3_create", "other", "vec3_create", "engine", "getMainEngine", "getDebugVisualManager", "vec4_create", "raycastResult", "getDebugVisualManager", "vec3_create", "vec3_create", "vec3_create", "vec3_create", "raycastResult", "vec3_create", "angleNormalWithMovementThreshold", "getDebugVisualManager", "vec3_create", "firstHeightPosition", "vec3_create", "vec3_create", "raycastResult", "vec3_create", "raycastResult", "computeSurfacePerceivedAngle", "other", "vec3_create", "copy", "reset", "engine", "getMainEngine", "checkMovement", "vec3_create", "checkTeleportToTransform", "checkTransform", "updateGroundInfo", "updateCeilingInfo", "convertCollisionRuntimeParamsToCharacterCollisionResults", "convertCharacterColliderSetupToCollisionCheckParams", "other", "vec3_create", "copy", "engine", "getMainEngine", "engine", "Component", "Property", "Component", "vec3_create", "computeSurfacePerceivedAngle", "Component", "Property", "Component", "Component", "Property", "Component", "Component", "Property", "Component", "Component", "Property", "Component", "engine", "getMainEngine", "Component", "Property", "Component", "Component", "Property", "Component", "Component", "Property", "Component", "Component", "Property", "Component", "Component", "Property", "Component", "computeSurfacePerceivedAngle", "vec3_create", "engine", "getMainEngine", "getPlayerObjects", "vec3_create", "getDebugVisualManager", "Component", "Property", "PhysXComponent", "engine", "getMainEngine", "PlayerLocomotionRotate", "vec3_create", "PhysXComponent", "engine", "getMainEngine", "EasingFunction", "vec4_create", "vec3_create", "vec3_create", "vec4_create", "getDebugVisualManager", "vec3_create", "getCollisionCheck", "vec3_create", "vec3_create", "getPlayerObjects", "raycastResult", "getDebugVisualManager", "hit", "vec4_create", "MeshComponent", "MeshComponent", "vec4_create", "vec3_create", "vec3_create", "EasingFunction", "engine", "getMainEngine", "vec3_create", "PlayerLocomotionTeleport", "getCollisionCheck", "engine", "getMainEngine", "params", "EasingFunction", "PlayerLocomotionRotate", "PlayerLocomotionSmooth", "PlayerLocomotionTeleport", "PhysXComponent", "engine", "getMainEngine", "PlayerLocomotionSmooth", "getPlayerObjects", "vec3_create", "getCollisionCheck", "getPlayerObjects", "vec3_create", "vec3_create", "vec4_create", "vec3_create", "getCollisionCheck", "params", "EasingFunction", "PlayerLocomotionRotate", "PlayerLocomotionTeleport", "getPlayerObjects", "PhysXComponent", "vec3_create", "_myCollisionChecks", "getCollisionCheck", "engine", "setCollisionCheck", "Component", "Property", "engine", "getMainEngine", "vec3_create", "getDebugVisualManager", "vec4_create", "getCollisionCheck", "vec3_create", "raycastResult", "getDebugVisualManager", "CollisionComponent", "Component", "Property", "CursorTarget", "Component", "CollisionComponent", "vec3_create", "getPlayerObjects", "CursorTarget", "Property", "Component", "Property", "Component", "Property", "Component", "MeshComponent", "Property", "BasePoseParams", "Component", "BasePoseParams", "MeshComponent", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "BasePoseParams", "engine", "getMainEngine", "Component", "Property", "Component", "Property", "Component", "Property", "vec3_create", "Component", "Property", "MeshComponent", "TextComponent", "Alignment", "Justification", "Component", "vec3_create", "length", "MeshComponent", "TextComponent", "Alignment", "Justification", "Property", "engine", "getMainEngine", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "vec3_create", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "BasePoseParams", "Property", "vec3_create", "Component", "Property", "Component", "BasePoseParams", "Property", "Component", "Property", "Component", "Property", "vec3_create", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "getPlayerObjects", "Property", "Component", "Property", "Component", "getPlayerObjects", "Component", "Property", "Component", "getPlayerObjects", "Component", "Property", "Component", "getPlayerObjects", "Component", "MeshComponent", "Property", "ViewComponent", "Cursor", "CursorTarget", "Component", "vec3_create", "vec4_create", "MeshComponent", "Cursor", "getPlayerObjects", "ViewComponent", "CursorTarget", "Property", "Alignment", "Collider", "Justification", "vec4_create", "Collider", "Alignment", "Justification", "vec3_create", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "engine", "getMainEngine", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "Alignment", "Collider", "Justification", "vec4_create", "Collider", "Alignment", "Justification", "vec3_create", "MeshComponent", "CollisionComponent", "TextComponent", "CursorTarget", "engine", "getMainEngine", "vec3_create", "getPlayerObjects", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "engine", "getMainEngine", "engine", "getMainEngine", "engine", "getMainEngine", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "engine", "getMainEngine", "Alignment", "Collider", "Justification", "vec4_create", "Collider", "Alignment", "Justification", "vec3_create", "vec3_create", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "engine", "getMainEngine", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "engine", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "engine", "getMainEngine", "vec3_create", "TextComponent", "engine", "TextComponent", "engine", "getMainEngine", "vec3_create", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "engine", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "engine", "getMainEngine", "vec3_create", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "engine", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "engine", "getMainEngine", "defaultValue", "engine", "length", "Component", "Property", "Component", "Property", "Component", "Property", "LightComponent", "LightComponent", "LightComponent", "engine", "vec3_create", "LightComponent", "engine", "vec4_create", "engine", "vec3_create", "engine", "engine", "vec4_create", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Property", "Component", "Component", "Property", "Component", "Property"]
}
