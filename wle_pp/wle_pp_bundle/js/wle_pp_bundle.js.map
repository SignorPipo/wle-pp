{
  "version": 3,
  "sources": ["../js/pp/index.js", "../js/pp/cauldron/wl/register_wl_components.js", "../js/pp/cauldron/wl/utils/component_utils.js", "../js/pp/audio/audio_globals.js", "../js/pp/cauldron/cauldron/window_globals.js", "../js/pp/cauldron/object_pool/object_pool_globals.js", "../js/pp/cauldron/visual/visual_globals.js", "../js/pp/cauldron/wl/engine_globals.js", "../js/pp/cauldron/js/utils/math_utils.js", "../js/pp/cauldron/js/utils/mat3_utils.js", "../js/pp/cauldron/js/utils/quat_utils.js", "../js/pp/cauldron/js/utils/array_utils.js", "../js/pp/cauldron/js/utils/vec3_utils.js", "../js/pp/cauldron/js/utils/mat4_utils.js", "../js/pp/cauldron/js/utils/quat2_utils.js", "../js/pp/cauldron/wl/utils/object_utils.js", "../js/pp/cauldron/wl/utils/scene_utils.js", "../js/pp/debug/debug_globals.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_system_globals.js", "../js/pp/input/cauldron/input_globals.js", "../js/pp/tool/cauldron/tool_globals.js", "../js/pp/tool/console_vr/console_vr_globals.js", "../js/pp/tool/easy_tune/easy_tune_globals.js", "../js/pp/pp/default_resources_globals.js", "../js/pp/pp/scene_objects_globals.js", "../js/pp/pp/globals.js", "../js/pp/cauldron/wl/utils/default_wl_component_clone_callbacks.js", "../js/pp/cauldron/utils/mesh_utils.js", "../js/pp/cauldron/js/utils/vec2_utils.js", "../js/pp/cauldron/js/utils/vec4_utils.js", "../js/pp/cauldron/js/utils/vec_utils.js", "../js/pp/cauldron/js/utils/js_utils.js", "../js/pp/plugin/utils/plugin_utils.js", "../js/pp/plugin/js/extensions/array_extension.js", "../js/pp/plugin/js/extensions/math_extension.js", "../js/pp/plugin/js/extensions/number_extension.js", "../js/pp/plugin/js/extensions/init_js_extentions.js", "../js/pp/plugin/js/init_js_plugins.js", "../js/pp/plugin/wl/extensions/object_extension.js", "../js/pp/plugin/wl/extensions/scene_extension.js", "../js/pp/plugin/wl/extensions/init_wl_extentions.js", "../js/pp/plugin/wl/mods/components/cursor_component_mod.js", "../js/pp/cauldron/utils/xr_utils.js", "../js/pp/input/cauldron/input_types.js", "../js/pp/input/cauldron/input_utils.js", "../js/pp/plugin/wl/mods/components/cursor_target_component_mod.js", "../js/pp/plugin/wl/mods/components/mouse_look_component_mod.js", "../js/pp/cauldron/cauldron/timer.js", "../js/pp/plugin/wl/mods/components/init_component_mods.js", "../js/pp/plugin/wl/mods/init_wl_mods.js", "../js/pp/plugin/wl/init_wl_plugins.js", "../js/pp/plugin/init_plugins.js", "../js/pp/pp/register_pp_components.js", "../js/pp/pp/init_pp.js", "../js/pp/pp/scene_objects.js", "../js/pp/pp/default_resources.js", "../js/pp/pp/components/pp_gateway_component.js", "../js/pp/audio/components/audio_manager_component.js", "../js/pp/audio/audio_manager.js", "../js/pp/audio/audio_player.js", "../js/pp/audio/audio_setup.js", "../js/pp/cauldron/object_pool/components/object_pool_manager_component.js", "../js/pp/cauldron/object_pool/object_pool_manager.js", "../js/pp/cauldron/visual/components/visual_manager_component.js", "../js/pp/cauldron/object_pool/object_pool.js", "../js/pp/cauldron/visual/elements/visual_arrow.js", "../js/pp/cauldron/visual/elements/visual_element_types.js", "../js/pp/cauldron/visual/elements/visual_line.js", "../js/pp/cauldron/visual/elements/visual_mesh.js", "../js/pp/cauldron/visual/elements/visual_point.js", "../js/pp/cauldron/physics/physics_utils.js", "../js/pp/cauldron/physics/physics_layer_flags.js", "../js/pp/cauldron/physics/physics_raycast_params.js", "../js/pp/cauldron/visual/elements/visual_raycast.js", "../js/pp/cauldron/visual/elements/visual_text.js", "../js/pp/cauldron/visual/elements/visual_torus.js", "../js/pp/cauldron/visual/elements/visual_transform.js", "../js/pp/cauldron/visual/visual_manager.js", "../js/pp/cauldron/visual/visual_resources.js", "../js/pp/cauldron/wl/components/add_wl_to_window_component.js", "../js/pp/debug/components/debug_manager_component.js", "../js/pp/debug/debug_visual_manager.js", "../js/pp/debug/debug_manager.js", "../js/pp/debug/components/enable_debug_component.js", "../js/pp/input/cauldron/components/input_manager_component.js", "../js/pp/input/gamepad/gamepad_buttons.js", "../js/pp/input/gamepad/gamepad_cores/gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/classic_gamepad_core.js", "../js/pp/input/cauldron/keyboard.js", "../js/pp/input/gamepad/gamepad_cores/keyboard_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/xr_gamepad_core.js", "../js/pp/input/gamepad/base_gamepad.js", "../js/pp/input/gamepad/universal_gamepad.js", "../js/pp/input/gamepad/cauldron/gamepads_manager.js", "../js/pp/input/pose/base_pose.js", "../js/pp/input/pose/hand_pose.js", "../js/pp/input/pose/head_pose.js", "../js/pp/input/pose/tracked_hand_joint_pose.js", "../js/pp/input/pose/tracked_hand_pose.js", "../js/pp/input/cauldron/mouse.js", "../js/pp/input/cauldron/input_manager.js", "../js/pp/tool/cauldron/components/enable_tool_component.js", "../js/pp/tool/easy_tune/components/init_easy_tune_variables_component.js", "../js/pp/tool/easy_tune/easy_tune_variables.js", "../js/pp/pp/components/add_pp_to_window_component.js", "../js/pp/pp/components/get_default_resources_component.js", "../js/pp/pp/components/get_scene_objects_component.js", "../js/pp/audio/audio_utils.js", "../js/pp/audio/howler/howler_audio_player.js", "../js/pp/audio/components/mute_everything_component.js", "../js/pp/audio/components/spatial_audio_listener_component.js", "../js/pp/cauldron/benchmarks/benchmark_max_physx_component.js", "../js/pp/cauldron/physics/physics_collision_collector.js", "../js/pp/cauldron/benchmarks/benchmark_max_visible_triangles_component.js", "../js/pp/cauldron/cauldron/save_manager.js", "../js/pp/cauldron/utils/save_utils.js", "../js/pp/cauldron/components/clear_console_on_xr_session_start_component.js", "../js/pp/cauldron/components/set_active_component.js", "../js/pp/cauldron/components/adjust_hierarchy_physx_scale_component.js", "../js/pp/cauldron/components/show_fps_component.js", "../js/pp/cauldron/fsm/fsm.js", "../js/pp/cauldron/fsm/state.js", "../js/pp/cauldron/fsm/transition.js", "../js/pp/cauldron/fsm/states/timer_state.js", "../js/pp/cauldron/utils/color_utils.js", "../js/pp/cauldron/utils/material_utils.js", "../js/pp/cauldron/utils/text_utils.js", "../js/pp/cauldron/utils/browser_utils.js", "../js/pp/debug/components/debug_transform_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_overwriter.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js", "../js/pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter.js", "../js/pp/gameplay/cauldron/cauldron/number_over_factor.js", "../js/pp/gameplay/grab_throw/grabbable_component.js", "../js/pp/gameplay/grab_throw/grabber_hand_component.js", "../js/pp/gameplay/integrations/construct_arcade/ca_utils.js", "../js/pp/gameplay/integrations/construct_arcade/ca_dummy_server.js", "../js/pp/gameplay/integrations/construct_arcade/ca_display_leaderboard_component.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_results.js", "../js/pp/gameplay/experimental/character_controller/collision/collision_check_bridge.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_setup.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_setup_utils.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_system.js", "../js/pp/gameplay/experimental/character_controller/collision/components/character_collision_system_component.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_head_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility.js", "../js/pp/input/cauldron/components/finger_cursor_component.js", "../js/pp/input/cauldron/components/switch_hand_object_component.js", "../js/pp/input/cauldron/components/tracked_hand_draw_joint_component.js", "../js/pp/input/cauldron/components/tracked_hand_draw_all_joints_component.js", "../js/pp/input/cauldron/components/tracked_hand_draw_skin_component.js", "../js/pp/input/gamepad/cauldron/gamepad_mesh_animator_component.js", "../js/pp/input/gamepad/cauldron/gamepad_utils.js", "../js/pp/input/gamepad/cauldron/gamepad_control_scheme_component.js", "../js/pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_params.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_component.js", "../js/pp/input/pose/components/set_player_height_component.js", "../js/pp/input/pose/components/set_hand_local_transform_component.js", "../js/pp/input/pose/components/set_head_local_transform_component.js", "../js/pp/input/pose/components/set_tracked_hand_joint_local_transform_component.js", "../js/pp/input/pose/components/copy_hand_transform_component.js", "../js/pp/input/pose/components/copy_head_transform_component.js", "../js/pp/input/pose/components/copy_player_transform_component.js", "../js/pp/input/pose/components/copy_reference_space_transform_component.js", "../js/pp/tool/cauldron/tool_types.js", "../js/pp/tool/cauldron/components/tool_cursor_component.js", "../js/pp/tool/console_vr/console_vr_widget_config.js", "../js/pp/tool/console_vr/console_vr_types.js", "../js/pp/tool/console_vr/console_vr_widget_ui.js", "../js/pp/tool/widget_frame/widget_frame.js", "../js/pp/tool/widget_frame/widget_frame_config.js", "../js/pp/tool/widget_frame/widget_frame_ui.js", "../js/pp/tool/console_vr/console_original_functions.js", "../js/pp/tool/console_vr/console_vr_widget.js", "../js/pp/tool/console_vr/console_vr.js", "../js/pp/tool/console_vr/components/console_vr_tool_component.js", "../js/pp/tool/console_vr/components/init_console_vr_component.js", "../js/pp/tool/easy_tune/easy_tune_variable_types.js", "../js/pp/tool/easy_tune/easy_tune_utils.js", "../js/pp/tool/easy_tune/components/easy_tune_tool_component.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_config.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget.js", "../js/pp/tool/easy_tune/components/easy_tune_import_variables_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_object_tuner.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_scale.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_transform.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_text_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_light_attenuation_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_light_color_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_mesh_ambient_factor_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_mesh_color_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_scale_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_child_number_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_grab_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_text_color_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/components/easy_transform_component.js"],
  "sourcesContent": ["//  PP\r\nexport * from \"./pp/init_pp\";\r\nexport * from \"./pp/register_pp_components\";\r\nexport * from \"./pp/globals\";\r\nexport * from \"./pp/scene_objects\";\r\nexport * from \"./pp/scene_objects_globals\";\r\nexport * from \"./pp/default_resources\";\r\nexport * from \"./pp/default_resources_globals\";\r\n\r\nexport * from \"./pp/components/pp_gateway_component\";\r\nexport * from \"./pp/components/get_scene_objects_component\";\r\nexport * from \"./pp/components/get_default_resources_component\";\r\nexport * from \"./pp/components/add_pp_to_window_component\";\r\n\r\n//\tPLUGIN\r\nexport * from \"./plugin/init_plugins\";\r\n\r\nexport * from \"./plugin/utils/plugin_utils\";\r\n\r\nexport * from \"./plugin/js/init_js_plugins\";\r\nexport * from \"./plugin/js/extensions/init_js_extentions\";\r\nexport * from \"./plugin/js/extensions/array_extension\";\r\nexport * from \"./plugin/js/extensions/math_extension\";\r\nexport * from \"./plugin/js/extensions/number_extension\";\r\n\r\nexport * from \"./plugin/wl/init_wl_plugins\";\r\nexport * from \"./plugin/wl/extensions/init_wl_extentions\";\r\nexport * from \"./plugin/wl/extensions/object_extension\";\r\nexport * from \"./plugin/wl/extensions/scene_extension\";\r\nexport * from \"./plugin/wl/mods/init_wl_mods\";\r\nexport * from \"./plugin/wl/mods/components/init_component_mods\";\r\nexport * from \"./plugin/wl/mods/components/cursor_component_mod\";\r\nexport * from \"./plugin/wl/mods/components/cursor_target_component_mod\";\r\nexport * from \"./plugin/wl/mods/components/mouse_look_component_mod\";\r\n\r\n//\tAUDIO\r\nexport * from \"./audio/audio_manager\";\r\nexport * from \"./audio/audio_globals\";\r\nexport * from \"./audio/audio_player\";\r\nexport * from \"./audio/audio_setup\";\r\nexport * from \"./audio/audio_utils\";\r\n\r\nexport * from \"./audio/howler/howler_audio_player\";\r\n\r\nexport * from \"./audio/components/audio_manager_component\";\r\nexport * from \"./audio/components/mute_everything_component\";\r\nexport * from \"./audio/components/spatial_audio_listener_component\";\r\n\r\n//\tCAULDRON\r\nexport * from \"./cauldron/benchmarks/benchmark_max_physx_component\";\r\nexport * from \"./cauldron/benchmarks/benchmark_max_visible_triangles_component\";\r\n\r\nexport * from \"./cauldron/cauldron/save_manager\";\r\nexport * from \"./cauldron/cauldron/timer\";\r\nexport * from \"./cauldron/cauldron/window_globals\";\r\n\r\nexport * from \"./cauldron/components/clear_console_on_xr_session_start_component\";\r\nexport * from \"./cauldron/components/set_active_component\";\r\nexport * from \"./cauldron/components/adjust_hierarchy_physx_scale_component\";\r\nexport * from \"./cauldron/components/show_fps_component\";\r\n\r\nexport * from \"./cauldron/fsm/fsm\";\r\nexport * from \"./cauldron/fsm/state\";\r\nexport * from \"./cauldron/fsm/transition\";\r\nexport * from \"./cauldron/fsm/states/timer_state\";\r\n\r\nexport * from \"./cauldron/js/utils/js_utils\";\r\nexport * from \"./cauldron/js/utils/math_utils\";\r\nexport * from \"./cauldron/js/utils/array_utils\";\r\nexport * from \"./cauldron/js/utils/vec_utils\";\r\nexport * from \"./cauldron/js/utils/vec2_utils\";\r\nexport * from \"./cauldron/js/utils/vec3_utils\";\r\nexport * from \"./cauldron/js/utils/vec4_utils\";\r\nexport * from \"./cauldron/js/utils/quat_utils\";\r\nexport * from \"./cauldron/js/utils/quat2_utils\";\r\nexport * from \"./cauldron/js/utils/mat3_utils\";\r\nexport * from \"./cauldron/js/utils/mat4_utils\";\r\n\r\nexport * from \"./cauldron/object_pool/object_pool\";\r\nexport * from \"./cauldron/object_pool/object_pool_globals\";\r\nexport * from \"./cauldron/object_pool/object_pool_manager\";\r\nexport * from \"./cauldron/object_pool/components/object_pool_manager_component\";\r\n\r\nexport * from \"./cauldron/utils/color_utils\";\r\nexport * from \"./cauldron/utils/material_utils\";\r\nexport * from \"./cauldron/utils/mesh_utils\";\r\nexport * from \"./cauldron/utils/save_utils\";\r\nexport * from \"./cauldron/utils/text_utils\";\r\nexport * from \"./cauldron/utils/xr_utils\";\r\nexport * from \"./cauldron/utils/browser_utils\";\r\n\r\nexport * from \"./cauldron/physics/physics_utils\";\r\nexport * from \"./cauldron/physics/physics_raycast_params\";\r\nexport * from \"./cauldron/physics/physics_layer_flags\";\r\nexport * from \"./cauldron/physics/physics_collision_collector\";\r\n\r\nexport * from \"./cauldron/visual/visual_manager\";\r\nexport * from \"./cauldron/visual/visual_resources\";\r\nexport * from \"./cauldron/visual/visual_globals\";\r\n\r\nexport * from \"./cauldron/visual/elements/visual_element_types\";\r\nexport * from \"./cauldron/visual/elements/visual_line\";\r\nexport * from \"./cauldron/visual/elements/visual_mesh\";\r\nexport * from \"./cauldron/visual/elements/visual_point\";\r\nexport * from \"./cauldron/visual/elements/visual_arrow\";\r\nexport * from \"./cauldron/visual/elements/visual_text\";\r\nexport * from \"./cauldron/visual/elements/visual_transform\";\r\nexport * from \"./cauldron/visual/elements/visual_raycast\";\r\nexport * from \"./cauldron/visual/elements/visual_torus\";\r\n\r\nexport * from \"./cauldron/visual/components/visual_manager_component\";\r\n\r\nexport * from \"./cauldron/wl/engine_globals\";\r\nexport * from \"./cauldron/wl/register_wl_components\";\r\nexport * from \"./cauldron/wl/utils/scene_utils\";\r\nexport * from \"./cauldron/wl/utils/object_utils\";\r\nexport * from \"./cauldron/wl/utils/component_utils\";\r\nexport * from \"./cauldron/wl/utils/default_wl_component_clone_callbacks\";\r\nexport * from \"./cauldron/wl/components/add_wl_to_window_component\";\r\n\r\n//\tDEBUG\r\nexport * from \"./debug/debug_manager\";\r\nexport * from \"./debug/debug_visual_manager\";\r\nexport * from \"./debug/debug_globals\";\r\n\r\nexport * from \"./debug/components/debug_transform_component\";\r\nexport * from \"./debug/components/debug_manager_component\";\r\nexport * from \"./debug/components/enable_debug_component\";\r\n\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_overwriter\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component\";\r\nexport * from \"./debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js\";\r\n\r\n//\tGAMEPLAY\r\n\r\n//    CAULDRON\r\nexport * from \"./gameplay/cauldron/cauldron/direction_2D_to_3D_converter\";\r\nexport * from \"./gameplay/cauldron/cauldron/number_over_factor\";\r\n\r\n//    GRAB & THROW\r\nexport * from \"./gameplay/grab_throw/grabbable_component\";\r\nexport * from \"./gameplay/grab_throw/grabber_hand_component\";\r\n\r\n//    INTEGRATIONS\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_utils\";\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_dummy_server\";\r\nexport * from \"./gameplay/integrations/construct_arcade/ca_display_leaderboard_component\";\r\n\r\n//    EXPERIMENTAL\r\n\r\n//          CHARACTER CONTROLLER\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check\";\r\n\r\nexport * from \"./gameplay/experimental/character_controller/collision/collision_check_bridge\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collider_setup\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collider_setup_utils\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_results\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_system\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/character_collision_system_globals\";\r\nexport * from \"./gameplay/experimental/character_controller/collision/components/character_collision_system_component\";\r\n\r\n//          LOCOMOTION\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_head_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component\";\r\n\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state\";\r\nexport * from \"./gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport\";\r\n\r\n//\tINPUT\r\nexport * from \"./input/cauldron/input_types\";\r\nexport * from \"./input/cauldron/input_utils\";\r\nexport * from \"./input/cauldron/keyboard\";\r\nexport * from \"./input/cauldron/mouse\";\r\nexport * from \"./input/cauldron/input_globals\";\r\nexport * from \"./input/cauldron/input_manager\";\r\n\r\nexport * from \"./input/cauldron/components/finger_cursor_component\";\r\nexport * from \"./input/cauldron/components/input_manager_component\";\r\nexport * from \"./input/cauldron/components/switch_hand_object_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_joint_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_all_joints_component\";\r\nexport * from \"./input/cauldron/components/tracked_hand_draw_skin_component\";\r\n\r\nexport * from \"./input/gamepad/gamepad_buttons\";\r\nexport * from \"./input/gamepad/base_gamepad\";\r\nexport * from \"./input/gamepad/universal_gamepad\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_mesh_animator_component\";\r\nexport * from \"./input/gamepad/cauldron/gamepads_manager\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_utils\";\r\nexport * from \"./input/gamepad/cauldron/gamepad_control_scheme_component\";\r\nexport * from \"./input/gamepad/gamepad_cores/gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/xr_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/keyboard_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core\";\r\nexport * from \"./input/gamepad/gamepad_cores/classic_gamepad_core\";\r\n\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_component\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_params\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick\";\r\nexport * from \"./input/gamepad/virtual_gamepad/virtual_gamepad_icon\";\r\n\r\nexport * from \"./input/pose/base_pose.js\";\r\nexport * from \"./input/pose/hand_pose\";\r\nexport * from \"./input/pose/head_pose\";\r\nexport * from \"./input/pose/tracked_hand_joint_pose\";\r\nexport * from \"./input/pose/tracked_hand_pose\";\r\n\r\nexport * from \"./input/pose/components/set_player_height_component\";\r\nexport * from \"./input/pose/components/set_hand_local_transform_component\";\r\nexport * from \"./input/pose/components/set_head_local_transform_component\";\r\nexport * from \"./input/pose/components/set_tracked_hand_joint_local_transform_component\";\r\nexport * from \"./input/pose/components/copy_hand_transform_component\";\r\nexport * from \"./input/pose/components/copy_head_transform_component\";\r\nexport * from \"./input/pose/components/copy_player_transform_component\";\r\nexport * from \"./input/pose/components/copy_reference_space_transform_component\";\r\n\r\n//\tTOOL\r\nexport * from \"./tool/cauldron/tool_types\";\r\nexport * from \"./tool/cauldron/tool_globals\";\r\nexport * from \"./tool/cauldron/components/tool_cursor_component\";\r\nexport * from \"./tool/cauldron/components/enable_tool_component\";\r\n\r\nexport * from \"./tool/console_vr/console_vr_widget_config\";\r\nexport * from \"./tool/console_vr/console_vr_widget_ui\";\r\nexport * from \"./tool/console_vr/console_vr_widget\";\r\nexport * from \"./tool/console_vr/console_vr\";\r\nexport * from \"./tool/console_vr/console_vr_types\";\r\nexport * from \"./tool/console_vr/console_vr_globals\";\r\nexport * from \"./tool/console_vr/console_original_functions\";\r\n\r\nexport * from \"./tool/console_vr/components/console_vr_tool_component\";\r\nexport * from \"./tool/console_vr/components/init_console_vr_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_tune_variables\";\r\nexport * from \"./tool/easy_tune/easy_tune_variable_types\";\r\nexport * from \"./tool/easy_tune/easy_tune_globals\";\r\nexport * from \"./tool/easy_tune/easy_tune_utils\";\r\n\r\nexport * from \"./tool/easy_tune/components/easy_tune_tool_component\";\r\nexport * from \"./tool/easy_tune/components/easy_tune_import_variables_component\";\r\nexport * from \"./tool/easy_tune/components/init_easy_tune_variables_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_object_tuner\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_light_attenuation\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_light_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_mesh_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_scale\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_transform\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/easy_text_color\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_light_attenuation_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_light_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_mesh_ambient_factor_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_mesh_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_scale_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_child_number_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_set_tune_target_grab_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_text_color_component\";\r\nexport * from \"./tool/easy_tune/easy_object_tuners/components/easy_transform_component\";\r\n\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/easy_tune_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/easy_tune_widget_config\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_config\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/base/easy_tune_base_array_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_config\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_config\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_config\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui\";\r\nexport * from \"./tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_config\";\r\n\r\nexport * from \"./tool/widget_frame/widget_frame_config\";\r\nexport * from \"./tool/widget_frame/widget_frame_ui\";\r\nexport * from \"./tool/widget_frame/widget_frame\";", "import { ARCamera8thwall, Cursor, CursorTarget, DebugObject, DeviceOrientationLook, FingerCursor, FixedFoveation, HandTracking, HitTestLocation, HowlerAudioListener, HowlerAudioSource, ImageTexture, MouseLookComponent, PlayerHeight, TargetFramerate, TeleportComponent, Trail, TwoJointIkSolver, VideoTexture, VrModeActiveSwitch, Vrm, WasdControlsComponent } from \"@wonderlandengine/components\";\r\n\r\nexport function registerWLComponents(engine) {\r\n    engine.registerComponent(ARCamera8thwall, Cursor, CursorTarget, DebugObject, DeviceOrientationLook, FingerCursor, FixedFoveation, HandTracking, HitTestLocation, HowlerAudioListener, HowlerAudioSource, ImageTexture, MouseLookComponent, PlayerHeight, TargetFramerate, TeleportComponent, Trail, TwoJointIkSolver, VideoTexture, VrModeActiveSwitch, Vrm, WasdControlsComponent);\r\n}", "import { AnimationComponent, CollisionComponent, InputComponent, LightComponent, MeshComponent, PhysXComponent, TextComponent, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { ARCamera8thwall, Anchor, Cursor, CursorTarget, DebugObject, DeviceOrientationLook, FingerCursor, FixedFoveation, HandTracking, HitTestLocation, HowlerAudioListener, HowlerAudioSource, ImageTexture, MouseLookComponent, PlaneDetection, PlayerHeight, TargetFramerate, TeleportComponent, Trail, TwoJointIkSolver, VideoTexture, VrModeActiveSwitch, Vrm, WasdControlsComponent } from \"@wonderlandengine/components\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { DefaultWLComponentCloneCallbacks } from \"./default_wl_component_clone_callbacks\";\r\nimport { ObjectUtils } from \"./object_utils\";\r\n\r\nlet _myCloneCallbacks = new WeakMap();                 // Signature: callback(componentToClone, targetObject, useDefaultCloneAsFallback, deeCloneParams, customCloneParams)\r\nlet _myClonePostProcessCallbacks = new WeakMap();      // Signature: callback(componentToClone, clonedComponent, deeCloneParams, customCloneParams)\r\n\r\nexport class DeepCloneParams {\r\n\r\n    constructor() {\r\n        this._myDeepCloneComponents = false;\r\n        this._myDeepCloneOverrideComponentsMap = new Map();\r\n        this._myDeepCloneOverrideComponentsVariablesMap = new Map();\r\n    }\r\n\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    setDeepCloneComponents(deepClone) {\r\n        this._myDeepCloneComponents = deepClone;\r\n    }\r\n\r\n    // This value override the deep clone components value\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    setDeepCloneComponent(componentName, deepClone) {\r\n        this._myDeepCloneOverrideComponentsMap.set(componentName, deepClone);\r\n    }\r\n\r\n    // This value override both the deep clone components value and the deep clone component override one\r\n    // The implementation is component dependant, not every component variable override is taken into consideration\r\n    setDeepCloneComponentVariable(componentName, variableName, deepClone) {\r\n        let componentsVariablesMap = null;\r\n\r\n        if (!this._myDeepCloneOverrideComponentsVariablesMap.has(componentName)) {\r\n            this._myDeepCloneOverrideComponentsVariablesMap.set(componentName, new Map());\r\n        }\r\n\r\n        componentsVariablesMap = this._myDeepCloneOverrideComponentsVariablesMap.get(componentName);\r\n\r\n        componentsVariablesMap.set(variableName, deepClone);\r\n    }\r\n\r\n    isDeepCloneComponent(componentName) {\r\n        let deepCloneOverride = this._myDeepCloneOverrideComponentsMap.get(componentName);\r\n\r\n        if (deepCloneOverride != null) {\r\n            return deepCloneOverride;\r\n        }\r\n\r\n        return this._myDeepCloneComponents;\r\n    }\r\n\r\n    isDeepCloneComponentVariable(componentName, variableName) {\r\n        let componentsVariablesMap = this._myDeepCloneOverrideComponentsVariablesMap.get(componentName);\r\n        if (componentsVariablesMap != null) {\r\n            let deepCloneOverride = componentsVariablesMap.get(variableName);\r\n            if (deepCloneOverride != null) {\r\n                return deepCloneOverride;\r\n            }\r\n        }\r\n\r\n        return this.isDeepCloneComponent(componentName);\r\n    }\r\n}\r\n\r\nexport class CustomCloneParams {\r\n\r\n    constructor() {\r\n        this._myParams = new Map();\r\n    }\r\n\r\n    addParam(name, value) {\r\n        this._myParams.set(name, value);\r\n    }\r\n\r\n    removeParam(name) {\r\n        this._myParams.delete(name);\r\n    }\r\n\r\n    getParam(name) {\r\n        this._myParams.get(name);\r\n    }\r\n\r\n    hasParam(name) {\r\n        this._myParams.has(name);\r\n    }\r\n}\r\n\r\nexport function isWLComponent(typeOrClass) {\r\n    return ComponentUtils.isWLNativeComponent(typeOrClass) || ComponentUtils.isWLJavascriptComponent(typeOrClass);\r\n}\r\n\r\nexport function isWLNativeComponent(typeOrClass) {\r\n    let wlNative = false;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (ComponentUtils.getWLNativeComponentTypes().includes(type)) {\r\n        wlNative = true;\r\n    }\r\n\r\n    return wlNative;\r\n}\r\n\r\nexport function isWLJavascriptComponent(typeOrClass) {\r\n    let wlJavascript = false;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (ComponentUtils.getWLJavascriptComponentTypes().includes(type)) {\r\n        wlJavascript = true;\r\n    }\r\n\r\n    return wlJavascript;\r\n}\r\n\r\nexport function getWLNativeComponentTypes() {\r\n    return _myWLNativeComponentTypes;\r\n}\r\n\r\nexport function getWLJavascriptComponentTypes() {\r\n    return _myWLJavascriptComponentTypes;\r\n}\r\n\r\nexport function getTypeFromTypeOrClass(typeOrClass) {\r\n    if (typeOrClass == null) return;\r\n\r\n    let type = typeOrClass;\r\n    if (typeOrClass.TypeName != null) {\r\n        type = typeOrClass.TypeName;\r\n    }\r\n\r\n    return type;\r\n}\r\n\r\nexport function getClassFromType(type, engine = Globals.getMainEngine()) {\r\n    let classToReturn = null;\r\n\r\n    if (ComponentUtils.isWLNativeComponent(type)) {\r\n        if (ComponentUtils.isWLNativeComponentRegistered(type, engine)) {\r\n            switch (type) {\r\n                case AnimationComponent.TypeName:\r\n                    classToReturn = AnimationComponent;\r\n                    break;\r\n                case CollisionComponent.TypeName:\r\n                    classToReturn = CollisionComponent;\r\n                    break;\r\n                case InputComponent.TypeName:\r\n                    classToReturn = InputComponent;\r\n                    break;\r\n                case LightComponent.TypeName:\r\n                    classToReturn = LightComponent;\r\n                    break;\r\n                case MeshComponent.TypeName:\r\n                    classToReturn = MeshComponent;\r\n                    break;\r\n                case PhysXComponent.TypeName:\r\n                    classToReturn = PhysXComponent;\r\n                    break;\r\n                case TextComponent.TypeName:\r\n                    classToReturn = TextComponent;\r\n                    break;\r\n                case ViewComponent.TypeName:\r\n                    classToReturn = ViewComponent;\r\n                    break;\r\n                default:\r\n                    classToReturn = null;\r\n            }\r\n        }\r\n    } else {\r\n        classToReturn = ComponentUtils.getJavascriptComponentClass(type, engine);\r\n    }\r\n\r\n    return classToReturn;\r\n}\r\n\r\nexport function isRegistered(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    return ComponentUtils.getClassFromType(type, engine) != null;\r\n}\r\n\r\nexport function getJavascriptComponentInstances(engine = Globals.getMainEngine()) {\r\n    return Globals.getWASM(engine)._components;\r\n}\r\n\r\nexport function getJavascriptComponentClass(type, engine = Globals.getMainEngine()) {\r\n    return ComponentUtils.getJavascriptComponentClassesByIndex(engine)[ComponentUtils.getJavascriptComponentTypeIndex(type, engine)];\r\n}\r\n\r\nexport function getJavascriptComponentClassesByIndex(engine = Globals.getMainEngine()) {\r\n    return Globals.getWASM(engine)._componentTypes;\r\n}\r\n\r\nexport function getJavascriptComponentTypeIndex(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    return ComponentUtils.getJavascriptComponentTypeIndexes(engine)[type];\r\n}\r\n\r\nexport function getJavascriptComponentTypeIndexes(engine = Globals.getMainEngine()) {\r\n    return Globals.getWASM(engine)._componentTypeIndices;\r\n}\r\n\r\nexport function getJavascriptComponentTypeFromIndex(typeIndex, engine = Globals.getMainEngine()) {\r\n    let type = null;\r\n\r\n    let componentClass = ComponentUtils.getJavascriptComponentClassesByIndex(engine)[typeIndex];\r\n    if (componentClass != null) {\r\n        type = componentClass.TypeName;\r\n    }\r\n\r\n    return type;\r\n}\r\n\r\nexport function isWLNativeComponentRegistered(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let wasm = Globals.getWASM(engine);\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    return wasm._wl_get_component_manager_index(wasm.tempUTF8(type)) >= 0;\r\n}\r\n\r\nexport function isCloneable(typeOrClass, defaultCloneValid = false, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    return defaultCloneValid || ComponentUtils.hasCloneCallback(type, engine) || ComponentUtils.getClassFromType(type, engine)?.prototype.pp_clone != null;\r\n}\r\n\r\nexport function hasClonePostProcess(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    return ComponentUtils.hasClonePostProcessCallback(type, engine) || ComponentUtils.getClassFromType(type, engine)?.prototype.pp_clonePostProcess != null;\r\n}\r\n\r\nexport function clone(componentToClone, targetObject, deeCloneParams, customCloneParams, useDefaultCloneAsFallback = false, defaultCloneAutoStartIfNotActive = true) {\r\n    let clonedComponent = null;\r\n\r\n    let cloneCallback = ComponentUtils.getCloneCallback(componentToClone.type, ObjectUtils.getEngine(componentToClone.object));\r\n\r\n    if (cloneCallback != null) {\r\n        clonedComponent = cloneCallback(componentToClone, targetObject, deeCloneParams, customCloneParams);\r\n    } else if (componentToClone.pp_clone != null) {\r\n        clonedComponent = componentToClone.pp_clone(targetObject, deeCloneParams, customCloneParams);\r\n    } else if (useDefaultCloneAsFallback) {\r\n        clonedComponent = ComponentUtils.cloneDefault(componentToClone, targetObject, defaultCloneAutoStartIfNotActive);\r\n    }\r\n\r\n    return clonedComponent;\r\n}\r\n\r\nexport function clonePostProcess(componentToClone, clonedComponent, deeCloneParams, customCloneParams) {\r\n    let clonePostProcessCallback = ComponentUtils.getClonePostProcessCallback(componentToClone.type, ObjectUtils.getEngine(componentToClone.object));\r\n\r\n    if (clonePostProcessCallback != null) {\r\n        clonePostProcessCallback(componentToClone, clonedComponent, deeCloneParams, customCloneParams);\r\n    } else if (componentToClone.pp_clonePostProcess != null) {\r\n        componentToClone.pp_clonePostProcess(clonedComponent, deeCloneParams, customCloneParams);\r\n    }\r\n\r\n    return clonedComponent;\r\n}\r\n\r\nexport function cloneDefault(componentToClone, targetObject, autoStartIfNotActive = true) {\r\n    let clonedComponent = ObjectUtils.addComponent(targetObject, componentToClone.type, componentToClone);\r\n\r\n    // Trigger start, which otherwise would be called later\r\n    if (autoStartIfNotActive && !clonedComponent.active) {\r\n        clonedComponent.active = true;\r\n        clonedComponent.active = false;\r\n    }\r\n\r\n    return clonedComponent;\r\n}\r\n\r\nexport function setCloneCallback(typeOrClass, callback, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (!_myCloneCallbacks.has(engine)) {\r\n        _myCloneCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _myCloneCallbacks.get(engine).set(type, callback);\r\n}\r\n\r\nexport function removeCloneCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (_myCloneCallbacks.has(engine)) {\r\n        _myCloneCallbacks.get(engine).delete(type);\r\n    }\r\n}\r\n\r\nexport function getCloneCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let callback = null;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    if (_myCloneCallbacks.has(engine)) {\r\n        callback = _myCloneCallbacks.get(engine).get(type);\r\n    }\r\n\r\n    return callback;\r\n}\r\n\r\nexport function hasCloneCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let hasCallback = false;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    if (_myCloneCallbacks.has(engine)) {\r\n        hasCallback = _myCloneCallbacks.get(engine).has(type);\r\n    }\r\n\r\n    return hasCallback;\r\n}\r\n\r\nexport function setClonePostProcessCallback(typeOrClass, callback, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (!_myClonePostProcessCallbacks.has(engine)) {\r\n        _myClonePostProcessCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _myClonePostProcessCallbacks.get(engine).set(type, callback);\r\n}\r\n\r\nexport function removeClonePostProcessCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    if (_myClonePostProcessCallbacks.has(engine)) {\r\n        _myClonePostProcessCallbacks.get(engine).delete(type);\r\n    }\r\n}\r\n\r\nexport function getClonePostProcessCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let callback = null;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    if (_myClonePostProcessCallbacks.has(engine)) {\r\n        callback = _myClonePostProcessCallbacks.get(engine).get(type);\r\n    }\r\n\r\n    return callback;\r\n}\r\n\r\nexport function hasClonePostProcessCallback(typeOrClass, engine = Globals.getMainEngine()) {\r\n    let hasCallback = false;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n    if (_myClonePostProcessCallbacks.has(engine)) {\r\n        hasCallback = _myClonePostProcessCallbacks.get(engine).has(type);\r\n    }\r\n\r\n    return hasCallback;\r\n}\r\n\r\n\r\nexport function getDefaultWLComponentCloneCallback(typeOrClass) {\r\n    let callback = null;\r\n\r\n    let type = ComponentUtils.getTypeFromTypeOrClass(typeOrClass);\r\n\r\n    switch (type) {\r\n        case MeshComponent.TypeName:\r\n            callback = DefaultWLComponentCloneCallbacks.cloneMesh;\r\n            break;\r\n        case CollisionComponent.TypeName:\r\n            callback = DefaultWLComponentCloneCallbacks.cloneCollision;\r\n            break;\r\n        case TextComponent.TypeName:\r\n            callback = DefaultWLComponentCloneCallbacks.cloneText;\r\n            break;\r\n        case PhysXComponent.TypeName:\r\n            callback = DefaultWLComponentCloneCallbacks.clonePhysX;\r\n            break;\r\n        default:\r\n            callback = null;\r\n    }\r\n\r\n    return callback;\r\n}\r\n\r\n\r\nexport function hasDefaultWLComponentCloneCallback(typeOrClass) {\r\n    return ComponentUtils.getDefaultWLComponentCloneCallback(typeOrClass) != null;\r\n}\r\n\r\n\r\nexport function setDefaultWLComponentCloneCallbacks(engine = Globals.getMainEngine()) {\r\n    for (let nativeType of ComponentUtils.getWLNativeComponentTypes()) {\r\n        let cloneCallback = ComponentUtils.getDefaultWLComponentCloneCallback(nativeType);\r\n        if (cloneCallback != null) {\r\n            ComponentUtils.setCloneCallback(nativeType, cloneCallback, engine)\r\n        }\r\n    }\r\n\r\n    for (let javascriptType of ComponentUtils.getWLJavascriptComponentTypes()) {\r\n        let cloneCallback = ComponentUtils.getDefaultWLComponentCloneCallback(javascriptType);\r\n        if (cloneCallback != null) {\r\n            ComponentUtils.setCloneCallback(javascriptType, cloneCallback, engine)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeDefaultWLComponentCloneCallbacks(engine = Globals.getMainEngine()) {\r\n    for (let nativeType of ComponentUtils.getWLNativeComponentTypes()) {\r\n        let cloneCallback = ComponentUtils.getDefaultWLComponentCloneCallback(nativeType);\r\n        if (cloneCallback != null) {\r\n            if (ComponentUtils.getCloneCallback(nativeType, engine) == cloneCallback) {\r\n                ComponentUtils.removeCloneCallback(nativeType, engine);\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let javascriptType of ComponentUtils.getWLNativeComponentTypes()) {\r\n        let cloneCallback = ComponentUtils.getDefaultWLComponentCloneCallback(javascriptType);\r\n        if (cloneCallback != null) {\r\n            if (ComponentUtils.getCloneCallback(javascriptType, engine) == cloneCallback) {\r\n                ComponentUtils.removeCloneCallback(javascriptType, engine);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport let ComponentUtils = {\r\n    isWLComponent,\r\n    isWLNativeComponent,\r\n    isWLJavascriptComponent,\r\n    getWLNativeComponentTypes,\r\n    getWLJavascriptComponentTypes,\r\n    getTypeFromTypeOrClass,\r\n    getClassFromType,\r\n    isRegistered,\r\n\r\n    getJavascriptComponentInstances,\r\n    getJavascriptComponentClass,\r\n    getJavascriptComponentClassesByIndex,\r\n    getJavascriptComponentTypeIndex,\r\n    getJavascriptComponentTypeIndexes,\r\n    getJavascriptComponentTypeFromIndex,\r\n    isWLNativeComponentRegistered,\r\n\r\n    isCloneable,\r\n    hasClonePostProcess,\r\n    clone,\r\n    clonePostProcess,\r\n    cloneDefault,\r\n\r\n    setCloneCallback,\r\n    removeCloneCallback,\r\n    getCloneCallback,\r\n    hasCloneCallback,\r\n    setClonePostProcessCallback,\r\n    removeClonePostProcessCallback,\r\n    getClonePostProcessCallback,\r\n    hasClonePostProcessCallback,\r\n\r\n    setDefaultWLComponentCloneCallbacks,\r\n    removeDefaultWLComponentCloneCallbacks,\r\n    getDefaultWLComponentCloneCallback,\r\n    hasDefaultWLComponentCloneCallback\r\n};\r\n\r\n\r\n\r\nlet _myWLNativeComponentTypes = [\r\n    AnimationComponent.TypeName,\r\n    CollisionComponent.TypeName,\r\n    InputComponent.TypeName,\r\n    LightComponent.TypeName,\r\n    MeshComponent.TypeName,\r\n    PhysXComponent.TypeName,\r\n    TextComponent.TypeName,\r\n    ViewComponent.TypeName\r\n];\r\n\r\nlet _myWLJavascriptComponentTypes = [\r\n    ARCamera8thwall.TypeName,\r\n    Anchor.TypeName,\r\n    Cursor.TypeName,\r\n    CursorTarget.TypeName,\r\n    DebugObject.TypeName,\r\n    DeviceOrientationLook.TypeName,\r\n    FingerCursor.TypeName,\r\n    FixedFoveation.TypeName,\r\n    HandTracking.TypeName,\r\n    HitTestLocation.TypeName,\r\n    HowlerAudioListener.TypeName,\r\n    HowlerAudioSource.TypeName,\r\n    ImageTexture.TypeName,\r\n    MouseLookComponent.TypeName,\r\n    PlaneDetection.TypeName,\r\n    PlayerHeight.TypeName,\r\n    TargetFramerate.TypeName,\r\n    TeleportComponent.TypeName,\r\n    Trail.TypeName,\r\n    TwoJointIkSolver.TypeName,\r\n    VideoTexture.TypeName,\r\n    VrModeActiveSwitch.TypeName,\r\n    Vrm.TypeName,\r\n    WasdControlsComponent.TypeName\r\n];", "import { Globals } from \"../pp/globals\";\r\n\r\nlet _myAudioManagers = new WeakMap();\r\n\r\nexport function getAudioManager(engine = Globals.getMainEngine()) {\r\n    return _myAudioManagers.get(engine);\r\n}\r\n\r\nexport function setAudioManager(audioManager, engine = Globals.getMainEngine()) {\r\n    _myAudioManagers.set(engine, audioManager);\r\n}\r\n\r\nexport function removeAudioManager(engine = Globals.getMainEngine()) {\r\n    _myAudioManagers.delete(engine);\r\n}\r\n\r\nexport function hasAudioManager(engine = Globals.getMainEngine()) {\r\n    return _myAudioManagers.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nexport function getWindow(engine = Globals.getMainEngine()) {\r\n    return window;\r\n}\r\n\r\nexport function getNavigator(engine = Globals.getMainEngine()) {\r\n    return getWindow(engine).navigator;\r\n}\r\n\r\nexport function getDocument(engine = Globals.getMainEngine()) {\r\n    return getWindow(engine).document;\r\n}\r\n\r\nexport function getBody(engine = Globals.getMainEngine()) {\r\n    return getDocument(engine).body;\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myObjectPoolManagers = new WeakMap();\r\n\r\nexport function getObjectPoolManager(engine = Globals.getMainEngine()) {\r\n    return _myObjectPoolManagers.get(engine);\r\n}\r\n\r\nexport function setObjectPoolManager(audioManager, engine = Globals.getMainEngine()) {\r\n    _myObjectPoolManagers.set(engine, audioManager);\r\n}\r\n\r\nexport function removeObjectPoolManager(engine = Globals.getMainEngine()) {\r\n    _myObjectPoolManagers.delete(engine);\r\n}\r\n\r\nexport function hasObjectPoolManager(engine = Globals.getMainEngine()) {\r\n    return _myObjectPoolManagers.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myVisualResourcesContainer = new WeakMap();\r\nlet _myVisualManagers = new WeakMap();\r\n\r\nexport function getVisualResources(engine = Globals.getMainEngineinEngine()) {\r\n    return _myVisualResourcesContainer.get(engine);\r\n}\r\n\r\nexport function setVisualResources(visualResources, engine = Globals.getMainEngine()) {\r\n    _myVisualResourcesContainer.set(engine, visualResources);\r\n}\r\n\r\nexport function removeVisualResources(engine = Globals.getMainEngine()) {\r\n    _myVisualResourcesContainer.delete(engine);\r\n}\r\n\r\nexport function hasVisualResources(engine = Globals.getMainEngine()) {\r\n    return _myVisualResourcesContainer.has(engine);\r\n}\r\n\r\nexport function getVisualManager(engine = Globals.getMainEngine()) {\r\n    return _myVisualManagers.get(engine);\r\n}\r\n\r\nexport function setVisualManager(visualManager, engine = Globals.getMainEngine()) {\r\n    _myVisualManagers.set(engine, visualManager);\r\n}\r\n\r\nexport function removeVisualManager(engine = Globals.getMainEngine()) {\r\n    _myVisualManagers.delete(engine);\r\n}\r\n\r\nexport function hasVisualManager(engine = Globals.getMainEngine()) {\r\n    return _myVisualManagers.has(engine);\r\n}", "import { SceneUtils } from \"./utils/scene_utils\";\r\n\r\nlet _myMainEngine = null;\r\nlet _myEngines = [];\r\n\r\nexport function initEngine(engine) {\r\n    if (engine != null) {\r\n        addEngine(engine);\r\n        if (getMainEngine() == null) {\r\n            setMainEngine(engine);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getMainEngine() {\r\n    return _myMainEngine;\r\n}\r\n\r\nexport function setMainEngine(engine) {\r\n    if (hasEngine(engine)) {\r\n        _myMainEngine = engine;\r\n    }\r\n}\r\n\r\nexport function removeMainEngine() {\r\n    _myMainEngine = null;\r\n}\r\n\r\nexport function getEngines() {\r\n    return _myEngines;\r\n}\r\n\r\nexport function addEngine(engine) {\r\n    removeEngine(engine);\r\n    _myEngines.push(engine);\r\n}\r\n\r\nexport function removeEngine(engine) {\r\n    let index = _myEngines.indexOf(engine);\r\n\r\n    if (index >= 0) {\r\n        _myEngines.splice(index, 1);\r\n\r\n        if (getMainEngine() == engine) {\r\n            removeMainEngine();\r\n        }\r\n    }\r\n}\r\n\r\nexport function hasEngine(engine) {\r\n    return _myEngines.indexOf(engine) >= 0;\r\n}\r\n\r\nexport function getScene(engine = getMainEngine()) {\r\n    let scene = null;\r\n\r\n    if (engine != null) {\r\n        scene = engine.scene;\r\n    }\r\n\r\n    return scene;\r\n}\r\n\r\nexport function getRoot(engine = getMainEngine()) {\r\n    let root = null;\r\n\r\n    let scene = getScene(engine);\r\n    if (scene != null) {\r\n        root = SceneUtils.getRoot(scene);\r\n    }\r\n\r\n    return root;\r\n}\r\n\r\nexport function getPhysics(engine = getMainEngine()) {\r\n    let physics = null;\r\n\r\n    if (engine != null) {\r\n        physics = engine.physics;\r\n    }\r\n\r\n    return physics;\r\n}\r\n\r\nexport function getCanvas(engine = getMainEngine()) {\r\n    let canvas = null;\r\n\r\n    if (engine != null) {\r\n        canvas = engine.canvas;\r\n    }\r\n\r\n    return canvas;\r\n}\r\n\r\nexport function getWASM(engine = getMainEngine()) {\r\n    let wasm = null;\r\n\r\n    if (engine != null) {\r\n        wasm = engine.wasm;\r\n    }\r\n\r\n    return wasm;\r\n}\r\n\r\nexport function getXR(engine = getMainEngine()) {\r\n    let xr = null;\r\n\r\n    if (engine != null) {\r\n        xr = engine.xr;\r\n    }\r\n\r\n    return xr;\r\n}", "export let EasingFunction = {\r\n    linear: t => t,\r\n    easeIn: t => t * t * t,\r\n    easeOut: t => (t - 1) * (t - 1) * (t - 1) + 1,\r\n    easeInOut: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n};\r\n\r\nexport let EPSILON = 0.000001;\r\nexport let EPSILON_SQUARED = EPSILON * EPSILON;\r\nexport let EPSILON_DEGREES = 0.00001;\r\n\r\nexport function clamp(value, start, end) {\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nexport function sign(value, zeroSign = 1) {\r\n    let sign = Math.sign(value);\r\n    if (sign == 0) {\r\n        sign = Math.sign(zeroSign);\r\n    }\r\n    return sign;\r\n}\r\n\r\nexport function toDegrees(angle) {\r\n    return angle * (180 / Math.PI);\r\n}\r\n\r\nexport function toRadians(angle) {\r\n    return angle * (Math.PI / 180);\r\n}\r\n\r\nexport function roundDecimal(number, decimalPlaces) {\r\n    let factor = Math.pow(10, decimalPlaces);\r\n    number = Math.round(number * factor) / factor;\r\n\r\n    return number;\r\n}\r\n\r\n// Start range value doesn't need to be lower than the end one, so you can map from [0,1] to [3,2], where 3 is greater than 2\r\nexport function mapToRange(value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n    if (originRangeStart == originRangeEnd) {\r\n        return newRangeStart;\r\n    }\r\n\r\n    let clampedValue = MathUtils.clamp(value, originRangeStart, originRangeEnd);\r\n\r\n    if (clampedValue == originRangeStart) {\r\n        return newRangeStart;\r\n    } else if (clampedValue == originRangeEnd) {\r\n        return newRangeEnd;\r\n    }\r\n\r\n    let newValue = newRangeStart + ((newRangeEnd - newRangeStart) / (originRangeEnd - originRangeStart)) * (clampedValue - originRangeStart);\r\n    let clampedNewValue = MathUtils.clamp(newValue, newRangeStart, newRangeEnd);\r\n    return clampedNewValue;\r\n}\r\n\r\n// Range is [start, end)\r\nexport function random(start = 0, end = 1) {\r\n    return Math.random() * (end - start) + start;\r\n}\r\n\r\n// Range is [start, end]\r\nexport function randomInt(start, end) {\r\n    let min = Math.min(start, end);\r\n    let max = Math.max(start, end);\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function randomBool() {\r\n    return MathUtils.randomInt(0, 1) == 0;\r\n}\r\n\r\n// Return 1 or -1\r\nexport function randomSign() {\r\n    return (Math.random() < 0.5) ? 1 : -1;\r\n}\r\n\r\n// You give it a list of parameters and returns one\r\nexport function randomPick(...args) {\r\n    let random = null;\r\n\r\n    if (args.length > 0) {\r\n        if (args.length == 1 && args[0].length != null) {\r\n            if (args[0].length > 0) {\r\n                let randomIndex = MathUtils.randomInt(0, args[0].length - 1);\r\n                random = args[0][randomIndex];\r\n            }\r\n        } else {\r\n            let randomIndex = MathUtils.randomInt(0, args.length - 1);\r\n            random = args[randomIndex];\r\n        }\r\n    }\r\n\r\n    return random;\r\n}\r\n\r\nexport function randomUUID() {\r\n    return crypto.randomUUID();\r\n}\r\n\r\nexport function lerp(from, to, interpolationFactor) {\r\n    if (interpolationFactor <= 0) {\r\n        return from;\r\n    } else if (interpolationFactor >= 1) {\r\n        return to;\r\n    }\r\n\r\n    return interpolationFactor * (to - from) + from;\r\n}\r\n\r\nexport function interpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return MathUtils.lerp(from, to, lerpFactor);\r\n}\r\n\r\nexport function angleDistance(from, to) {\r\n    return MathUtils.angleDistanceDegrees(from, to);\r\n}\r\n\r\nexport function angleDistanceDegrees(from, to) {\r\n    return Math.abs(MathUtils.angleDistanceSignedDegrees(from, to));\r\n}\r\n\r\nexport function angleDistanceRadians(from, to) {\r\n    return Math.abs(MathUtils.angleDistanceSignedRadians(from, to));\r\n}\r\n\r\nexport function angleDistanceSigned(from, to) {\r\n    return MathUtils.angleDistanceSignedDegrees(from, to);\r\n}\r\n\r\nexport function angleDistanceSignedDegrees(from, to) {\r\n    let clampedFrom = MathUtils.angleClampDegrees(from, true);\r\n    let clampedTo = MathUtils.angleClampDegrees(to, true);\r\n\r\n    let distance = clampedTo - clampedFrom;\r\n    if (clampedTo - clampedFrom > 180) {\r\n        distance = (clampedTo - clampedFrom) - 360;\r\n    } else if (clampedTo - clampedFrom < -180) {\r\n        distance = (clampedTo - clampedFrom) + 360;\r\n    }\r\n\r\n    return distance;\r\n}\r\n\r\nexport function angleDistanceSignedRadians(from, to) {\r\n    return MathUtils.toRadians(MathUtils.angleDistanceSignedDegrees(MathUtils.toDegrees(from), MathUtils.toDegrees(to)));\r\n}\r\n\r\n// Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n// If usePositiveRange is true, the angle will be clamped to 0/360\r\nexport function angleClamp(angle, usePositiveRange = false) {\r\n    return MathUtils.angleClampDegrees(angle, usePositiveRange);\r\n}\r\n\r\n// Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n// If usePositiveRange is true, the angle will be clamped to 0/360\r\nexport function angleClampDegrees(angle, usePositiveRange = false) {\r\n    let clampedAngle = angle % 360;\r\n\r\n    if (clampedAngle < 0) {\r\n        clampedAngle += 360;\r\n    }\r\n\r\n    if (!usePositiveRange) {\r\n        if (clampedAngle > 180) {\r\n            clampedAngle -= 360;\r\n        }\r\n    }\r\n\r\n    return clampedAngle;\r\n}\r\n\r\n// Clamp the angle to -Pi/+Pi, so that, for example, 270 will be -90\r\n// If usePositiveRange is true, the angle will be clamped to 0/2Pi\r\nexport function angleClampRadians(angle, usePositiveRange = false) {\r\n    return MathUtils.toRadians(MathUtils.angleClampDegrees(MathUtils.toDegrees(angle), usePositiveRange));\r\n}\r\n\r\n// The range goes from start to end by going toward the positive direction (if useShortestAngle is false)\r\n// [20,300] is a 280 degrees range, [300, 20] is an 80 degrees range, [-150,-170] = [210, 190] is a 240 degrees range, [0, -10] = [0, 350] is a 350 degrees range\r\nexport function isInsideAngleRange(angle, start, end, useShortestAngle = false) {\r\n    return MathUtils.isInsideAngleRangeDegrees(angle, start, end, useShortestAngle);\r\n}\r\n\r\nexport function isInsideAngleRangeDegrees(angle, start, end, useShortestAngle = false) {\r\n    let insideAngleRange = false;\r\n\r\n    let anglePositive = MathUtils.angleClampDegrees(angle, true);\r\n    let startPositive = MathUtils.angleClampDegrees(start, true);\r\n    let endPositive = MathUtils.angleClampDegrees(end, true);\r\n\r\n    if (useShortestAngle) {\r\n        if (MathUtils.angleDistanceSignedDegrees(startPositive, endPositive) < 0) {\r\n            let temp = startPositive;\r\n            startPositive = endPositive;\r\n            endPositive = temp;\r\n        }\r\n    }\r\n\r\n    if (startPositive < endPositive) {\r\n        insideAngleRange = anglePositive >= startPositive && anglePositive <= endPositive;\r\n    } else {\r\n        insideAngleRange = anglePositive >= startPositive || anglePositive <= endPositive;\r\n    }\r\n\r\n    return insideAngleRange;\r\n}\r\n\r\nexport function isInsideAngleRangeRadians(angle, start, end, useShortestAngle = false) {\r\n    return MathUtils.isInsideAngleRangeDegrees(MathUtils.toDegrees(angle), MathUtils.toDegrees(start), MathUtils.toDegrees(end), useShortestAngle);\r\n}\r\n\r\nexport let MathUtils = {\r\n    EPSILON,\r\n    EPSILON_SQUARED,\r\n    EPSILON_DEGREES,\r\n    clamp,\r\n    sign,\r\n    toDegrees,\r\n    toRadians,\r\n    roundDecimal,\r\n    mapToRange,\r\n    random,\r\n    randomInt,\r\n    randomBool,\r\n    randomSign,\r\n    randomPick,\r\n    randomUUID,\r\n    lerp,\r\n    interpolate,\r\n    angleDistance,\r\n    angleDistanceDegrees,\r\n    angleDistanceRadians,\r\n    angleDistanceSigned,\r\n    angleDistanceSignedDegrees,\r\n    angleDistanceSignedRadians,\r\n    angleClamp,\r\n    angleClampDegrees,\r\n    angleClampRadians,\r\n    isInsideAngleRange,\r\n    isInsideAngleRangeDegrees,\r\n    isInsideAngleRangeRadians\r\n};", "import { mat3 as gl_mat3, quat as gl_quat } from \"gl-matrix\";\r\nimport { QuatUtils, create as quat_utils_create } from \"./quat_utils\";\r\nimport { Vec3Utils } from \"./vec3_utils\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    let out = gl_mat3.create();\r\n\r\n    if (m00 !== undefined) {\r\n        set(out,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function set(matrix,\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    if (m01 === undefined) {\r\n        gl_mat3.set(matrix,\r\n            m00, m00, m00,\r\n            m00, m00, m00,\r\n            m00, m00, m00);\r\n    } else {\r\n        gl_mat3.set(matrix,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n    return matrix;\r\n}\r\n\r\n// New Functions\r\n\r\nexport let toDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function toDegrees(matrix, out = Vec3Utils.create()) {\r\n        Mat3Utils.toQuat(matrix, quat);\r\n        QuatUtils.toDegrees(quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let toRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function toRadians(matrix, out = Vec3Utils.create()) {\r\n        Mat3Utils.toQuat(matrix, quat);\r\n        QuatUtils.toRadians(quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function toQuat(matrix, out = QuatUtils.create()) {\r\n    gl_quat.fromMat3(out, matrix);\r\n    return out;\r\n}\r\n\r\nexport function fromAxes(leftAxis, upAxis, forwardAxis, out = Mat3Utils.create()) {\r\n    Mat3Utils.set(out,\r\n        leftAxis[0], leftAxis[1], leftAxis[2],\r\n        upAxis[0], upAxis[1], upAxis[2],\r\n        forwardAxis[0], forwardAxis[1], forwardAxis[2]);\r\n    return out;\r\n}\r\n\r\nexport let Mat3Utils = {\r\n    create,\r\n    set,\r\n    toDegrees,\r\n    toRadians,\r\n    toQuat,\r\n    fromAxes\r\n};", "import { mat3 as gl_mat3, quat as gl_quat } from \"gl-matrix\";\r\nimport { ArrayUtils } from \"./array_utils\";\r\nimport { Mat3Utils, create as mat3_utils_create } from \"./mat3_utils\";\r\nimport { EasingFunction, MathUtils } from \"./math_utils\";\r\nimport { Vec3Utils, create as vec3_utils_create } from \"./vec3_utils\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(x, y, z, w) {\r\n    let out = gl_quat.create();\r\n\r\n    if (x !== undefined) {\r\n        QuatUtils.set(out, x, y, z, w);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function set(quat, x, y, z, w) {\r\n    if (y === undefined) {\r\n        gl_quat.set(quat, x, x, x, x);\r\n    } else {\r\n        gl_quat.set(quat, x, y, z, w);\r\n    }\r\n\r\n    return quat;\r\n}\r\n\r\nexport function normalize(quat, out = QuatUtils.create()) {\r\n    gl_quat.normalize(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_quat.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function clone(quat, out = QuatUtils.create()) {\r\n    QuatUtils.copy(quat, out);\r\n    return out;\r\n}\r\n\r\nexport function identity(quat) {\r\n    gl_quat.identity(quat);\r\n    return quat;\r\n}\r\n\r\nexport function length(quat) {\r\n    return gl_quat.length(quat);\r\n}\r\n\r\nexport function lengthSquared(quat) {\r\n    return gl_quat.squaredLength(quat);\r\n}\r\n\r\nexport function invert(quat, out = QuatUtils.create()) {\r\n    gl_quat.invert(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function conjugate(quat, out = QuatUtils.create()) {\r\n    gl_quat.conjugate(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function mul(first, second, out = QuatUtils.create()) {\r\n    gl_quat.mul(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport let getAxis = function () {\r\n    let zero = vec3_utils_create(0, 0, 0);\r\n    return function getAxis(quat, out = Vec3Utils.create()) {\r\n        let angle = gl_quat.getAxisAngle(out, quat);\r\n        if (angle <= MathUtils.EPSILON) {\r\n            Vec3Utils.copy(zero, out);\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getAngle(quat) {\r\n    return QuatUtils.getAngleDegrees(quat);\r\n}\r\n\r\n\r\nexport function getAngleDegrees(quat) {\r\n    let angle = QuatUtils.getAngleRadians(quat);\r\n    return MathUtils.toDegrees(angle);\r\n}\r\n\r\nexport let getAngleRadians = function () {\r\n    let vector = vec3_utils_create();\r\n    return function getAngleRadians(quat) {\r\n        let angle = gl_quat.getAxisAngle(vector, quat);\r\n        return angle;\r\n    };\r\n}();\r\n\r\nexport function getAxisScaled(quat, out = Vec3Utils.create()) {\r\n    return QuatUtils.getAxisScaledDegrees(quat, out);\r\n}\r\n\r\nexport function getAxisScaledDegrees(quat, out = Vec3Utils.create()) {\r\n    QuatUtils.getAxis(quat, out);\r\n    let angle = QuatUtils.getAngleDegrees(quat);\r\n    Vec3Utils.scale(out, angle, out);\r\n    return out;\r\n}\r\n\r\nexport let getAxisScaledRadians = function () {\r\n    let zero = vec3_utils_create(0, 0, 0);\r\n    return function getAxisScaledRadians(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.getAxis(quat, out);\r\n        let angle = QuatUtils.getAngleRadians(quat);\r\n        if (angle <= MathUtils.EPSILON) {\r\n            Vec3Utils.copy(zero, out);\r\n        } else {\r\n            Vec3Utils.scale(out, angle, out);\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getAxes(quat, out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n    QuatUtils.getLeft(quat, out[0]);\r\n    QuatUtils.getUp(quat, out[1]);\r\n    QuatUtils.getForward(quat, out[2]);\r\n    return out;\r\n}\r\n\r\nexport let getForward = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getForward(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getBackward(quat, out) {\r\n    out = QuatUtils.getForward(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport let getLeft = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getLeft(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getRight(quat, out) {\r\n    out = QuatUtils.getLeft(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport let getUp = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getUp(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getDown(quat, out) {\r\n    out = QuatUtils.getUp(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport function setAxes(quat, left, up, forward) {\r\n    if (forward != null) {\r\n        return QuatUtils.setForward(quat, forward, up, left);\r\n    } else if (up != null) {\r\n        return QuatUtils.setUp(quat, up, forward, left);\r\n    } else {\r\n        return QuatUtils.setLeft(quat, left, up, forward);\r\n    }\r\n}\r\n\r\nexport function setForward(quat, forward, up = null, left = null) {\r\n    return _setAxes(quat, [left, up, forward], [2, 1, 0]);\r\n}\r\n\r\nexport let setBackward = function () {\r\n    let forward = vec3_utils_create();\r\n    return function setBackward(quat, backward, up = null, left = null) {\r\n        Vec3Utils.negate(backward, forward);\r\n        return _setAxes(quat, [left, up, forward], [2, 1, 0]);\r\n    };\r\n}();\r\n\r\nexport function setUp(quat, up, forward = null, left = null) {\r\n    return _setAxes(quat, [left, up, forward], [1, 2, 0]);\r\n}\r\n\r\nexport let setDown = function () {\r\n    let up = vec3_utils_create();\r\n    return function setDown(quat, down, forward = null, left = null) {\r\n        Vec3Utils.negate(down, up);\r\n        return _setAxes(quat, [left, up, forward], [1, 2, 0]);\r\n    };\r\n}();\r\n\r\nexport function setLeft(quat, left, up = null, forward = null) {\r\n    return _setAxes(quat, [left, up, forward], [0, 1, 2]);\r\n}\r\n\r\nexport let setRight = function () {\r\n    let left = vec3_utils_create();\r\n    return function setRight(quat, right, up = null, forward = null) {\r\n        Vec3Utils.negate(right, left);\r\n        return _setAxes(quat, [left, up, forward], [0, 1, 2]);\r\n    };\r\n}();\r\n\r\nexport function toWorld(quat, parentQuat, out = QuatUtils.create()) {\r\n    QuatUtils.mul(parentQuat, quat, out);\r\n    return out;\r\n}\r\n\r\nexport let toLocal = function () {\r\n    let invertQuat = create();\r\n    return function toLocal(quat, parentQuat, out = QuatUtils.create()) {\r\n        QuatUtils.conjugate(parentQuat, invertQuat);\r\n        QuatUtils.mul(invertQuat, quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function fromAxis(angle, axis, out = QuatUtils.create()) {\r\n    return QuatUtils.fromAxisDegrees(angle, axis, out);\r\n}\r\n\r\nexport function fromAxisDegrees(angle, axis, out = QuatUtils.create()) {\r\n    QuatUtils.fromAxisRadians(MathUtils.toRadians(angle), axis, out);\r\n    return out;\r\n}\r\n\r\nexport function fromAxisRadians(angle, axis, out = QuatUtils.create()) {\r\n    gl_quat.setAxisAngle(out, axis, angle);\r\n    return out;\r\n}\r\n\r\nexport let fromAxes = function () {\r\n    let matrix = mat3_utils_create();\r\n    return function fromAxes(leftAxis, upAxis, forwardAxis, out = QuatUtils.create()) {\r\n        Mat3Utils.fromAxes(leftAxis, upAxis, forwardAxis, matrix);\r\n        return Mat3Utils.toQuat(matrix, out);\r\n    };\r\n}();\r\n\r\n// New Functions\r\n\r\nexport let fromRadians = function () {\r\n    let vector = vec3_utils_create();\r\n    return function fromRadians(radiansRotation, out = QuatUtils.create()) {\r\n        Vec3Utils.toDegrees(radiansRotation, vector);\r\n        return QuatUtils.fromDegrees(vector, out);\r\n    };\r\n}();\r\n\r\nexport function fromDegrees(degreesRotation, out = QuatUtils.create()) {\r\n    gl_quat.fromEuler(out, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return out;\r\n}\r\n\r\nexport let toRadians = function () {\r\n    let matrix = mat3_utils_create();\r\n    return function toRadians(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, matrix);\r\n\r\n        // Rotation order is ZYX \r\n        out[1] = Math.asin(-MathUtils.clamp(matrix[2], -1, 1));\r\n\r\n        if (Math.abs(matrix[2]) < (1 - MathUtils.EPSILON)) {\r\n            out[0] = Math.atan2(matrix[5], matrix[8]);\r\n            out[2] = Math.atan2(matrix[1], matrix[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-matrix[3], matrix[4]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function toDegrees(quat, out = Vec3Utils.create()) {\r\n    QuatUtils.toRadians(quat, out);\r\n    Vec3Utils.toDegrees(out, out);\r\n    return out;\r\n}\r\n\r\nexport function isNormalized(quat, epsilon = MathUtils.EPSILON) {\r\n    return Math.abs(QuatUtils.lengthSquared(quat) - 1) < epsilon;\r\n}\r\n\r\nexport function addRotation(first, second, out) {\r\n    return QuatUtils.addRotationDegrees(first, second, out);\r\n}\r\n\r\nexport let addRotationDegrees = function () {\r\n    let secondQuat = create();\r\n    return function addRotationDegrees(first, second, out) {\r\n        Vec3Utils.degreesToQuat(second, secondQuat);\r\n        return QuatUtils.addRotationQuat(first, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport let addRotationRadians = function () {\r\n    let secondQuat = create();\r\n    return function addRotationRadians(first, second, out) {\r\n        Vec3Utils.radiansToQuat(second, secondQuat);\r\n        return QuatUtils.addRotationQuat(first, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport function addRotationQuat(first, second, out = QuatUtils.create()) {\r\n    QuatUtils.mul(second, first, out);\r\n    return out;\r\n}\r\n\r\nexport function subRotation(first, second, out) {\r\n    return QuatUtils.subRotationDegrees(first, second, out);\r\n}\r\n\r\nexport let subRotationDegrees = function () {\r\n    let secondQuat = create();\r\n    return function subRotationDegrees(first, second, out) {\r\n        Vec3Utils.degreesToQuat(second, secondQuat);\r\n        return QuatUtils.subRotationQuat(first, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport let subRotationRadians = function () {\r\n    let secondQuat = create();\r\n    return function subRotationRadians(first, second, out) {\r\n        Vec3Utils.radiansToQuat(second, secondQuat);\r\n        return QuatUtils.subRotationQuat(first, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport let subRotationQuat = function () {\r\n    let inverse = create();\r\n    return function subRotationQuat(first, second, out = QuatUtils.create()) {\r\n        QuatUtils.invert(second, inverse);\r\n        QuatUtils.mul(first, inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function rotationTo(from, to, out) {\r\n    return QuatUtils.rotationToDegrees(from, to, out);\r\n}\r\n\r\nexport let rotationToDegrees = function () {\r\n    let toQuat = create();\r\n    return function rotationToDegrees(from, to, out) {\r\n        Vec3Utils.degreesToQuat(to, toQuat);\r\n        return QuatUtils.rotationToQuat(from, toQuat, out);\r\n    };\r\n}();\r\n\r\nexport let rotationToRadians = function () {\r\n    let toQuat = create();\r\n    return function rotationToRadians(from, to, out) {\r\n        Vec3Utils.radiansToQuat(to, toQuat);\r\n        return QuatUtils.rotationToQuat(from, toQuat, out);\r\n    };\r\n}();\r\n\r\nexport function rotationToQuat(from, to, out) {\r\n    return QuatUtils.normalize(QuatUtils.subRotationQuat(to, from, out), out);\r\n}\r\n\r\nexport function rotationAroundAxis(quat, axis, out) {\r\n    return QuatUtils.rotationAroundAxisDegrees(quat, axis, out);\r\n}\r\n\r\nexport let rotationAroundAxisDegrees = function () {\r\n    let rotationAroundQuat = create();\r\n    return function rotationAroundAxisDegrees(quat, axis, out = Vec3Utils.create()) {\r\n        QuatUtils.rotationAroundAxisQuat(quat, axis, rotationAroundQuat);\r\n        return QuatUtils.toDegrees(rotationAroundQuat, out);\r\n    };\r\n}();\r\n\r\nexport let rotationAroundAxisRadians = function () {\r\n    let rotationAroundQuat = create();\r\n    return function rotationAroundAxisRadians(quat, axis, out = Vec3Utils.create()) {\r\n        QuatUtils.rotationAroundAxisQuat(quat, axis, rotationAroundQuat);\r\n        return QuatUtils.toRadians(rotationAroundQuat, out);\r\n    };\r\n}();\r\n\r\nexport function rotationAroundAxisQuat(quat, axis, out = QuatUtils.create()) {\r\n    return QuatUtils.getTwist(quat, axis, out);\r\n}\r\n\r\nexport let getTwist = function () {\r\n    let rotationAxis = vec3_utils_create();\r\n    let projection = vec3_utils_create();\r\n    let rotationAlongAxis = create();\r\n    return function getTwist(quat, axis, out = QuatUtils.create()) {\r\n        rotationAxis[0] = quat[0];\r\n        rotationAxis[1] = quat[1];\r\n        rotationAxis[2] = quat[2];\r\n\r\n        let dotProd = Vec3Utils.dot(axis, rotationAxis);\r\n        Vec3Utils.scale(axis, dotProd, projection);\r\n        rotationAlongAxis[0] = projection[0];\r\n        rotationAlongAxis[1] = projection[1];\r\n        rotationAlongAxis[2] = projection[2];\r\n        rotationAlongAxis[3] = quat[3];\r\n        QuatUtils.normalize(rotationAlongAxis, rotationAlongAxis);\r\n        if (dotProd < 0) {\r\n            rotationAlongAxis[0] = -rotationAlongAxis[0];\r\n            rotationAlongAxis[1] = -rotationAlongAxis[1];\r\n            rotationAlongAxis[2] = -rotationAlongAxis[2];\r\n            rotationAlongAxis[3] = -rotationAlongAxis[3];\r\n        }\r\n\r\n        return QuatUtils.copy(rotationAlongAxis, out);\r\n    };\r\n}();\r\n\r\nexport let getSwing = function () {\r\n    let twist = create();\r\n    return function getSwing(quat, axis, out = QuatUtils.create()) {\r\n        QuatUtils.getTwist(quat, axis, twist);\r\n        QuatUtils.getSwingFromTwist(quat, twist, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getSwingFromTwist(quat, twist, out = QuatUtils.create()) {\r\n    return QuatUtils.subRotationQuat(quat, twist, out);\r\n}\r\n\r\nexport let getTwistFromSwing = function () {\r\n    let inverse = create();\r\n    return function getTwistFromSwing(quat, swing, out = QuatUtils.create()) {\r\n        QuatUtils.conjugate(swing, inverse);\r\n        QuatUtils.addRotationQuat(quat, inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function fromTwistSwing(twist, swing, out = QuatUtils.create()) {\r\n    return QuatUtils.addRotationQuat(twist, swing, out);\r\n}\r\n\r\nexport function toMatrix(quat, out = Mat3Utils.create()) {\r\n    gl_mat3.fromQuat(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function rotate(first, second, out) {\r\n    return QuatUtils.rotateDegrees(first, second, out);\r\n}\r\n\r\nexport function rotateDegrees(first, second, out) {\r\n    return QuatUtils.addRotationDegrees(first, second, out);\r\n}\r\n\r\nexport function rotateRadians(first, second, out) {\r\n    return QuatUtils.addRotationRadians(first, second, out);\r\n}\r\n\r\nexport function rotateQuat(first, second, out) {\r\n    return QuatUtils.addRotationQuat(first, second, out);\r\n}\r\n\r\nexport function rotateAxis(quat, angle, axis, out) {\r\n    return QuatUtils.rotateAxisDegrees(quat, angle, axis, out);\r\n}\r\n\r\nexport let rotateAxisDegrees = function () {\r\n    let secondQuat = create();\r\n    return function rotateAxisDegrees(quat, angle, axis, out) {\r\n        QuatUtils.fromAxisDegrees(angle, axis, secondQuat);\r\n        return QuatUtils.rotateQuat(quat, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport let rotateAxisRadians = function () {\r\n    let secondQuat = create();\r\n    return function rotateAxisRadians(quat, angle, axis, out) {\r\n        QuatUtils.fromAxisRadians(angle, axis, secondQuat);\r\n        return QuatUtils.rotateQuat(quat, secondQuat, out);\r\n    };\r\n}();\r\n\r\nexport function lerp(from, to, interpolationFactor, out = QuatUtils.create()) {\r\n    if (interpolationFactor <= 0) {\r\n        QuatUtils.copy(from, out);\r\n        return out;\r\n    } else if (interpolationFactor >= 1) {\r\n        QuatUtils.copy(to, out);\r\n        return out;\r\n    }\r\n\r\n    gl_quat.lerp(out, from, to, interpolationFactor);\r\n    return out;\r\n}\r\n\r\nexport function interpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear, out = QuatUtils.create()) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return QuatUtils.lerp(from, to, lerpFactor, out);\r\n}\r\n\r\nexport function slerp(from, to, interpolationFactor, out = QuatUtils.create()) {\r\n    if (interpolationFactor <= 0) {\r\n        QuatUtils.copy(from, out);\r\n        return out;\r\n    } else if (interpolationFactor >= 1) {\r\n        QuatUtils.copy(to, out);\r\n        return out;\r\n    }\r\n\r\n    gl_quat.slerp(out, from, to, interpolationFactor);\r\n    return out;\r\n}\r\n\r\nexport function sinterpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear, out = QuatUtils.create()) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return QuatUtils.slerp(from, to, lerpFactor, out);\r\n}\r\n\r\nexport let QuatUtils = {\r\n    create,\r\n    set,\r\n    normalize,\r\n    copy,\r\n    clone,\r\n    identity,\r\n    length,\r\n    lengthSquared,\r\n    invert,\r\n    conjugate,\r\n    mul,\r\n    getAxis,\r\n    getAngle,\r\n    getAngleDegrees,\r\n    getAngleRadians,\r\n    getAxisScaled,\r\n    getAxisScaledDegrees,\r\n    getAxisScaledRadians,\r\n    getAxes,\r\n    getForward,\r\n    getBackward,\r\n    getLeft,\r\n    getRight,\r\n    getUp,\r\n    getDown,\r\n    setAxes,\r\n    setForward,\r\n    setBackward,\r\n    setUp,\r\n    setDown,\r\n    setLeft,\r\n    setRight,\r\n    toWorld,\r\n    toLocal,\r\n    fromAxis,\r\n    fromAxisDegrees,\r\n    fromAxisRadians,\r\n    fromAxes,\r\n    fromRadians,\r\n    fromDegrees,\r\n    toRadians,\r\n    toDegrees,\r\n    isNormalized,\r\n    addRotation,\r\n    addRotationDegrees,\r\n    addRotationRadians,\r\n    addRotationQuat,\r\n    subRotation,\r\n    subRotationDegrees,\r\n    subRotationRadians,\r\n    subRotationQuat,\r\n    rotationTo,\r\n    rotationToDegrees,\r\n    rotationToRadians,\r\n    rotationToQuat,\r\n    rotationAroundAxis,\r\n    rotationAroundAxisDegrees,\r\n    rotationAroundAxisRadians,\r\n    rotationAroundAxisQuat,\r\n    getTwist,\r\n    getSwing,\r\n    getSwingFromTwist,\r\n    getTwistFromSwing,\r\n    fromTwistSwing,\r\n    toMatrix,\r\n    rotate,\r\n    rotateDegrees,\r\n    rotateRadians,\r\n    rotateQuat,\r\n    rotateAxis,\r\n    rotateAxisDegrees,\r\n    rotateAxisRadians,\r\n    lerp,\r\n    interpolate,\r\n    slerp,\r\n    sinterpolate\r\n};\r\n\r\n\r\n\r\nlet _setAxes = function () {\r\n    let fixedAxes = [vec3_utils_create(), vec3_utils_create(), vec3_utils_create()];\r\n\r\n    let fixedAxesFixSignMap = [\r\n        [1, -1, 1],\r\n        [1, 1, -1],\r\n        [-1, 1, -1]\r\n    ];\r\n\r\n    let fixedLeft = vec3_utils_create();\r\n    let fixedUp = vec3_utils_create();\r\n    let fixedForward = vec3_utils_create();\r\n\r\n    let currentAxis = vec3_utils_create();\r\n\r\n    let rotationAxis = vec3_utils_create();\r\n    let rotationMat = mat3_utils_create();\r\n    let rotationQuat = create();\r\n    return function _setAxes(quat, axes, priority) {\r\n        let firstAxis = axes[priority[0]];\r\n        let secondAxis = axes[priority[1]];\r\n        let thirdAxis = axes[priority[2]];\r\n\r\n        if (firstAxis == null || Vec3Utils.isZero(firstAxis, MathUtils.EPSILON)) {\r\n            return;\r\n        }\r\n\r\n        let secondAxisValid = false;\r\n        if (secondAxis != null) {\r\n            let angleBetween = Vec3Utils.angleRadians(firstAxis, secondAxis);\r\n            if (angleBetween > MathUtils.EPSILON) {\r\n                secondAxisValid = true;\r\n            }\r\n        }\r\n\r\n        let thirdAxisValid = false;\r\n        if (thirdAxis != null) {\r\n            let angleBetween = Vec3Utils.angleRadians(firstAxis, thirdAxis);\r\n            if (angleBetween > MathUtils.EPSILON) {\r\n                thirdAxisValid = true;\r\n            }\r\n        }\r\n\r\n        if (secondAxisValid || thirdAxisValid) {\r\n            let crossAxis = null;\r\n            let secondAxisIndex = null;\r\n            let thirdAxisIndex = null;\r\n            if (secondAxisValid) {\r\n                crossAxis = secondAxis;\r\n                secondAxisIndex = 1;\r\n                thirdAxisIndex = 2;\r\n            } else {\r\n                crossAxis = thirdAxis;\r\n                secondAxisIndex = 2;\r\n                thirdAxisIndex = 1;\r\n            }\r\n\r\n            let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n            Vec3Utils.cross(firstAxis, crossAxis, fixedAxes[thirdAxisIndex]);\r\n            Vec3Utils.scale(fixedAxes[thirdAxisIndex], fixSignMap[priority[thirdAxisIndex]], fixedAxes[thirdAxisIndex]);\r\n\r\n            Vec3Utils.cross(firstAxis, fixedAxes[thirdAxisIndex], fixedAxes[secondAxisIndex]);\r\n            Vec3Utils.scale(fixedAxes[secondAxisIndex], fixSignMap[priority[secondAxisIndex]], fixedAxes[secondAxisIndex]);\r\n\r\n            Vec3Utils.cross(fixedAxes[1], fixedAxes[2], fixedAxes[0]);\r\n            Vec3Utils.scale(fixedAxes[0], fixSignMap[priority[0]], fixedAxes[0]);\r\n\r\n            Vec3Utils.normalize(fixedAxes[ArrayUtils.findIndexEqual(priority, 0)], fixedLeft);\r\n            Vec3Utils.normalize(fixedAxes[ArrayUtils.findIndexEqual(priority, 1)], fixedUp);\r\n            Vec3Utils.normalize(fixedAxes[ArrayUtils.findIndexEqual(priority, 2)], fixedForward);\r\n\r\n            Mat3Utils.set(rotationMat,\r\n                fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                fixedUp[0], fixedUp[1], fixedUp[2],\r\n                fixedForward[0], fixedForward[1], fixedForward[2]\r\n            );\r\n\r\n            Mat3Utils.toQuat(rotationMat, rotationQuat);\r\n\r\n            QuatUtils.copy(rotationQuat, quat);\r\n        } else {\r\n            if (priority[0] == 0) {\r\n                QuatUtils.getLeft(quat, currentAxis);\r\n            } else if (priority[0] == 1) {\r\n                QuatUtils.getUp(quat, currentAxis);\r\n            } else {\r\n                QuatUtils.getForward(quat, currentAxis);\r\n            }\r\n\r\n            let angleBetween = Vec3Utils.angleRadians(firstAxis, currentAxis);\r\n            if (angleBetween > MathUtils.EPSILON) {\r\n                Vec3Utils.cross(currentAxis, firstAxis, rotationAxis);\r\n                Vec3Utils.normalize(rotationAxis, rotationAxis);\r\n\r\n                if (Vec3Utils.isZero(rotationAxis)) {\r\n                    Vec3Utils.perpendicularRandom(currentAxis, rotationAxis);\r\n                }\r\n\r\n                QuatUtils.fromAxisRadians(angleBetween, rotationAxis, rotationQuat);\r\n                QuatUtils.rotateQuat(quat, rotationQuat, quat);\r\n            }\r\n        }\r\n\r\n        return quat;\r\n    };\r\n}();", "export function first(array) {\r\n    return array.length > 0 ? array[0] : undefined;\r\n}\r\n\r\nexport function last(array) {\r\n    return array.length > 0 ? array[array.length - 1] : undefined;\r\n}\r\n\r\nexport function has(array, callback) {\r\n    return ArrayUtils.find(array, callback) != undefined;\r\n}\r\n\r\nexport function hasEqual(array, elementToFind, elementsEqualCallback = null) {\r\n    return ArrayUtils.findEqual(array, elementToFind, elementsEqualCallback) != undefined;\r\n}\r\n\r\nexport function find(array, callback) {\r\n    let elementFound = undefined;\r\n\r\n    let index = array.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementFound = array[index];\r\n    }\r\n\r\n    return elementFound;\r\n}\r\n\r\nexport function findIndex(array, callback) {\r\n    return array.findIndex(callback);\r\n}\r\n\r\nexport function findAll(array, callback) {\r\n    let elementsFound = array.filter(callback);\r\n\r\n    return elementsFound;\r\n}\r\n\r\nexport function findAllIndexes(array, callback) {\r\n    let indexes = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        let element = array[i];\r\n        if (callback(element)) {\r\n            indexes.push(i);\r\n        }\r\n    }\r\n    return indexes;\r\n}\r\n\r\nexport function findEqual(array, elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        let index = ArrayUtils.findIndexEqual(array, elementToFind);\r\n        return index < 0 ? undefined : array[index];\r\n    }\r\n\r\n    let elementFound = undefined\r\n    for (let i = 0; i < array.length; i++) {\r\n        let currentElement = array[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            elementFound = currentElement;\r\n            break;\r\n        }\r\n    }\r\n    return elementFound;\r\n}\r\n\r\nexport function findAllEqual(array, elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return _findAllEqualOptimized(array, elementToFind, false);\r\n    }\r\n\r\n    let elementsFound = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        let currentElement = array[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            elementsFound.push(currentElement);\r\n        }\r\n    }\r\n    return elementsFound;\r\n}\r\n\r\nexport function findIndexEqual(array, elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return array.indexOf(elementToFind);\r\n    }\r\n\r\n    let indexFound = -1;\r\n    for (let i = 0; i < array.length; i++) {\r\n        let currentElement = array[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            indexFound = i;\r\n            break;\r\n        }\r\n    }\r\n    return indexFound;\r\n}\r\n\r\nexport function findAllIndexesEqual(array, elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return _findAllEqualOptimized(array, elementToFind, true);\r\n    }\r\n\r\n    let indexesFound = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        let currentElement = array[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            indexesFound.push(i);\r\n        }\r\n    }\r\n    return indexesFound;\r\n}\r\n\r\nexport function removeIndex(array, index) {\r\n    let elementRemoved = undefined;\r\n\r\n    if (index >= 0 && index < array.length) {\r\n        let arrayRemoved = array.splice(index, 1);\r\n        if (arrayRemoved.length == 1) {\r\n            elementRemoved = arrayRemoved[0];\r\n        }\r\n    }\r\n\r\n    return elementRemoved;\r\n}\r\n\r\nexport function removeAllIndexes(array, indexes) {\r\n    let elementsRemoved = [];\r\n\r\n    for (let index of indexes) {\r\n        let elementRemoved = ArrayUtils.removeIndex(array, index);\r\n        if (elementRemoved !== undefined) {\r\n            elementsRemoved.push(elementRemoved);\r\n        }\r\n    }\r\n\r\n    return elementsRemoved;\r\n}\r\n\r\nexport function remove(array, callback) {\r\n    let elementRemoved = undefined;\r\n\r\n    let index = array.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementRemoved = ArrayUtils.removeIndex(array, index);\r\n    }\r\n\r\n    return elementRemoved;\r\n}\r\n\r\nexport function removeAll(array, callback) {\r\n    let elementsRemoved = [];\r\n\r\n    let currentElement = undefined;\r\n    do {\r\n        currentElement = ArrayUtils.remove(array, callback);\r\n        if (currentElement !== undefined) {\r\n            elementsRemoved.push(currentElement);\r\n        }\r\n    } while (currentElement !== undefined);\r\n\r\n    return elementsRemoved;\r\n}\r\n\r\nexport function removeEqual(array, elementToRemove, elementsEqualCallback = null) {\r\n    return ArrayUtils.removeIndex(array, ArrayUtils.findIndexEqual(array, elementToRemove, elementsEqualCallback));\r\n}\r\n\r\nexport function removeAllEqual(array, elementToRemove, elementsEqualCallback = null) {\r\n    return ArrayUtils.removeAllIndexes(array, ArrayUtils.findAllIndexesEqual(array, elementToRemove, elementsEqualCallback));\r\n}\r\n\r\nexport function pushUnique(array, element, elementsEqualCallback = null) {\r\n    let length = array.length;\r\n\r\n    let hasElement = ArrayUtils.hasEqual(array, element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = array.push(element);\r\n    }\r\n\r\n    return length;\r\n}\r\n\r\nexport function unshiftUnique(array, element, elementsEqualCallback = null) {\r\n    let length = array.length;\r\n\r\n    let hasElement = ArrayUtils.hasEqual(array, element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = array.unshift(element);\r\n    }\r\n\r\n    return length;\r\n}\r\n\r\nexport function copy(from, to, copyCallback = null) {\r\n    while (to.length > from.length) {\r\n        to.pop();\r\n    }\r\n\r\n    for (let i = 0; i < from.length; i++) {\r\n        if (copyCallback == null) {\r\n            to[i] = from[i];\r\n        } else {\r\n            to[i] = copyCallback(to[i], from[i]);\r\n        }\r\n    }\r\n\r\n    return to;\r\n}\r\n\r\nexport function clone(array, cloneCallback = null) {\r\n    if (cloneCallback == null) {\r\n        return array.slice(0);\r\n    }\r\n\r\n    let clone = null;\r\n    switch (array.constructor.name) {\r\n        case \"Array\":\r\n            clone = new Array(array.length);\r\n            break;\r\n        case \"Uint8ClampedArray\":\r\n            clone = new Uint8ClampedArray(array.length);\r\n            break;\r\n        case \"Uint8Array\":\r\n            clone = new Uint8Array(array.length);\r\n            break;\r\n        case \"Uint16Array\":\r\n            clone = new Uint16Array(array.length);\r\n            break;\r\n        case \"Uint32Array\":\r\n            clone = new Uint32Array(array.length);\r\n            break;\r\n        case \"Int8Array\":\r\n            clone = new Int8Array(array.length);\r\n            break;\r\n        case \"Int16Array\":\r\n            clone = new Int16Array(array.length);\r\n            break;\r\n        case \"Int32Array\":\r\n            clone = new Int32Array(array.length);\r\n            break;\r\n        case \"Float32Array\":\r\n            clone = new Float32Array(array.length);\r\n            break;\r\n        case \"Float64Array\":\r\n            clone = new Float64Array(array.length);\r\n            break;\r\n        default:\r\n            clone = new Array(array.length);\r\n            console.error(\"Cloned array type not supported!\");\r\n            break;\r\n    }\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        clone[i] = ArrayUtils.cloneCallback(array[i]);\r\n    }\r\n\r\n    return clone;\r\n}\r\n\r\nexport function equals(array, other, elementsEqualCallback = null) {\r\n    let equals = true;\r\n\r\n    if (other != null && array.length == other.length) {\r\n        for (let i = 0; i < array.length; i++) {\r\n            if ((elementsEqualCallback != null && !elementsEqualCallback(array[i], other[i])) ||\r\n                (elementsEqualCallback == null && array[i] != other[i])) {\r\n                equals = false;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        equals = false;\r\n    }\r\n\r\n    return equals;\r\n}\r\n\r\nexport function clear(array) {\r\n    array.length = 0;\r\n\r\n    return array;\r\n}\r\n\r\nexport let ArrayUtils = {\r\n    first,\r\n    last,\r\n    has,\r\n    hasEqual,\r\n    find,\r\n    findIndex,\r\n    findAll,\r\n    findAllIndexes,\r\n    findEqual,\r\n    findAllEqual,\r\n    findIndexEqual,\r\n    findAllIndexesEqual,\r\n    removeIndex,\r\n    removeAllIndexes,\r\n    remove,\r\n    removeAll,\r\n    removeEqual,\r\n    removeAllEqual,\r\n    pushUnique,\r\n    unshiftUnique,\r\n    copy,\r\n    clone,\r\n    equals,\r\n    clear\r\n};\r\n\r\n\r\n\r\nfunction _findAllEqualOptimized(array, elementToFind, getIndexes) {\r\n    // Adapted from: https:// stackoverflow.com/a/20798567\r\n\r\n    let elementsFound = [];\r\n    let index = -1;\r\n    while ((index = array.indexOf(elementToFind, index + 1)) >= 0) {\r\n        elementsFound.push(getIndexes ? index : array[index]);\r\n    }\r\n\r\n    return elementsFound;\r\n};", "import { vec3 as gl_vec3 } from \"gl-matrix\";\r\nimport { Mat3Utils } from \"./mat3_utils\";\r\nimport { Mat4Utils, create as mat4_utils_create } from \"./mat4_utils\";\r\nimport { EasingFunction, MathUtils } from \"./math_utils\";\r\nimport { Quat2Utils } from \"./quat2_utils\";\r\nimport { QuatUtils, create as quat_utils_create } from \"./quat_utils\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(x, y, z) {\r\n    let out = gl_vec3.create();\r\n\r\n    if (x !== undefined) {\r\n        set(out, x, y, z);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function set(vector, x, y, z) {\r\n    if (y === undefined) {\r\n        gl_vec3.set(vector, x, x, x);\r\n    } else {\r\n        gl_vec3.set(vector, x, y, z);\r\n    }\r\n\r\n    return vector;\r\n}\r\n\r\nexport function normalize(vector, out = Vec3Utils.create()) {\r\n    gl_vec3.normalize(out, vector);\r\n    return out;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_vec3.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function clone(vector, out = Vec3Utils.create()) {\r\n    Vec3Utils.copy(vector, out);\r\n    return out;\r\n}\r\n\r\nexport function zero(vector) {\r\n    gl_vec3.zero(vector);\r\n    return vector;\r\n}\r\n\r\nexport function angle(first, second) {\r\n    return Vec3Utils.angleDegrees(first, second);\r\n}\r\n\r\nexport function angleDegrees(first, second) {\r\n    return MathUtils.toDegrees(Vec3Utils.angleRadians(first, second));\r\n}\r\n\r\nexport function angleRadians(first, second) {\r\n    let firstX = first[0];\r\n    let firstY = first[1];\r\n    let firstZ = first[2];\r\n\r\n    let secondX = second[0];\r\n    let secondY = second[1];\r\n    let secondZ = second[2];\r\n\r\n    let firstLengthSquared = (firstX * firstX + firstY * firstY + firstZ * firstZ);\r\n    let secondLengthSquared = (secondX * secondX + secondY * secondY + secondZ * secondZ);\r\n\r\n    let lengthSquared = firstLengthSquared * secondLengthSquared;\r\n\r\n    let angle = 0;\r\n    if (lengthSquared > MathUtils.EPSILON_SQUARED) {\r\n        let length = Math.sqrt(lengthSquared);\r\n\r\n        let cos = Vec3Utils.dot(first, second) / length;\r\n        angle = Math.acos(MathUtils.clamp(cos, -1, 1));\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\nexport function equals(first, second, epsilon = 0) {\r\n    let equals = first.length == second.length;\r\n\r\n    if (equals) {\r\n        equals &&= (Math.abs(first[0] - second[0]) <= epsilon);\r\n        equals &&= (Math.abs(first[1] - second[1]) <= epsilon);\r\n        equals &&= (Math.abs(first[2] - second[2]) <= epsilon);\r\n    }\r\n\r\n    return equals;\r\n}\r\n\r\nexport function length(vector) {\r\n    return gl_vec3.length(vector);\r\n}\r\n\r\nexport function lengthSquared(vector) {\r\n    return gl_vec3.squaredLength(vector);\r\n}\r\n\r\nexport function distance(first, second) {\r\n    return gl_vec3.dist(first, second);\r\n}\r\n\r\nexport function distanceSquared(first, second) {\r\n    return gl_vec3.squaredDistance(first, second);\r\n}\r\n\r\nexport function add(first, second, out = Vec3Utils.create()) {\r\n    gl_vec3.add(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function sub(first, second, out = Vec3Utils.create()) {\r\n    gl_vec3.sub(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function mul(first, second, out = Vec3Utils.create()) {\r\n    gl_vec3.mul(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function div(first, second, out = Vec3Utils.create()) {\r\n    gl_vec3.div(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function scale(vector, value, out = Vec3Utils.create()) {\r\n    gl_vec3.scale(out, vector, value);\r\n    return out;\r\n}\r\n\r\nexport function dot(first, second) {\r\n    return gl_vec3.dot(first, second);\r\n}\r\n\r\nexport function negate(vector, out = Vec3Utils.create()) {\r\n    gl_vec3.negate(out, vector);\r\n    return out;\r\n}\r\n\r\nexport function cross(first, second, out = Vec3Utils.create()) {\r\n    gl_vec3.cross(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function transformQuat(vector, quat, out = Vec3Utils.create()) {\r\n    gl_vec3.transformQuat(out, vector, quat);\r\n    return out;\r\n}\r\n\r\nexport function transformMat3(vector, matrix, out = Vec3Utils.create()) {\r\n    gl_vec3.transformMat3(out, vector, matrix);\r\n    return out;\r\n}\r\n\r\nexport function transformMat4(vector, mat4, out = Vec3Utils.create()) {\r\n    gl_vec3.transformMat4(out, vector, mat4);\r\n    return out;\r\n}\r\n\r\n// New Functions\r\n\r\nexport function lengthSigned(vector, positiveDirection) {\r\n    let signedLength = Vec3Utils.length(vector);\r\n    if (!Vec3Utils.isConcordant(vector, positiveDirection)) {\r\n        signedLength *= -1;\r\n    }\r\n\r\n    return signedLength;\r\n}\r\n\r\nexport function angleSigned(first, second, referenceAxis) {\r\n    return Vec3Utils.angleSignedDegrees(first, second, referenceAxis);\r\n}\r\n\r\nexport function angleSignedDegrees(first, second, referenceAxis) {\r\n    return MathUtils.toDegrees(Vec3Utils.angleSignedRadians(first, second, referenceAxis));\r\n}\r\n\r\nexport let angleSignedRadians = function () {\r\n    let crossAxis = create();\r\n    return function angleSignedRadians(first, second, referenceAxis) {\r\n        Vec3Utils.cross(first, second, crossAxis);\r\n        let angle = Vec3Utils.angleRadians(first, second);\r\n        if (!Vec3Utils.isConcordant(crossAxis, referenceAxis)) {\r\n            angle = -angle;\r\n        }\r\n\r\n        return angle;\r\n    };\r\n}();\r\n\r\nexport function anglePivoted(first, second, referenceAxis) {\r\n    return Vec3Utils.anglePivotedDegrees(first, second, referenceAxis);\r\n}\r\n\r\nexport function anglePivotedDegrees(first, second, referenceAxis) {\r\n    return MathUtils.toDegrees(Vec3Utils.anglePivotedRadians(first, second, referenceAxis));\r\n}\r\n\r\nexport let anglePivotedRadians = function () {\r\n    let flatFirst = create();\r\n    let flatSecond = create();\r\n    return function anglePivotedRadians(first, second, referenceAxis) {\r\n        flatFirst = Vec3Utils.removeComponentAlongAxis(first, referenceAxis, flatFirst);\r\n        flatSecond = Vec3Utils.removeComponentAlongAxis(second, referenceAxis, flatSecond);\r\n\r\n        return Vec3Utils.angleRadians(flatFirst, flatSecond);\r\n    };\r\n}();\r\n\r\nexport function anglePivotedSigned(first, second, referenceAxis) {\r\n    return Vec3Utils.anglePivotedSignedDegrees(first, second, referenceAxis);\r\n}\r\n\r\nexport function anglePivotedSignedDegrees(first, second, referenceAxis) {\r\n    return MathUtils.toDegrees(Vec3Utils.anglePivotedSignedRadians(first, second, referenceAxis));\r\n}\r\n\r\nexport let anglePivotedSignedRadians = function () {\r\n    let flatFirst = create();\r\n    let flatSecond = create();\r\n    return function anglePivotedSignedRadians(first, second, referenceAxis) {\r\n        flatFirst = Vec3Utils.removeComponentAlongAxis(first, referenceAxis, flatFirst);\r\n        flatSecond = Vec3Utils.removeComponentAlongAxis(second, referenceAxis, flatSecond);\r\n\r\n        return Vec3Utils.angleSignedRadians(flatFirst, flatSecond, referenceAxis);\r\n    };\r\n}();\r\n\r\nexport function toRadians(vector, out = Vec3Utils.create()) {\r\n    Vec3Utils.set(out, MathUtils.toRadians(vector[0]), MathUtils.toRadians(vector[1]), MathUtils.toRadians(vector[2]));\r\n    return out;\r\n}\r\n\r\nexport function toDegrees(vector, out = Vec3Utils.create()) {\r\n    Vec3Utils.set(out, MathUtils.toDegrees(vector[0]), MathUtils.toDegrees(vector[1]), MathUtils.toDegrees(vector[2]));\r\n    return out;\r\n}\r\n\r\nexport function toQuat(vector, out) {\r\n    return Vec3Utils.degreesToQuat(vector, out);\r\n}\r\n\r\nexport function radiansToQuat(vector, out = QuatUtils.create()) {\r\n    QuatUtils.fromRadians(vector, out);\r\n    return out;\r\n}\r\n\r\nexport function degreesToQuat(vector, out = QuatUtils.create()) {\r\n    QuatUtils.fromDegrees(vector, out);\r\n    return out;\r\n}\r\n\r\nexport function isNormalized(vector, epsilon = MathUtils.EPSILON) {\r\n    return Math.abs(Vec3Utils.lengthSquared(vector) - 1) < epsilon;\r\n}\r\n\r\nexport function isZero(vector, epsilon = 0) {\r\n    return Vec3Utils.lengthSquared(vector) <= (epsilon * epsilon);\r\n}\r\n\r\nexport function componentAlongAxis(vector, axis, out = Vec3Utils.create()) {\r\n    let componentAlongAxisLength = Vec3Utils.dot(vector, axis);\r\n\r\n    Vec3Utils.copy(axis, out);\r\n    Vec3Utils.scale(out, componentAlongAxisLength, out);\r\n    return out;\r\n}\r\n\r\nexport function valueAlongAxis(vector, axis) {\r\n    let valueAlongAxis = Vec3Utils.dot(vector, axis);\r\n    return valueAlongAxis;\r\n}\r\n\r\nexport let removeComponentAlongAxis = function () {\r\n    let componentAlong = create();\r\n    return function removeComponentAlongAxis(vector, axis, out = Vec3Utils.create()) {\r\n        Vec3Utils.componentAlongAxis(vector, axis, componentAlong);\r\n        Vec3Utils.sub(vector, componentAlong, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let copyComponentAlongAxis = function () {\r\n    let componentAlong = create();\r\n    return function copyComponentAlongAxis(from, to, axis, out = Vec3Utils.create()) {\r\n        Vec3Utils.removeComponentAlongAxis(to, axis, out);\r\n        Vec3Utils.componentAlongAxis(from, axis, componentAlong);\r\n        Vec3Utils.add(out, componentAlong, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function isConcordant(first, second) {\r\n    return Vec3Utils.dot(first, second) >= 0;\r\n}\r\n\r\nexport function isFartherAlongAxis(first, second, axis) {\r\n    return Vec3Utils.valueAlongAxis(first, axis) > Vec3Utils.valueAlongAxis(second, axis);\r\n}\r\n\r\nexport function isToTheRight(first, second, referenceAxis) {\r\n    return Vec3Utils.signTo(first, second, referenceAxis) >= 0;\r\n}\r\n\r\nexport let signTo = function () {\r\n    let componentAlongThis = create();\r\n    let componentAlongVector = create();\r\n    return function signTo(first, second, referenceAxis, zeroSign = 1) {\r\n        Vec3Utils.removeComponentAlongAxis(first, referenceAxis, componentAlongThis);\r\n        Vec3Utils.removeComponentAlongAxis(second, referenceAxis, componentAlongVector);\r\n\r\n        let angleSignedResult = Vec3Utils.angleSigned(first, second, referenceAxis);\r\n        return angleSignedResult > 0 ? 1 : (angleSignedResult == 0 ? zeroSign : -1);\r\n    };\r\n}();\r\n\r\nexport function projectOnAxis(vector, axis, out = Vec3Utils.create()) {\r\n    Vec3Utils.componentAlongAxis(vector, axis, out);\r\n    return out;\r\n}\r\n\r\n// The result can easily be not 100% exact due to precision errors\r\nexport let projectOnAxisAlongAxis = function () {\r\n    let up = create();\r\n\r\n    let thisToAxis = create();\r\n\r\n    let fixedProjectAlongAxis = create();\r\n    return function projectOnAxisAlongAxis(vector, axis, projectAlongAxis, out = Vec3Utils.create()) {\r\n\r\n        if (Vec3Utils.isOnAxis(vector, axis) || Vec3Utils.isOnAxis(projectAlongAxis, axis)) {\r\n            Vec3Utils.copy(vector, out);\r\n        } else {\r\n            Vec3Utils.cross(projectAlongAxis, axis, up);\r\n            Vec3Utils.normalize(up, up);\r\n\r\n            Vec3Utils.removeComponentAlongAxis(vector, up, out);\r\n            if (!Vec3Utils.isOnAxis(out, axis)) {\r\n                Vec3Utils.projectOnAxis(out, axis, thisToAxis);\r\n                Vec3Utils.sub(thisToAxis, out, thisToAxis);\r\n\r\n                if (Vec3Utils.isConcordant(thisToAxis, projectAlongAxis)) {\r\n                    Vec3Utils.copy(projectAlongAxis, fixedProjectAlongAxis);\r\n                } else {\r\n                    Vec3Utils.negate(projectAlongAxis, fixedProjectAlongAxis);\r\n                }\r\n\r\n                let angleWithAlongAxis = Vec3Utils.angleRadians(fixedProjectAlongAxis, thisToAxis);\r\n                let lengthToRemove = Vec3Utils.length(thisToAxis) / Math.cos(angleWithAlongAxis);\r\n\r\n                Vec3Utils.scale(fixedProjectAlongAxis, lengthToRemove, fixedProjectAlongAxis);\r\n                Vec3Utils.add(out, fixedProjectAlongAxis, out);\r\n\r\n                Vec3Utils.projectOnAxis(out, axis, out); // Snap on the axis, due to float precision error\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function projectOnPlane(vector, planeNormal, out = Vec3Utils.create()) {\r\n    Vec3Utils.removeComponentAlongAxis(vector, planeNormal, out);\r\n    return out;\r\n}\r\n\r\n// The result can easily be not 100% exact due to precision errors\r\nexport let projectOnPlaneAlongAxis = function () {\r\n    let thisToPlane = create();\r\n\r\n    let fixedProjectAlongAxis = create();\r\n    return function projectOnPlaneAlongAxis(vector, planeNormal, projectAlongAxis, out = Vec3Utils.create()) {\r\n        if (Vec3Utils.isOnPlane(vector, planeNormal) || Vec3Utils.isOnPlane(projectAlongAxis, planeNormal)) {\r\n            Vec3Utils.copy(vector, out);\r\n        } else {\r\n            Vec3Utils.copy(vector, out);\r\n\r\n            Vec3Utils.projectOnPlane(out, planeNormal, thisToPlane);\r\n            Vec3Utils.sub(thisToPlane, out, thisToPlane);\r\n\r\n            if (Vec3Utils.isConcordant(thisToPlane, projectAlongAxis)) {\r\n                Vec3Utils.copy(projectAlongAxis, fixedProjectAlongAxis);\r\n            } else {\r\n                Vec3Utils.negate(projectAlongAxis, fixedProjectAlongAxis);\r\n            }\r\n\r\n            let angleWithAlongAxis = Vec3Utils.angleRadians(fixedProjectAlongAxis, thisToPlane);\r\n            let lengthToRemove = Vec3Utils.length(thisToPlane) / Math.cos(angleWithAlongAxis);\r\n\r\n            Vec3Utils.scale(fixedProjectAlongAxis, lengthToRemove, fixedProjectAlongAxis);\r\n            Vec3Utils.add(out, fixedProjectAlongAxis, out);\r\n\r\n            Vec3Utils.projectOnPlane(out, planeNormal, out); // Snap on the axis, due to float precision error\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function isOnAxis(vector, axis) {\r\n    let angleResult = Vec3Utils.angle(vector, axis);\r\n    return Math.abs(angleResult) < MathUtils.EPSILON_DEGREES || Math.abs(angleResult - 180) < MathUtils.EPSILON_DEGREES;\r\n}\r\n\r\nexport function isOnPlane(vector, planeNormal) {\r\n    let angleResult = Vec3Utils.angle(vector, planeNormal);\r\n    return Math.abs(angleResult - 90) < MathUtils.EPSILON_DEGREES;\r\n}\r\n\r\nexport function rotate(vector, rotation, out) {\r\n    return Vec3Utils.rotateDegrees(vector, rotation, out);\r\n}\r\n\r\nexport let rotateDegrees = function () {\r\n    let zero = create();\r\n    return function rotateDegrees(vector, rotation, out) {\r\n        return Vec3Utils.rotateAroundDegrees(vector, rotation, zero, out);\r\n    };\r\n}();\r\n\r\nexport let rotateRadians = function () {\r\n    let zero = create();\r\n    return function rotateRadians(vector, rotation, out) {\r\n        return Vec3Utils.rotateAroundRadians(vector, rotation, zero, out);\r\n    };\r\n}();\r\n\r\nexport let rotateQuat = function () {\r\n    let zero = create();\r\n    return function rotateQuat(vector, rotation, out) {\r\n        return Vec3Utils.rotateAroundQuat(vector, rotation, zero, out);\r\n    };\r\n}();\r\n\r\nexport function rotateAxis(vector, angle, axis, out) {\r\n    return Vec3Utils.rotateAxisDegrees(vector, angle, axis, out);\r\n}\r\n\r\nexport let rotateAxisDegrees = function () {\r\n    let zero = create();\r\n    return function rotateAxisDegrees(vector, angle, axis, out) {\r\n        return Vec3Utils.rotateAroundAxisDegrees(vector, angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nexport let rotateAxisRadians = function () {\r\n    let zero = create();\r\n    return function rotateAxisRadians(vector, angle, axis, out) {\r\n        return Vec3Utils.rotateAroundAxisRadians(vector, angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nexport function rotateAround(vector, rotation, origin, out) {\r\n    return Vec3Utils.rotateAroundDegrees(vector, rotation, origin, out);\r\n}\r\n\r\nexport let rotateAroundDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function rotateAroundDegrees(vector, rotation, origin, out = Vec3Utils.create()) {\r\n        Vec3Utils.degreesToQuat(rotation, quat);\r\n        return Vec3Utils.rotateAroundQuat(vector, quat, origin, out);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function rotateAroundRadians(vector, rotation, origin, out = Vec3Utils.create()) {\r\n        Vec3Utils.radiansToQuat(rotation, quat);\r\n        return Vec3Utils.rotateAroundQuat(vector, quat, origin, out);\r\n    };\r\n}();\r\n\r\nexport function rotateAroundQuat(vector, rotation, origin, out = Vec3Utils.create()) {\r\n    Vec3Utils.sub(vector, origin, out);\r\n    Vec3Utils.transformQuat(out, rotation, out);\r\n    Vec3Utils.add(out, origin, out);\r\n    return out;\r\n}\r\n\r\nexport function rotateAroundAxis(vector, angle, axis, origin, out) {\r\n    return Vec3Utils.rotateAroundAxisDegrees(vector, angle, axis, origin, out);\r\n}\r\n\r\nexport function rotateAroundAxisDegrees(vector, angle, axis, origin, out) {\r\n    return Vec3Utils.rotateAroundAxisRadians(vector, MathUtils.toRadians(angle), axis, origin, out);\r\n}\r\n\r\nexport let rotateAroundAxisRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function rotateAroundAxisRadians(vector, angle, axis, origin, out = Vec3Utils.create()) {\r\n        QuatUtils.fromAxisRadians(angle, axis, quat);\r\n        return Vec3Utils.rotateAroundQuat(vector, quat, origin, out);\r\n    };\r\n}();\r\n\r\nexport function convertPositionToWorld(vector, parentTransform, out) {\r\n    return Vec3Utils.convertPositionToWorldMatrix(vector, parentTransform, out);\r\n}\r\n\r\nexport function convertPositionToLocal(vector, parentTransform, out) {\r\n    return Vec3Utils.convertPositionToLocalMatrix(vector, parentTransform, out);\r\n}\r\n\r\nexport function convertPositionToWorldMatrix(vector, parentTransform, out = Vec3Utils.create()) {\r\n    Vec3Utils.transformMat4(vector, parentTransform, out);\r\n    return out;\r\n}\r\n\r\nexport let convertPositionToLocalMatrix = function () {\r\n    let inverse = mat4_utils_create();\r\n    return function convertPositionToLocalMatrix(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Mat4Utils.invert(parentTransform, inverse);\r\n        Vec3Utils.transformMat4(vector, inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let convertPositionToWorldQuat = function () {\r\n    let parentTransformMatrix = mat4_utils_create();\r\n    let position = create();\r\n    let rotation = quat_utils_create();\r\n    let one = create();\r\n    set(one, 1, 1, 1);\r\n    return function convertPositionToWorldQuat(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Quat2Utils.getPosition(parentTransform, position);\r\n        Quat2Utils.getRotationQuat(parentTransform, rotation);\r\n        Mat4Utils.setPositionRotationQuatScale(parentTransformMatrix, position, rotation, one);\r\n        return Vec3Utils.convertPositionToWorldMatrix(vector, parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nexport let convertPositionToLocalQuat = function () {\r\n    let parentTransformMatrix = mat4_utils_create();\r\n    let position = create();\r\n    let rotation = quat_utils_create();\r\n    let one = create();\r\n    set(one, 1, 1, 1);\r\n    return function convertPositionToLocalQuat(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Quat2Utils.getPosition(parentTransform, position);\r\n        Quat2Utils.getRotationQuat(parentTransform, rotation);\r\n        Mat4Utils.setPositionRotationQuatScale(parentTransformMatrix, position, rotation, one);\r\n        return Vec3Utils.convertPositionToLocalMatrix(vector, parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nexport function convertDirectionToWorld(vector, parentTransform, out) {\r\n    return Vec3Utils.convertDirectionToWorldMatrix(vector, parentTransform, out);\r\n}\r\n\r\nexport function convertDirectionToLocal(vector, parentTransform, out) {\r\n    return Vec3Utils.convertDirectionToLocalMatrix(vector, parentTransform, out);\r\n}\r\n\r\nexport let convertDirectionToWorldMatrix = function () {\r\n    let rotation = quat_utils_create();\r\n    return function convertDirectionToWorldMatrix(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Mat4Utils.getRotationQuat(parentTransform, rotation);\r\n        Vec3Utils.transformQuat(vector, rotation, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let convertDirectionToLocalMatrix = function () {\r\n    let rotation = quat_utils_create();\r\n    return function convertDirectionToLocalMatrix(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Mat4Utils.getRotationQuat(parentTransform, rotation);\r\n        QuatUtils.conjugate(rotation, rotation);\r\n        Vec3Utils.transformQuat(vector, rotation, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\n\r\nexport let convertDirectionToWorldQuat = function () {\r\n    let rotation = quat_utils_create();\r\n    return function convertDirectionToWorldQuat(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Quat2Utils.getRotationQuat(parentTransform, rotation);\r\n        Vec3Utils.transformQuat(vector, rotation, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let convertDirectionToLocalQuat = function () {\r\n    let rotation = quat_utils_create();\r\n    return function convertDirectionToLocalQuat(vector, parentTransform, out = Vec3Utils.create()) {\r\n        Quat2Utils.getRotationQuat(parentTransform, rotation);\r\n        QuatUtils.conjugate(rotation, rotation);\r\n        Vec3Utils.transformQuat(vector, rotation, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function addRotation(vector, rotation, out) {\r\n    return Vec3Utils.degreesAddRotation(vector, rotation, out);\r\n}\r\n\r\nexport function addRotationDegrees(vector, rotation, out) {\r\n    return Vec3Utils.degreesAddRotationDegrees(vector, rotation, out);\r\n}\r\n\r\nexport function addRotationRadians(vector, rotation, out) {\r\n    return Vec3Utils.degreesAddRotationRadians(vector, rotation, out);\r\n}\r\n\r\nexport function addRotationQuat(vector, rotation, out) {\r\n    return Vec3Utils.degreesAddRotationQuat(vector, rotation, out);\r\n}\r\n\r\nexport function degreesAddRotation(vector, rotation, out) {\r\n    return Vec3Utils.degreesAddRotationDegrees(vector, rotation, out);\r\n}\r\n\r\nexport let degreesAddRotationDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function degreesAddRotationDegrees(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.degreesToQuat(vector, quat);\r\n        return QuatUtils.toDegrees(QuatUtils.addRotationDegrees(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport let degreesAddRotationRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function degreesAddRotationRadians(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.degreesToQuat(vector, quat);\r\n        return QuatUtils.toDegrees(QuatUtils.addRotationRadians(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport let degreesAddRotationQuat = function () {\r\n    let quat = quat_utils_create();\r\n    return function degreesAddRotationQuat(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.degreesToQuat(vector, quat);\r\n        return QuatUtils.toDegrees(QuatUtils.addRotationQuat(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport function radiansAddRotation(vector, rotation, out) {\r\n    return Vec3Utils.radiansAddRotationDegrees(vector, rotation, out);\r\n}\r\n\r\nexport let radiansAddRotationDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function radiansAddRotationDegrees(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.radiansToQuat(vector, quat);\r\n        return QuatUtils.toRadians(QuatUtils.addRotationDegrees(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport let radiansAddRotationRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function radiansAddRotationRadians(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.radiansToQuat(vector, quat);\r\n        return QuatUtils.toRadians(QuatUtils.addRotationRadians(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport let radiansAddRotationQuat = function () {\r\n    let quat = quat_utils_create();\r\n    return function radiansAddRotationQuat(vector, rotation, out = Vec3Utils.create()) {\r\n        Vec3Utils.radiansToQuat(vector, quat);\r\n        return QuatUtils.toRadians(QuatUtils.addRotationQuat(quat, rotation, quat), out);\r\n    };\r\n}();\r\n\r\nexport function toMatrix(vector, out = Mat3Utils.create()) {\r\n    return Vec3Utils.degreesToMatrix(vector, out);\r\n}\r\n\r\nexport let degreesToMatrix = function () {\r\n    let quat = quat_utils_create();\r\n    return function degreesToMatrix(vector, out = Mat3Utils.create()) {\r\n        Vec3Utils.degreesToQuat(vector, quat);\r\n        return QuatUtils.toMatrix(quat, out);\r\n    };\r\n}();\r\n\r\nexport let radiansToMatrix = function () {\r\n    let quat = quat_utils_create();\r\n    return function radiansToMatrix(vector, out = Mat3Utils.create()) {\r\n        Vec3Utils.radiansToQuat(vector, quat);\r\n        return QuatUtils.toMatrix(quat, out);\r\n    };\r\n}();\r\n\r\nexport function rotationTo(from, to, out) {\r\n    return Vec3Utils.rotationToDegrees(from, to, out);\r\n}\r\n\r\nexport let rotationToDegrees = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function rotationToDegrees(from, to, out = Vec3Utils.create()) {\r\n        Vec3Utils.rotationToQuat(from, to, rotationQuat);\r\n        QuatUtils.toDegrees(rotationQuat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let rotationToRadians = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function rotationToRadians(from, to, out = Vec3Utils.create()) {\r\n        Vec3Utils.rotationToQuat(from, to, rotationQuat);\r\n        QuatUtils.toRadians(rotationQuat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let rotationToQuat = function () {\r\n    let rotationAxis = create();\r\n    return function rotationToQuat(from, to, out = QuatUtils.create()) {\r\n        Vec3Utils.cross(from, to, rotationAxis);\r\n        Vec3Utils.normalize(rotationAxis, rotationAxis);\r\n        let signedAngle = Vec3Utils.angleSigned(from, to, rotationAxis);\r\n        QuatUtils.fromAxisRadians(signedAngle, rotationAxis, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function rotationToPivoted(from, to, pivotAxis, out) {\r\n    return Vec3Utils.rotationToPivotedDegrees(from, to, pivotAxis, out);\r\n}\r\n\r\nexport let rotationToPivotedDegrees = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function rotationToPivotedDegrees(from, to, pivotAxis, out = Vec3Utils.create()) {\r\n        Vec3Utils.rotationToPivotedQuat(from, to, pivotAxis, rotationQuat);\r\n        QuatUtils.toDegrees(rotationQuat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let rotationToPivotedRadians = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function rotationToPivotedRadians(from, to, pivotAxis, out = Vec3Utils.create()) {\r\n        Vec3Utils.rotationToPivotedQuat(from, to, pivotAxis, rotationQuat);\r\n        QuatUtils.toRadians(rotationQuat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let rotationToPivotedQuat = function () {\r\n    let fromFlat = create();\r\n    let toFlat = create();\r\n    let rotationAxis = create();\r\n    return function rotationToPivotedQuat(from, to, pivotAxis, out = QuatUtils.create()) {\r\n        Vec3Utils.removeComponentAlongAxis(from, pivotAxis, fromFlat);\r\n        Vec3Utils.removeComponentAlongAxis(to, pivotAxis, toFlat);\r\n\r\n        Vec3Utils.cross(fromFlat, toFlat, rotationAxis);\r\n        Vec3Utils.normalize(rotationAxis, rotationAxis);\r\n        let signedAngle = Vec3Utils.angleSignedRadians(fromFlat, toFlat, rotationAxis);\r\n        QuatUtils.fromAxisRadians(signedAngle, rotationAxis, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function lerp(from, to, interpolationFactor, out = Vec3Utils.create()) {\r\n    if (interpolationFactor <= 0) {\r\n        Vec3Utils.copy(from, out);\r\n        return out;\r\n    } else if (interpolationFactor >= 1) {\r\n        Vec3Utils.copy(to, out);\r\n        return out;\r\n    }\r\n\r\n    gl_vec3.lerp(out, from, to, interpolationFactor);\r\n    return out;\r\n}\r\n\r\nexport function interpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear, out = Vec3Utils.create()) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return Vec3Utils.lerp(from, to, lerpFactor, out);\r\n}\r\n\r\nexport let perpendicularRandom = function () {\r\n    let notVector = create();\r\n    return function perpendicularRandom(vector, out = Vec3Utils.create()) {\r\n        if (Vec3Utils.isZero(vector)) {\r\n            return Vec3Utils.zero(out);\r\n        }\r\n\r\n        Vec3Utils.copy(vector, notVector);\r\n\r\n        let zeroAmount = false;\r\n        for (let i = 0; i < 3; i++) {\r\n            if (vector[i] == 0) {\r\n                zeroAmount++;\r\n            }\r\n        }\r\n\r\n        if (zeroAmount == 2) {\r\n            if (notVector[0] == 0) {\r\n                notVector[0] = 1;\r\n            } else if (notVector[1] == 0) {\r\n                notVector[1] = 1;\r\n            } else if (notVector[2] == 0) {\r\n                notVector[2] = 1;\r\n            }\r\n        } else {\r\n            if (notVector[0] != 0) {\r\n                notVector[0] = -notVector[0];\r\n            } else if (notVector[1] != 0) {\r\n                notVector[1] = -notVector[1];\r\n            } else if (notVector[2] != 0) {\r\n                notVector[2] = -notVector[2];\r\n            }\r\n        }\r\n\r\n        Vec3Utils.cross(notVector, vector, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let Vec3Utils = {\r\n    create,\r\n    set,\r\n    normalize,\r\n    copy,\r\n    clone,\r\n    zero,\r\n    angle,\r\n    angleDegrees,\r\n    angleRadians,\r\n    equals,\r\n    length,\r\n    lengthSquared,\r\n    distance,\r\n    distanceSquared,\r\n    add,\r\n    sub,\r\n    mul,\r\n    div,\r\n    scale,\r\n    dot,\r\n    negate,\r\n    cross,\r\n    transformQuat,\r\n    transformMat3,\r\n    transformMat4,\r\n    lengthSigned,\r\n    angleSigned,\r\n    angleSignedDegrees,\r\n    angleSignedRadians,\r\n    anglePivoted,\r\n    anglePivotedDegrees,\r\n    anglePivotedRadians,\r\n    anglePivotedSigned,\r\n    anglePivotedSignedDegrees,\r\n    anglePivotedSignedRadians,\r\n    toRadians,\r\n    toDegrees,\r\n    toQuat,\r\n    radiansToQuat,\r\n    degreesToQuat,\r\n    isNormalized,\r\n    isZero,\r\n    componentAlongAxis,\r\n    valueAlongAxis,\r\n    removeComponentAlongAxis,\r\n    copyComponentAlongAxis,\r\n    isConcordant,\r\n    isFartherAlongAxis,\r\n    isToTheRight,\r\n    signTo,\r\n    projectOnAxis,\r\n    projectOnAxisAlongAxis,\r\n    projectOnPlane,\r\n    projectOnPlaneAlongAxis,\r\n    isOnAxis,\r\n    isOnPlane,\r\n    rotate,\r\n    rotateDegrees,\r\n    rotateRadians,\r\n    rotateQuat,\r\n    rotateAxis,\r\n    rotateAxisDegrees,\r\n    rotateAxisRadians,\r\n    rotateAround,\r\n    rotateAroundDegrees,\r\n    rotateAroundRadians,\r\n    rotateAroundQuat,\r\n    rotateAroundAxis,\r\n    rotateAroundAxisDegrees,\r\n    rotateAroundAxisRadians,\r\n    convertPositionToWorld,\r\n    convertPositionToLocal,\r\n    convertPositionToWorldMatrix,\r\n    convertPositionToLocalMatrix,\r\n    convertPositionToWorldQuat,\r\n    convertPositionToLocalQuat,\r\n    convertDirectionToWorld,\r\n    convertDirectionToLocal,\r\n    convertDirectionToWorldMatrix,\r\n    convertDirectionToLocalMatrix,\r\n    convertDirectionToWorldQuat,\r\n    convertDirectionToLocalQuat,\r\n    addRotation,\r\n    addRotationDegrees,\r\n    addRotationRadians,\r\n    addRotationQuat,\r\n    degreesAddRotation,\r\n    degreesAddRotationDegrees,\r\n    degreesAddRotationRadians,\r\n    degreesAddRotationQuat,\r\n    radiansAddRotation,\r\n    radiansAddRotationDegrees,\r\n    radiansAddRotationRadians,\r\n    radiansAddRotationQuat,\r\n    toMatrix,\r\n    degreesToMatrix,\r\n    radiansToMatrix,\r\n    rotationTo,\r\n    rotationToDegrees,\r\n    rotationToRadians,\r\n    rotationToQuat,\r\n    rotationToPivoted,\r\n    rotationToPivotedDegrees,\r\n    rotationToPivotedRadians,\r\n    rotationToPivotedQuat,\r\n    lerp,\r\n    interpolate,\r\n    perpendicularRandom\r\n};", "\r\nimport { mat4 as gl_mat4 } from \"gl-matrix\";\r\nimport { MathUtils } from \"./math_utils\";\r\nimport { Quat2Utils } from \"./quat2_utils\";\r\nimport { QuatUtils, create as quat_utils_create } from \"./quat_utils\";\r\nimport { Vec3Utils, create as vec3_utils_create, set as vec3_utils_set } from \"./vec3_utils\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    let out = gl_mat4.create();\r\n    if (m00 !== undefined) {\r\n        set(\r\n            out,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function set(matrix,\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    if (m01 === undefined) {\r\n        gl_mat4.set(matrix,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00);\r\n    } else {\r\n        gl_mat4.set(matrix,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return matrix;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_mat4.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function identity(matrix) {\r\n    gl_mat4.identity(matrix);\r\n    return matrix;\r\n}\r\n\r\nexport function invert(matrix, out = Mat4Utils.create()) {\r\n    gl_mat4.invert(out, matrix);\r\n    return out;\r\n}\r\n\r\nexport function mul(first, second, out = Mat4Utils.create()) {\r\n    gl_mat4.mul(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function scale(matrix, vector, out = Mat4Utils.create()) {\r\n    gl_mat4.scale(out, matrix, vector);\r\n    return out;\r\n}\r\n\r\nexport function clone(matrix, out = Mat4Utils.create()) {\r\n    Mat4Utils.copy(matrix, out);\r\n    return out;\r\n}\r\n\r\nexport function getPosition(matrix, out = Vec3Utils.create()) {\r\n    gl_mat4.getTranslation(out, matrix);\r\n    return out;\r\n}\r\n\r\nexport function getRotation(matrix, out = Vec3Utils.create()) {\r\n    return Mat4Utils.getRotationDegrees(matrix, out);\r\n}\r\n\r\nexport let getRotationDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function getRotationDegrees(matrix, out = Vec3Utils.create()) {\r\n        Mat4Utils.getRotationQuat(matrix, quat);\r\n        QuatUtils.toDegrees(quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let getRotationRadians = function () {\r\n    let quat = quat_utils_create();\r\n    return function getRotationRadians(matrix, out = Vec3Utils.create()) {\r\n        Mat4Utils.getRotationQuat(matrix, quat);\r\n        QuatUtils.toRadians(quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let getRotationQuat = function () {\r\n    let tempScale = vec3_utils_create();\r\n    let transformMatrixNoScale = create();\r\n    let inverseScale = vec3_utils_create();\r\n    let one = vec3_utils_create();\r\n    vec3_utils_set(one, 1, 1, 1);\r\n    return function getRotationQuat(matrix, out = QuatUtils.create()) {\r\n        Mat4Utils.getScale(matrix, tempScale);\r\n        Vec3Utils.div(one, tempScale, inverseScale);\r\n        Mat4Utils.scale(matrix, inverseScale, transformMatrixNoScale);\r\n        gl_mat4.getRotation(out, transformMatrixNoScale);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getScale(matrix, out = Vec3Utils.create()) {\r\n    gl_mat4.getScaling(out, matrix);\r\n    return out;\r\n}\r\n\r\n// New Functions\r\n\r\nexport function setPosition(matrix, position) {\r\n    matrix[12] = position[0];\r\n    matrix[13] = position[1];\r\n    matrix[14] = position[2];\r\n    return matrix;\r\n}\r\n\r\nexport function setRotation(matrix, rotation) {\r\n    Mat4Utils.setRotationDegrees(matrix, rotation);\r\n    return matrix;\r\n}\r\n\r\nexport let setRotationDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function setRotationDegrees(matrix, rotation) {\r\n        Mat4Utils.setRotationQuat(matrix, Vec3Utils.degreesToQuat(rotation, quat));\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport let setRotationRadians = function () {\r\n    let vector = vec3_utils_create();\r\n    return function setRotationRadians(matrix, rotation) {\r\n        Mat4Utils.setRotationDegrees(matrix, Vec3Utils.toDegrees(rotation, vector));\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport let setRotationQuat = function () {\r\n    let position = vec3_utils_create();\r\n    let scale = vec3_utils_create();\r\n    return function setRotationQuat(matrix, rotation) {\r\n        Mat4Utils.getPosition(matrix, position);\r\n        Mat4Utils.getScale(matrix, scale);\r\n        Mat4Utils.setPositionRotationQuatScale(matrix, position, rotation, scale);\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport let setScale = function () {\r\n    let tempScale = vec3_utils_create();\r\n    return function setScale(matrix, scaleToSet) {\r\n        Mat4Utils.getScale(matrix, tempScale);\r\n        Vec3Utils.div(scaleToSet, tempScale, tempScale);\r\n        Mat4Utils.scale(matrix, tempScale, matrix);\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport function setPositionRotationScale(matrix, position, rotation, scale) {\r\n    Mat4Utils.setPositionRotationDegreesScale(matrix, position, rotation, scale);\r\n    return matrix;\r\n}\r\n\r\nexport let setPositionRotationDegreesScale = function () {\r\n    let quat = quat_utils_create();\r\n    return function setPositionRotationDegreesScale(matrix, position, rotation, scale) {\r\n        Mat4Utils.setPositionRotationQuatScale(matrix, position, Vec3Utils.degreesToQuat(rotation, quat), scale);\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport let setPositionRotationRadiansScale = function () {\r\n    let vector = vec3_utils_create();\r\n    return function setPositionRotationRadiansScale(matrix, position, rotation, scale) {\r\n        Mat4Utils.setPositionRotationDegreesScale(matrix, position, Vec3Utils.toDegrees(rotation, vector), scale);\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport function setPositionRotationQuatScale(matrix, position, rotation, scale) {\r\n    gl_mat4.fromRotationTranslationScale(matrix, rotation, position, scale);\r\n    return matrix;\r\n}\r\n\r\nexport function setPositionRotation(matrix, position, rotation) {\r\n    Mat4Utils.setPositionRotationDegrees(matrix, position, rotation);\r\n    return matrix;\r\n}\r\n\r\nexport let setPositionRotationDegrees = function () {\r\n    let quat = quat_utils_create();\r\n    return function setPositionRotationDegrees(matrix, position, rotation) {\r\n        Mat4Utils.setPositionRotationQuat(matrix, position, Vec3Utils.degreesToQuat(rotation, quat));\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport let setPositionRotationRadians = function () {\r\n    let vector = vec3_utils_create();\r\n    return function setPositionRotationRadians(matrix, position, rotation) {\r\n        Mat4Utils.setPositionRotationDegrees(matrix, position, Vec3Utils.toDegrees(rotation, vector));\r\n        return matrix;\r\n    };\r\n}();\r\n\r\nexport function setPositionRotationQuat(matrix, position, rotation) {\r\n    gl_mat4.fromRotationTranslation(matrix, rotation, position);\r\n    return matrix;\r\n}\r\n\r\nexport function getAxes(matrix, out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n    Mat4Utils.getLeft(matrix, out[0]);\r\n    Mat4Utils.getUp(matrix, out[1]);\r\n    Mat4Utils.getForward(matrix, out[2]);\r\n\r\n    return out;\r\n}\r\n\r\nexport function getForward(matrix, out = Vec3Utils.create()) {\r\n    Vec3Utils.set(out, matrix[8], matrix[9], matrix[10]);\r\n    Vec3Utils.normalize(out, out);\r\n    return out;\r\n}\r\n\r\nexport function getBackward(matrix, out) {\r\n    out = Mat4Utils.getForward(matrix, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport function getLeft(matrix, out = Vec3Utils.create()) {\r\n    Vec3Utils.set(out, matrix[0], matrix[1], matrix[2]);\r\n    Vec3Utils.normalize(out, out);\r\n    return out;\r\n}\r\n\r\nexport function getRight(matrix, out) {\r\n    out = Mat4Utils.getLeft(matrix, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport function getUp(matrix, out = Vec3Utils.create()) {\r\n    Vec3Utils.set(out, matrix[4], matrix[5], matrix[6]);\r\n    Vec3Utils.normalize(out, out);\r\n    return out;\r\n}\r\n\r\nexport function getDown(matrix, out) {\r\n    out = Mat4Utils.getUp(matrix, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport let toWorld = function () {\r\n    let convertTransform = create();\r\n    let position = vec3_utils_create();\r\n    let tempScale = vec3_utils_create();\r\n    let inverseScale = vec3_utils_create();\r\n    let one = vec3_utils_create();\r\n    vec3_utils_set(one, 1, 1, 1);\r\n    return function toWorld(matrix, parentTransformMatrix, out = Mat4Utils.create()) {\r\n        if (Mat4Utils.hasUniformScale(parentTransformMatrix)) {\r\n            Mat4Utils.mul(parentTransformMatrix, matrix, out);\r\n        } else {\r\n            Vec3Utils.set(position, matrix[12], matrix[13], matrix[14]);\r\n            Vec3Utils.convertPositionToWorldMatrix(position, parentTransformMatrix, position);\r\n\r\n            Mat4Utils.getScale(parentTransformMatrix, tempScale);\r\n            Vec3Utils.div(one, tempScale, inverseScale);\r\n            Mat4Utils.scale(parentTransformMatrix, inverseScale, convertTransform);\r\n\r\n            Mat4Utils.mul(convertTransform, matrix, out);\r\n            Mat4Utils.scale(out, tempScale, out);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let toLocal = function () {\r\n    let convertTransform = create();\r\n    let position = vec3_utils_create();\r\n    let tempScale = vec3_utils_create();\r\n    let inverseScale = vec3_utils_create();\r\n    let one = vec3_utils_create();\r\n    vec3_utils_set(one, 1, 1, 1);\r\n    return function toLocal(matrix, parentTransformMatrix, out = Mat4Utils.create()) {\r\n        if (Mat4Utils.hasUniformScale(parentTransformMatrix)) {\r\n            Mat4Utils.invert(parentTransformMatrix, convertTransform);\r\n            Mat4Utils.mul(convertTransform, matrix, out);\r\n        } else {\r\n            Vec3Utils.set(position, matrix[12], matrix[13], matrix[14]);\r\n            Vec3Utils.convertPositionToLocalMatrix(position, parentTransformMatrix, position);\r\n\r\n            Mat4Utils.getScale(parentTransformMatrix, tempScale);\r\n            Vec3Utils.div(one, tempScale, inverseScale);\r\n            Mat4Utils.scale(parentTransformMatrix, inverseScale, convertTransform);\r\n\r\n            Mat4Utils.invert(convertTransform, convertTransform);\r\n            Mat4Utils.mul(convertTransform, matrix, out);\r\n            Mat4Utils.scale(out, inverseScale, out);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let hasUniformScale = function () {\r\n    let scale = vec3_utils_create();\r\n    return function hasUniformScale(matrix) {\r\n        Mat4Utils.getScale(matrix, scale);\r\n        return Math.abs(scale[0] - scale[1]) < MathUtils.EPSILON && Math.abs(scale[1] - scale[2]) < MathUtils.EPSILON && Math.abs(scale[0] - scale[2]) < MathUtils.EPSILON;\r\n    };\r\n}();\r\n\r\nexport let toQuat = function () {\r\n    let position = vec3_utils_create();\r\n    let rotation = quat_utils_create();\r\n    return function toQuat(matrix, out = Quat2Utils.create()) {\r\n        Mat4Utils.getPosition(matrix, position);\r\n        Mat4Utils.getRotationQuat(matrix, rotation);\r\n        Quat2Utils.setPositionRotationQuat(out, position, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function fromQuat(quat, out = Mat4Utils.create()) {\r\n    Quat2Utils.toMatrix(quat, out);\r\n    return out;\r\n}\r\n\r\nexport let Mat4Utils = {\r\n    create,\r\n    set,\r\n    copy,\r\n    identity,\r\n    invert,\r\n    mul,\r\n    scale,\r\n    clone,\r\n    getPosition,\r\n    getRotation,\r\n    getRotationDegrees,\r\n    getRotationRadians,\r\n    getRotationQuat,\r\n    getScale,\r\n    setPosition,\r\n    setRotation,\r\n    setRotationDegrees,\r\n    setRotationRadians,\r\n    setRotationQuat,\r\n    setScale,\r\n    setPositionRotationScale,\r\n    setPositionRotationDegreesScale,\r\n    setPositionRotationRadiansScale,\r\n    setPositionRotationQuatScale,\r\n    setPositionRotation,\r\n    setPositionRotationDegrees,\r\n    setPositionRotationRadians,\r\n    setPositionRotationQuat,\r\n    getAxes,\r\n    getForward,\r\n    getBackward,\r\n    getLeft,\r\n    getRight,\r\n    getUp,\r\n    getDown,\r\n    toWorld,\r\n    toLocal,\r\n    hasUniformScale,\r\n    toQuat,\r\n    fromQuat\r\n};", "import { mat4 as gl_mat4, quat2 as gl_quat2 } from \"gl-matrix\";\r\nimport { create as mat3_utils_create } from \"./mat3_utils\";\r\nimport { Mat4Utils } from \"./mat4_utils\";\r\nimport { EasingFunction, MathUtils } from \"./math_utils\";\r\nimport { QuatUtils, create as quat_utils_create } from \"./quat_utils\";\r\nimport { Vec3Utils, create as vec3_utils_create } from \"./vec3_utils\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    let out = gl_quat2.create();\r\n    if (x1 !== undefined) {\r\n        set(out, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function set(quat, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    if (y1 === undefined) {\r\n        gl_quat2.set(quat, x1, x1, x1, x1, x1, x1, x1, x1);\r\n    } else {\r\n        gl_quat2.set(quat, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n\r\n    return quat;\r\n}\r\n\r\nexport function normalize(quat, out = Quat2Utils.create()) {\r\n    gl_quat2.normalize(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function invert(quat, out = Quat2Utils.create()) {\r\n    gl_quat2.invert(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function conjugate(quat, out = Quat2Utils.create()) {\r\n    gl_quat2.conjugate(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_quat2.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function identity(quat) {\r\n    gl_quat2.identity(quat);\r\n    return quat;\r\n}\r\n\r\nexport function getPosition(quat, out = Vec3Utils.create()) {\r\n    gl_quat2.getTranslation(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function getRotation(quat, out) {\r\n    return Quat2Utils.getRotationDegrees(quat, out);\r\n}\r\n\r\nexport let getRotationDegrees = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function getRotationDegrees(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toDegrees(Quat2Utils.getRotationQuat(quat, rotationQuat), out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport let getRotationRadians = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function getRotationRadians(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toRadians(Quat2Utils.getRotationQuat(quat, rotationQuat), out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getRotationQuat(quat, out = QuatUtils.create()) {\r\n    QuatUtils.copy(quat, out);\r\n    return out;\r\n}\r\n\r\nexport let setPosition = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function setPosition(quat, position) {\r\n        Quat2Utils.getRotationQuat(quat, rotationQuat);\r\n        Quat2Utils.setPositionRotationQuat(quat, position, rotationQuat);\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport function setRotation(quat, rotation) {\r\n    return Quat2Utils.setRotationDegrees(quat, rotation);\r\n}\r\n\r\nexport let setRotationDegrees = function () {\r\n    let position = vec3_utils_create();\r\n    return function setRotationDegrees(quat, rotation) {\r\n        Quat2Utils.getPosition(quat, position);\r\n        Quat2Utils.setPositionRotationDegrees(quat, position, rotation);\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport let setRotationRadians = function () {\r\n    let position = vec3_utils_create();\r\n    return function setRotationRadians(quat, rotation) {\r\n        Quat2Utils.getPosition(quat, position);\r\n        Quat2Utils.setPositionRotationRadians(quat, position, rotation);\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport let setRotationQuat = function () {\r\n    let position = vec3_utils_create();\r\n    return function setRotationQuat(quat, rotation) {\r\n        Quat2Utils.getPosition(quat, position);\r\n        Quat2Utils.setPositionRotationQuat(quat, position, rotation);\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport function setPositionRotation(quat, position, rotation) {\r\n    return Quat2Utils.setPositionRotationDegrees(quat, position, rotation);\r\n}\r\n\r\nexport let setPositionRotationDegrees = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function setPositionRotationDegrees(quat, position, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        Quat2Utils.setPositionRotationQuat(quat, position, rotationQuat);\r\n\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport let setPositionRotationRadians = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function setPositionRotationRadians(quat, position, rotation) {\r\n        Vec3Utils.radiansToQuat(rotation, rotationQuat);\r\n        Quat2Utils.setPositionRotationQuat(quat, position, rotationQuat);\r\n        return quat;\r\n    };\r\n}();\r\n\r\nexport function setPositionRotationQuat(quat, position, rotation) {\r\n    gl_quat2.fromRotationTranslation(quat, rotation, position);\r\n    return quat;\r\n}\r\n\r\n// New Functions\r\n\r\nexport function isNormalized(quat, epsilon = MathUtils.EPSILON) {\r\n    return Math.abs(Quat2Utils.lengthSquared(quat) - 1) < epsilon;\r\n}\r\n\r\nexport function length(quat) {\r\n    return gl_quat2.length(quat);\r\n}\r\n\r\nexport function lengthSquared(quat) {\r\n    return gl_quat2.squaredLength(quat);\r\n}\r\n\r\nexport function mul(first, second, out = Quat2Utils.create()) {\r\n    gl_quat2.mul(out, first, second);\r\n    return out;\r\n}\r\n\r\nexport function getAxes(quat, out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n    Quat2Utils.getLeft(quat, out[0]);\r\n    Quat2Utils.getUp(quat, out[1]);\r\n    Quat2Utils.getForward(quat, out[2]);\r\n    return out;\r\n}\r\n\r\nexport let getForward = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getForward(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getBackward(quat, out) {\r\n    out = Quat2Utils.getForward(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport let getLeft = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getLeft(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getRight(quat, out) {\r\n    out = Quat2Utils.getLeft(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport let getUp = function () {\r\n    let rotationMatrix = mat3_utils_create();\r\n    return function getUp(quat, out = Vec3Utils.create()) {\r\n        QuatUtils.toMatrix(quat, rotationMatrix);\r\n\r\n        Vec3Utils.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function getDown(quat, out) {\r\n    out = Quat2Utils.getUp(quat, out);\r\n    Vec3Utils.negate(out, out);\r\n    return out;\r\n}\r\n\r\nexport function toWorld(quat, parentTransformQuat, out = Quat2Utils.create()) {\r\n    Quat2Utils.mul(parentTransformQuat, quat, out);\r\n    return out;\r\n}\r\n\r\nexport let toLocal = function () {\r\n    let invertQuat = create();\r\n    return function toLocal(quat, parentTransformQuat, out = Quat2Utils.create()) {\r\n        Quat2Utils.conjugate(parentTransformQuat, invertQuat);\r\n        Quat2Utils.mul(invertQuat, quat, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function rotateAxis(quat, angle, axis, out) {\r\n    return Quat2Utils.rotateAxisDegrees(quat, angle, axis, out);\r\n}\r\n\r\nexport function rotateAxisDegrees(quat, angle, axis, out) {\r\n    return Quat2Utils.rotateAxisRadians(quat, MathUtils.toRadians(angle), axis, out);\r\n}\r\n\r\nexport let rotateAxisRadians = function () {\r\n    let rotationQuat = quat_utils_create();\r\n    return function rotateAxisRadians(quat, angle, axis, out = Quat2Utils.create()) {\r\n        Quat2Utils.getRotationQuat(quat, rotationQuat);\r\n        QuatUtils.rotateAxisRadians(rotationQuat, angle, axis, rotationQuat);\r\n        Quat2Utils.copy(quat, out);\r\n        Quat2Utils.setRotationQuat(out, rotationQuat);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function toMatrix(quat, out = Mat4Utils.create()) {\r\n    gl_mat4.fromQuat2(out, quat);\r\n    return out;\r\n}\r\n\r\nexport function fromMatrix(matrix, out = Quat2Utils.create()) {\r\n    Mat4Utils.toQuat(matrix, out);\r\n    return out;\r\n}\r\n\r\nexport function lerp(from, to, interpolationFactor, out = Quat2Utils.create()) {\r\n    if (interpolationFactor <= 0) {\r\n        Quat2Utils.copy(from, out);\r\n        return out;\r\n    } else if (interpolationFactor >= 1) {\r\n        Quat2Utils.copy(to, out);\r\n        return out;\r\n    }\r\n\r\n    gl_quat2.lerp(out, from, to, interpolationFactor);\r\n    return out;\r\n}\r\n\r\nexport function interpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear, out = Quat2Utils.create()) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return Quat2Utils.lerp(from, to, lerpFactor, out);\r\n}\r\n\r\nexport let slerp = function () {\r\n    let fromPosition = vec3_utils_create();\r\n    let toPosition = vec3_utils_create();\r\n    let interpolatedPosition = vec3_utils_create();\r\n    let fromRotationQuat = quat_utils_create();\r\n    let toRotationQuat = quat_utils_create();\r\n    let interpolatedRotationQuat = quat_utils_create();\r\n    return function slerp(from, to, interpolationFactor, out = Quat2Utils.create()) {\r\n        if (interpolationFactor <= 0) {\r\n            Quat2Utils.copy(from, out);\r\n            return out;\r\n        } else if (interpolationFactor >= 1) {\r\n            Quat2Utils.copy(to, out);\r\n            return out;\r\n        }\r\n\r\n        Quat2Utils.getPosition(from, fromPosition);\r\n        Quat2Utils.getPosition(to, toPosition);\r\n\r\n        Quat2Utils.getRotationQuat(from, fromRotationQuat);\r\n        Quat2Utils.getRotationQuat(to, toRotationQuat);\r\n\r\n        Vec3Utils.lerp(fromPosition, toPosition, interpolationFactor, interpolatedPosition);\r\n        QuatUtils.slerp(fromRotationQuat, toRotationQuat, interpolationFactor, interpolatedRotationQuat);\r\n\r\n        Quat2Utils.setPositionRotationQuat(out, interpolatedPosition, interpolatedRotationQuat);\r\n        return out;\r\n    };\r\n}();\r\n\r\nexport function sinterpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear, out = Quat2Utils.create()) {\r\n    let lerpFactor = easingFunction(interpolationFactor);\r\n    return Quat2Utils.slerp(from, to, lerpFactor, out);\r\n}\r\n\r\nexport let Quat2Utils = {\r\n    create,\r\n    set,\r\n    normalize,\r\n    invert,\r\n    conjugate,\r\n    copy,\r\n    identity,\r\n    getPosition,\r\n    getRotation,\r\n    getRotationDegrees,\r\n    getRotationRadians,\r\n    getRotationQuat,\r\n    setPosition,\r\n    setRotation,\r\n    setRotationDegrees,\r\n    setRotationRadians,\r\n    setRotationQuat,\r\n    setPositionRotation,\r\n    setPositionRotationDegrees,\r\n    setPositionRotationRadians,\r\n    setPositionRotationQuat,\r\n    isNormalized,\r\n    length,\r\n    lengthSquared,\r\n    mul,\r\n    getAxes,\r\n    getForward,\r\n    getBackward,\r\n    getLeft,\r\n    getRight,\r\n    getUp,\r\n    getDown,\r\n    toWorld,\r\n    toLocal,\r\n    rotateAxis,\r\n    rotateAxisDegrees,\r\n    rotateAxisRadians,\r\n    toMatrix,\r\n    fromMatrix,\r\n    lerp,\r\n    interpolate,\r\n    slerp,\r\n    sinterpolate\r\n};", "import { MathUtils } from \"../../../cauldron/js/utils/math_utils\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { Mat3Utils } from \"../../js/utils/mat3_utils\";\r\nimport { Mat4Utils } from \"../../js/utils/mat4_utils\";\r\nimport { Quat2Utils } from \"../../js/utils/quat2_utils\";\r\nimport { QuatUtils } from \"../../js/utils/quat_utils\";\r\nimport { Vec3Utils } from \"../../js/utils/vec3_utils\";\r\nimport { ComponentUtils, CustomCloneParams, DeepCloneParams } from \"./component_utils\";\r\nimport { SceneUtils } from \"./scene_utils\";\r\n\r\nexport class CloneParams {\r\n\r\n    constructor() {\r\n        this.myIgnoreNonCloneable = false;  // Ignores components that are not clonable\r\n        this.myIgnoreComponents = false;    // All components are ignored, cloning only the object hierarchy\r\n        this.myIgnoreChildren = false;      // Clones only the given object without the children\r\n\r\n        this.myComponentsToIgnore = [];     // Ignores all component types in this list (example: \"mesh\"), has lower priority over myComponentsToInclude\r\n        this.myComponentsToInclude = [];    // Clones only the component types in this list (example: \"mesh\"), has higher priority over myComponentsToIgnore, if empty it's ignored\r\n        this.myIgnoreComponentCallback = null; // Signature: callback(component) returns true if the component must be ignored, it is called after the previous filters\r\n\r\n        this.myChildrenToIgnore = [];       // Ignores all the objects in this list (example: \"mesh\"), has lower priority over myChildrenToInclude\r\n        this.myChildrenToInclude = [];      // Clones only the objects in this list (example: \"mesh\"), has higher priority over myChildrenToIgnore, if empty it's ignored\r\n        this.myIgnoreChildCallback = null;  // Signature: callback(object) returns true if the object must be ignored, it is called after the previous filters\r\n\r\n        this.myUseDefaultComponentClone = false;               // Use the default component clone function\r\n        this.myUseDefaultComponentCloneAsFallback = false;     // Use the default component clone function only as fallback\r\n        this.myDefaultComponentCloneAutoStartIfNotActive = true;\r\n\r\n        this.myComponentDeepCloneParams = new DeepCloneParams(); // Used to specify if the object components must be deep cloned or not, you can also override the behavior for specific components and variables\r\n\r\n        this.myComponentCustomCloneParams = new CustomCloneParams(); // This class can be filled with whatever custom paramater the component clone functions could need\r\n    }\r\n}\r\n\r\n// GETTER\r\n\r\n// Position\r\n\r\nexport function getPosition(object, position) {\r\n    return ObjectUtils.getPositionWorld(object, position);\r\n}\r\n\r\nexport function getPositionWorld(object, position = Vec3Utils.create()) {\r\n    object.getPositionWorld(position);\r\n    return position;\r\n}\r\n\r\nexport function getPositionLocal(object, position = Vec3Utils.create()) {\r\n    object.getPositionLocal(position);\r\n    return position;\r\n}\r\n\r\n// Rotation\r\n\r\nexport function getRotation(object, rotation) {\r\n    return ObjectUtils.getRotationWorld(object, rotation);\r\n}\r\n\r\nexport function getRotationDegrees(object, rotation) {\r\n    return ObjectUtils.getRotationWorldDegrees(object, rotation);\r\n}\r\n\r\nexport function getRotationRadians(object, rotation) {\r\n    return ObjectUtils.getRotationWorldRadians(object, rotation);\r\n}\r\n\r\nexport function getRotationMatrix(object, rotation) {\r\n    return ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n}\r\n\r\nexport function getRotationQuat(object, rotation) {\r\n    return ObjectUtils.getRotationWorldQuat(object, rotation);\r\n}\r\n\r\n// Rotation World\r\n\r\nexport function getRotationWorld(object, rotation) {\r\n    return ObjectUtils.getRotationWorldDegrees(object, rotation);\r\n}\r\n\r\nexport function getRotationWorldDegrees(object, rotation) {\r\n    rotation = ObjectUtils.getRotationWorldRadians(object, rotation);\r\n    rotation = Vec3Utils.toDegrees(rotation, rotation);\r\n    return rotation;\r\n}\r\n\r\nexport let getRotationWorldRadians = function () {\r\n    let quat = QuatUtils.create();\r\n    return function getRotationWorldRadians(object, rotation = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.toRadians(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nexport let getRotationWorldMatrix = function () {\r\n    let quat = QuatUtils.create();\r\n    return function getRotationWorldMatrix(object, rotation = Mat3Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.toMatrix(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nexport function getRotationWorldQuat(object, rotation = QuatUtils.create()) {\r\n    object.getRotationWorld(rotation);\r\n    return rotation;\r\n}\r\n\r\n// Rotation Local\r\n\r\nexport function getRotationLocal(object, rotation) {\r\n    return ObjectUtils.getRotationLocalDegrees(object, rotation);\r\n}\r\n\r\nexport function getRotationLocalDegrees(object, rotation) {\r\n    rotation = ObjectUtils.getRotationLocalRadians(object, rotation);\r\n    rotation = Vec3Utils.toDegrees(rotation, rotation);\r\n    return rotation;\r\n}\r\n\r\nexport let getRotationLocalRadians = function () {\r\n    let quat = QuatUtils.create();\r\n    return function getRotationLocalRadians(object, rotation = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.toRadians(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nexport let getRotationLocalMatrix = function () {\r\n    let quat = QuatUtils.create();\r\n    return function getRotationLocalMatrix(object, rotation = Mat3Utils.create()) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.toMatrix(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nexport function getRotationLocalQuat(object, rotation = QuatUtils.create()) {\r\n    object.getRotationLocal(rotation);\r\n    return rotation;\r\n}\r\n\r\n// Scale\r\n\r\nexport function getScale(object, scale) {\r\n    return ObjectUtils.getScaleWorld(object, scale);\r\n}\r\n\r\nexport function getScaleWorld(object, scale = Vec3Utils.create()) {\r\n    object.getScalingWorld(scale);\r\n    return scale;\r\n}\r\n\r\nexport function getScaleLocal(object, scale = Vec3Utils.create()) {\r\n    object.getScalingLocal(scale);\r\n    return scale;\r\n}\r\n\r\n// Transform\r\n\r\nexport function getTransform(object, transform) {\r\n    return ObjectUtils.getTransformWorld(object, transform);\r\n}\r\n\r\nexport function getTransformMatrix(object, transform) {\r\n    return ObjectUtils.getTransformWorldMatrix(object, transform);\r\n}\r\n\r\nexport function getTransformQuat(object, transform) {\r\n    return ObjectUtils.getTransformWorldQuat(object, transform);\r\n}\r\n\r\n// Transform World\r\n\r\nexport function getTransformWorld(object, transform) {\r\n    return ObjectUtils.getTransformWorldMatrix(object, transform);\r\n}\r\n\r\nexport let getTransformWorldMatrix = function () {\r\n    let transformQuat = Quat2Utils.create();\r\n    let scale = Vec3Utils.create();\r\n    return function getTransformWorldMatrix(object, transform = Mat4Utils.create()) {\r\n        ObjectUtils.getTransformWorldQuat(object, transformQuat);\r\n        ObjectUtils.getScaleWorld(object, scale);\r\n        Mat4Utils.fromQuat(transformQuat, transform);\r\n        Mat4Utils.scale(transform, scale, transform);\r\n        return transform;\r\n    };\r\n}();\r\n\r\nexport function getTransformWorldQuat(object, transform = Quat2Utils.create()) {\r\n    object.getTransformWorld(transform);\r\n    return transform;\r\n}\r\n\r\n// Transform Local\r\n\r\nexport function getTransformLocal(object, transform) {\r\n    return ObjectUtils.getTransformLocalMatrix(object, transform);\r\n}\r\n\r\nexport let getTransformLocalMatrix = function () {\r\n    let transformQuat = Quat2Utils.create();\r\n    let scale = Vec3Utils.create();\r\n    return function getTransformLocalMatrix(object, transform = Mat4Utils.create()) {\r\n        ObjectUtils.getTransformLocalQuat(object, transformQuat);\r\n        ObjectUtils.getScaleLocal(object, scale);\r\n        Mat4Utils.fromQuat(transformQuat, transform);\r\n        Mat4Utils.scale(transform, scale, transform);\r\n        return transform;\r\n    };\r\n}();\r\n\r\nexport function getTransformLocalQuat(object, transform = Quat2Utils.create()) {\r\n    object.getTransformLocal(transform);\r\n    return transform;\r\n}\r\n\r\n// Axes\r\n\r\nexport function getAxes(object, axes) {\r\n    return ObjectUtils.getAxesWorld(object, axes);\r\n}\r\n\r\nexport function getAxesWorld(object, axes = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n    ObjectUtils.getLeftWorld(object, axes[0]);\r\n    ObjectUtils.getUpWorld(object, axes[1]);\r\n    ObjectUtils.getForwardWorld(object, axes[2]);\r\n    return axes;\r\n}\r\n\r\nexport function getAxesLocal(object, axes = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n    ObjectUtils.getLeftLocal(object, axes[0]);\r\n    ObjectUtils.getUpLocal(object, axes[1]);\r\n    ObjectUtils.getForwardLocal(object, axes[2]);\r\n    return axes;\r\n}\r\n\r\n// Forward\r\n\r\nexport function getForward(object, forward) {\r\n    return ObjectUtils.getForwardWorld(object, forward);\r\n}\r\n\r\nexport let getForwardWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getForwardWorld(object, forward = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        forward[0] = rotation[6];\r\n        forward[1] = rotation[7];\r\n        forward[2] = rotation[8];\r\n        return forward;\r\n    };\r\n}();\r\n\r\nexport let getForwardLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getForwardLocal(object, forward = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        forward[0] = rotation[6];\r\n        forward[1] = rotation[7];\r\n        forward[2] = rotation[8];\r\n        return forward;\r\n    };\r\n}();\r\n\r\n// Backward\r\n\r\nexport function getBackward(object, backward) {\r\n    return ObjectUtils.getBackwardWorld(object, backward);\r\n}\r\n\r\nexport let getBackwardWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getBackwardWorld(object, backward = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        backward[0] = -rotation[6];\r\n        backward[1] = -rotation[7];\r\n        backward[2] = -rotation[8];\r\n        return backward;\r\n    };\r\n}();\r\n\r\nexport let getBackwardLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getBackwardLocal(object, backward = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        backward[0] = -rotation[6];\r\n        backward[1] = -rotation[7];\r\n        backward[2] = -rotation[8];\r\n        return backward;\r\n    };\r\n}();\r\n\r\n// Up\r\n\r\nexport function getUp(object, up) {\r\n    return ObjectUtils.getUpWorld(object, up);\r\n}\r\n\r\nexport let getUpWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getUpWorld(object, up = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        up[0] = rotation[3];\r\n        up[1] = rotation[4];\r\n        up[2] = rotation[5];\r\n        return up;\r\n    };\r\n}();\r\n\r\nexport let getUpLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getUpLocal(object, up = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        up[0] = rotation[3];\r\n        up[1] = rotation[4];\r\n        up[2] = rotation[5];\r\n        return up;\r\n    };\r\n}();\r\n\r\n// Down\r\n\r\nexport function getDown(object, down) {\r\n    return ObjectUtils.getDownWorld(object, down);\r\n}\r\n\r\nexport let getDownWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getDownWorld(object, down = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        down[0] = -rotation[3];\r\n        down[1] = -rotation[4];\r\n        down[2] = -rotation[5];\r\n        return down;\r\n    };\r\n}();\r\n\r\nexport let getDownLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getDownLocal(object, down = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        down[0] = -rotation[3];\r\n        down[1] = -rotation[4];\r\n        down[2] = -rotation[5];\r\n        return down;\r\n    };\r\n}();\r\n\r\n// Left\r\n\r\nexport function getLeft(object, left) {\r\n    return ObjectUtils.getLeftWorld(object, left);\r\n}\r\n\r\nexport let getLeftWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getLeftWorld(object, left = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        left[0] = rotation[0];\r\n        left[1] = rotation[1];\r\n        left[2] = rotation[2];\r\n        return left;\r\n    };\r\n}();\r\n\r\nexport let getLeftLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getLeftLocal(object, left = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        left[0] = rotation[0];\r\n        left[1] = rotation[1];\r\n        left[2] = rotation[2];\r\n        return left;\r\n    };\r\n}();\r\n\r\n// Right\r\n\r\nexport function getRight(object, right) {\r\n    return ObjectUtils.getRightWorld(object, right);\r\n}\r\n\r\nexport let getRightWorld = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getRightWorld(object, right = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldMatrix(object, rotation);\r\n        right[0] = -rotation[0];\r\n        right[1] = -rotation[1];\r\n        right[2] = -rotation[2];\r\n        return right;\r\n    };\r\n}();\r\n\r\nexport let getRightLocal = function () {\r\n    let rotation = Mat3Utils.create();\r\n    return function getRightLocal(object, right = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationLocalMatrix(object, rotation);\r\n        right[0] = -rotation[0];\r\n        right[1] = -rotation[1];\r\n        right[2] = -rotation[2];\r\n        return right;\r\n    };\r\n}();\r\n\r\n// SETTER\r\n\r\n// Position\r\n\r\nexport function setPosition(object, position) {\r\n    ObjectUtils.setPositionWorld(object, position);\r\n}\r\n\r\nexport function setPositionWorld(object, position) {\r\n    object.setTranslationWorld(position);\r\n}\r\n\r\nexport function setPositionLocal(object, position) {\r\n    object.setTranslationLocal(position);\r\n}\r\n\r\n// Rotation\r\n\r\nexport function setRotation(object, rotation) {\r\n    ObjectUtils.setRotationWorld(object, rotation);\r\n}\r\n\r\nexport function setRotationDegrees(object, rotation) {\r\n    ObjectUtils.setRotationWorldDegrees(object, rotation);\r\n}\r\n\r\nexport function setRotationRadians(object, rotation) {\r\n    ObjectUtils.setRotationWorldRadians(object, rotation);\r\n}\r\n\r\nexport function setRotationMatrix(object, rotation) {\r\n    ObjectUtils.setRotationWorldMatrix(object, rotation);\r\n}\r\n\r\nexport function setRotationQuat(object, rotation) {\r\n    ObjectUtils.setRotationWorldQuat(object, rotation);\r\n}\r\n\r\n// Rotation World\r\n\r\nexport function setRotationWorld(object, rotation) {\r\n    ObjectUtils.setRotationWorldDegrees(object, rotation);\r\n}\r\n\r\nexport let setRotationWorldDegrees = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRotationWorldDegrees(object, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, quat);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setRotationWorldRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function setRotationWorldRadians(object, rotation) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.setRotationWorldDegrees(object, degreesRotation);\r\n    };\r\n}();\r\n\r\nexport let setRotationWorldMatrix = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRotationWorldMatrix(object, rotation) {\r\n        Mat3Utils.toQuat(rotation, quat);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport function setRotationWorldQuat(object, rotation) {\r\n    object.setRotationWorld(rotation);\r\n}\r\n\r\n// Rotation Local\r\n\r\nexport function setRotationLocal(object, rotation) {\r\n    ObjectUtils.setRotationLocalDegrees(object, rotation);\r\n}\r\n\r\nexport let setRotationLocalDegrees = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRotationLocalDegrees(object, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, quat);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setRotationLocalRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function setRotationLocalRadians(object, rotation) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.setRotationLocalDegrees(object, degreesRotation);\r\n    };\r\n}();\r\n\r\nexport let setRotationLocalMatrix = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRotationLocalMatrix(object, rotation) {\r\n        Mat3Utils.toQuat(rotation, quat);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport function setRotationLocalQuat(object, rotation) {\r\n    object.setRotationLocal(rotation);\r\n}\r\n\r\n// Scale\r\n\r\nexport function setScale(object, scale) {\r\n    ObjectUtils.setScaleWorld(object, scale);\r\n}\r\n\r\nexport let setScaleWorld = function () {\r\n    let vector = Vec3Utils.create();\r\n    return function setScaleWorld(object, scale) {\r\n        if (isNaN(scale)) {\r\n            object.setScalingWorld(scale);\r\n        } else {\r\n            Vec3Utils.set(vector, scale);\r\n            object.setScalingWorld(vector);\r\n        }\r\n    };\r\n}();\r\n\r\nexport let setScaleLocal = function () {\r\n    let vector = Vec3Utils.create();\r\n    return function setScaleLocal(object, scale) {\r\n        if (isNaN(scale)) {\r\n            object.setScalingLocal(scale);\r\n        } else {\r\n            Vec3Utils.set(vector, scale);\r\n            object.setScalingLocal(vector);\r\n        }\r\n    };\r\n}();\r\n\r\n// Axes    \r\n\r\nexport function setAxes(object, left, up, forward) {\r\n    ObjectUtils.setAxesWorld(object, left, up, forward);\r\n}\r\n\r\nexport function setAxesWorld(object, left, up, forward) {\r\n    if (forward != null) {\r\n        ObjectUtils.setForwardWorld(object, forward, up, left);\r\n    } else if (up != null) {\r\n        ObjectUtils.setUpWorld(object, up, forward, left);\r\n    } else {\r\n        ObjectUtils.setLeftWorld(object, left, up, forward);\r\n    }\r\n}\r\n\r\nexport function setAxesLocal(object, left, up, forward) {\r\n    if (forward != null) {\r\n        ObjectUtils.setForwardLocal(object, forward, up, left);\r\n    } else if (up != null) {\r\n        ObjectUtils.setUpLocal(object, up, forward, left);\r\n    } else {\r\n        ObjectUtils.setLeftLocal(object, left, up, forward);\r\n    }\r\n}\r\n\r\n// Forward\r\n\r\nexport function setForward(object, forward, up, left) {\r\n    ObjectUtils.setForwardWorld(object, forward, up, left);\r\n}\r\n\r\nexport let setForwardWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setForwardWorld(object, forward, up = null, left = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setForward(quat, forward, up, left);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setForwardLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setForwardLocal(object, forward, up = null, left = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setForward(quat, forward, up, left);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Backward\r\n\r\nexport function setBackward(object, backward, up, left) {\r\n    ObjectUtils.setBackwardWorld(object, backward, up, left);\r\n}\r\n\r\nexport let setBackwardWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setBackwardWorld(object, backward, up = null, left = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setBackward(quat, backward, up, left);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setBackwardLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setBackwardLocal(object, backward, up = null, left = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setBackward(quat, backward, up, left);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Up\r\n\r\nexport function setUp(object, up, forward, left) {\r\n    ObjectUtils.setUpWorld(object, up, forward, left);\r\n}\r\n\r\nexport let setUpWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setUpWorld(object, up, forward = null, left = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setUp(quat, up, forward, left);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setUpLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setUpLocal(object, up, forward = null, left = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setUp(quat, up, forward, left);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Down\r\n\r\nexport function setDown(object, down, forward, left) {\r\n    ObjectUtils.setDownWorld(object, down, forward, left);\r\n}\r\n\r\nexport let setDownWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setDownWorld(object, down, forward = null, left = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setDown(quat, down, forward, left);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setDownLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setDownLocal(object, down, forward = null, left = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setDown(quat, down, forward, left);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Left\r\n\r\nexport function setLeft(object, left, up, forward) {\r\n    ObjectUtils.setLeftWorld(object, left, up, forward);\r\n}\r\n\r\nexport let setLeftWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setLeftWorld(object, left, up = null, forward = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setLeft(quat, left, up, forward);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setLeftLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setLeftLocal(object, left, up = null, forward = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setLeft(quat, left, up, forward);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Right\r\n\r\nexport function setRight(object, right, up, forward) {\r\n    ObjectUtils.setRightWorld(object, right, up, forward);\r\n}\r\n\r\nexport let setRightWorld = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRightWorld(object, right, up = null, forward = null) {\r\n        ObjectUtils.getRotationWorldQuat(object, quat);\r\n        QuatUtils.setRight(quat, right, up, forward);\r\n        ObjectUtils.setRotationWorldQuat(object, quat);\r\n    };\r\n}();\r\n\r\nexport let setRightLocal = function () {\r\n    let quat = QuatUtils.create();\r\n    return function setRightLocal(object, right, up = null, forward = null) {\r\n        ObjectUtils.getRotationLocalQuat(object, quat);\r\n        QuatUtils.setRight(quat, right, up, forward);\r\n        ObjectUtils.setRotationLocalQuat(object, quat);\r\n    };\r\n}();\r\n\r\n// Transform\r\n\r\nexport function setTransform(object, transform) {\r\n    ObjectUtils.setTransformWorld(object, transform);\r\n}\r\n\r\nexport function setTransformMatrix(object, transform) {\r\n    ObjectUtils.setTransformWorldMatrix(object, transform);\r\n}\r\n\r\nexport function setTransformQuat(object, transform) {\r\n    ObjectUtils.setTransformWorldQuat(object, transform);\r\n}\r\n\r\n// Transform World\r\n\r\nexport function setTransformWorld(object, transform) {\r\n    return ObjectUtils.setTransformWorldMatrix(object, transform);\r\n}\r\n\r\nexport let setTransformWorldMatrix = function () {\r\n    let position = Vec3Utils.create();\r\n    let rotation = QuatUtils.create();\r\n    let scale = Vec3Utils.create();\r\n    let transformMatrixNoScale = Mat4Utils.create();\r\n    let inverseScale = Vec3Utils.create();\r\n    let one = Vec3Utils.create(1);\r\n    return function setTransformWorldMatrix(object, transform) {\r\n        Mat4Utils.getPosition(transform, position);\r\n        Mat4Utils.getScale(transform, scale);\r\n        Vec3Utils.div(one, scale, inverseScale);\r\n        Mat4Utils.scale(transform, inverseScale, transformMatrixNoScale);\r\n        Mat4Utils.getRotationQuat(transformMatrixNoScale, rotation);\r\n        QuatUtils.normalize(rotation, rotation);\r\n        ObjectUtils.setScaleWorld(object, scale);\r\n        ObjectUtils.setRotationWorldQuat(object, rotation);\r\n        ObjectUtils.setPositionWorld(object, position);\r\n    };\r\n}();\r\n\r\nexport function setTransformWorldQuat(object, transform) {\r\n    object.setTransformWorld(transform);\r\n}\r\n\r\n// Transform Local\r\n\r\nexport function setTransformLocal(object, transform) {\r\n    return ObjectUtils.setTransformLocalMatrix(object, transform);\r\n}\r\n\r\nexport let setTransformLocalMatrix = function () {\r\n    let position = Vec3Utils.create();\r\n    let rotation = QuatUtils.create();\r\n    let scale = Vec3Utils.create();\r\n    let transformMatrixNoScale = Mat4Utils.create();\r\n    let inverseScale = Vec3Utils.create();\r\n    let one = Vec3Utils.create(1);\r\n    return function setTransformLocalMatrix(object, transform) {\r\n        Mat4Utils.getPosition(transform, position);\r\n        Mat4Utils.getScale(transform, scale);\r\n        Vec3Utils.div(one, scale, inverseScale);\r\n        Mat4Utils.scale(transform, inverseScale, transformMatrixNoScale);\r\n        Mat4Utils.getRotationQuat(transformMatrixNoScale, rotation);\r\n        QuatUtils.normalize(rotation, rotation);\r\n        ObjectUtils.setScaleLocal(object, scale);\r\n        ObjectUtils.setRotationLocalQuat(object, rotation);\r\n        ObjectUtils.setPositionLocal(object, position);\r\n    };\r\n}();\r\n\r\nexport function setTransformLocalQuat(object, transform) {\r\n    object.setTransformLocal(transform);\r\n}\r\n\r\n// RESET\r\n\r\n// Position\r\n\r\nexport function resetPosition(object) {\r\n    ObjectUtils.resetPositionWorld(object);\r\n}\r\n\r\nexport let resetPositionWorld = function () {\r\n    let zero = Vec3Utils.create();\r\n    return function resetPositionWorld(object) {\r\n        ObjectUtils.setPositionWorld(object, zero);\r\n    };\r\n}();\r\n\r\nexport let resetPositionLocal = function () {\r\n    let zero = Vec3Utils.create();\r\n    return function resetPositionLocal(object) {\r\n        ObjectUtils.setPositionLocal(object, zero);\r\n    };\r\n}();\r\n\r\n// Rotation\r\n\r\nexport function resetRotation(object) {\r\n    ObjectUtils.resetRotationWorld(object);\r\n}\r\n\r\nexport let resetRotationWorld = function () {\r\n    let identity = QuatUtils.create();\r\n    return function resetRotationWorld(object) {\r\n        ObjectUtils.setRotationWorldQuat(object, identity);\r\n    };\r\n}();\r\n\r\nexport let resetRotationLocal = function () {\r\n    let identity = QuatUtils.create();\r\n    return function resetRotationLocal(object) {\r\n        ObjectUtils.setRotationLocalQuat(object, identity);\r\n    };\r\n}();\r\n\r\n// Scale\r\n\r\nexport function resetScale(object) {\r\n    ObjectUtils.resetScaleWorld(object);\r\n}\r\n\r\nexport let resetScaleWorld = function () {\r\n    let one = Vec3Utils.create(1);\r\n    return function resetScaleWorld(object) {\r\n        ObjectUtils.setScaleWorld(object, one);\r\n    };\r\n}();\r\n\r\nexport let resetScaleLocal = function () {\r\n    let one = Vec3Utils.create(1);\r\n    return function resetScaleLocal(object) {\r\n        ObjectUtils.setScaleLocal(object, one);\r\n    };\r\n}();\r\n\r\n// Transform\r\n\r\nexport function resetTransform(object) {\r\n    ObjectUtils.resetTransformWorld(object);\r\n}\r\n\r\nexport function resetTransformWorld(object) {\r\n    ObjectUtils.resetScaleWorld(object);\r\n    ObjectUtils.resetRotationWorld(object);\r\n    ObjectUtils.resetPositionWorld(object);\r\n}\r\n\r\nexport function resetTransformLocal(object) {\r\n    ObjectUtils.resetScaleLocal(object);\r\n    ObjectUtils.resetRotationLocal(object);\r\n    ObjectUtils.resetPositionLocal(object);\r\n}\r\n\r\n// TRANSFORMATIONS\r\n\r\n// Translate\r\n\r\nexport function translate(object, translation) {\r\n    ObjectUtils.translateWorld(object, translation);\r\n}\r\n\r\nexport function translateWorld(object, translation) {\r\n    object.translateWorld(translation);\r\n}\r\n\r\nexport function translateLocal(object, translation) {\r\n    object.translate(translation);\r\n}\r\n\r\nexport function translateObject(object, translation) {\r\n    object.translateObject(translation);\r\n}\r\n\r\n// Translate Axis\r\n\r\nexport function translateAxis(object, amount, direction) {\r\n    ObjectUtils.translateAxisWorld(object, amount, direction);\r\n}\r\n\r\nexport let translateAxisWorld = function () {\r\n    let translation = Vec3Utils.create();\r\n    return function translateAxisWorld(object, amount, direction) {\r\n        Vec3Utils.scale(direction, amount, translation);\r\n        ObjectUtils.translateWorld(object, translation);\r\n    };\r\n}();\r\n\r\nexport let translateAxisLocal = function () {\r\n    let translation = Vec3Utils.create();\r\n    return function translateAxisLocal(object, amount, direction) {\r\n        Vec3Utils.scale(direction, amount, translation);\r\n        ObjectUtils.translateLocal(object, translation);\r\n    };\r\n}();\r\n\r\nexport let translateAxisObject = function () {\r\n    let translation = Vec3Utils.create();\r\n    return function translateAxisObject(object, amount, direction) {\r\n        Vec3Utils.scale(direction, amount, translation);\r\n        ObjectUtils.translateObject(object, translation);\r\n    };\r\n}();\r\n\r\n// Rotate\r\n\r\nexport function rotate(object, rotation) {\r\n    ObjectUtils.rotateWorld(object, rotation);\r\n}\r\n\r\nexport function rotateDegrees(object, rotation) {\r\n    ObjectUtils.rotateWorldDegrees(object, rotation);\r\n}\r\n\r\nexport function rotateRadians(object, rotation) {\r\n    ObjectUtils.rotateWorldRadians(object, rotation);\r\n}\r\n\r\nexport function rotateMatrix(object, rotation) {\r\n    ObjectUtils.rotateWorldMatrix(object, rotation);\r\n}\r\n\r\nexport function rotateQuat(object, rotation) {\r\n    ObjectUtils.rotateWorldQuat(object, rotation);\r\n}\r\n\r\n// Rotate World\r\n\r\nexport function rotateWorld(object, rotation) {\r\n    ObjectUtils.rotateWorldDegrees(object, rotation);\r\n}\r\n\r\nexport let rotateWorldDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateWorldDegrees(object, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateWorldQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport let rotateWorldRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateWorldRadians(object, rotation) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateWorldDegrees(object, degreesRotation);\r\n    };\r\n}();\r\n\r\nexport let rotateWorldMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateWorldMatrix(object, rotation) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateWorldQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport let rotateWorldQuat = function () {\r\n    let currentRotationQuat = QuatUtils.create();\r\n    return function rotateWorldQuat(object, rotation) {\r\n        ObjectUtils.getRotationWorldQuat(object, currentRotationQuat);\r\n        QuatUtils.mul(rotation, currentRotationQuat, currentRotationQuat);\r\n        QuatUtils.normalize(currentRotationQuat, currentRotationQuat);\r\n        ObjectUtils.setRotationWorldQuat(object, currentRotationQuat);\r\n    };\r\n}();\r\n\r\n// Rotate Local\r\n\r\nexport function rotateLocal(object, rotation) {\r\n    ObjectUtils.rotateLocalDegrees(object, rotation);\r\n}\r\n\r\nexport let rotateLocalDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateLocalDegrees(object, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateLocalQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport let rotateLocalRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateLocalRadians(object, rotation) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateLocalDegrees(object, degreesRotation);\r\n    };\r\n}();\r\n\r\nexport let rotateLocalMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateLocalMatrix(object, rotation) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateLocalQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport let rotateLocalQuat = function () {\r\n    let currentRotationQuat = QuatUtils.create();\r\n    return function rotateLocalQuat(object, rotation) {\r\n        ObjectUtils.getRotationLocalQuat(object, currentRotationQuat);\r\n        QuatUtils.mul(rotation, currentRotationQuat, currentRotationQuat);\r\n        QuatUtils.normalize(currentRotationQuat, currentRotationQuat);\r\n        ObjectUtils.setRotationLocalQuat(object, currentRotationQuat);\r\n    };\r\n}();\r\n\r\n// Rotate Object\r\n\r\nexport function rotateObject(object, rotation) {\r\n    ObjectUtils.rotateObjectDegrees(object, rotation);\r\n}\r\n\r\nexport let rotateObjectDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateObjectDegrees(object, rotation) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateObjectQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport let rotateObjectRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateObjectRadians(object, rotation) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateObjectDegrees(object, degreesRotation);\r\n    };\r\n}();\r\n\r\nexport let rotateObjectMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateObjectMatrix(object, rotation) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateObjectQuat(object, rotationQuat);\r\n    };\r\n}();\r\n\r\nexport function rotateObjectQuat(object, rotation) {\r\n    object.rotateObject(rotation);\r\n}\r\n\r\n// Rotate Axis\r\n\r\nexport function rotateAxis(object, angle, axis) {\r\n    ObjectUtils.rotateAxisWorld(object, angle, axis);\r\n}\r\n\r\nexport function rotateAxisDegrees(object, angle, axis) {\r\n    ObjectUtils.rotateAxisWorldDegrees(object, angle, axis);\r\n}\r\n\r\nexport function rotateAxisRadians(object, angle, axis) {\r\n    ObjectUtils.rotateAxisWorldRadians(object, angle, axis);\r\n}\r\n\r\n// Rotate Axis World\r\n\r\nexport function rotateAxisWorld(object, angle, axis) {\r\n    ObjectUtils.rotateAxisWorldDegrees(object, angle, axis);\r\n}\r\n\r\nexport function rotateAxisWorldDegrees(object, angle, axis) {\r\n    ObjectUtils.rotateAxisWorldRadians(object, MathUtils.toRadians(angle), axis);\r\n}\r\n\r\nexport let rotateAxisWorldRadians = function () {\r\n    let rotation = QuatUtils.create();\r\n    return function rotateAxisWorldRadians(object, angle, axis) {\r\n        QuatUtils.fromAxisRadians(angle, axis, rotation);\r\n        ObjectUtils.rotateWorldQuat(object, rotation);\r\n    };\r\n}();\r\n\r\n// Rotate Axis Local\r\n\r\nexport function rotateAxisLocal(object, angle, axis) {\r\n    ObjectUtils.rotateAxisLocalDegrees(object, angle, axis);\r\n}\r\n\r\nexport function rotateAxisLocalDegrees(object, angle, axis) {\r\n    ObjectUtils.rotateAxisLocalRadians(object, MathUtils.toRadians(angle), axis);\r\n}\r\n\r\nexport let rotateAxisLocalRadians = function () {\r\n    let rotation = QuatUtils.create();\r\n    return function rotateAxisLocalRadians(object, angle, axis) {\r\n        QuatUtils.fromAxisRadians(angle, axis, rotation);\r\n        ObjectUtils.rotateLocalQuat(object, rotation);\r\n    };\r\n}();\r\n\r\n// Rotate Axis Object\r\n\r\nexport function rotateAxisObject(object, angle, axis) {\r\n    ObjectUtils.rotateAxisObjectDegrees(object, angle, axis);\r\n}\r\n\r\nexport function rotateAxisObjectDegrees(object, angle, axis) {\r\n    ObjectUtils.rotateAxisObjectRadians(object, MathUtils.toRadians(angle), axis);\r\n}\r\n\r\nexport let rotateAxisObjectRadians = function () {\r\n    let rotation = QuatUtils.create();\r\n    return function rotateAxisObjectRadians(object, angle, axis) {\r\n        QuatUtils.fromAxisRadians(angle, axis, rotation);\r\n        ObjectUtils.rotateObjectQuat(object, rotation);\r\n    };\r\n}();\r\n\r\n// Rotate Around\r\n\r\nexport function rotateAround(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorld(object, rotation, origin);\r\n}\r\n\r\nexport function rotateAroundDegrees(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorldDegrees(object, rotation, origin);\r\n}\r\n\r\nexport function rotateAroundRadians(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorldRadians(object, rotation, origin);\r\n}\r\n\r\nexport function rotateAroundMatrix(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorldMatrix(object, rotation, origin);\r\n}\r\n\r\nexport function rotateAroundQuat(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorldQuat(object, rotation, origin);\r\n}\r\n\r\n// Rotate Around World\r\n\r\nexport function rotateAroundWorld(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundWorldDegrees(object, rotation, origin);\r\n}\r\n\r\nexport let rotateAroundWorldDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundWorldDegrees(object, rotation, origin) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateAroundWorldQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundWorldRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateAroundWorldRadians(object, rotation, origin) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateAroundWorldDegrees(object, degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundWorldMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundWorldMatrix(object, rotation, origin) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateAroundWorldQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundWorldQuat = function () {\r\n    let axis = Vec3Utils.create();\r\n    return function rotateAroundWorldQuat(object, rotation, origin) {\r\n        QuatUtils.getAxis(rotation, axis);\r\n        let angle = QuatUtils.getAngleRadians(rotation,);\r\n        ObjectUtils.rotateAroundAxisWorldRadians(object, angle, axis, origin);\r\n    };\r\n}();\r\n\r\n// Rotate Around Local\r\n\r\nexport function rotateAroundLocal(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundLocalDegrees(object, rotation, origin);\r\n}\r\n\r\nexport let rotateAroundLocalDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundLocalDegrees(object, rotation, origin) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateAroundLocalQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundLocalRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateAroundLocalRadians(object, rotation, origin) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateAroundLocalDegrees(object, degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundLocalMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundLocalMatrix(object, rotation, origin) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateAroundLocalQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundLocalQuat = function () {\r\n    let axis = Vec3Utils.create();\r\n    return function rotateAroundLocalQuat(object, rotation, origin) {\r\n        QuatUtils.getAxis(rotation, axis);\r\n        let angle = QuatUtils.getAngleRadians(rotation,);\r\n        ObjectUtils.rotateAroundAxisLocalRadians(object, angle, axis, origin);\r\n    };\r\n}();\r\n\r\n// Rotate Around Object\r\n\r\nexport function rotateAroundObject(object, rotation, origin) {\r\n    ObjectUtils.rotateAroundObjectDegrees(object, rotation, origin);\r\n}\r\n\r\nexport let rotateAroundObjectDegrees = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundObjectDegrees(object, rotation, origin) {\r\n        Vec3Utils.degreesToQuat(rotation, rotationQuat);\r\n        ObjectUtils.rotateAroundObjectQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundObjectRadians = function () {\r\n    let degreesRotation = Vec3Utils.create();\r\n    return function rotateAroundObjectRadians(object, rotation, origin) {\r\n        degreesRotation = Vec3Utils.toDegrees(rotation, degreesRotation);\r\n        ObjectUtils.rotateAroundObjectDegrees(object, degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundObjectMatrix = function () {\r\n    let rotationQuat = QuatUtils.create();\r\n    return function rotateAroundObjectMatrix(object, rotation, origin) {\r\n        Mat3Utils.toQuat(rotation, rotationQuat);\r\n        QuatUtils.normalize(rotationQuat, rotationQuat);\r\n        ObjectUtils.rotateAroundObjectQuat(object, rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nexport let rotateAroundObjectQuat = function () {\r\n    let axis = Vec3Utils.create();\r\n    return function rotateAroundObjectQuat(object, rotation, origin) {\r\n        QuatUtils.getAxis(rotation, axis);\r\n        let angle = QuatUtils.getAngleRadians(rotation,);\r\n        ObjectUtils.rotateAroundAxisObjectRadians(object, angle, axis, origin);\r\n    };\r\n}();\r\n\r\n// Rotate Around Axis\r\n\r\nexport function rotateAroundAxis(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisWorld(object, angle, axis, origin);\r\n}\r\n\r\nexport function rotateAroundAxisDegrees(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisWorldDegrees(object, angle, axis, origin);\r\n}\r\n\r\nexport function rotateAroundAxisRadians(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisWorldRadians(object, angle, axis, origin);\r\n}\r\n\r\n// Rotate Around Axis World\r\n\r\nexport function rotateAroundAxisWorld(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisWorldDegrees(object, angle, axis, origin);\r\n}\r\n\r\nexport function rotateAroundAxisWorldDegrees(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisWorldRadians(object, MathUtils.toRadians(angle), axis, origin);\r\n}\r\n\r\nexport let rotateAroundAxisWorldRadians = function () {\r\n    let transformToRotate = Quat2Utils.create();\r\n    let transformToRotateConjugate = Quat2Utils.create();\r\n    let transformQuat = Quat2Utils.create();\r\n    let defaultQuat = QuatUtils.create();\r\n    return function rotateAroundAxisWorldRadians(object, angle, axis, origin) {\r\n        Quat2Utils.setPositionRotationQuat(transformToRotate, origin, defaultQuat);\r\n        ObjectUtils.getTransformWorldQuat(object, transformQuat);\r\n        Quat2Utils.conjugate(transformToRotate, transformToRotateConjugate);\r\n        Quat2Utils.mul(transformToRotateConjugate, transformQuat, transformQuat);\r\n        Quat2Utils.rotateAxisRadians(transformToRotate, angle, axis, transformToRotate);\r\n        Quat2Utils.mul(transformToRotate, transformQuat, transformQuat);\r\n        ObjectUtils.setTransformWorldQuat(object, transformQuat);\r\n    };\r\n}();\r\n\r\n// Rotate Around Axis Local\r\n\r\nexport function rotateAroundAxisLocal(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisLocalDegrees(object, angle, axis, origin);\r\n}\r\n\r\nexport function rotateAroundAxisLocalDegrees(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisLocalRadians(object, MathUtils.toRadians(angle), axis, origin);\r\n}\r\n\r\nexport let rotateAroundAxisLocalRadians = function () {\r\n    let convertedPosition = Vec3Utils.create();\r\n    let convertedAxis = Vec3Utils.create();\r\n    return function rotateAroundAxisLocalRadians(object, angle, axis, origin) {\r\n        ObjectUtils.convertPositionLocalToWorld(object, origin, convertedPosition);\r\n        ObjectUtils.convertDirectionLocalToWorld(object, axis, convertedAxis);\r\n        ObjectUtils.rotateAroundAxisWorldRadians(object, angle, convertedAxis, convertedPosition);\r\n    };\r\n}();\r\n\r\n// Rotate Around Axis Object\r\n\r\nexport function rotateAroundAxisObject(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisObjectDegrees(object, angle, axis, origin);\r\n}\r\n\r\nexport function rotateAroundAxisObjectDegrees(object, angle, axis, origin) {\r\n    ObjectUtils.rotateAroundAxisObjectRadians(object, MathUtils.toRadians(angle), axis, origin);\r\n}\r\n\r\nexport let rotateAroundAxisObjectRadians = function () {\r\n    let convertedPosition = Vec3Utils.create();\r\n    let convertedAxis = Vec3Utils.create();\r\n    return function rotateAroundAxisObjectRadians(object, angle, axis, origin) {\r\n        ObjectUtils.convertPositionObjectToWorld(object, origin, convertedPosition);\r\n        ObjectUtils.convertDirectionObjectToWorld(object, axis, convertedAxis);\r\n        ObjectUtils.rotateAroundAxisWorldRadians(object, angle, convertedAxis, convertedPosition);\r\n    };\r\n}();\r\n\r\n// Scale\r\n\r\n// For now it does not really make sense in WL to scale in world space or parent space\r\n// so there is no scale default function\r\n\r\nexport let scaleObject = function () {\r\n    let vector = Vec3Utils.create();\r\n    return function scaleObject(object, scale) {\r\n        if (isNaN(scale)) {\r\n            object.scale(scale);\r\n        } else {\r\n            Vec3Utils.set(vector, scale);\r\n            object.scale(vector);\r\n        }\r\n    };\r\n}();\r\n\r\n// Look At\r\n\r\nexport function lookAt(object, position, up) {\r\n    ObjectUtils.lookAtWorld(object, position, up);\r\n}\r\n\r\nexport let lookAtWorld = function () {\r\n    let direction = Vec3Utils.create();\r\n    return function lookAtWorld(object, position, up) {\r\n        ObjectUtils.getPositionWorld(object, direction);\r\n        Vec3Utils.sub(position, direction, direction);\r\n        ObjectUtils.lookToWorld(object, direction, up);\r\n    };\r\n}();\r\n\r\nexport let lookAtLocal = function () {\r\n    let direction = Vec3Utils.create();\r\n    return function lookAtLocal(object, position, up) {\r\n        ObjectUtils.getPositionLocal(object, direction);\r\n        Vec3Utils.sub(position, direction, direction);\r\n        ObjectUtils.lookToLocal(object, direction, up);\r\n    };\r\n}();\r\n\r\nexport function lookTo(object, direction, up) {\r\n    ObjectUtils.lookToWorld(object, direction, up);\r\n}\r\n\r\nexport let lookToWorld = function () {\r\n    let internalUp = Vec3Utils.create();\r\n    return function lookToWorld(object, direction, up = ObjectUtils.getUpWorld(object, internalUp)) {\r\n        ObjectUtils.setForwardWorld(object, direction, up);\r\n    };\r\n}();\r\n\r\nexport let lookToLocal = function () {\r\n    let internalUp = Vec3Utils.create();\r\n    return function lookToLocal(object, direction, up = ObjectUtils.getUpLocal(object, internalUp)) {\r\n        ObjectUtils.setForwardLocal(object, direction, up);\r\n    };\r\n}();\r\n\r\n// EXTRA\r\n\r\n// Parent\r\n\r\nexport let setParent = function () {\r\n    let position = Vec3Utils.create();\r\n    let rotation = QuatUtils.create();\r\n    let scale = Vec3Utils.create();\r\n    return function setParent(object, newParent, keepTransformWorld = true) {\r\n        if (!keepTransformWorld) {\r\n            object.parent = newParent;\r\n        } else {\r\n            ObjectUtils.getPositionWorld(object, position);\r\n            ObjectUtils.getRotationWorldQuat(object, rotation);\r\n            ObjectUtils.getScaleWorld(object, scale);\r\n            object.parent = newParent;\r\n            ObjectUtils.setScaleWorld(object, scale);\r\n            ObjectUtils.setRotationWorldQuat(object, rotation);\r\n            ObjectUtils.setPositionWorld(object, position);\r\n        }\r\n    };\r\n}();\r\n\r\nexport function getParent(object) {\r\n    return object.parent;\r\n}\r\n\r\n// Convert Vector Object World\r\n\r\nexport let convertPositionObjectToWorld = function () {\r\n    let matrix = Mat4Utils.create();\r\n    return function convertPositionObjectToWorld(object, position, resultPosition = Vec3Utils.create()) {\r\n        ObjectUtils.getTransformWorldMatrix(object, matrix);\r\n        Vec3Utils.transformMat4(position, matrix, resultPosition);\r\n        return resultPosition;\r\n    };\r\n}();\r\n\r\nexport let convertDirectionObjectToWorld = function () {\r\n    let rotation = QuatUtils.create();\r\n    return function convertDirectionObjectToWorld(object, direction, resultDirection = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, rotation);\r\n        Vec3Utils.transformQuat(direction, rotation, resultDirection);\r\n        return resultDirection;\r\n    };\r\n}();\r\n\r\nexport let convertPositionWorldToObject = function () {\r\n    let matrix = Mat4Utils.create();\r\n    return function convertPositionWorldToObject(object, position, resultPosition = Vec3Utils.create()) {\r\n        ObjectUtils.getTransformWorldMatrix(object, matrix);\r\n        Mat4Utils.invert(matrix, matrix);\r\n        Vec3Utils.transformMat4(position, matrix, resultPosition);\r\n        return resultPosition;\r\n    };\r\n}();\r\n\r\nexport let convertDirectionWorldToObject = function () {\r\n    let rotation = QuatUtils.create();\r\n    return function convertDirectionWorldToObject(object, direction, resultDirection = Vec3Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, rotation);\r\n        QuatUtils.conjugate(rotation, rotation);\r\n        Vec3Utils.transformQuat(direction, rotation, resultDirection);\r\n        return resultDirection;\r\n    };\r\n}();\r\n\r\n// Convert Vector Local World\r\n\r\nexport function convertPositionLocalToWorld(object, position, resultPosition = Vec3Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertPositionObjectToWorld(ObjectUtils.getParent(object), position, resultPosition);\r\n    } else {\r\n        Vec3Utils.copy(position, resultPosition);\r\n    }\r\n    return resultPosition;\r\n}\r\n\r\nexport function convertDirectionLocalToWorld(object, direction, resultDirection = Vec3Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertDirectionObjectToWorld(ObjectUtils.getParent(object), direction, resultDirection);\r\n    } else {\r\n        Vec3Utils.copy(direction, resultDirection);\r\n    }\r\n    return resultDirection;\r\n}\r\n\r\nexport function convertPositionWorldToLocal(object, position, resultPosition = Vec3Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertPositionWorldToObject(ObjectUtils.getParent(object), position, resultPosition);\r\n    } else {\r\n        Vec3Utils.copy(position, resultPosition);\r\n    }\r\n    return resultPosition;\r\n}\r\n\r\nexport function convertDirectionWorldToLocal(object, direction, resultDirection = Vec3Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertDirectionWorldToObject(ObjectUtils.getParent(object), direction, resultDirection);\r\n    } else {\r\n        Vec3Utils.copy(direction, resultDirection);\r\n    }\r\n    return resultDirection;\r\n}\r\n\r\n// Convert Vector Local Object\r\n\r\n// I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\nexport function convertPositionObjectToLocal(object, position, resultPosition = Vec3Utils.create()) {\r\n    ObjectUtils.convertPositionObjectToWorld(object, position, resultPosition);\r\n    ObjectUtils.convertPositionWorldToLocal(object, resultPosition, resultPosition);\r\n    return resultPosition;\r\n}\r\n\r\nexport function convertDirectionObjectToLocal(object, direction, resultDirection = Vec3Utils.create()) {\r\n    ObjectUtils.convertDirectionObjectToWorld(object, direction, resultDirection);\r\n    ObjectUtils.convertDirectionWorldToLocal(object, resultDirection, resultDirection);\r\n    return resultDirection;\r\n}\r\n\r\nexport function convertPositionLocalToObject(object, position, resultPosition = Vec3Utils.create()) {\r\n    ObjectUtils.convertPositionLocalToWorld(object, position, resultPosition);\r\n    ObjectUtils.convertPositionWorldToObject(object, resultPosition, resultPosition);\r\n    return resultPosition;\r\n}\r\n\r\nexport function convertDirectionLocalToObject(object, direction, resultDirection = Vec3Utils.create()) {\r\n    ObjectUtils.convertDirectionLocalToWorld(object, direction, resultDirection);\r\n    ObjectUtils.convertDirectionWorldToObject(object, resultDirection, resultDirection);\r\n    return resultDirection;\r\n}\r\n\r\n// Convert Transform Object World\r\n\r\nexport function convertTransformObjectToWorld(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformObjectToWorldMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport let convertTransformObjectToWorldMatrix = function () {\r\n    let convertTransform = Mat4Utils.create();\r\n    let position = Vec3Utils.create();\r\n    let scale = Vec3Utils.create();\r\n    let inverseScale = Vec3Utils.create();\r\n    let one = Vec3Utils.create(1);\r\n    return function convertTransformObjectToWorldMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n        ObjectUtils.getTransformWorldMatrix(object, convertTransform);\r\n        if (ObjectUtils.hasUniformScaleWorld(object)) {\r\n            Mat4Utils.mul(convertTransform, transform, resultTransform);\r\n        } else {\r\n            Vec3Utils.set(position, transform[12], transform[13], transform[14]);\r\n            ObjectUtils.convertPositionObjectToWorld(object, position, position);\r\n\r\n            Mat4Utils.getScale(convertTransform, scale);\r\n            Vec3Utils.div(one, scale, inverseScale);\r\n            Mat4Utils.scale(convertTransform, inverseScale, convertTransform);\r\n\r\n            Mat4Utils.mul(convertTransform, transform, resultTransform);\r\n            Mat4Utils.scale(resultTransform, scale, resultTransform);\r\n\r\n            resultTransform[12] = position[0];\r\n            resultTransform[13] = position[1];\r\n            resultTransform[14] = position[2];\r\n            resultTransform[15] = 1;\r\n        }\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nexport let convertTransformObjectToWorldQuat = function () {\r\n    let position = Vec3Utils.create();\r\n    let rotation = QuatUtils.create();\r\n    return function convertTransformObjectToWorldQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, rotation);\r\n        QuatUtils.mul(rotation, transform, rotation);\r\n        Quat2Utils.getPosition(transform, position);\r\n        ObjectUtils.convertPositionObjectToWorld(object, position, position);\r\n        Quat2Utils.setPositionRotationQuat(resultTransform, position, rotation);\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nexport function convertTransformWorldToObject(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformWorldToObjectMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport let convertTransformWorldToObjectMatrix = function () {\r\n    let convertTransform = Mat4Utils.create();\r\n    let position = Vec3Utils.create();\r\n    let scale = Vec3Utils.create();\r\n    let inverseScale = Vec3Utils.create();\r\n    let one = Vec3Utils.create(1);\r\n    return function convertTransformWorldToObjectMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n        ObjectUtils.getTransformWorldMatrix(object, convertTransform);\r\n        if (ObjectUtils.hasUniformScaleWorld(object)) {\r\n            Mat4Utils.invert(convertTransform, convertTransform);\r\n            Mat4Utils.mul(convertTransform, transform, resultTransform);\r\n        } else {\r\n            Vec3Utils.set(position, transform[12], transform[13], transform[14]);\r\n            ObjectUtils.convertPositionWorldToObject(object, position, position);\r\n\r\n            Mat4Utils.getScale(convertTransform, scale);\r\n            Vec3Utils.div(one, scale, inverseScale);\r\n            Mat4Utils.scale(convertTransform, inverseScale, convertTransform);\r\n\r\n            Mat4Utils.invert(convertTransform, convertTransform);\r\n            Mat4Utils.mul(convertTransform, transform, resultTransform);\r\n            Mat4Utils.scale(resultTransform, inverseScale, resultTransform);\r\n\r\n            resultTransform[12] = position[0];\r\n            resultTransform[13] = position[1];\r\n            resultTransform[14] = position[2];\r\n            resultTransform[15] = 1;\r\n        }\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nexport let convertTransformWorldToObjectQuat = function () {\r\n    let position = Vec3Utils.create();\r\n    let rotation = QuatUtils.create();\r\n    return function convertTransformWorldToObjectQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n        ObjectUtils.getRotationWorldQuat(object, rotation);\r\n        QuatUtils.conjugate(rotation, rotation);\r\n        QuatUtils.mul(rotation, transform, rotation);\r\n        Quat2Utils.getPosition(transform, position);\r\n        ObjectUtils.convertPositionWorldToObject(object, position, position);\r\n        Quat2Utils.setPositionRotationQuat(resultTransform, position, rotation);\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\n// Convert Transform Local World\r\n\r\nexport function convertTransformLocalToWorld(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformLocalToWorldMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport function convertTransformLocalToWorldMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertTransformObjectToWorldMatrix(ObjectUtils.getParent(object), transform, resultTransform);\r\n    } else {\r\n        Mat4Utils.copy(transform, resultTransform);\r\n    }\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformLocalToWorldQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertTransformObjectToWorldQuat(ObjectUtils.getParent(object), transform, resultTransform);\r\n    } else {\r\n        Quat2Utils.copy(transform, resultTransform);\r\n    }\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformWorldToLocal(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformWorldToLocalMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport function convertTransformWorldToLocalMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertTransformWorldToObjectMatrix(ObjectUtils.getParent(object), transform, resultTransform);\r\n    } else {\r\n        Mat4Utils.copy(transform, resultTransform);\r\n    }\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformWorldToLocalQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n    if (ObjectUtils.getParent(object)) {\r\n        ObjectUtils.convertTransformWorldToObjectQuat(ObjectUtils.getParent(object), transform, resultTransform);\r\n    } else {\r\n        Quat2Utils.copy(transform, resultTransform);\r\n    }\r\n    return resultTransform;\r\n}\r\n\r\n// Convert Transform Object Local\r\n\r\n// I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\nexport function convertTransformObjectToLocal(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformObjectToLocalMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport function convertTransformObjectToLocalMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n    ObjectUtils.convertTransformObjectToWorldMatrix(object, transform, resultTransform);\r\n    ObjectUtils.convertTransformWorldToLocalMatrix(object, resultTransform, resultTransform);\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformObjectToLocalQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n    ObjectUtils.convertTransformObjectToWorldQuat(object, transform, resultTransform);\r\n    ObjectUtils.convertTransformWorldToLocalQuat(object, resultTransform, resultTransform);\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformLocalToObject(object, transform, resultTransform) {\r\n    return ObjectUtils.convertTransformLocalToObjectMatrix(object, transform, resultTransform);\r\n}\r\n\r\nexport function convertTransformLocalToObjectMatrix(object, transform, resultTransform = Mat4Utils.create()) {\r\n    ObjectUtils.convertTransformLocalToWorldMatrix(object, transform, resultTransform);\r\n    ObjectUtils.convertTransformWorldToObjectMatrix(object, resultTransform, resultTransform);\r\n    return resultTransform;\r\n}\r\n\r\nexport function convertTransformLocalToObjectQuat(object, transform, resultTransform = Quat2Utils.create()) {\r\n    ObjectUtils.convertTransformLocalToWorldQuat(object, transform, resultTransform);\r\n    ObjectUtils.convertTransformWorldToObjectQuat(object, resultTransform, resultTransform);\r\n    return resultTransform;\r\n}\r\n\r\n// Component\r\n\r\nexport function addComponent(object, typeOrClass, paramsOrActive, active = null) {\r\n    let params = null;\r\n\r\n    if (typeof paramsOrActive == \"boolean\") {\r\n        params = {};\r\n        params[\"active\"] = paramsOrActive;\r\n    } else {\r\n        params = paramsOrActive;\r\n\r\n        if (active != null) {\r\n            if (params == null) {\r\n                params = {};\r\n            }\r\n            params[\"active\"] = active;\r\n        }\r\n    }\r\n\r\n    return object.addComponent(typeOrClass, params);\r\n}\r\n\r\nexport function getComponent(object, typeOrClass, index = 0) {\r\n    return ObjectUtils.getComponentHierarchy(object, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentSelf(object, typeOrClass, index = 0) {\r\n    return object.getComponent(typeOrClass, index);\r\n}\r\n\r\nexport function getComponentHierarchy(object, typeOrClass, index = 0) {\r\n    return ObjectUtils.getComponentHierarchyBreadth(object, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentHierarchyBreadth(object, typeOrClass, index = 0) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    return ObjectUtils.getComponentObjects(objects, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentHierarchyDepth(object, typeOrClass, index = 0) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    return ObjectUtils.getComponentObjects(objects, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentDescendants(object, typeOrClass, index = 0) {\r\n    return ObjectUtils.getComponentDescendantsBreadth(object, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentDescendantsBreadth(object, typeOrClass, index = 0) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    return ObjectUtils.getComponentObjects(objects, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentDescendantsDepth(object, typeOrClass, index = 0) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    return ObjectUtils.getComponentObjects(objects, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentChildren(object, typeOrClass, index = 0) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    return ObjectUtils.getComponentObjects(objects, typeOrClass, index);\r\n}\r\n\r\nexport function getComponents(object, typeOrClass) {\r\n    return ObjectUtils.getComponentsHierarchy(object, typeOrClass);\r\n}\r\n\r\nexport function getComponentsSelf(object, typeOrClass) {\r\n    return object.getComponents(typeOrClass);\r\n}\r\n\r\nexport function getComponentsHierarchy(object, typeOrClass) {\r\n    return ObjectUtils.getComponentsHierarchyBreadth(object, typeOrClass);\r\n}\r\n\r\nexport function getComponentsHierarchyBreadth(object, typeOrClass) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    return ObjectUtils.getComponentsObjects(objects, typeOrClass);\r\n}\r\n\r\nexport function getComponentsHierarchyDepth(object, typeOrClass) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    return ObjectUtils.getComponentsObjects(objects, typeOrClass);\r\n}\r\n\r\nexport function getComponentsDescendants(object, typeOrClass) {\r\n    return ObjectUtils.getComponentsDescendantsBreadth(object, typeOrClass);\r\n}\r\n\r\nexport function getComponentsDescendantsBreadth(object, typeOrClass) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    return ObjectUtils.getComponentsObjects(objects, typeOrClass);\r\n}\r\n\r\nexport function getComponentsDescendantsDepth(object, typeOrClass) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    return ObjectUtils.getComponentsObjects(objects, typeOrClass);\r\n}\r\n\r\nexport function getComponentsChildren(object, typeOrClass) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    return ObjectUtils.getComponentsObjects(objects, typeOrClass);\r\n}\r\n\r\n// Active\r\n\r\nexport function setActive(object, active) {\r\n    ObjectUtils.setActiveHierarchy(object, active);\r\n}\r\n\r\nexport function setActiveSelf(object, active) {\r\n    object.active = active;\r\n}\r\n\r\nexport function setActiveHierarchy(object, active) {\r\n    ObjectUtils.setActiveHierarchyBreadth(object, active);\r\n}\r\n\r\nexport function setActiveHierarchyBreadth(object, active) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    ObjectUtils.setActiveObjects(objects, active);\r\n}\r\n\r\nexport function setActiveHierarchyDepth(object, active) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    ObjectUtils.setActiveObjects(objects, active);\r\n}\r\n\r\nexport function setActiveDescendants(object, active) {\r\n    ObjectUtils.setActiveDescendantsBreadth(object, active);\r\n}\r\n\r\nexport function setActiveDescendantsBreadth(object, active) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    ObjectUtils.setActiveObjects(objects, active);\r\n}\r\n\r\nexport function setActiveDescendantsDepth(object, active) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    ObjectUtils.setActiveObjects(objects, active);\r\n}\r\n\r\nexport function setActiveChildren(object, active) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    ObjectUtils.setActiveObjects(objects, active);\r\n}\r\n\r\n// Uniform Scale\r\n\r\nexport function hasUniformScale(object) {\r\n    return ObjectUtils.hasUniformScaleWorld(object);\r\n}\r\n\r\nexport let hasUniformScaleWorld = function () {\r\n    let scale = Vec3Utils.create();\r\n    return function hasUniformScaleWorld(object) {\r\n        ObjectUtils.getScaleWorld(object, scale);\r\n        return Math.abs(scale[0] - scale[1]) < MathUtils.EPSILON && Math.abs(scale[1] - scale[2]) < MathUtils.EPSILON && Math.abs(scale[0] - scale[2]) < MathUtils.EPSILON;\r\n    };\r\n}();\r\n\r\nexport let hasUniformScaleLocal = function () {\r\n    let scale = Vec3Utils.create();\r\n    return function hasUniformScaleLocal(object) {\r\n        ObjectUtils.getScaleLocal(object, scale);\r\n        return Math.abs(scale[0] - scale[1]) < MathUtils.EPSILON && Math.abs(scale[1] - scale[2]) < MathUtils.EPSILON && Math.abs(scale[0] - scale[2]) < MathUtils.EPSILON;\r\n    };\r\n}();\r\n\r\n// Clone\r\n\r\nexport let clone = function () {\r\n    let scale = Vec3Utils.create();\r\n    let transformQuat = Quat2Utils.create();\r\n    return function clone(object, cloneParams = new CloneParams()) {\r\n        let clonedObject = null;\r\n\r\n        if (ObjectUtils.isCloneable(object, cloneParams)) {\r\n            let objectsToCloneData = [];\r\n            objectsToCloneData.push([ObjectUtils.getParent(object), object]);\r\n\r\n            // Create the object hierarchy\r\n            let objectsToCloneComponentsData = [];\r\n            while (objectsToCloneData.length > 0) {\r\n                let cloneData = objectsToCloneData.shift();\r\n                let parent = cloneData[0];\r\n                let objectToClone = cloneData[1];\r\n\r\n                let currentClonedObject = (parent != null) ? ObjectUtils.addObject(parent) : SceneUtils.addObject(Globals.getScene(ObjectUtils.getEngine(object)));\r\n                ObjectUtils.setName(currentClonedObject, ObjectUtils.getName(objectToClone));\r\n\r\n                ObjectUtils.setScaleLocal(currentClonedObject, ObjectUtils.getScaleLocal(objectToClone, scale));\r\n                ObjectUtils.setTransformLocalQuat(currentClonedObject, ObjectUtils.getTransformLocalQuat(objectToClone, transformQuat));\r\n\r\n                if (!cloneParams.myIgnoreComponents) {\r\n                    objectsToCloneComponentsData.push([objectToClone, currentClonedObject]);\r\n                }\r\n\r\n                if (!cloneParams.myIgnoreChildren) {\r\n                    for (let child of ObjectUtils.getChildren(objectToClone)) {\r\n                        let cloneChild = false;\r\n                        if (cloneParams.myChildrenToInclude.length > 0) {\r\n                            cloneChild = cloneParams.myChildrenToInclude.find(childToInclude => ObjectUtils.equals(childToInclude, child)) != null;\r\n                        } else {\r\n                            cloneChild = cloneParams.myChildrenToIgnore.find(childToIgnore => ObjectUtils.equals(childToIgnore, child)) == null;\r\n                        }\r\n\r\n                        if (cloneChild && cloneParams.myIgnoreChildCallback != null) {\r\n                            cloneChild = !cloneParams.myIgnoreChildCallback(child);\r\n                        }\r\n\r\n                        if (cloneChild) {\r\n                            objectsToCloneData.push([currentClonedObject, child]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (clonedObject == null) {\r\n                    clonedObject = currentClonedObject;\r\n                }\r\n            }\r\n\r\n            // Get the components to clone\r\n            let componentsToCloneData = [];\r\n            while (objectsToCloneComponentsData.length > 0) {\r\n                let cloneData = objectsToCloneComponentsData.shift();\r\n                let objectToClone = cloneData[0];\r\n                let currentClonedObject = cloneData[1];\r\n\r\n                let components = ObjectUtils.getComponentsSelf(objectToClone);\r\n                for (let component of components) {\r\n                    if (ComponentUtils.isCloneable(component.type, cloneParams.myUseDefaultComponentClone || cloneParams.myUseDefaultComponentCloneAsFallback, ObjectUtils.getEngine(object))) {\r\n                        let cloneComponent = false;\r\n                        if (cloneParams.myComponentsToInclude.length > 0) {\r\n                            cloneComponent = cloneParams.myComponentsToInclude.indexOf(component.type) != -1;\r\n                        } else {\r\n                            cloneComponent = cloneParams.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                        }\r\n\r\n                        if (cloneComponent && cloneParams.myIgnoreComponentCallback != null) {\r\n                            cloneComponent = !cloneParams.myIgnoreComponentCallback(component);\r\n                        }\r\n\r\n                        if (cloneComponent) {\r\n                            componentsToCloneData.push([component, currentClonedObject]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clone the components\r\n            let componentsToPostProcessData = [];\r\n            while (componentsToCloneData.length > 0) {\r\n                let cloneData = componentsToCloneData.shift();\r\n                let componentToClone = cloneData[0];\r\n                let currentClonedObject = cloneData[1];\r\n                let clonedComponent = null;\r\n\r\n\r\n                if (!cloneParams.myUseDefaultComponentClone) {\r\n                    clonedComponent = ComponentUtils.clone(componentToClone, currentClonedObject, cloneParams.myComponentDeepCloneParams, cloneParams.myComponentCustomCloneParams, cloneParams.myUseDefaultComponentCloneAsFallback, cloneParams.myDefaultComponentCloneAutoStartIfNotActive);\r\n                } else {\r\n                    clonedComponent = ComponentUtils.cloneDefault(componentToClone, currentClonedObject, cloneParams.myDefaultComponentCloneAutoStartIfNotActive);\r\n                }\r\n\r\n                if (clonedComponent != null) {\r\n                    if (ComponentUtils.hasClonePostProcess(componentToClone.type, ObjectUtils.getEngine(object))) {\r\n                        componentsToPostProcessData.push([componentToClone, clonedComponent]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clone post process\r\n            // Can be useful if you have to get some data from other components in the hierarchy which have now been created\r\n            while (componentsToPostProcessData.length > 0) {\r\n                let cloneData = componentsToPostProcessData.shift();\r\n                let componentToClone = cloneData[0];\r\n                let currentClonedComponent = cloneData[1];\r\n\r\n                ComponentUtils.clonePostProcess(componentToClone, currentClonedComponent, cloneParams.myComponentDeepCloneParams, cloneParams.myComponentCustomCloneParams)\r\n            }\r\n        }\r\n\r\n        return clonedObject;\r\n    };\r\n}();\r\n\r\nexport function isCloneable(object, cloneParams = new CloneParams()) {\r\n    if (cloneParams.myIgnoreNonCloneable || cloneParams.myIgnoreComponents || cloneParams.myUseDefaultComponentClone || cloneParams.myUseDefaultComponentCloneAsFallback) {\r\n        return true;\r\n    }\r\n\r\n    let cloneable = true;\r\n\r\n    let objectsToClone = [];\r\n    objectsToClone.push(object);\r\n\r\n    while (cloneable && objectsToClone.length > 0) {\r\n        let objectToClone = objectsToClone.shift();\r\n\r\n        let components = ObjectUtils.getComponentsSelf(objectToClone);\r\n        for (let component of components) {\r\n            let cloneComponent = false;\r\n            if (cloneParams.myComponentsToInclude.length > 0) {\r\n                cloneComponent = cloneParams.myComponentsToInclude.indexOf(component.type) != -1;\r\n            } else {\r\n                cloneComponent = cloneParams.myComponentsToIgnore.indexOf(component.type) == -1;\r\n            }\r\n\r\n            if (cloneComponent && cloneParams.myIgnoreComponentCallback != null) {\r\n                cloneComponent = !cloneParams.myIgnoreComponentCallback(component);\r\n            }\r\n\r\n            if (cloneComponent && !ComponentUtils.isCloneable(component.type, false, ObjectUtils.getEngine(object))) {\r\n                cloneable = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (cloneable && !cloneParams.myIgnoreChildren) {\r\n            for (let child of ObjectUtils.getChildren(objectToClone)) {\r\n                let cloneChild = false;\r\n                if (cloneParams.myChildrenToInclude.length > 0) {\r\n                    cloneChild = cloneParams.myChildrenToInclude.find(childToInclude => ObjectUtils.equals(childToInclude, child)) != null;\r\n                } else {\r\n                    cloneChild = cloneParams.myChildrenToIgnore.find(childToInclude => ObjectUtils.equals(childToInclude, child)) == null;\r\n                }\r\n\r\n                if (cloneChild && cloneParams.myIgnoreChildCallback != null) {\r\n                    cloneChild = !cloneParams.myIgnoreChildCallback(child);\r\n                }\r\n\r\n                if (cloneChild) {\r\n                    objectsToClone.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return cloneable;\r\n}\r\n\r\n// To String\r\n\r\nexport function toString(object) {\r\n    return ObjectUtils.toStringCompact(object);\r\n}\r\n\r\nexport let toStringExtended = function () {\r\n    let tab = \"    \";\r\n    let newLine = \"\\n\";\r\n    let startObject = \"{\";\r\n    let endObject = \"}\";\r\n    let nameLabel = \"name: \";\r\n    let idLabel = \"id: \";\r\n    let componentsLabel = \"components: \";\r\n    let typeLabel = \"type: \";\r\n    let childrenLabel = \"children: \";\r\n    let startComponents = \"[\";\r\n    let endComponents = \"]\";\r\n    let startChildren = startComponents;\r\n    let endChildren = endComponents;\r\n    let separator = \",\";\r\n    let newLineTab = newLine.concat(tab, tab);\r\n    return function toStringExtended(object) {\r\n        let objectString = \"\";\r\n        objectString = objectString.concat(startObject, newLine);\r\n\r\n        let components = ObjectUtils.getComponentsSelf(object);\r\n        let children = ObjectUtils.getChildren(object);\r\n        let name = ObjectUtils.getName(object);\r\n\r\n        if (components.length > 0 || children.length > 0 || name.length > 0) {\r\n            objectString = objectString.concat(tab, idLabel, ObjectUtils.getID(object), separator, newLine);\r\n        } else {\r\n            objectString = objectString.concat(tab, idLabel, ObjectUtils.getID(object), newLine);\r\n        }\r\n\r\n        if (name.length > 0) {\r\n            if (components.length > 0 || children.length > 0) {\r\n                objectString = objectString.concat(tab, nameLabel, ObjectUtils.getName(object), separator, newLine);\r\n            } else {\r\n                objectString = objectString.concat(tab, nameLabel, ObjectUtils.getName(object), newLine);\r\n            }\r\n        }\r\n\r\n        if (components.length > 0) {\r\n            objectString = objectString.concat(tab, componentsLabel, newLine, tab, startComponents, newLine);\r\n            for (let i = 0; i < components.length; i++) {\r\n                let component = components[i];\r\n\r\n                objectString = objectString.concat(tab, tab, startObject, newLine);\r\n                objectString = objectString.concat(tab, tab, tab, typeLabel, component.type, separator, newLine);\r\n                objectString = objectString.concat(tab, tab, tab, idLabel, component._id, separator, newLine);\r\n                objectString = objectString.concat(tab, tab, endObject);\r\n\r\n                if (i != components.length - 1) {\r\n                    objectString = objectString.concat(separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(newLine);\r\n                }\r\n            }\r\n\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(tab, endComponents, separator, newLine);\r\n            } else {\r\n                objectString = objectString.concat(tab, endComponents, newLine);\r\n            }\r\n        }\r\n\r\n        if (children.length > 0) {\r\n            objectString = objectString.concat(tab, childrenLabel, newLine, tab, startChildren, newLine);\r\n            for (let i = 0; i < children.length; i++) {\r\n                let child = children[i];\r\n\r\n                let childString = ObjectUtils.toStringExtended(child);\r\n                childString = childString.replaceAll(newLine, newLineTab);\r\n                childString = tab.concat(tab, childString);\r\n                objectString = objectString.concat(childString);\r\n\r\n                if (i != children.length - 1) {\r\n                    objectString = objectString.concat(separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(newLine);\r\n                }\r\n            }\r\n            objectString = objectString.concat(tab, endChildren, newLine);\r\n        }\r\n\r\n        objectString = objectString.concat(endObject);\r\n\r\n        return objectString;\r\n    };\r\n}();\r\n\r\nexport let toStringCompact = function () {\r\n    let tab = \"    \";\r\n    let newLine = \"\\n\";\r\n    let emptyName = \"<none>\";\r\n    let nameLabel = \"name: \";\r\n    let componentsLabel = \"components: \";\r\n    let separator = \", \";\r\n    let newLineTab = newLine.concat(tab);\r\n    return function toStringCompact(object) {\r\n        let objectString = \"\";\r\n\r\n        let name = ObjectUtils.getName(object);\r\n        if (name.length > 0) {\r\n            objectString = objectString.concat(nameLabel, name);\r\n        } else {\r\n            objectString = objectString.concat(nameLabel, emptyName);\r\n        }\r\n\r\n        let components = ObjectUtils.getComponentsSelf(object);\r\n        if (components.length > 0) {\r\n            objectString = objectString.concat(separator, componentsLabel);\r\n            for (let i = 0; i < components.length; i++) {\r\n                let component = components[i];\r\n\r\n                objectString = objectString.concat(component.type);\r\n\r\n                if (i != components.length - 1) {\r\n                    objectString = objectString.concat(separator);\r\n                }\r\n            }\r\n        }\r\n\r\n        let children = ObjectUtils.getChildren(object);\r\n        if (children.length > 0) {\r\n            objectString = objectString.concat(newLine);\r\n            for (let i = 0; i < children.length; i++) {\r\n                let child = children[i];\r\n\r\n                let childString = ObjectUtils.toStringCompact(child);\r\n                childString = childString.replaceAll(newLine, newLineTab);\r\n                childString = tab.concat(childString);\r\n                objectString = objectString.concat(childString);\r\n\r\n                if (i != children.length - 1) {\r\n                    objectString = objectString.concat(newLine);\r\n                }\r\n            }\r\n        }\r\n\r\n        return objectString;\r\n    };\r\n}();\r\n\r\n// Get Object By Name\r\n\r\nexport function getObjectByName(object, name, regex = false, index = 0) {\r\n    return ObjectUtils.getObjectByNameHierarchy(object, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameHierarchy(object, name, regex = false, index = 0) {\r\n    return ObjectUtils.getObjectByNameHierarchyBreadth(object, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameHierarchyBreadth(object, name, regex = false, index = 0) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    return ObjectUtils.getObjectByNameObjects(objects, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameHierarchyDepth(object, name, regex = false, index = 0) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    return ObjectUtils.getObjectByNameObjects(objects, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameDescendants(object, name, regex = false, index = 0) {\r\n    return ObjectUtils.getObjectByNameDescendantsBreadth(object, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameDescendantsBreadth(object, name, regex = false, index = 0) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    return ObjectUtils.getObjectByNameObjects(objects, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameDescendantsDepth(object, name, regex = false, index = 0) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    return ObjectUtils.getObjectByNameObjects(objects, name, regex, index);\r\n}\r\n\r\nexport function getObjectByNameChildren(object, name, regex = false, index = 0) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    return ObjectUtils.getObjectByNameObjects(objects, name, regex, index);\r\n}\r\n\r\nexport function getObjectsByName(object, name, regex = false) {\r\n    return ObjectUtils.getObjectsByNameHierarchy(object, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameHierarchy(object, name, regex = false) {\r\n    return ObjectUtils.getObjectsByNameHierarchyBreadth(object, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameHierarchyBreadth(object, name, regex = false) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    return ObjectUtils.getObjectsByNameObjects(objects, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameHierarchyDepth(object, name, regex = false) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    return ObjectUtils.getObjectsByNameObjects(objects, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameDescendants(object, name, regex = false) {\r\n    return ObjectUtils.getObjectsByNameDescendantsBreadth(object, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameDescendantsBreadth(object, name, regex = false) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    return ObjectUtils.getObjectsByNameObjects(objects, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameDescendantsDepth(object, name, regex = false) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    return ObjectUtils.getObjectsByNameObjects(objects, name, regex);\r\n}\r\n\r\nexport function getObjectsByNameChildren(object, name, regex = false) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    return ObjectUtils.getObjectsByNameObjects(objects, name, regex);\r\n}\r\n\r\n// Get Object By ID\r\n\r\nexport function getObjectByID(object, id) {\r\n    return ObjectUtils.getObjectByIDHierarchy(object, id);\r\n}\r\n\r\nexport function getObjectByIDHierarchy(object, id) {\r\n    return ObjectUtils.getObjectByIDHierarchyBreadth(object, id);\r\n}\r\n\r\nexport function getObjectByIDHierarchyBreadth(object, id) {\r\n    let objects = ObjectUtils.getHierarchyBreadth(object);\r\n    return ObjectUtils.getObjectByIDObjects(objects, id);\r\n}\r\n\r\nexport function getObjectByIDHierarchyDepth(object, id) {\r\n    let objects = ObjectUtils.getHierarchyDepth(object);\r\n    return ObjectUtils.getObjectByIDObjects(objects, id);\r\n}\r\n\r\nexport function getObjectByIDDescendants(object, id) {\r\n    return ObjectUtils.getObjectByIDDescendantsBreadth(object, id);\r\n}\r\n\r\nexport function getObjectByIDDescendantsBreadth(object, id) {\r\n    let objects = ObjectUtils.getDescendantsBreadth(object);\r\n    return ObjectUtils.getObjectByIDObjects(objects, id);\r\n}\r\n\r\nexport function getObjectByIDDescendantsDepth(object, id) {\r\n    let objects = ObjectUtils.getDescendantsDepth(object);\r\n    return ObjectUtils.getObjectByIDObjects(objects, id);\r\n}\r\n\r\nexport function getObjectByIDChildren(object, id) {\r\n    let objects = ObjectUtils.getChildren(object);\r\n    return ObjectUtils.getObjectByIDObjects(objects, id);\r\n}\r\n\r\n// Get Hierarchy\r\n\r\nexport function getHierarchy(object) {\r\n    return ObjectUtils.getHierarchyBreadth(object);\r\n}\r\n\r\nexport function getHierarchyBreadth(object) {\r\n    let hierarchy = ObjectUtils.getDescendantsBreadth(object);\r\n\r\n    hierarchy.unshift(object);\r\n\r\n    return hierarchy;\r\n}\r\n\r\nexport function getHierarchyDepth(object) {\r\n    let hierarchy = ObjectUtils.getDescendantsDepth(object);\r\n\r\n    hierarchy.unshift(object);\r\n\r\n    return hierarchy;\r\n}\r\n\r\nexport function getDescendants(object) {\r\n    return ObjectUtils.getDescendantsBreadth(object);\r\n}\r\n\r\nexport function getDescendantsBreadth(object) {\r\n    let descendants = [];\r\n\r\n    let descendantsQueue = ObjectUtils.getChildren(object);\r\n\r\n    while (descendantsQueue.length > 0) {\r\n        let descendant = descendantsQueue.shift();\r\n        descendants.push(descendant);\r\n        for (let child of ObjectUtils.getChildren(descendant)) {\r\n            descendantsQueue.push(child);\r\n        }\r\n    }\r\n\r\n    return descendants;\r\n}\r\n\r\nexport function getDescendantsDepth(object) {\r\n    let descendants = [];\r\n\r\n    let children = ObjectUtils.getChildren(object);\r\n\r\n    for (let child of children) {\r\n        descendants.push(child);\r\n\r\n        let childDescendants = ObjectUtils.getDescendantsDepth(child);\r\n        if (childDescendants.length > 0) {\r\n            descendants.push(...childDescendants);\r\n        }\r\n    }\r\n\r\n    return descendants;\r\n}\r\n\r\nexport function getChildren(object) {\r\n    return object.children;\r\n}\r\n\r\nexport function getSelf(object) {\r\n    return object;\r\n}\r\n\r\n// Cauldron\r\n\r\nexport function addObject(object) {\r\n    return Globals.getScene(ObjectUtils.getEngine(object)).addObject(object);\r\n}\r\n\r\nexport function getName(object) {\r\n    return object.name;\r\n}\r\n\r\nexport function setName(object, name) {\r\n    object.name = name;\r\n}\r\n\r\nexport function getEngine(object) {\r\n    return object.engine;\r\n}\r\n\r\nexport function getID(object) {\r\n    return object.objectId;\r\n}\r\n\r\nexport function markDirty(object) {\r\n    return object.setDirty();\r\n}\r\n\r\nexport function isTransformChanged(object) {\r\n    return object.changed;\r\n}\r\n\r\nexport function equals(object, otherObject) {\r\n    return object.equals(otherObject);\r\n}\r\n\r\nexport function destroy(object) {\r\n    return object.destroy();\r\n}\r\n\r\nexport function reserveObjects(object, count) {\r\n    ObjectUtils.reserveObjectsHierarchy(object, count);\r\n}\r\n\r\nexport function reserveObjectsSelf(object, count) {\r\n    let componentsAmountMap = ObjectUtils.getComponentsAmountMapSelf(object);\r\n    _reserveObjects(count, componentsAmountMap, Globals.getScene(ObjectUtils.getEngine(object)));\r\n}\r\n\r\nexport function reserveObjectsHierarchy(object, count) {\r\n    let componentsAmountMap = ObjectUtils.getComponentsAmountMapHierarchy(object);\r\n    _reserveObjects(count, componentsAmountMap, Globals.getScene(ObjectUtils.getEngine(object)));\r\n}\r\n\r\nexport function reserveObjectsDescendants(object, count) {\r\n    let componentsAmountMap = ObjectUtils.getComponentsAmountMapDescendants(object);\r\n    _reserveObjects(count, componentsAmountMap, Globals.getScene(ObjectUtils.getEngine(object)));\r\n}\r\n\r\nexport function reserveObjectsChildren(object, count) {\r\n    let componentsAmountMap = ObjectUtils.getComponentsAmountMapChildren(object);\r\n    _reserveObjects(count, componentsAmountMap, Globals.getScene(ObjectUtils.getEngine(object)));\r\n}\r\n\r\nexport function getComponentsAmountMap(object, amountMap = new Map()) {\r\n    return ObjectUtils.getComponentsAmountMapHierarchy(object, amountMap);\r\n}\r\n\r\nexport function getComponentsAmountMapSelf(object, amountMap = new Map()) {\r\n    let objectsAmount = amountMap.get(\"object\");\r\n    if (objectsAmount == null) {\r\n        objectsAmount = 0;\r\n    }\r\n    objectsAmount += 1;\r\n    amountMap.set(\"object\", objectsAmount);\r\n\r\n    let components = ObjectUtils.getComponentsSelf(object);\r\n    for (let component of components) {\r\n        let type = component.type;\r\n        let typeAmount = amountMap.get(type);\r\n        if (typeAmount == null) {\r\n            typeAmount = 0;\r\n        }\r\n        typeAmount += 1;\r\n        amountMap.set(type, typeAmount);\r\n    }\r\n\r\n    return amountMap;\r\n}\r\n\r\nexport function getComponentsAmountMapHierarchy(object, amountMap = new Map()) {\r\n    let hierarchy = ObjectUtils.getHierarchy(object);\r\n\r\n    for (let hierarchyObject of hierarchy) {\r\n        ObjectUtils.getComponentsAmountMapSelf(hierarchyObject, amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n}\r\n\r\nexport function getComponentsAmountMapDescendants(object, amountMap = new Map()) {\r\n    let descendants = ObjectUtils.getDescendants(object);\r\n\r\n    for (let descendant of descendants) {\r\n        ObjectUtils.getComponentsAmountMapSelf(descendant, amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n}\r\n\r\nexport function getComponentsAmountMapChildren(object, amountMap = new Map()) {\r\n    let children = ObjectUtils.getChildren(object);\r\n\r\n    for (let child of children) {\r\n        ObjectUtils.getComponentsAmountMapSelf(child, amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n}\r\n\r\n// GLOBALS\r\n\r\nexport function getComponentObjects(objects, typeOrClass, index = 0) {\r\n    let component = null;\r\n\r\n    for (let object of objects) {\r\n        component = object.getComponent(typeOrClass, index);\r\n        if (component != null) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return component;\r\n}\r\n\r\nexport function getComponentsObjects(objects, typeOrClass) {\r\n    let components = [];\r\n\r\n    for (let currentObject of objects) {\r\n        components.push(...currentObject.getComponents(typeOrClass));\r\n    }\r\n\r\n    return components;\r\n}\r\n\r\nexport function setActiveObjects(objects, active) {\r\n    for (let currentObject of objects) {\r\n        currentObject.active = active;\r\n    }\r\n}\r\n\r\nexport function getObjectByNameObjects(objects, name, regex = false, index = 0) {\r\n    let objectFound = null;\r\n\r\n    let currentIndex = index;\r\n    for (let currentObject of objects) {\r\n        let objectName = ObjectUtils.getName(currentObject);\r\n        if ((!regex && objectName == name) || (regex && objectName.match(name))) {\r\n            if (currentIndex == 0) {\r\n                objectFound = currentObject;\r\n                break;\r\n            }\r\n\r\n            currentIndex--;\r\n        }\r\n    }\r\n\r\n    return objectFound;\r\n}\r\n\r\nexport function getObjectsByNameObjects(objects, name, regex = false) {\r\n    let objectsFound = [];\r\n\r\n    for (let currentObject of objects) {\r\n        let objectName = ObjectUtils.getName(currentObject);\r\n        if ((!regex && objectName == name) || (regex && objectName.match(name))) {\r\n            objectsFound.push(currentObject);\r\n        }\r\n    }\r\n\r\n    return objectsFound;\r\n}\r\n\r\nexport function getObjectByIDObjects(objects, id, index = 0) {\r\n    let objectFound = null;\r\n\r\n    let currentIndex = index;\r\n    for (let currentObject of objects) {\r\n        if (ObjectUtils.getID(currentObject) == id) {\r\n            if (currentIndex == 0) {\r\n                objectFound = currentObject;\r\n                break;\r\n            }\r\n\r\n            currentIndex--;\r\n        }\r\n    }\r\n\r\n    return objectFound;\r\n}\r\n\r\nexport function getObjectsByIDObjects(objects, id) {\r\n    let objectsFound = [];\r\n\r\n    for (let currentObject of objects) {\r\n        if (ObjectUtils.getID(currentObject) == id) {\r\n            objectsFound.push(currentObject);\r\n        }\r\n    }\r\n\r\n    return objectsFound;\r\n}\r\n\r\nexport function wrapObject(id, engine = Globals.getMainEngine()) {\r\n    return engine.wrapObject(id);\r\n}\r\n\r\nexport let ObjectUtils = {\r\n    getPosition,\r\n    getPositionWorld,\r\n    getPositionLocal,\r\n    getRotation,\r\n    getRotationDegrees,\r\n    getRotationRadians,\r\n    getRotationMatrix,\r\n    getRotationQuat,\r\n    getRotationWorld,\r\n    getRotationWorldDegrees,\r\n    getRotationWorldRadians,\r\n    getRotationWorldMatrix,\r\n    getRotationWorldQuat,\r\n    getRotationLocal,\r\n    getRotationLocalDegrees,\r\n    getRotationLocalRadians,\r\n    getRotationLocalMatrix,\r\n    getRotationLocalQuat,\r\n    getScale,\r\n    getScaleWorld,\r\n    getScaleLocal,\r\n    getTransform,\r\n    getTransformMatrix,\r\n    getTransformQuat,\r\n    getTransformWorld,\r\n    getTransformWorldMatrix,\r\n    getTransformWorldQuat,\r\n    getTransformLocal,\r\n    getTransformLocalMatrix,\r\n    getTransformLocalQuat,\r\n    getAxes,\r\n    getAxesWorld,\r\n    getAxesLocal,\r\n    getForward,\r\n    getForwardWorld,\r\n    getForwardLocal,\r\n    getBackward,\r\n    getBackwardWorld,\r\n    getBackwardLocal,\r\n    getUp,\r\n    getUpWorld,\r\n    getUpLocal,\r\n    getDown,\r\n    getDownWorld,\r\n    getDownLocal,\r\n    getLeft,\r\n    getLeftWorld,\r\n    getLeftLocal,\r\n    getRight,\r\n    getRightWorld,\r\n    getRightLocal,\r\n    setPosition,\r\n    setPositionWorld,\r\n    setPositionLocal,\r\n    setRotation,\r\n    setRotationDegrees,\r\n    setRotationRadians,\r\n    setRotationMatrix,\r\n    setRotationQuat,\r\n    setRotationWorld,\r\n    setRotationWorldDegrees,\r\n    setRotationWorldRadians,\r\n    setRotationWorldMatrix,\r\n    setRotationWorldQuat,\r\n    setRotationLocal,\r\n    setRotationLocalDegrees,\r\n    setRotationLocalRadians,\r\n    setRotationLocalMatrix,\r\n    setRotationLocalQuat,\r\n    setScale,\r\n    setScaleWorld,\r\n    setScaleLocal,\r\n    setAxes,\r\n    setAxesWorld,\r\n    setAxesLocal,\r\n    setForward,\r\n    setForwardWorld,\r\n    setForwardLocal,\r\n    setBackward,\r\n    setBackwardWorld,\r\n    setBackwardLocal,\r\n    setUp,\r\n    setUpWorld,\r\n    setUpLocal,\r\n    setDown,\r\n    setDownWorld,\r\n    setDownLocal,\r\n    setLeft,\r\n    setLeftWorld,\r\n    setLeftLocal,\r\n    setRight,\r\n    setRightWorld,\r\n    setRightLocal,\r\n    setTransform,\r\n    setTransformMatrix,\r\n    setTransformQuat,\r\n    setTransformWorld,\r\n    setTransformWorldMatrix,\r\n    setTransformWorldQuat,\r\n    setTransformLocal,\r\n    setTransformLocalMatrix,\r\n    setTransformLocalQuat,\r\n    resetPosition,\r\n    resetPositionWorld,\r\n    resetPositionLocal,\r\n    resetRotation,\r\n    resetRotationWorld,\r\n    resetRotationLocal,\r\n    resetScale,\r\n    resetScaleWorld,\r\n    resetScaleLocal,\r\n    resetTransform,\r\n    resetTransformWorld,\r\n    resetTransformLocal,\r\n    translate,\r\n    translateWorld,\r\n    translateLocal,\r\n    translateObject,\r\n    translateAxis,\r\n    translateAxisWorld,\r\n    translateAxisLocal,\r\n    translateAxisObject,\r\n    rotate,\r\n    rotateDegrees,\r\n    rotateRadians,\r\n    rotateMatrix,\r\n    rotateQuat,\r\n    rotateWorld,\r\n    rotateWorldDegrees,\r\n    rotateWorldRadians,\r\n    rotateWorldMatrix,\r\n    rotateWorldQuat,\r\n    rotateLocal,\r\n    rotateLocalDegrees,\r\n    rotateLocalRadians,\r\n    rotateLocalMatrix,\r\n    rotateLocalQuat,\r\n    rotateObject,\r\n    rotateObjectDegrees,\r\n    rotateObjectRadians,\r\n    rotateObjectMatrix,\r\n    rotateObjectQuat,\r\n    rotateAxis,\r\n    rotateAxisDegrees,\r\n    rotateAxisRadians,\r\n    rotateAxisWorld,\r\n    rotateAxisWorldDegrees,\r\n    rotateAxisWorldRadians,\r\n    rotateAxisLocal,\r\n    rotateAxisLocalDegrees,\r\n    rotateAxisLocalRadians,\r\n    rotateAxisObject,\r\n    rotateAxisObjectDegrees,\r\n    rotateAxisObjectRadians,\r\n    rotateAround,\r\n    rotateAroundDegrees,\r\n    rotateAroundRadians,\r\n    rotateAroundMatrix,\r\n    rotateAroundQuat,\r\n    rotateAroundWorld,\r\n    rotateAroundWorldDegrees,\r\n    rotateAroundWorldRadians,\r\n    rotateAroundWorldMatrix,\r\n    rotateAroundWorldQuat,\r\n    rotateAroundLocal,\r\n    rotateAroundLocalDegrees,\r\n    rotateAroundLocalRadians,\r\n    rotateAroundLocalMatrix,\r\n    rotateAroundLocalQuat,\r\n    rotateAroundObject,\r\n    rotateAroundObjectDegrees,\r\n    rotateAroundObjectRadians,\r\n    rotateAroundObjectMatrix,\r\n    rotateAroundObjectQuat,\r\n    rotateAroundAxis,\r\n    rotateAroundAxisDegrees,\r\n    rotateAroundAxisRadians,\r\n    rotateAroundAxisWorld,\r\n    rotateAroundAxisWorldDegrees,\r\n    rotateAroundAxisWorldRadians,\r\n    rotateAroundAxisLocal,\r\n    rotateAroundAxisLocalDegrees,\r\n    rotateAroundAxisLocalRadians,\r\n    rotateAroundAxisObject,\r\n    rotateAroundAxisObjectDegrees,\r\n    rotateAroundAxisObjectRadians,\r\n    scaleObject,\r\n    lookAt,\r\n    lookAtWorld,\r\n    lookAtLocal,\r\n    lookTo,\r\n    lookToWorld,\r\n    lookToLocal,\r\n    setParent,\r\n    getParent,\r\n    convertPositionObjectToWorld,\r\n    convertDirectionObjectToWorld,\r\n    convertPositionWorldToObject,\r\n    convertDirectionWorldToObject,\r\n    convertPositionLocalToWorld,\r\n    convertDirectionLocalToWorld,\r\n    convertPositionWorldToLocal,\r\n    convertDirectionWorldToLocal,\r\n    convertPositionObjectToLocal,\r\n    convertDirectionObjectToLocal,\r\n    convertPositionLocalToObject,\r\n    convertDirectionLocalToObject,\r\n    convertTransformObjectToWorld,\r\n    convertTransformObjectToWorldMatrix,\r\n    convertTransformObjectToWorldQuat,\r\n    convertTransformWorldToObject,\r\n    convertTransformWorldToObjectMatrix,\r\n    convertTransformWorldToObjectQuat,\r\n    convertTransformLocalToWorld,\r\n    convertTransformLocalToWorldMatrix,\r\n    convertTransformLocalToWorldQuat,\r\n    convertTransformWorldToLocal,\r\n    convertTransformWorldToLocalMatrix,\r\n    convertTransformWorldToLocalQuat,\r\n    convertTransformObjectToLocal,\r\n    convertTransformObjectToLocalMatrix,\r\n    convertTransformObjectToLocalQuat,\r\n    convertTransformLocalToObject,\r\n    convertTransformLocalToObjectMatrix,\r\n    convertTransformLocalToObjectQuat,\r\n    addComponent,\r\n    getComponent,\r\n    getComponentSelf,\r\n    getComponentHierarchy,\r\n    getComponentHierarchyBreadth,\r\n    getComponentHierarchyDepth,\r\n    getComponentDescendants,\r\n    getComponentDescendantsBreadth,\r\n    getComponentDescendantsDepth,\r\n    getComponentChildren,\r\n    getComponents,\r\n    getComponentsSelf,\r\n    getComponentsHierarchy,\r\n    getComponentsHierarchyBreadth,\r\n    getComponentsHierarchyDepth,\r\n    getComponentsDescendants,\r\n    getComponentsDescendantsBreadth,\r\n    getComponentsDescendantsDepth,\r\n    getComponentsChildren,\r\n    setActive,\r\n    setActiveSelf,\r\n    setActiveHierarchy,\r\n    setActiveHierarchyBreadth,\r\n    setActiveHierarchyDepth,\r\n    setActiveDescendants,\r\n    setActiveDescendantsBreadth,\r\n    setActiveDescendantsDepth,\r\n    setActiveChildren,\r\n    hasUniformScale,\r\n    hasUniformScaleWorld,\r\n    hasUniformScaleLocal,\r\n    clone,\r\n    isCloneable,\r\n    toString,\r\n    toStringExtended,\r\n    toStringCompact,\r\n    getObjectByName,\r\n    getObjectByNameHierarchy,\r\n    getObjectByNameHierarchyBreadth,\r\n    getObjectByNameHierarchyDepth,\r\n    getObjectByNameDescendants,\r\n    getObjectByNameDescendantsBreadth,\r\n    getObjectByNameDescendantsDepth,\r\n    getObjectByNameChildren,\r\n    getObjectsByName,\r\n    getObjectsByNameHierarchy,\r\n    getObjectsByNameHierarchyBreadth,\r\n    getObjectsByNameHierarchyDepth,\r\n    getObjectsByNameDescendants,\r\n    getObjectsByNameDescendantsBreadth,\r\n    getObjectsByNameDescendantsDepth,\r\n    getObjectsByNameChildren,\r\n    getObjectByID,\r\n    getObjectByIDHierarchy,\r\n    getObjectByIDHierarchyBreadth,\r\n    getObjectByIDHierarchyDepth,\r\n    getObjectByIDDescendants,\r\n    getObjectByIDDescendantsBreadth,\r\n    getObjectByIDDescendantsDepth,\r\n    getObjectByIDChildren,\r\n    getHierarchy,\r\n    getHierarchyBreadth,\r\n    getHierarchyDepth,\r\n    getDescendants,\r\n    getDescendantsBreadth,\r\n    getDescendantsDepth,\r\n    getChildren,\r\n    getSelf,\r\n    addObject,\r\n    getName,\r\n    setName,\r\n    getEngine,\r\n    getID,\r\n    markDirty,\r\n    isTransformChanged,\r\n    equals,\r\n    destroy,\r\n    reserveObjects,\r\n    reserveObjectsSelf,\r\n    reserveObjectsHierarchy,\r\n    reserveObjectsDescendants,\r\n    reserveObjectsChildren,\r\n    getComponentsAmountMap,\r\n    getComponentsAmountMapSelf,\r\n    getComponentsAmountMapHierarchy,\r\n    getComponentsAmountMapDescendants,\r\n    getComponentsAmountMapChildren,\r\n    getComponentObjects,\r\n    getComponentsObjects,\r\n    setActiveObjects,\r\n    getObjectByNameObjects,\r\n    getObjectsByNameObjects,\r\n    getObjectByIDObjects,\r\n    getObjectsByIDObjects,\r\n    wrapObject\r\n}\r\n\r\n\r\n\r\nfunction _reserveObjects(count, componentsAmountMap, scene) {\r\n    let objectsToReserve = componentsAmountMap.get(\"object\") * count;\r\n    componentsAmountMap.delete(\"object\");\r\n\r\n    let componentsToReserve = {};\r\n    for (let [componentName, componentCount] of componentsAmountMap.entries()) {\r\n        componentsToReserve[componentName] = componentCount * count;\r\n    }\r\n\r\n    scene.reserveObjects(objectsToReserve, componentsToReserve);\r\n}", "import { ObjectUtils } from \"./object_utils\";\r\n\r\nexport function getRoot(scene) {\r\n    return ObjectUtils.wrapObject(0, scene.engine);\r\n}\r\n\r\nexport function addObject(scene) {\r\n    return ObjectUtils.addObject(SceneUtils.getRoot(scene));\r\n}\r\n\r\nexport function getObjects(scene) {\r\n    return SceneUtils.getObjectsBreadth(scene);\r\n}\r\n\r\nexport function getObjectsBreadth(scene) {\r\n    return ObjectUtils.getHierarchyBreadth(SceneUtils.getRoot(scene));\r\n}\r\n\r\nexport function getObjectsDepth(scene) {\r\n    return ObjectUtils.getHierarchyDepth(SceneUtils.getRoot(scene));\r\n}\r\n\r\n// Get Component    \r\n\r\nexport function getComponent(scene, typeOrClass, index = 0) {\r\n    return SceneUtils.getComponentBreadth(scene, typeOrClass, index);\r\n}\r\n\r\nexport function getComponentBreadth(scene, typeOrClass, index = 0) {\r\n    return ObjectUtils.getComponentHierarchyBreadth(SceneUtils.getRoot(scene), typeOrClass, index);\r\n}\r\n\r\nexport function getComponentDepth(scene, typeOrClass, index = 0) {\r\n    return ObjectUtils.getComponentHierarchyDepth(SceneUtils.getRoot(scene), typeOrClass, index);\r\n}\r\n\r\nexport function getComponents(scene, typeOrClass) {\r\n    return SceneUtils.getComponentsBreadth(scene, typeOrClass);\r\n}\r\n\r\nexport function getComponentsBreadth(scene, typeOrClass) {\r\n    return ObjectUtils.getComponentsHierarchyBreadth(SceneUtils.getRoot(scene), typeOrClass);\r\n}\r\n\r\nexport function getComponentsDepth(scene, typeOrClass) {\r\n    return ObjectUtils.getComponentsHierarchyDepth(SceneUtils.getRoot(scene), typeOrClass);\r\n}\r\n\r\n// Get Object By Name\r\n\r\nexport function getObjectByName(scene, name, index = 0) {\r\n    return SceneUtils.getObjectByNameBreadth(scene, name, index);\r\n}\r\n\r\nexport function getObjectByNameBreadth(scene, name, index = 0) {\r\n    return ObjectUtils.getObjectByNameHierarchyBreadth(SceneUtils.getRoot(scene), name, index);\r\n}\r\n\r\nexport function getObjectByNameDepth(scene, name, index = 0) {\r\n    return ObjectUtils.getObjectByNameHierarchyDepth(SceneUtils.getRoot(scene), name, index);\r\n}\r\n\r\nexport function getObjectsByName(scene, name, index = 0) {\r\n    return SceneUtils.getObjectsByNameBreadth(scene, name, index);\r\n}\r\n\r\nexport function getObjectsByNameBreadth(scene, name, index = 0) {\r\n    return ObjectUtils.getObjectsByNameHierarchyBreadth(SceneUtils.getRoot(scene), name, index);\r\n}\r\n\r\nexport function getObjectsByNameDepth(scene, name, index = 0) {\r\n    return ObjectUtils.getObjectsByNameHierarchyDepth(SceneUtils.getRoot(scene), name, index);\r\n}\r\n\r\n// Get Object By ID\r\n\r\nexport function getObjectByID(scene, id) {\r\n    return SceneUtils.getObjectByIDBreadth(scene, id);\r\n}\r\n\r\nexport function getObjectByIDBreadth(scene, id) {\r\n    return ObjectUtils.getObjectByIDHierarchyBreadth(SceneUtils.getRoot(scene), id);\r\n}\r\n\r\nexport function getObjectByIDDepth(scene, id) {\r\n    return ObjectUtils.getObjectByIDHierarchyDepth(SceneUtils.getRoot(scene), id);\r\n}\r\n\r\n// To String\r\n\r\nexport function toString(scene) {\r\n    return SceneUtils.toStringCompact(scene);\r\n}\r\n\r\nexport function toStringCompact(scene) {\r\n    return ObjectUtils.toStringCompact(SceneUtils.getRoot(scene));\r\n}\r\n\r\nexport function toStringExtended(scene) {\r\n    return ObjectUtils.toStringExtended(SceneUtils.getRoot(scene));\r\n}\r\n\r\n// Cauldron\r\n\r\nexport function getComponentsAmountMap(scene, amountMap = new Map()) {\r\n    return ObjectUtils.getComponentsAmountMap(SceneUtils.getRoot(scene), amountMap);\r\n}\r\n\r\nexport let SceneUtils = {\r\n    getRoot,\r\n    addObject,\r\n    getObjects,\r\n    getObjectsBreadth,\r\n    getObjectsDepth,\r\n    getComponent,\r\n    getComponentBreadth,\r\n    getComponentDepth,\r\n    getComponents,\r\n    getComponentsBreadth,\r\n    getComponentsDepth,\r\n    getObjectByName,\r\n    getObjectByNameBreadth,\r\n    getObjectByNameDepth,\r\n    getObjectsByName,\r\n    getObjectsByNameBreadth,\r\n    getObjectsByNameDepth,\r\n    getObjectByID,\r\n    getObjectByIDBreadth,\r\n    getObjectByIDDepth,\r\n    toString,\r\n    toStringCompact,\r\n    toStringExtended,\r\n    getComponentsAmountMap\r\n};", "import { Globals } from \"../pp/globals\";\r\n\r\nlet _myDebugManagers = new WeakMap();\r\nlet _myDebugEnableds = new WeakMap();\r\n\r\nexport function getDebugManager(engine = Globals.getMainEngine()) {\r\n    return _myDebugManagers.get(engine);\r\n}\r\n\r\nexport function setDebugManager(debugManager, engine = Globals.getMainEngine()) {\r\n    _myDebugManagers.set(engine, debugManager);\r\n}\r\n\r\nexport function removeDebugManager(engine = Globals.getMainEngine()) {\r\n    _myDebugManagers.delete(engine);\r\n}\r\n\r\nexport function hasDebugManager(engine = Globals.getMainEngine()) {\r\n    return _myDebugManagers.has(engine);\r\n}\r\n\r\nexport function getDebugVisualManager(engine = Globals.getMainEngine()) {\r\n    let debugManager = getDebugManager(engine);\r\n\r\n    if (debugManager != null) {\r\n        return debugManager.getDebugVisualManager();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function isDebugEnabled(engine = Globals.getMainEngine()) {\r\n    return _myDebugEnableds.get(engine);\r\n}\r\n\r\nexport function setDebugEnabled(debugEnabled, engine = Globals.getMainEngine()) {\r\n    _myDebugEnableds.set(engine, debugEnabled);\r\n}\r\n\r\nexport function removeDebugEnabled(engine = Globals.getMainEngine()) {\r\n    _myDebugEnableds.delete(engine);\r\n}\r\n\r\nexport function hasDebugEnabled(engine = Globals.getMainEngine()) {\r\n    return _myDebugEnableds.has(engine);\r\n}", "import { Globals } from \"../../../../pp/globals\";\r\n\r\nlet _myCharacterCollisionSystems = new WeakMap();\r\n\r\nexport function getCharacterCollisionSystem(engine = Globals.getMainEngine()) {\r\n    return _myCharacterCollisionSystems.get(engine);\r\n}\r\n\r\nexport function setCharacterCollisionSystem(characterCollisionSystem, engine = Globals.getMainEngine()) {\r\n    _myCharacterCollisionSystems.set(engine, characterCollisionSystem);\r\n}\r\n\r\nexport function removeCharacterCollisionSystem(engine = Globals.getMainEngine()) {\r\n    _myCharacterCollisionSystems.delete(engine);\r\n}\r\n\r\nexport function hasCharacterCollisionSystem(engine = Globals.getMainEngine()) {\r\n    return _myCharacterCollisionSystems.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myInputManagers = new WeakMap();\r\nlet _myPoseForwardFixeds = new WeakMap();\r\n\r\nexport function getInputManager(engine = Globals.getMainEngine()) {\r\n    return _myInputManagers.get(engine);\r\n}\r\n\r\nexport function setInputManager(inputManager, engine = Globals.getMainEngine()) {\r\n    _myInputManagers.set(engine, inputManager);\r\n}\r\n\r\nexport function removeInputManager(engine = Globals.getMainEngine()) {\r\n    _myInputManagers.delete(engine);\r\n}\r\n\r\nexport function hasInputManager(engine = Globals.getMainEngine()) {\r\n    return _myInputManagers.has(engine);\r\n}\r\n\r\nexport function getMouse(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getMouse();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getKeyboard(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getKeyboard();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n// Gamepad\r\n\r\nexport function getGamepadsManager(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getGamepad(handedness, engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getGamepad(handedness);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getGamepads(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getGamepads();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getLeftGamepad(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getLeftGamepad();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRightGamepad(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getGamepadsManager().getRightGamepad();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n// Pose\r\n\r\nexport function getHeadPose(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getHeadPose();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getHandPose(handedness, engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getHandPose(handedness);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getHandPoses(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getHandPoses();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getLeftHandPose(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getLeftHandPose();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRightHandPose(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getRightHandPose();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getTrackedHandPose(handedness, engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getTrackedHandPose(handedness);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getTrackedHandPoses(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getTrackedHandPoses();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getLeftTrackedHandPose(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getLeftTrackedHandPose();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getRightTrackedHandPose(engine = Globals.getMainEngine()) {\r\n    let inputManager = getInputManager(engine);\r\n    if (inputManager != null) {\r\n        return inputManager.getRightTrackedHandPose();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n// Pose Forward Fixed\r\n\r\nexport function isPoseForwardFixed(engine = Globals.getMainEngine()) {\r\n    return _myPoseForwardFixeds.get(engine);\r\n}\r\n\r\nexport function setPoseForwardFixed(toolEnabled, engine = Globals.getMainEngine()) {\r\n    _myPoseForwardFixeds.set(engine, toolEnabled);\r\n}\r\n\r\nexport function removePoseForwardFixed(engine = Globals.getMainEngine()) {\r\n    _myPoseForwardFixeds.delete(engine);\r\n}\r\n\r\nexport function hasPoseForwardFixed(engine = Globals.getMainEngine()) {\r\n    return _myPoseForwardFixeds.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myToolEnableds = new WeakMap();\r\n\r\nexport function isToolEnabled(engine = Globals.getMainEngine()) {\r\n    return _myToolEnableds.get(engine);\r\n}\r\n\r\nexport function setToolEnabled(toolEnabled, engine = Globals.getMainEngine()) {\r\n    _myToolEnableds.set(engine, toolEnabled);\r\n}\r\n\r\nexport function removeToolEnabled(engine = Globals.getMainEngine()) {\r\n    _myToolEnableds.delete(engine);\r\n}\r\n\r\nexport function hasToolEnabled(engine = Globals.getMainEngine()) {\r\n    return _myToolEnableds.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myConsoleVRs = new WeakMap();\r\n\r\nexport function getConsoleVR(engine = Globals.getMainEngine()) {\r\n    return _myConsoleVRs.get(engine);\r\n}\r\n\r\nexport function setConsoleVR(consoleVR, engine = Globals.getMainEngine()) {\r\n    _myConsoleVRs.set(engine, consoleVR);\r\n}\r\n\r\nexport function removeConsoleVR(engine = Globals.getMainEngine()) {\r\n    _myConsoleVRs.delete(engine);\r\n}\r\n\r\nexport function hasConsoleVR(engine = Globals.getMainEngine()) {\r\n    return _myConsoleVRs.has(engine);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _myEasyTuneVariablesList = new WeakMap();\r\nlet _myEasyTuneTargets = new WeakMap();\r\n\r\nexport function getEasyTuneVariables(engine = Globals.getMainEngine()) {\r\n    return _myEasyTuneVariablesList.get(engine);\r\n}\r\n\r\nexport function setEasyTuneVariables(easyTuneVariables, engine = Globals.getMainEngine()) {\r\n    _myEasyTuneVariablesList.set(engine, easyTuneVariables);\r\n}\r\n\r\nexport function removeEasyTuneVariables(engine = Globals.getMainEngine()) {\r\n    _myEasyTuneVariablesList.delete(engine);\r\n}\r\n\r\nexport function hasEasyTuneVariables(engine = Globals.getMainEngine()) {\r\n    return _myEasyTuneVariablesList.has(engine);\r\n}\r\n\r\nexport function getEasyTuneTarget(engine = Globals.getMainEngine()) {\r\n    return _myEasyTuneTargets.get(engine);\r\n}\r\n\r\nexport function setEasyTuneTarget(easyTuneTarget, engine = Globals.getMainEngine()) {\r\n    _myEasyTuneTargets.set(engine, easyTuneTarget);\r\n}\r\n\r\nexport function removeEasyTuneTarget(engine = Globals.getMainEngine()) {\r\n    _myEasyTuneTargets.delete(engine);\r\n}\r\n\r\nexport function hasEasyTuneTarget(engine = Globals.getMainEngine()) {\r\n    return _myEasyTuneTargets.has(engine);\r\n}", "import { Globals } from \"./globals\";\r\n\r\nlet _myDefaultResourcesContainer = new WeakMap();\r\n\r\nexport function getDefaultResources(engine = Globals.getMainEngine()) {\r\n    return _myDefaultResourcesContainer.get(engine);\r\n}\r\n\r\nexport function setDefaultResources(defaultResources, engine = Globals.getMainEngine()) {\r\n    _myDefaultResourcesContainer.set(engine, defaultResources);\r\n}\r\n\r\nexport function removeDefaultResources(engine = Globals.getMainEngine()) {\r\n    _myDefaultResourcesContainer.delete(engine);\r\n}\r\n\r\nexport function hasDefaultResources(engine = Globals.getMainEngine()) {\r\n    return _myDefaultResourcesContainer.has(engine);\r\n}\r\n\r\nexport function getDefaultMeshes(engine = Globals.getMainEngine()) {\r\n    let defaultResources = getDefaultResources(engine);\r\n\r\n    if (defaultResources != null) {\r\n        return defaultResources.myMeshes;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getDefaultMaterials(engine = Globals.getMainEngine()) {\r\n    let defaultResources = getDefaultResources(engine);\r\n\r\n    if (defaultResources != null) {\r\n        return defaultResources.myMaterials;\r\n    }\r\n\r\n    return null;\r\n}", "import { Globals } from \"./globals\";\r\n\r\nlet _mySceneObjectsContainer = new WeakMap();\r\n\r\nexport function getSceneObjects(engine = Globals.getMainEngine()) {\r\n    return _mySceneObjectsContainer.get(engine);\r\n}\r\n\r\nexport function setSceneObjects(sceneObjects, engine = Globals.getMainEngine()) {\r\n    _mySceneObjectsContainer.set(engine, sceneObjects);\r\n}\r\n\r\nexport function removeSceneObjects(engine = Globals.getMainEngine()) {\r\n    _mySceneObjectsContainer.delete(engine);\r\n}\r\n\r\nexport function hasSceneObjects(engine = Globals.getMainEngine()) {\r\n    return _mySceneObjectsContainer.has(engine);\r\n}\r\n\r\nexport function getPlayerObjects(engine = Globals.getMainEngine()) {\r\n    let sceneObjects = getSceneObjects(engine);\r\n\r\n    if (sceneObjects != null) {\r\n        return sceneObjects.myPlayerObjects;\r\n    }\r\n\r\n    return null;\r\n}", "import * as AudioGlobals from \"../audio/audio_globals\";\r\nimport * as WindowGlobals from \"../cauldron/cauldron/window_globals\";\r\nimport * as ObjectPoolManagerGlobals from \"../cauldron/object_pool/object_pool_globals\";\r\nimport * as VisualGlobals from \"../cauldron/visual/visual_globals\";\r\nimport * as EngineGlobals from \"../cauldron/wl/engine_globals\";\r\nimport * as DebugGlobals from \"../debug/debug_globals\";\r\nimport * as CharacterCollisionSystemGlobals from \"../gameplay/experimental/character_controller/collision/character_collision_system_globals\";\r\nimport * as InputGlobals from \"../input/cauldron/input_globals\";\r\nimport * as ToolGlobals from \"../tool/cauldron/tool_globals\";\r\nimport * as ConsoleVRGlobals from \"../tool/console_vr/console_vr_globals\";\r\nimport * as EasyTuneGlobals from \"../tool/easy_tune/easy_tune_globals\";\r\nimport * as DefaultResourcesGlobals from \"./default_resources_globals\";\r\nimport * as SceneObjectsGlobals from \"./scene_objects_globals\";\r\n\r\nexport let Globals = {\r\n    ...EngineGlobals,\r\n    ...SceneObjectsGlobals,\r\n    ...DefaultResourcesGlobals,\r\n    ...AudioGlobals,\r\n    ...VisualGlobals,\r\n    ...DebugGlobals,\r\n    ...WindowGlobals,\r\n    ...ObjectPoolManagerGlobals,\r\n    ...CharacterCollisionSystemGlobals,\r\n    ...InputGlobals,\r\n    ...ToolGlobals,\r\n    ...ConsoleVRGlobals,\r\n    ...EasyTuneGlobals\r\n};", "import { MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { MeshUtils } from \"../../utils/mesh_utils\";\r\nimport { ComponentUtils, DeepCloneParams } from \"./component_utils\";\r\n\r\nexport function cloneMesh(componentToClone, targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n    let clonedComponent = ComponentUtils.cloneDefault(componentToClone, targetObject, true);\r\n\r\n    if (deepCloneParams.isDeepCloneComponentVariable(MeshComponent.TypeName, \"material\")) {\r\n        clonedComponent.material = componentToClone.material.clone();\r\n    }\r\n\r\n    if (deepCloneParams.isDeepCloneComponentVariable(MeshComponent.TypeName, \"mesh\")) {\r\n        clonedComponent.mesh = MeshUtils.clone(componentToClone.mesh);\r\n    }\r\n\r\n    return clonedComponent;\r\n}\r\n\r\nexport function cloneCollision(componentToClone, targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n    let clonedComponent = ComponentUtils.cloneDefault(componentToClone, targetObject);\r\n\r\n    return clonedComponent;\r\n};\r\n\r\nexport function cloneText(componentToClone, targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n    let clonedComponent = ComponentUtils.cloneDefault(componentToClone, targetObject);\r\n\r\n    if (deepCloneParams.isDeepCloneComponentVariable(TextComponent.TypeName, \"material\")) {\r\n        clonedComponent.material = componentToClone.material.clone();\r\n    }\r\n\r\n    return clonedComponent;\r\n};\r\n\r\nexport function clonePhysX(componentToClone, targetObject, deepCloneParams = new DeepCloneParams(), customCloneParams = null) {\r\n    let clonedComponent = ComponentUtils.cloneDefault(componentToClone, targetObject);\r\n\r\n    return clonedComponent;\r\n};\r\n\r\nexport let DefaultWLComponentCloneCallbacks = {\r\n    cloneMesh,\r\n    cloneCollision,\r\n    cloneText,\r\n    clonePhysX\r\n};", "import { Mesh, MeshAttribute, MeshIndexType } from \"@wonderlandengine/api\";\r\nimport { vec2_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class MeshCreationVertexParams {\r\n\r\n    constructor() {\r\n        this.myPosition = null;             // @Vec3\r\n        this.myTextureCoordinates = null;   // @Vec2\r\n        this.myNormal = null;               // @Vec3\r\n        this.myColor = null;                // @Vec4\r\n    }\r\n}\r\n\r\nexport class MeshCreationTriangleParams {\r\n\r\n    constructor() {\r\n        this.myIndexes = new Uint32Array(3);\r\n    }\r\n}\r\n\r\nexport class MeshCreationParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myVertexes = [];\r\n        this.myTriangles = [];\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport function create(meshCreationParams) {\r\n    let indexData = [];\r\n    for (let triangle of meshCreationParams.myTriangles) {\r\n        indexData.push(triangle.myIndexes[0]);\r\n        indexData.push(triangle.myIndexes[1]);\r\n        indexData.push(triangle.myIndexes[2]);\r\n    }\r\n\r\n    let indexDataUnsignedInt = new Uint32Array(indexData.length);\r\n    indexDataUnsignedInt.pp_copy(indexData);\r\n\r\n    let vertexCount = meshCreationParams.myVertexes.length;\r\n    let mesh = new Mesh(meshCreationParams.myEngine, {\r\n        vertexCount: vertexCount,\r\n        indexData: indexDataUnsignedInt,\r\n        indexType: MeshIndexType.UnsignedInt,\r\n    });\r\n\r\n    let positionAttribute = null;\r\n    let textureCoordinatesAttribute = null;\r\n    let normalAttribute = null;\r\n    let colorAttribute = null;\r\n\r\n    try {\r\n        positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n    } catch (error) {\r\n        positionAttribute = null;\r\n    }\r\n\r\n    try {\r\n        textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n    } catch (error) {\r\n        textureCoordinatesAttribute = null;\r\n    }\r\n\r\n    try {\r\n        normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n    } catch (error) {\r\n        normalAttribute = null;\r\n    }\r\n\r\n    try {\r\n        colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n    } catch (error) {\r\n        colorAttribute = null;\r\n    }\r\n\r\n    for (let i = 0; i < meshCreationParams.myVertexes.length; i++) {\r\n        let vertex = meshCreationParams.myVertexes[i];\r\n        if (positionAttribute != null && vertex.myPosition) {\r\n            positionAttribute.set(i, vertex.myPosition);\r\n        }\r\n        if (textureCoordinatesAttribute != null && vertex.myTextureCoordinates) {\r\n            textureCoordinatesAttribute.set(i, vertex.myTextureCoordinates);\r\n        }\r\n        if (normalAttribute != null && vertex.myNormal) {\r\n            normalAttribute.set(i, vertex.myNormal);\r\n        }\r\n        if (colorAttribute != null && vertex.myColor) {\r\n            colorAttribute.set(i, vertex.myColor);\r\n        }\r\n    }\r\n\r\n    return mesh;\r\n}\r\n\r\nexport let clone = function () {\r\n    let position = vec3_create();\r\n    let textureCoordinates = vec2_create();\r\n    let normal = vec3_create();\r\n    let color = vec4_create();\r\n\r\n    return function clone(mesh) {\r\n        if (mesh == null) {\r\n            return null;\r\n        }\r\n\r\n        let clonedIndexData = mesh.indexData.pp_clone();\r\n\r\n        let clonedMesh = new Mesh(mesh.engine, {\r\n            vertexCount: mesh.vertexCount,\r\n            indexData: clonedIndexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        let clonedPositionAttribute = null;\r\n        let clonedTextureCoordinatesAttribute = null;\r\n        let clonedNormalAttribute = null;\r\n        let clonedColorAttribute = null;\r\n\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n            clonedPositionAttribute = clonedMesh.attribute(MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n            clonedPositionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n            clonedTextureCoordinatesAttribute = clonedMesh.attribute(MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n            clonedTextureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n            clonedNormalAttribute = clonedMesh.attribute(MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n            clonedNormalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n            clonedColorAttribute = clonedMesh.attribute(MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n            clonedColorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < mesh.vertexCount; i++) {\r\n            if (positionAttribute != null && clonedPositionAttribute != null) {\r\n                clonedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n            }\r\n            if (textureCoordinatesAttribute != null && clonedTextureCoordinatesAttribute != null) {\r\n                clonedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n            }\r\n            if (normalAttribute != null && clonedNormalAttribute != null) {\r\n                clonedNormalAttribute.set(i, normalAttribute.get(i, normal));\r\n            }\r\n            if (colorAttribute != null && clonedColorAttribute != null) {\r\n                clonedColorAttribute.set(i, colorAttribute.get(i, color));\r\n            }\r\n        }\r\n\r\n        return clonedMesh;\r\n    };\r\n}();\r\n\r\nexport let invert = function () {\r\n    let position = vec3_create();\r\n    let textureCoordinates = vec2_create();\r\n    let normal = vec3_create();\r\n    let color = vec4_create();\r\n\r\n    return function invert(mesh) {\r\n        if (mesh == null) {\r\n            return null;\r\n        }\r\n\r\n        let invertedIndexData = new Uint32Array(mesh.indexData.length);\r\n        for (let i = 0; i < mesh.indexData.length / 3; i++) {\r\n            invertedIndexData[i * 3 + 0] = mesh.indexData[i * 3 + 2];\r\n            invertedIndexData[i * 3 + 1] = mesh.indexData[i * 3 + 1];\r\n            invertedIndexData[i * 3 + 2] = mesh.indexData[i * 3 + 0];\r\n        }\r\n\r\n        let invertedMesh = new Mesh(mesh.engine, {\r\n            vertexCount: mesh.vertexCount,\r\n            indexData: invertedIndexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        let invertedPositionAttribute = null;\r\n        let invertedTextureCoordinatesAttribute = null;\r\n        let invertedNormalAttribute = null;\r\n        let invertedColorAttribute = null;\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n            invertedPositionAttribute = invertedMesh.attribute(MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n            invertedPositionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n            invertedTextureCoordinatesAttribute = invertedMesh.attribute(MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n            invertedTextureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n            invertedNormalAttribute = invertedMesh.attribute(MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n            invertedNormalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n            invertedColorAttribute = invertedMesh.attribute(MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n            invertedColorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < mesh.vertexCount; i++) {\r\n            if (positionAttribute != null && invertedPositionAttribute != null) {\r\n                invertedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n            }\r\n\r\n            if (textureCoordinatesAttribute != null && invertedTextureCoordinatesAttribute != null) {\r\n                invertedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n            }\r\n\r\n            if (normalAttribute != null && invertedNormalAttribute != null) {\r\n                normalAttribute.get(i, normal)\r\n                normal.vec3_negate(normal);\r\n                invertedNormalAttribute.set(i, normal);\r\n            }\r\n\r\n            if (colorAttribute != null && invertedColorAttribute != null) {\r\n                invertedColorAttribute.set(i, colorAttribute.get(i, color));\r\n            }\r\n        }\r\n\r\n        return invertedMesh;\r\n    };\r\n}();\r\n\r\nexport let makeDoubleSided = function () {\r\n    let position = vec3_create();\r\n    let textureCoordinates = vec2_create();\r\n    let normal = vec3_create();\r\n    let color = vec4_create();\r\n\r\n    return function makeDoubleSided(mesh) {\r\n        if (mesh == null) {\r\n            return null;\r\n        }\r\n\r\n        let doubleSidedIndexData = new Uint32Array(mesh.indexData.length * 2);\r\n        for (let i = 0; i < doubleSidedIndexData.length / 3; i++) {\r\n            doubleSidedIndexData[i * 3 * 2 + 0] = mesh.indexData[i * 3 + 0] * 2;\r\n            doubleSidedIndexData[i * 3 * 2 + 1] = mesh.indexData[i * 3 + 1] * 2;\r\n            doubleSidedIndexData[i * 3 * 2 + 2] = mesh.indexData[i * 3 + 2] * 2;\r\n\r\n            doubleSidedIndexData[i * 3 * 2 + 3] = mesh.indexData[i * 3 + 2] * 2 + 1;\r\n            doubleSidedIndexData[i * 3 * 2 + 4] = mesh.indexData[i * 3 + 1] * 2 + 1;\r\n            doubleSidedIndexData[i * 3 * 2 + 5] = mesh.indexData[i * 3 + 0] * 2 + 1;\r\n        }\r\n\r\n        let doubleSidedMesh = new Mesh(mesh.engine, {\r\n            vertexCount: mesh.vertexCount * 2,\r\n            indexData: doubleSidedIndexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        let doubleSidedPositionAttribute = null;\r\n        let doubleSidedTextureCoordinatesAttribute = null;\r\n        let doubleSidedNormalAttribute = null;\r\n        let doubleSidedColorAttribute = null;\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n            doubleSidedPositionAttribute = doubleSidedMesh.attribute(MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n            doubleSidedPositionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n            doubleSidedTextureCoordinatesAttribute = doubleSidedMesh.attribute(MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n            doubleSidedTextureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(MeshAttribute.Normal);\r\n            doubleSidedNormalAttribute = doubleSidedMesh.attribute(MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n            doubleSidedNormalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(MeshAttribute.Color);\r\n            doubleSidedColorAttribute = doubleSidedMesh.attribute(MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n            doubleSidedColorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < mesh.vertexCount; i++) {\r\n            if (positionAttribute != null && doubleSidedPositionAttribute != null) {\r\n                doubleSidedPositionAttribute.set(i * 2, positionAttribute.get(i, position));\r\n                doubleSidedPositionAttribute.set(i * 2 + 1, positionAttribute.get(i, position));\r\n            }\r\n\r\n            if (textureCoordinatesAttribute != null && doubleSidedTextureCoordinatesAttribute != null) {\r\n                doubleSidedTextureCoordinatesAttribute.set(i * 2, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n                doubleSidedTextureCoordinatesAttribute.set(i * 2 + 1, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n            }\r\n\r\n            if (normalAttribute != null && doubleSidedNormalAttribute != null) {\r\n                normalAttribute.get(i, normal)\r\n                doubleSidedNormalAttribute.set(i * 2, normal);\r\n\r\n                let invertedNormal = normal.vec3_negate();\r\n                doubleSidedNormalAttribute.set(i * 2 + 1, invertedNormal);\r\n            }\r\n\r\n            if (colorAttribute != null && doubleSidedColorAttribute != null) {\r\n                doubleSidedColorAttribute.set(i * 2, colorAttribute.get(i, color));\r\n                doubleSidedColorAttribute.set(i * 2 + 1, colorAttribute.get(i, color));\r\n            }\r\n        }\r\n\r\n        return doubleSidedMesh;\r\n    };\r\n}();\r\n\r\nexport function createPlane(engine = Globals.getMainEngine()) {\r\n    let vertexCount = 4;\r\n\r\n    let meshCreationParams = new MeshCreationParams(engine);\r\n\r\n    for (let i = 0; i < vertexCount; ++i) {\r\n        let vertexCreationParams = new MeshCreationVertexParams();\r\n\r\n        vertexCreationParams.myPosition = new vec3_create();\r\n        vertexCreationParams.myPosition[0] = -1 + (i & 1) * 2;\r\n        vertexCreationParams.myPosition[1] = -1 + ((i & 2) >> 1) * 2; // This is a quick way to have positions (-1,-1) (1,-1) (1,-1) (1,1)\r\n        vertexCreationParams.myPosition[2] = 0;\r\n\r\n        vertexCreationParams.myTextureCoordinates = new vec2_create();\r\n        vertexCreationParams.myTextureCoordinates[0] = (i & 1);\r\n        vertexCreationParams.myTextureCoordinates[1] = ((i & 2) >> 1);\r\n\r\n        vertexCreationParams.myNormal = new vec3_create();\r\n        vertexCreationParams.myNormal[0] = 0;\r\n        vertexCreationParams.myNormal[1] = 0;\r\n        vertexCreationParams.myNormal[2] = 1;\r\n\r\n        meshCreationParams.myVertexes.push(vertexCreationParams);\r\n    }\r\n\r\n    let firstTriangle = new MeshCreationTriangleParams();\r\n    firstTriangle.myIndexes[0] = 0;\r\n    firstTriangle.myIndexes[1] = 1;\r\n    firstTriangle.myIndexes[2] = 2;\r\n\r\n    let secondTriangle = new MeshCreationTriangleParams();\r\n    secondTriangle.myIndexes[0] = 2;\r\n    secondTriangle.myIndexes[1] = 1;\r\n    secondTriangle.myIndexes[2] = 3;\r\n\r\n    meshCreationParams.myTriangles.push(firstTriangle);\r\n    meshCreationParams.myTriangles.push(secondTriangle);\r\n\r\n    let mesh = MeshUtils.create(meshCreationParams);\r\n\r\n    return mesh;\r\n}\r\n\r\nexport let MeshUtils = {\r\n    create,\r\n    clone,\r\n    invert,\r\n    makeDoubleSided,\r\n    createPlane\r\n};", "import { vec2 as gl_vec2 } from \"gl-matrix\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(x, y) {\r\n    let out = gl_vec2.create();\r\n\r\n    if (x !== undefined) {\r\n        set(out, x, y);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function set(vector, x, y) {\r\n    if (y === undefined) {\r\n        gl_vec2.set(vector, x, x);\r\n    } else {\r\n        gl_vec2.set(vector, x, y);\r\n    }\r\n\r\n    return vector;\r\n}\r\n\r\nexport function length(vector) {\r\n    return gl_vec2.length(vector);\r\n}\r\n\r\nexport function normalize(vector, out = create()) {\r\n    gl_vec2.normalize(out, vector);\r\n    return out;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_vec2.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function clone(vector, out = create()) {\r\n    Vec2Utils.copy(vector, out);\r\n    return out;\r\n}\r\n\r\nexport function zero(vector) {\r\n    gl_vec2.zero(vector);\r\n    return vector;\r\n}\r\n\r\n// New Functions\r\n\r\nexport function isZero(vector, epsilon = 0) {\r\n    return Vec2Utils.length(vector) <= epsilon;\r\n}\r\n\r\nexport let Vec2Utils = {\r\n    create,\r\n    set,\r\n    length,\r\n    normalize,\r\n    copy,\r\n    clone,\r\n    zero,\r\n    isZero\r\n};", "import { vec4 as gl_vec4 } from \"gl-matrix\";\r\n\r\n// glMatrix Bridge\r\n\r\nexport function create(x, y, z, w) {\r\n    let out = gl_vec4.create();\r\n\r\n    if (x !== undefined) {\r\n        set(out, x, y, z, w);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function set(vector, x, y, z, w) {\r\n    if (y === undefined) {\r\n        gl_vec4.set(vector, x, x, x, x);\r\n    } else {\r\n        gl_vec4.set(vector, x, y, z, w);\r\n    }\r\n\r\n    return vector;\r\n}\r\n\r\nexport function copy(from, to) {\r\n    gl_vec4.copy(to, from);\r\n    return to;\r\n}\r\n\r\nexport function clone(vector, out = create()) {\r\n    Vec4Utils.copy(vector, out);\r\n    return out;\r\n}\r\n\r\nexport let Vec4Utils = {\r\n    create,\r\n    set,\r\n    copy,\r\n    clone\r\n};", "import { ArrayUtils } from \"./array_utils\";\r\nimport { MathUtils } from \"./math_utils\";\r\n\r\nexport function toString(vector, decimalPlaces = null) {\r\n    let message = _buildConsoleMessage(vector, decimalPlaces);\r\n    return message;\r\n}\r\n\r\nexport function log(vector, decimalPlaces = 4) {\r\n    let message = _buildConsoleMessage(vector, decimalPlaces);\r\n    console.log(message);\r\n}\r\n\r\nexport function error(vector, decimalPlaces = 4) {\r\n    let message = _buildConsoleMessage(vector, decimalPlaces);\r\n    console.error(message);\r\n}\r\n\r\nexport function warn(vector, decimalPlaces = 4) {\r\n    let message = _buildConsoleMessage(vector, decimalPlaces);\r\n    console.warn(message);\r\n}\r\n\r\nexport function scale(vector, value, out = null) {\r\n    out = _prepareOut(vector, out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = out[i] * value;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function round(vector, out = null) {\r\n    out = _prepareOut(vector, out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.round(out[i]);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function floor(vector, out = null) {\r\n    out = _prepareOut(vector, out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.floor(out[i]);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function ceil(vector, out = null) {\r\n    out = _prepareOut(vector, out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.ceil(out[i]);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function clamp(vector, start, end, out = null) {\r\n    out = _prepareOut(vector, out);\r\n\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = MathUtils.clamp(out[i], min, max);\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function equals(vector, other, epsilon = 0) {\r\n    let equals = vector.length == other.length;\r\n\r\n    for (let i = 0; i < vector.length && equals; i++) {\r\n        equals = equals && (Math.abs(vector[i] - other[i]) <= epsilon);\r\n    }\r\n\r\n    return equals;\r\n}\r\n\r\nexport let VecUtils = {\r\n    toString,\r\n    log,\r\n    error,\r\n    warn,\r\n    scale,\r\n    round,\r\n    floor,\r\n    ceil,\r\n    clamp,\r\n    equals\r\n};\r\n\r\n\r\n\r\nfunction _buildConsoleMessage(vector, decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < vector.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        if (decimalPlaces != null) {\r\n            message = message.concat(vector[i].toFixed(decimalPlaces));\r\n        } else {\r\n            message = message.concat(vector[i].toString());\r\n        }\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n}\r\n\r\nfunction _prepareOut(vector, out) {\r\n    if (out == null) {\r\n        out = ArrayUtils.clone(vector);\r\n    } else if (out != vector) {\r\n        ArrayUtils.copy(vector, out);\r\n    }\r\n\r\n    return out;\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { ArrayUtils } from \"./array_utils\";\r\n\r\nexport function getObjectPrototypes(object) {\r\n    let prototypes = [];\r\n\r\n    prototypes.push(object);\r\n\r\n    let objectProto = Object.getPrototypeOf(object);\r\n    while (objectProto != null) {\r\n        ArrayUtils.pushUnique(prototypes, objectProto);\r\n        objectProto = Object.getPrototypeOf(objectProto);\r\n    }\r\n\r\n    let prototypesToCheck = [object];\r\n    while (prototypesToCheck.length > 0) {\r\n        let prototypeToCheck = prototypesToCheck.shift();\r\n        if (prototypeToCheck != null) {\r\n            ArrayUtils.pushUnique(prototypes, prototypeToCheck);\r\n\r\n            ArrayUtils.pushUnique(prototypesToCheck, Object.getPrototypeOf(prototypeToCheck));\r\n            ArrayUtils.pushUnique(prototypesToCheck, prototypeToCheck.prototype);\r\n        }\r\n    }\r\n\r\n    return prototypes;\r\n}\r\n\r\nexport function getObjectPropertyNames(object) {\r\n    let propertyNames = [];\r\n\r\n    let prototypes = JSUtils.getObjectPrototypes(object);\r\n\r\n    for (let prototype of prototypes) {\r\n        if (prototype != null) {\r\n            let ownPropertyNames = Object.getOwnPropertyNames(prototype);\r\n            for (let ownPropertyName of ownPropertyNames) {\r\n                ArrayUtils.pushUnique(propertyNames, ownPropertyName);\r\n            }\r\n        }\r\n    }\r\n\r\n    return propertyNames;\r\n}\r\n\r\nexport function getObjectPropertyDescriptor(object, propertyName) {\r\n    let propertyDescriptor = null;\r\n\r\n    let propertyParent = JSUtils.getObjectPropertyOwnParent(object, propertyName);\r\n\r\n    if (propertyParent != null) {\r\n        propertyDescriptor = Object.getOwnPropertyDescriptor(propertyParent, propertyName);\r\n    }\r\n\r\n    return propertyDescriptor;\r\n}\r\n\r\nexport function getObjectProperty(object, propertyName) {\r\n    let property = undefined;\r\n\r\n    let propertyDescriptor = JSUtils.getObjectPropertyDescriptor(object, propertyName);\r\n    if (propertyDescriptor != null) {\r\n        if (propertyDescriptor.get != null) {\r\n            property = propertyDescriptor.get.bind(object)();\r\n        } else {\r\n            property = propertyDescriptor.value;\r\n        }\r\n    }\r\n\r\n    return property;\r\n}\r\n\r\nexport function setObjectProperty(valueToSet, object, propertyName) {\r\n    let propertyDescriptor = JSUtils.getObjectPropertyDescriptor(object, propertyName);\r\n\r\n    let setUsed = false;\r\n    if (propertyDescriptor != null) {\r\n        if (propertyDescriptor.set != null) {\r\n            setUsed = true;\r\n\r\n            propertyDescriptor.set.bind(object)(valueToSet);\r\n        }\r\n    }\r\n\r\n    if (!setUsed) {\r\n        let propertyParent = JSUtils.getObjectPropertyOwnParent(object, propertyName);\r\n        if (propertyParent == null) {\r\n            propertyParent = object;\r\n        }\r\n\r\n        Object.defineProperty(propertyParent, propertyName, {\r\n            value: valueToSet\r\n        });\r\n    }\r\n}\r\n\r\nexport function getObjectPropertyOwnParent(object, propertyName) {\r\n    let parent = null;\r\n\r\n    let parents = JSUtils.getObjectPropertyOwnParents(object, propertyName);\r\n    if (parents.length > 0) {\r\n        parent = parents[0];\r\n    }\r\n\r\n    return parent;\r\n}\r\n\r\nexport function getObjectPropertyOwnParents(object, propertyName) {\r\n    let parents = [];\r\n\r\n    let possibleParents = JSUtils.getObjectPrototypes(object);\r\n\r\n    for (let possibleParent of possibleParents) {\r\n        let propertyNames = Object.getOwnPropertyNames(possibleParent);\r\n        if (ArrayUtils.hasEqual(propertyNames, propertyName)) {\r\n            parents.push(possibleParent);\r\n        }\r\n    }\r\n\r\n    return parents;\r\n}\r\n\r\nexport function getObjectFromPath(path, pathStartObject = Globals.getWindow()) {\r\n    let object = null;\r\n\r\n    let objectName = JSUtils.getObjectNameFromPath(path);\r\n    if (objectName != null) {\r\n        object = JSUtils.getObjectProperty(JSUtils.getObjectParentFromPath(path, pathStartObject), objectName);\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nexport function getObjectNameFromPath(path) {\r\n    let objectName = null;\r\n\r\n    if (path != null) {\r\n        let pathSplit = path.split(\".\");\r\n        if (pathSplit.length > 0) {\r\n            objectName = pathSplit[pathSplit.length - 1];\r\n        }\r\n    }\r\n\r\n    return objectName;\r\n}\r\n\r\nexport function getObjectParentFromPath(path, pathStartObject = Globals.getWindow()) {\r\n    let pathSplit = path.split(\".\");\r\n    let currentParent = pathStartObject;\r\n    for (let i = 0; i < pathSplit.length - 1; i++) {\r\n        currentParent = JSUtils.getObjectProperty(currentParent, pathSplit[i]);\r\n    }\r\n\r\n    return currentParent;\r\n}\r\n\r\nexport function overwriteObjectProperty(newProperty, object, propertyName, overwriteOnOwnParent = true, jsObjectFunctionsSpecialOverwrite = false, logEnabled = false) {\r\n    let success = false;\r\n\r\n    try {\r\n        let propertyOwnParent = JSUtils.getObjectPropertyOwnParent(object, propertyName);\r\n        if (propertyOwnParent != null) {\r\n            let originalPropertyDescriptor = Object.getOwnPropertyDescriptor(propertyOwnParent, propertyName);\r\n\r\n            if (originalPropertyDescriptor != null) {\r\n                let originalProperty = JSUtils.getObjectProperty(propertyOwnParent, propertyName);\r\n                JSUtils.copyObjectProperties(originalProperty, newProperty, true, jsObjectFunctionsSpecialOverwrite, logEnabled);\r\n\r\n                let overwriteTarget = object;\r\n                if (overwriteOnOwnParent) {\r\n                    overwriteTarget = propertyOwnParent;\r\n                }\r\n\r\n                Object.defineProperty(overwriteTarget, propertyName, {\r\n                    value: newProperty,\r\n                    enumerable: originalPropertyDescriptor.enumerable,\r\n                    writable: originalPropertyDescriptor.writable,\r\n                    configurable: originalPropertyDescriptor.configurable\r\n                });\r\n\r\n                success = true;\r\n            } else {\r\n                Object.defineProperty(object, propertyName, {\r\n                    value: newProperty\r\n                });\r\n\r\n                success = true;\r\n            }\r\n        } else {\r\n            Object.defineProperty(object, propertyName, {\r\n                value: newProperty\r\n            });\r\n\r\n            success = true;\r\n        }\r\n    } catch (error) {\r\n        if (logEnabled) {\r\n            console.error(\"Property:\", propertyName, \"of:\", object, \"can't be overwritten.\");\r\n        }\r\n    }\r\n\r\n    return success;\r\n}\r\n\r\nexport function copyObjectProperties(fromObject, toObject, cleanCopy = false, jsObjectFunctionsSpecialCopy = false, logEnabled = false) {\r\n    if (fromObject != null) {\r\n        if (cleanCopy) {\r\n            JSUtils.cleanObjectProperties(toObject);\r\n        }\r\n\r\n        Object.setPrototypeOf(toObject, Object.getPrototypeOf(fromObject));\r\n\r\n        let fromObjectPropertyNames = Object.getOwnPropertyNames(fromObject);\r\n        for (let fromObjectPropertyName of fromObjectPropertyNames) {\r\n            try {\r\n                let fromObjectPropertyDescriptor = Object.getOwnPropertyDescriptor(fromObject, fromObjectPropertyName);\r\n\r\n                Object.defineProperty(toObject, fromObjectPropertyName, {\r\n                    value: fromObjectPropertyDescriptor.value,\r\n                    enumerable: fromObjectPropertyDescriptor.enumerable,\r\n                    writable: fromObjectPropertyDescriptor.writable,\r\n                    configurable: fromObjectPropertyDescriptor.configurable\r\n                });\r\n            } catch (error) {\r\n                if (logEnabled) {\r\n                    console.error(\"Property:\", fromObjectPropertyName, \"of:\", fromObject.name, \"can't be overwritten.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsObjectFunctionsSpecialCopy) {\r\n            _jsObjectFunctionsSpecialCopy(fromObject, toObject);\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanObjectProperties(object) {\r\n    let objectNames = Object.getOwnPropertyNames(object);\r\n    ArrayUtils.pushUnique(objectNames, \"__proto__\");\r\n\r\n    for (let objectName of objectNames) {\r\n        try {\r\n            Object.defineProperty(object, objectName, {\r\n                value: undefined\r\n            });\r\n        } catch (error) {\r\n            // Ignored\r\n        }\r\n\r\n        try {\r\n            delete object[objectName];\r\n        } catch (error) {\r\n            // Ignored\r\n        }\r\n    }\r\n\r\n    Object.setPrototypeOf(object, null);\r\n}\r\n\r\nexport function doesObjectPropertyUseAccessors(object, propertyName) {\r\n    let propertyUseAccessors = false;\r\n\r\n    let propertyDescriptor = JSUtils.getObjectPropertyDescriptor(object, propertyName);\r\n\r\n    if (propertyDescriptor != null && (propertyDescriptor.get != null || propertyDescriptor.set != null)) {\r\n        propertyUseAccessors = true;\r\n    }\r\n\r\n    return propertyUseAccessors;\r\n}\r\n\r\nexport function isFunctionByName(functionParent, functionName) {\r\n    let isFunctionResult = false;\r\n\r\n    let functionProperty = JSUtils.getObjectProperty(functionParent, functionName);\r\n    if (functionProperty != null) {\r\n        isFunctionResult = JSUtils.isFunction(functionProperty) && !JSUtils.isClassByName(functionParent, functionName);\r\n    }\r\n\r\n    return isFunctionResult;\r\n}\r\n\r\nexport function isClassByName(classParent, className) {\r\n    let isClassResult = false;\r\n\r\n    let classProperty = JSUtils.getObjectProperty(classParent, className);\r\n    if (classProperty != null) {\r\n        isClassResult = JSUtils.isClass(classProperty) && className != \"constructor\";\r\n    }\r\n\r\n    return isClassResult;\r\n}\r\n\r\nexport function isObjectByName(objectParent, objectName) {\r\n    let isObjectResult = false;\r\n\r\n    let objectProperty = JSUtils.getObjectProperty(objectParent, objectName);\r\n    if (objectProperty != null) {\r\n        isObjectResult = JSUtils.isObject(objectProperty);\r\n    }\r\n\r\n    return isObjectResult;\r\n}\r\n\r\nexport function isFunction(property) {\r\n    return typeof property == \"function\" && !JSUtils.isClass(property);\r\n}\r\n\r\nexport function isClass(property) {\r\n    return typeof property == \"function\" &&\r\n        property.prototype != null && typeof property.prototype.constructor == \"function\" &&\r\n        property.toString != null && typeof property.toString == \"function\" && (/^class/).test(property.toString());\r\n}\r\n\r\nexport function isObject(property) {\r\n    return typeof property == \"object\";\r\n}\r\n\r\nexport let JSUtils = {\r\n    getObjectPrototypes,\r\n    getObjectPropertyNames,\r\n    getObjectPropertyDescriptor,\r\n    getObjectProperty,\r\n    setObjectProperty,\r\n    getObjectPropertyOwnParent,\r\n    getObjectPropertyOwnParents,\r\n    getObjectFromPath,\r\n    getObjectNameFromPath,\r\n    getObjectParentFromPath,\r\n    overwriteObjectProperty,\r\n    copyObjectProperties,\r\n    cleanObjectProperties,\r\n    doesObjectPropertyUseAccessors,\r\n    isFunctionByName,\r\n    isClassByName,\r\n    isObjectByName,\r\n    isFunction,\r\n    isClass,\r\n    isObject\r\n};\r\n\r\n\r\n\r\nfunction _jsObjectFunctionsSpecialCopy(fromObject, toObject) {\r\n    try {\r\n        if (typeof toObject == \"function\" && typeof fromObject == \"function\") {\r\n            let functionsToOverwrite = [\"toString\", \"toLocaleString\", \"valueOf\"];\r\n\r\n            for (let functionToOverwrite of functionsToOverwrite) {\r\n                let propertyDescriptorToOverwrite = JSUtils.getObjectPropertyDescriptor(fromObject, functionToOverwrite);\r\n\r\n                if (propertyDescriptorToOverwrite != null && propertyDescriptorToOverwrite.value != null &&\r\n                    (propertyDescriptorToOverwrite.value == Object[functionToOverwrite])) {\r\n                    let valueToReturn = Object[functionToOverwrite].bind(fromObject)();\r\n                    let overwrittenFunction = function () { return valueToReturn; };\r\n                    JSUtils.overwriteObjectProperty(overwrittenFunction, toObject, functionToOverwrite, false, false);\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        // Ignored\r\n    }\r\n}", "import { JSUtils } from \"../../cauldron/js/utils/js_utils\";\r\n\r\nexport function injectProperties(fromReference, toReference, enumerable = true, writable = true, configurable = true, keepOriginalDescriptorAttributes = true, bindThisAsFirstParam = false, prefix = null, functionNamesToExclude = []) {\r\n    let ownPropertyNames = Object.getOwnPropertyNames(fromReference);\r\n    for (let ownPropertyName of ownPropertyNames) {\r\n        if (functionNamesToExclude.includes(ownPropertyName)) continue;\r\n\r\n        let enumerableToUse = enumerable;\r\n        let writableToUse = writable;\r\n        let configurableToUse = configurable;\r\n\r\n        if (keepOriginalDescriptorAttributes) {\r\n            let originalDescriptor = Object.getOwnPropertyDescriptor(toReference, ownPropertyName);\r\n            if (originalDescriptor != null) {\r\n                enumerableToUse = originalDescriptor.enumerable;\r\n                writableToUse = originalDescriptor.writable;\r\n                configurableToUse = originalDescriptor.configurable;\r\n            }\r\n        }\r\n\r\n        let adjustedPropertyName = ownPropertyName;\r\n        if (prefix != null) {\r\n            if (adjustedPropertyName.length > 0 && adjustedPropertyName[0] == adjustedPropertyName[0].toUpperCase()) {\r\n                adjustedPropertyName = prefix.toUpperCase() + adjustedPropertyName;\r\n            } else {\r\n                adjustedPropertyName = prefix + adjustedPropertyName;\r\n            }\r\n        }\r\n\r\n        let propertyDescriptor = Object.getOwnPropertyDescriptor(fromReference, ownPropertyName);\r\n        let useAccessors = propertyDescriptor != null && (propertyDescriptor.get != null || propertyDescriptor.set != null);\r\n\r\n        if (!useAccessors) {\r\n            let adjustedProperyValue = fromReference[ownPropertyName];\r\n\r\n            if (bindThisAsFirstParam && JSUtils.isFunction(adjustedProperyValue)) {\r\n                let originalFunction = fromReference[ownPropertyName];\r\n                adjustedProperyValue = function () {\r\n                    return originalFunction(this, ...arguments);\r\n                }\r\n\r\n                Object.defineProperty(adjustedProperyValue, \"name\", {\r\n                    value: adjustedPropertyName\r\n                });\r\n            }\r\n\r\n            Object.defineProperty(toReference, adjustedPropertyName, {\r\n                value: adjustedProperyValue,\r\n                enumerable: enumerableToUse,\r\n                writable: writableToUse,\r\n                configurable: configurableToUse\r\n            });\r\n        } else {\r\n            Object.defineProperty(toReference, adjustedPropertyName, {\r\n                get: propertyDescriptor.get,\r\n                set: propertyDescriptor.set,\r\n                enumerable: enumerableToUse,\r\n                configurable: configurableToUse\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport let PluginUtils = {\r\n    injectProperties\r\n};", "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the functions are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 functions let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_addRotationDegrees       -> returns a rotation in quat\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - If a group of functions starts with \u25CB it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - vec2_create\r\n            - vec3_create\r\n            - vec4_create\r\n            - quat_create\r\n            - quat2_create\r\n            - mat3_create\r\n            - mat4_create\r\n\r\n        ARRAY:\r\n            - pp_first      / pp_last\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findIndex      / pp_findAll            / pp_findAllIndexes / pp_findEqual      / pp_findAllEqual   / pp_findIndexEqual / pp_findAllIndexesEqual\r\n            \u25CB pp_remove     / pp_removeIndex    / pp_removeAllIndexes   / pp_removeAll      / pp_removeEqual    / pp_removeAllEqual\r\n            \u25CB pp_pushUnique / pp_unshiftUnique\r\n            \u25CB pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n            \u25CB pp_clear      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn   \r\n            - vec_equals   \r\n\r\n        VECTOR 2:\r\n            \u25CB vec2_set      / vec2_copy     / vec2_zero\r\n            - vec2_clone \r\n            - vec2_normalize\r\n            - vec2_length\r\n            - vec2_isZero\r\n\r\n        VECTOR 3:\r\n            \u25CB vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized / vec3_isZero\r\n            - vec3_length       / vec3_lengthSquared        / vec3_lengthSigned\r\n            - vec3_distance     / vec3_distanceSquared\r\n            - vec3_add              / vec3_sub              / vec3_mul      / vec3_div      / vec3_scale    / vec3_dot\r\n            - vec3_equals\r\n            - vec3_transformQuat    / vec3_transformMat3    / vec3_transformMat4\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis / vec3_copyComponentAlongAxis   / vec3_valueAlongAxis  \r\n            - vec3_isConcordant\r\n            - vec3_isFartherAlongAxis\r\n            - vec3_isToTheRight\r\n            - vec3_isOnAxis\r\n            - vec3_isOnPlane\r\n            - vec3_signTo\r\n            - vec3_projectOnAxis                / vec3_projectOnAxisAlongAxis\r\n            - vec3_projectOnPlane               / vec3_projectOnPlaneAlongAxis\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle            / vec3_angleSigned          / vec3_anglePivoted\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_rotationTo       / vec3_rotationToPivoted\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_addRotation  \r\n            - vec3_lerp      / vec3_interpolate \r\n            - vec3_perpendicularRandom \r\n            \r\n        VECTOR 4:\r\n            \u25CB vec4_set      / vec4_copy\r\n            - vec4_clone \r\n\r\n        QUAT:\r\n            \u25CB quat_set          / quat_copy     / quat_identity\r\n            - quat_clone \r\n            - quat_normalize    / quat_invert   / quat_conjugate\r\n            - quat_isNormalized\r\n            - quat_length       / quat_lengthSquared\r\n            - quat_mul\r\n            - quat_getAxis          / quat_getAngle         / quat_getAxisScaled\r\n            - quat_getAxes          / quat_getRight         / quat_getUp    / quat_getForward   / quat_getLeft  / quat_getDown  / quat_getBackward\r\n            \u25CB quat_setAxes          / quat_setRight         / quat_setUp    / quat_setForward   / quat_setLeft  / quat_setDown  / quat_setBackward\r\n            - quat_toWorld          / quat_toLocal\r\n            - quat_rotate           / quat_rotateAxis  \r\n            - quat_rotationTo     \r\n            - quat_rotationAroundAxis    \r\n            - quat_getTwist         / quat_getSwing         / quat_getTwistFromSwing    / quat_getSwingFromTwist    / quat_fromTwistSwing\r\n            \u25CB quat_fromRadians      / quat_fromDegrees      / quat_fromAxis / quat_fromAxes\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_lerp             / quat_interpolate      / quat_slerp    / quat_sinterpolate\r\n\r\n        QUAT 2:\r\n            \u25CB quat2_set             / quat2_copy        / quat2_identity\r\n            - quat2_normalize       / quat2_invert      / quat2_conjugate\r\n            - quat2_isNormalized\r\n            - quat2_length          / quat2_lengthSquared\r\n            - quat2_mul\r\n            - quat2_getPosition     / quat2_getRotation\r\n            \u25CB quat2_setPosition     / quat2_setRotation     / quat2_setPositionRotation\r\n            - quat2_getAxes     / quat2_getRight    / quat2_getUp   / quat2_getForward  / quat2_getLeft    / quat2_getDown   / quat2_getBackward\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_rotateAxis  \r\n            - quat2_toMatrix\r\n            \u25CB quat2_fromMatrix\r\n            - quat2_lerp        / quat2_interpolate / quat2_slerp    / quat2_sinterpolate\r\n\r\n        MATRIX 3:\r\n            \u25CB mat3_set\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n            - mat3_fromAxes\r\n\r\n        MATRIX 4:\r\n            \u25CB mat4_set          / mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat_mul           / mat4_scale\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            \u25CB mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            \u25CB mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes     / mat4_getRight    / mat4_getUp   / mat4_getForward  / mat4_getLeft    / mat4_getDown   / mat4_getBackward\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            \u25CB mat4_fromQuat\r\n*/\r\n\r\nimport { ArrayUtils } from \"../../../cauldron/js/utils/array_utils\";\r\nimport { Mat3Utils } from \"../../../cauldron/js/utils/mat3_utils\";\r\nimport { Mat4Utils } from \"../../../cauldron/js/utils/mat4_utils\";\r\nimport { EasingFunction, MathUtils } from \"../../../cauldron/js/utils/math_utils\";\r\nimport { Quat2Utils } from \"../../../cauldron/js/utils/quat2_utils\";\r\nimport { QuatUtils } from \"../../../cauldron/js/utils/quat_utils\";\r\nimport { Vec2Utils } from \"../../../cauldron/js/utils/vec2_utils\";\r\nimport { Vec3Utils } from \"../../../cauldron/js/utils/vec3_utils\";\r\nimport { Vec4Utils } from \"../../../cauldron/js/utils/vec4_utils\";\r\nimport { VecUtils } from \"../../../cauldron/js/utils/vec_utils\";\r\nimport { PluginUtils } from \"../../utils/plugin_utils\";\r\n\r\nexport function initArrayExtension() {\r\n    initArrayExtensionProtoype();\r\n}\r\n\r\nexport function vec2_create(x, y) {\r\n    return Vec2Utils.create(...arguments);\r\n};\r\n\r\nexport function vec3_create(x, y, z) {\r\n    return Vec3Utils.create(...arguments);\r\n};\r\n\r\nexport function vec4_create(x, y, z, w) {\r\n    return Vec4Utils.create(...arguments);\r\n};\r\n\r\nexport function quat_create(x, y, z, w) {\r\n    return QuatUtils.create(...arguments);\r\n};\r\n\r\nexport function quat2_create(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    return Quat2Utils.create(...arguments);\r\n};\r\n\r\nexport function mat3_create(\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    return Mat3Utils.create(...arguments);\r\n};\r\n\r\nexport function mat4_create(\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    return Mat4Utils.create(...arguments);\r\n};\r\n\r\nexport function initArrayExtensionProtoype() {\r\n\r\n    // ARRAY\r\n\r\n    // New Functions\r\n\r\n    let arrayExtension = {};\r\n\r\n    arrayExtension.pp_first = function pp_first() {\r\n        return ArrayUtils.first(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_last = function pp_last() {\r\n        return ArrayUtils.last(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_has = function pp_has(callback) {\r\n        return ArrayUtils.has(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_hasEqual = function pp_hasEqual(elementToFind, elementsEqualCallback = null) {\r\n        return ArrayUtils.hasEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_find = function pp_find(callback) {\r\n        return ArrayUtils.find(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findIndex = function pp_findIndex(callback) {\r\n        return ArrayUtils.findIndex(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findAll = function pp_findAll(callback) {\r\n        return ArrayUtils.findAll(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findAllIndexes = function pp_findAllIndexes(callback) {\r\n        return ArrayUtils.findAllIndexes(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findEqual = function pp_findEqual(elementToFind, elementsEqualCallback = null) {\r\n        return ArrayUtils.findEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findAllEqual = function pp_findAllEqual(elementToFind, elementsEqualCallback = null) {\r\n        return ArrayUtils.findAllEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findIndexEqual = function pp_findIndexEqual(elementToFind, elementsEqualCallback = null) {\r\n        return ArrayUtils.findIndexEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_findAllIndexesEqual = function pp_findAllIndexesEqual(elementToFind, elementsEqualCallback = null) {\r\n        return ArrayUtils.findAllIndexesEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_removeIndex = function pp_removeIndex(index) {\r\n        return ArrayUtils.removeIndex(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_removeAllIndexes = function pp_removeAllIndexes(indexes) {\r\n        return ArrayUtils.removeAllIndexes(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_remove = function pp_remove(callback) {\r\n        return ArrayUtils.remove(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_removeAll = function pp_removeAll(callback) {\r\n        return ArrayUtils.removeAll(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_removeEqual = function pp_removeEqual(elementToRemove, elementsEqualCallback = null) {\r\n        return ArrayUtils.removeEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_removeAllEqual = function pp_removeAllEqual(elementToRemove, elementsEqualCallback = null) {\r\n        return ArrayUtils.removeAllEqual(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_pushUnique = function pp_pushUnique(element, elementsEqualCallback = null) {\r\n        return ArrayUtils.pushUnique(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_unshiftUnique = function pp_unshiftUnique(element, elementsEqualCallback = null) {\r\n        return ArrayUtils.unshiftUnique(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_copy = function pp_copy(array, copyCallback = null) {\r\n        return ArrayUtils.copy(array, this, copyCallback);\r\n    };\r\n\r\n    arrayExtension.pp_clone = function pp_clone(cloneCallback = null) {\r\n        return ArrayUtils.clone(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_equals = function pp_equals(array, elementsEqualCallback = null) {\r\n        return ArrayUtils.equals(this, ...arguments);\r\n    };\r\n\r\n    arrayExtension.pp_clear = function pp_clear() {\r\n        return ArrayUtils.clear(this, ...arguments);\r\n    };\r\n\r\n    // VECTOR\r\n\r\n    // New Functions\r\n\r\n    let vecExtension = {}\r\n\r\n    vecExtension.vec_toString = function vec_toString(decimalPlaces = null) {\r\n        return VecUtils.toString(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_log = function vec_log(decimalPlaces = 4) {\r\n        return VecUtils.log(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_error = function vec_error(decimalPlaces = 4) {\r\n        return VecUtils.error(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_warn = function vec_warn(decimalPlaces = 4) {\r\n        return VecUtils.warn(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_scale = function vec_scale(value, out = null) {\r\n        return VecUtils.scale(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_round = function vec_round(out = null) {\r\n        return VecUtils.round(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_floor = function vec_floor(out = null) {\r\n        return VecUtils.floor(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_ceil = function vec_ceil(out = null) {\r\n        return VecUtils.ceil(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_clamp = function vec_clamp(start, end, out = null) {\r\n        return VecUtils.clamp(this, ...arguments);\r\n    };\r\n\r\n    vecExtension.vec_equals = function vec_equals(vector, epsilon = 0) {\r\n        return VecUtils.equals(this, ...arguments);\r\n    };\r\n\r\n    // VECTOR 2\r\n\r\n    let vec2Extension = {};\r\n\r\n    vec2Extension.vec2_set = function vec2_set(x, y) {\r\n        return Vec2Utils.set(this, ...arguments);\r\n    };\r\n\r\n    // glMatrix Bridge\r\n\r\n    vec2Extension.vec2_length = function vec2_length() {\r\n        return Vec2Utils.length(this, ...arguments);\r\n    };\r\n\r\n    vec2Extension.vec2_normalize = function vec2_normalize(out = Vec2Utils.create()) {\r\n        return Vec2Utils.normalize(this, ...arguments);\r\n    };\r\n\r\n    vec2Extension.vec2_copy = function vec2_copy(vector) {\r\n        return Vec2Utils.copy(vector, this);\r\n    };\r\n\r\n    vec2Extension.vec2_clone = function vec2_clone(out = Vec2Utils.create()) {\r\n        return Vec2Utils.clone(this, ...arguments);\r\n    };\r\n\r\n    vec2Extension.vec2_zero = function vec2_zero() {\r\n        return Vec2Utils.zero(this, ...arguments);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    vec2Extension.vec2_isZero = function vec2_isZero(epsilon = 0) {\r\n        return Vec2Utils.isZero(this, ...arguments);\r\n    };\r\n\r\n    // VECTOR 3\r\n\r\n    let vec3Extension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    vec3Extension.vec3_set = function vec3_set(x, y, z) {\r\n        return Vec3Utils.set(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_normalize = function vec3_normalize(out = Vec3Utils.create()) {\r\n        return Vec3Utils.normalize(this, ...arguments);\r\n    };\r\n    vec3Extension.vec3_copy = function vec3_copy(vector) {\r\n        return Vec3Utils.copy(vector, this);\r\n    };\r\n\r\n    vec3Extension.vec3_clone = function vec3_clone(out = Vec3Utils.create()) {\r\n        return Vec3Utils.clone(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_zero = function vec3_zero() {\r\n        return Vec3Utils.zero(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angle = function vec3_angle(vector) {\r\n        return Vec3Utils.angle(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angleDegrees = function vec3_angleDegrees(vector) {\r\n        return Vec3Utils.angleDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angleRadians = function vec3_angleRadians(vector) {\r\n        return Vec3Utils.angleRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_equals = function vec3_equals(vector, epsilon = 0) {\r\n        return Vec3Utils.equals(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_length = function vec3_length() {\r\n        return Vec3Utils.length(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_lengthSquared = function vec3_lengthSquared() {\r\n        return Vec3Utils.lengthSquared(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_distance = function vec3_distance(vector) {\r\n        return Vec3Utils.distance(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_distanceSquared = function vec3_distanceSquared(vector) {\r\n        return Vec3Utils.distanceSquared(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_add = function vec3_add(vector, out = Vec3Utils.create()) {\r\n        return Vec3Utils.add(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_sub = function vec3_sub(vector, out = Vec3Utils.create()) {\r\n        return Vec3Utils.sub(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_mul = function vec3_mul(vector, out = Vec3Utils.create()) {\r\n        return Vec3Utils.mul(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_div = function vec3_div(vector, out = Vec3Utils.create()) {\r\n        return Vec3Utils.div(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_scale = function vec3_scale(value, out = Vec3Utils.create()) {\r\n        return Vec3Utils.scale(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_dot = function vec3_dot(vector) {\r\n        return Vec3Utils.dot(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_negate = function vec3_negate(out = Vec3Utils.create()) {\r\n        return Vec3Utils.negate(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_cross = function vec3_cross(vector, out = Vec3Utils.create()) {\r\n        return Vec3Utils.cross(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_transformQuat = function vec3_transformQuat(quat, out = Vec3Utils.create()) {\r\n        return Vec3Utils.transformQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_transformMat3 = function vec3_transformMat3(matrix, out = Vec3Utils.create()) {\r\n        return Vec3Utils.transformMat3(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_transformMat4 = function vec3_transformMat4(matrix, out = Vec3Utils.create()) {\r\n        return Vec3Utils.transformMat4(this, ...arguments);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    vec3Extension.vec3_lengthSigned = function vec3_lengthSigned(positiveDirection) {\r\n        return Vec3Utils.lengthSigned(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angleSigned = function vec3_angleSigned(vector, referenceAxis) {\r\n        return Vec3Utils.angleSigned(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angleSignedDegrees = function vec3_angleSignedDegrees(vector, referenceAxis) {\r\n        return Vec3Utils.angleSignedDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_angleSignedRadians = function vec3_angleSignedRadians(vector, referenceAxis) {\r\n        return Vec3Utils.angleSignedRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivoted = function vec3_anglePivoted(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivoted(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivotedDegrees = function vec3_anglePivotedDegrees(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivotedDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivotedRadians = function vec3_anglePivotedRadians(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivotedRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivotedSigned = function vec3_anglePivotedSigned(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivotedSigned(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivotedSignedDegrees = function vec3_anglePivotedSignedDegrees(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivotedSignedDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_anglePivotedSignedRadians = function vec3_anglePivotedSignedRadians(vector, referenceAxis) {\r\n        return Vec3Utils.anglePivotedSignedRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_toRadians = function vec3_toRadians(out = Vec3Utils.create()) {\r\n        return Vec3Utils.toRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_toDegrees = function vec3_toDegrees(out = Vec3Utils.create()) {\r\n        return Vec3Utils.toDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_toQuat = function vec3_toQuat(out) {\r\n        return Vec3Utils.toQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansToQuat = function vec3_radiansToQuat(out = QuatUtils.create()) {\r\n        return Vec3Utils.radiansToQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesToQuat = function vec3_degreesToQuat(out = QuatUtils.create()) {\r\n        return Vec3Utils.degreesToQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isNormalized = function vec3_isNormalized(epsilon = MathUtils.EPSILON) {\r\n        return Vec3Utils.isNormalized(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isZero = function vec3_isZero(epsilon = 0) {\r\n        return Vec3Utils.isZero(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_componentAlongAxis = function vec3_componentAlongAxis(axis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.componentAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_valueAlongAxis = function vec3_valueAlongAxis(axis) {\r\n        return Vec3Utils.valueAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_removeComponentAlongAxis = function vec3_removeComponentAlongAxis(axis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.removeComponentAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_copyComponentAlongAxis = function vec3_copyComponentAlongAxis(vector, axis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.copyComponentAlongAxis(vector, this, axis, out);\r\n    };\r\n\r\n    vec3Extension.vec3_isConcordant = function vec3_isConcordant(vector) {\r\n        return Vec3Utils.isConcordant(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isFartherAlongAxis = function vec3_isFartherAlongAxis(vector, axis) {\r\n        return Vec3Utils.isFartherAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isToTheRight = function vec3_isToTheRight(vector, referenceAxis) {\r\n        return Vec3Utils.isToTheRight(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_signTo = function vec3_signTo(vector, referenceAxis, zeroSign = 1) {\r\n        return Vec3Utils.signTo(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_projectOnAxis = function vec3_projectOnAxis(axis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.projectOnAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_projectOnAxisAlongAxis = function vec3_projectOnAxisAlongAxis(axis, projectAlongAxis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.projectOnAxisAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_projectOnPlane = function vec3_projectOnPlane(planeNormal, out = Vec3Utils.create()) {\r\n        return Vec3Utils.projectOnPlane(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_projectOnPlaneAlongAxis = function vec3_projectOnPlaneAlongAxis(planeNormal, projectAlongAxis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.projectOnPlaneAlongAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isOnAxis = function vec3_isOnAxis(axis) {\r\n        return Vec3Utils.isOnAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_isOnPlane = function vec3_isOnPlane(planeNormal) {\r\n        return Vec3Utils.isOnPlane(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotate = function vec3_rotate(rotation, out) {\r\n        return Vec3Utils.rotate(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateDegrees = function vec3_rotateDegrees(rotation, out) {\r\n        return Vec3Utils.rotateDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateRadians = function vec3_rotateRadians(rotation, out) {\r\n        return Vec3Utils.rotateRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateQuat = function vec3_rotateQuat(rotation, out) {\r\n        return Vec3Utils.rotateQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAxis = function vec3_rotateAxis(angle, axis, out) {\r\n        return Vec3Utils.rotateAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAxisDegrees = function vec3_rotateAxisDegrees(angle, axis, out) {\r\n        return Vec3Utils.rotateAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAxisRadians = function vec3_rotateAxisRadians(angle, axis, out) {\r\n        return Vec3Utils.rotateAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAround = function vec3_rotateAround(rotation, origin, out) {\r\n        return Vec3Utils.rotateAround(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundDegrees = function vec3_rotateAroundDegrees(rotation, origin, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotateAroundDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundRadians = function vec3_rotateAroundRadians(rotation, origin, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotateAroundRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundQuat = function vec3_rotateAroundQuat(rotation, origin, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotateAroundQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundAxis = function vec3_rotateAroundAxis(angle, axis, origin, out) {\r\n        return Vec3Utils.rotateAroundAxis(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundAxisDegrees = function vec3_rotateAroundAxisDegrees(angle, axis, origin, out) {\r\n        return Vec3Utils.rotateAroundAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotateAroundAxisRadians = function vec3_rotateAroundAxisRadians(angle, axis, origin, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotateAroundAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToWorld = function vec3_convertPositionToWorld(parentTransform, out) {\r\n        return Vec3Utils.convertPositionToWorld(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToLocal = function vec3_convertPositionToLocal(parentTransform, out) {\r\n        return Vec3Utils.convertPositionToLocal(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToWorldMatrix = function vec3_convertPositionToWorldMatrix(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertPositionToWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToLocalMatrix = function vec3_convertPositionToLocalMatrix(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertPositionToLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToWorldQuat = function vec3_convertPositionToWorldQuat(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertPositionToWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertPositionToLocalQuat = function vec3_convertPositionToLocalQuat(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertPositionToLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToWorld = function vec3_convertDirectionToWorld(parentTransform, out) {\r\n        return Vec3Utils.convertDirectionToWorld(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToLocal = function vec3_convertDirectionToLocal(parentTransform, out) {\r\n        return Vec3Utils.convertDirectionToLocal(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToWorldMatrix = function vec3_convertDirectionToWorldMatrix(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertDirectionToWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToLocalMatrix = function vec3_convertDirectionToLocalMatrix(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertDirectionToLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToWorldQuat = function vec3_convertDirectionToWorldQuat(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertDirectionToWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_convertDirectionToLocalQuat = function vec3_convertDirectionToLocalQuat(parentTransform, out = Vec3Utils.create()) {\r\n        return Vec3Utils.convertDirectionToLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_addRotation = function vec3_addRotation(rotation, out) {\r\n        return Vec3Utils.addRotation(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_addRotationDegrees = function vec3_addRotationDegrees(rotation, out) {\r\n        return Vec3Utils.addRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_addRotationRadians = function vec3_addRotationRadians(rotation, out) {\r\n        return Vec3Utils.addRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_addRotationQuat = function vec3_addRotationQuat(rotation, out) {\r\n        return Vec3Utils.addRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesAddRotation = function vec3_degreesAddRotation(rotation, out) {\r\n        return Vec3Utils.degreesAddRotation(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesAddRotationDegrees = function vec3_degreesAddRotationDegrees(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.degreesAddRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesAddRotationRadians = function vec3_degreesAddRotationRadians(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.degreesAddRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesAddRotationQuat = function vec3_degreesAddRotationQuat(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.degreesAddRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansAddRotation = function vec3_radiansAddRotation(rotation, out) {\r\n        return Vec3Utils.radiansAddRotation(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansAddRotationDegrees = function vec3_radiansAddRotationDegrees(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.radiansAddRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansAddRotationRadians = function vec3_radiansAddRotationRadians(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.radiansAddRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansAddRotationQuat = function vec3_radiansAddRotationQuat(rotation, out = Vec3Utils.create()) {\r\n        return Vec3Utils.radiansAddRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_toMatrix = function vec3_toMatrix(out = Mat3Utils.create()) {\r\n        return Vec3Utils.toMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_degreesToMatrix = function vec3_degreesToMatrix(out = Mat3Utils.create()) {\r\n        return Vec3Utils.degreesToMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_radiansToMatrix = function vec3_radiansToMatrix(out = Mat3Utils.create()) {\r\n        return Vec3Utils.radiansToMatrix(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationTo = function vec3_rotationTo(to, out) {\r\n        return Vec3Utils.rotationTo(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToDegrees = function vec3_rotationToDegrees(to, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotationToDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToRadians = function vec3_rotationToRadians(to, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotationToRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToQuat = function vec3_rotationToQuat(to, out = QuatUtils.create()) {\r\n        return Vec3Utils.rotationToQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToPivoted = function vec3_rotationToPivoted(to, pivotAxis, out) {\r\n        return Vec3Utils.rotationToPivoted(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToPivotedDegrees = function vec3_rotationToPivotedDegrees(to, pivotAxis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotationToPivotedDegrees(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToPivotedRadians = function vec3_rotationToPivotedRadians(to, pivotAxis, out = Vec3Utils.create()) {\r\n        return Vec3Utils.rotationToPivotedRadians(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_rotationToPivotedQuat = function vec3_rotationToPivotedQuat(to, pivotAxis, out = QuatUtils.create()) {\r\n        return Vec3Utils.rotationToPivotedQuat(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_lerp = function vec3_lerp(to, interpolationFactor, out = Vec3Utils.create()) {\r\n        return Vec3Utils.lerp(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_interpolate = function vec3_interpolate(to, interpolationFactor, easingFunction = EasingFunction.linear, out = Vec3Utils.create()) {\r\n        return Vec3Utils.interpolate(this, ...arguments);\r\n    };\r\n\r\n    vec3Extension.vec3_perpendicularRandom = function vec3_perpendicularRandom(out = Vec3Utils.create()) {\r\n        return Vec3Utils.perpendicularRandom(this, ...arguments);\r\n    };\r\n\r\n    // VECTOR 4\r\n\r\n    let vec4Extension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    vec4Extension.vec4_set = function vec4_set(x, y, z, w) {\r\n        return Vec4Utils.set(this, ...arguments);\r\n    };\r\n\r\n    vec4Extension.vec4_copy = function vec4_copy(vector) {\r\n        return Vec4Utils.copy(vector, this);\r\n    };\r\n\r\n    vec4Extension.vec4_clone = function vec4_clone(out = Vec4Utils.create()) {\r\n        return Vec4Utils.clone(this, ...arguments);\r\n    };\r\n\r\n    // QUAT\r\n\r\n    let quatExtension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    quatExtension.quat_set = function quat_set(x, y, z, w) {\r\n        return QuatUtils.set(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_normalize = function quat_normalize(out = QuatUtils.create()) {\r\n        return QuatUtils.normalize(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_copy = function quat_copy(quat) {\r\n        return QuatUtils.copy(quat, this);\r\n    };\r\n\r\n    quatExtension.quat_clone = function quat_clone(out = QuatUtils.create()) {\r\n        return QuatUtils.clone(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_identity = function quat_identity() {\r\n        return QuatUtils.identity(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_length = function quat_length() {\r\n        return QuatUtils.length(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_lengthSquared = function quat_lengthSquared() {\r\n        return QuatUtils.lengthSquared(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_invert = function quat_invert(out = QuatUtils.create()) {\r\n        return QuatUtils.invert(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_conjugate = function quat_conjugate(out = QuatUtils.create()) {\r\n        return QuatUtils.conjugate(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_mul = function quat_mul(rotation, out = QuatUtils.create()) {\r\n        return QuatUtils.mul(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAxis = function quat_getAxis(out = Vec3Utils.create()) {\r\n        return QuatUtils.getAxis(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAngle = function quat_getAngle() {\r\n        return QuatUtils.getAngle(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAngleDegrees = function quat_getAngleDegrees() {\r\n        return QuatUtils.getAngleDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAngleRadians = function quat_getAngleRadians() {\r\n        return QuatUtils.getAngleRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAxisScaled = function quat_getAxisScaled(out = Vec3Utils.create()) {\r\n        return QuatUtils.getAxisScaled(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAxisScaledDegrees = function quat_getAxisScaledDegrees(out = Vec3Utils.create()) {\r\n        return QuatUtils.getAxisScaledDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAxisScaledRadians = function quat_getAxisScaledRadians(out = Vec3Utils.create()) {\r\n        return QuatUtils.getAxisScaledRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getAxes = function quat_getAxes(out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n        return QuatUtils.getAxes(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getForward = function quat_getForward(out = Vec3Utils.create()) {\r\n        return QuatUtils.getForward(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getBackward = function quat_getBackward(out) {\r\n        return QuatUtils.getBackward(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getLeft = function quat_getLeft(out = Vec3Utils.create()) {\r\n        return QuatUtils.getLeft(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getRight = function quat_getRight(out) {\r\n        return QuatUtils.getRight(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getUp = function quat_getUp(out = Vec3Utils.create()) {\r\n        return QuatUtils.getUp(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getDown = function quat_getDown(out) {\r\n        return QuatUtils.getDown(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setAxes = function quat_setAxes(left, up, forward) {\r\n        return QuatUtils.setAxes(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setForward = function quat_setForward(forward, up = null, left = null) {\r\n        return QuatUtils.setForward(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setBackward = function quat_setBackward(backward, up = null, left = null) {\r\n        return QuatUtils.setBackward(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setUp = function quat_setUp(up, forward = null, left = null) {\r\n        return QuatUtils.setUp(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setDown = function quat_setDown(down, forward = null, left = null) {\r\n        return QuatUtils.setDown(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setLeft = function quat_setLeft(left, up = null, forward = null) {\r\n        return QuatUtils.setLeft(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_setRight = function quat_setRight(right, up = null, forward = null) {\r\n        return QuatUtils.setRight(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_toWorld = function quat_toWorld(parentQuat, out = QuatUtils.create()) {\r\n        return QuatUtils.toWorld(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_toLocal = function quat_toLocal(parentQuat, out = QuatUtils.create()) {\r\n        return QuatUtils.toLocal(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_fromAxis = function quat_fromAxis(angle, axis) {\r\n        return QuatUtils.fromAxis(angle, axis, this);\r\n    };\r\n\r\n    quatExtension.quat_fromAxisDegrees = function quat_fromAxisDegrees(angle, axis) {\r\n        return QuatUtils.fromAxisDegrees(angle, axis, this);\r\n    };\r\n\r\n    quatExtension.quat_fromAxisRadians = function quat_fromAxisRadians(angle, axis) {\r\n        return QuatUtils.fromAxisRadians(angle, axis, this);\r\n    };\r\n\r\n    quatExtension.quat_fromAxes = function quat_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n        return QuatUtils.fromAxes(leftAxis, upAxis, forwardAxis, this);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    quatExtension.quat_fromRadians = function quat_fromRadians(radiansRotation) {\r\n        return QuatUtils.fromRadians(radiansRotation, this);\r\n    };\r\n\r\n    quatExtension.quat_fromDegrees = function quat_fromDegrees(degreesRotation) {\r\n        return QuatUtils.fromDegrees(degreesRotation, this);\r\n    };\r\n\r\n    quatExtension.quat_toRadians = function quat_toRadians(out = Vec3Utils.create()) {\r\n        return QuatUtils.toRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_toDegrees = function quat_toDegrees(out = Vec3Utils.create()) {\r\n        return QuatUtils.toDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_isNormalized = function quat_isNormalized(epsilon = MathUtils.EPSILON) {\r\n        return QuatUtils.isNormalized(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_addRotation = function quat_addRotation(rotation, out) {\r\n        return QuatUtils.addRotation(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_addRotationDegrees = function quat_addRotationDegrees(rotation, out) {\r\n        return QuatUtils.addRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_addRotationRadians = function quat_addRotationRadians(rotation, out) {\r\n        return QuatUtils.addRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_addRotationQuat = function quat_addRotationQuat(rotation, out = QuatUtils.create()) {\r\n        return QuatUtils.addRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_subRotation = function quat_subRotation(rotation, out) {\r\n        return QuatUtils.subRotation(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_subRotationDegrees = function quat_subRotationDegrees(rotation, out) {\r\n        return QuatUtils.subRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_subRotationRadians = function quat_subRotationRadians(rotation, out) {\r\n        return QuatUtils.subRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_subRotationQuat = function quat_subRotationQuat(rotation, out = QuatUtils.create()) {\r\n        return QuatUtils.subRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationTo = function quat_rotationTo(to, out) {\r\n        return QuatUtils.rotationTo(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationToDegrees = function quat_rotationToDegrees(to, out) {\r\n        return QuatUtils.rotationToDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationToRadians = function quat_rotationToRadians(to, out) {\r\n        return QuatUtils.rotationToRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationToQuat = function quat_rotationToQuat(to, out) {\r\n        return QuatUtils.rotationToQuat(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationAroundAxis = function quat_rotationAroundAxis(axis, out) {\r\n        return QuatUtils.rotationAroundAxis(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationAroundAxisDegrees = function quat_rotationAroundAxisDegrees(axis, out = Vec3Utils.create()) {\r\n        return QuatUtils.rotationAroundAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationAroundAxisRadians = function quat_rotationAroundAxisRadians(axis, out = Vec3Utils.create()) {\r\n        return QuatUtils.rotationAroundAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotationAroundAxisQuat = function quat_rotationAroundAxisQuat(axis, out = QuatUtils.create()) {\r\n        return QuatUtils.rotationAroundAxisQuat(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getTwist = function quat_getTwist(axis, out = QuatUtils.create()) {\r\n        return QuatUtils.getTwist(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getSwing = function quat_getSwing(axis, out = QuatUtils.create()) {\r\n        return QuatUtils.getSwing(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getSwingFromTwist = function quat_getSwingFromTwist(twist, out = QuatUtils.create()) {\r\n        return QuatUtils.getSwingFromTwist(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_getTwistFromSwing = function quat_getTwistFromSwing(swing, out = QuatUtils.create()) {\r\n        return QuatUtils.getTwistFromSwing(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_fromTwistSwing = function quat_fromTwistSwing(twist, swing) {\r\n        return QuatUtils.fromTwistSwing(twist, swing, this);\r\n    };\r\n\r\n    quatExtension.quat_toMatrix = function quat_toMatrix(out = Mat3Utils.create()) {\r\n        return QuatUtils.toMatrix(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotate = function quat_rotate(rotation, out) {\r\n        return QuatUtils.rotate(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateDegrees = function quat_rotateDegrees(rotation, out) {\r\n        return QuatUtils.rotateDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateRadians = function quat_rotateRadians(rotation, out) {\r\n        return QuatUtils.rotateRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateQuat = function quat_rotateQuat(rotation, out) {\r\n        return QuatUtils.rotateQuat(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateAxis = function quat_rotateAxis(angle, axis, out) {\r\n        return QuatUtils.rotateAxis(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateAxisDegrees = function quat_rotateAxisDegrees(angle, axis, out) {\r\n        return QuatUtils.rotateAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_rotateAxisRadians = function quat_rotateAxisRadians(angle, axis, out) {\r\n        return QuatUtils.rotateAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_lerp = function quat_lerp(to, interpolationFactor, out = QuatUtils.create()) {\r\n        return QuatUtils.lerp(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_interpolate = function quat_interpolate(to, interpolationFactor, easingFunction = EasingFunction.linear, out = QuatUtils.create()) {\r\n        return QuatUtils.interpolate(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_slerp = function quat_slerp(to, interpolationFactor, out = QuatUtils.create()) {\r\n        return QuatUtils.slerp(this, ...arguments);\r\n    };\r\n\r\n    quatExtension.quat_sinterpolate = function quat_sinterpolate(to, interpolationFactor, easingFunction = EasingFunction.linear, out = QuatUtils.create()) {\r\n        return QuatUtils.sinterpolate(this, ...arguments);\r\n    };\r\n\r\n    // QUAT 2\r\n\r\n    let quat2Extension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    quat2Extension.quat2_set = function quat2_set(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n        return Quat2Utils.set(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_normalize = function quat2_normalize(out = Quat2Utils.create()) {\r\n        return Quat2Utils.normalize(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_invert = function quat2_invert(out = Quat2Utils.create()) {\r\n        return Quat2Utils.invert(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_conjugate = function quat2_conjugate(out = Quat2Utils.create()) {\r\n        return Quat2Utils.conjugate(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_copy = function quat2_copy(quat) {\r\n        return Quat2Utils.copy(quat, this);\r\n    };\r\n\r\n    quat2Extension.quat2_identity = function quat2_identity() {\r\n        return Quat2Utils.identity(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getPosition = function quat2_getPosition(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getPosition(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getRotation = function quat2_getRotation(out) {\r\n        return Quat2Utils.getRotation(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getRotationDegrees = function quat2_getRotationDegrees(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getRotationRadians = function quat2_getRotationRadians(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getRotationQuat = function quat2_getRotationQuat(out = QuatUtils.create()) {\r\n        return Quat2Utils.getRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setPosition = function quat2_setPosition(position) {\r\n        return Quat2Utils.setPosition(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setRotation = function quat2_setRotation(rotation) {\r\n        return Quat2Utils.setRotation(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setRotationDegrees = function quat2_setRotationDegrees(rotation) {\r\n        return Quat2Utils.setRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setRotationRadians = function quat2_setRotationRadians(rotation) {\r\n        return Quat2Utils.setRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setRotationQuat = function quat2_setRotationQuat(rotation) {\r\n        return Quat2Utils.setRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setPositionRotation = function quat2_setPositionRotation(position, rotation) {\r\n        return Quat2Utils.setPositionRotation(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setPositionRotationDegrees = function quat2_setPositionRotationDegrees(position, rotation) {\r\n        return Quat2Utils.setPositionRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setPositionRotationRadians = function quat2_setPositionRotationRadians(position, rotation) {\r\n        return Quat2Utils.setPositionRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_setPositionRotationQuat = function quat2_setPositionRotationQuat(position, rotation) {\r\n        return Quat2Utils.setPositionRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    quat2Extension.quat2_isNormalized = function quat2_isNormalized(epsilon = MathUtils.EPSILON) {\r\n        return Quat2Utils.isNormalized(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_length = function quat2_length() {\r\n        return Quat2Utils.length(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_lengthSquared = function quat2_lengthSquared() {\r\n        return Quat2Utils.lengthSquared(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_mul = function quat2_mul(quat, out = Quat2Utils.create()) {\r\n        return Quat2Utils.mul(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getAxes = function quat2_getAxes(out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n        return Quat2Utils.getAxes(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getForward = function quat2_getForward(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getForward(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getBackward = function quat2_getBackward(out) {\r\n        return Quat2Utils.getBackward(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getLeft = function quat2_getLeft(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getLeft(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getRight = function quat2_getRight(out) {\r\n        return Quat2Utils.getRight(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getUp = function quat2_getUp(out = Vec3Utils.create()) {\r\n        return Quat2Utils.getUp(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_getDown = function quat2_getDown(out) {\r\n        return Quat2Utils.getDown(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_toWorld = function quat2_toWorld(parentTransformQuat, out = Quat2Utils.create()) {\r\n        return Quat2Utils.toWorld(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_toLocal = function quat2_toLocal(parentTransformQuat, out = Quat2Utils.create()) {\r\n        return Quat2Utils.toLocal(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_rotateAxis = function quat2_rotateAxis(angle, axis, out) {\r\n        return Quat2Utils.rotateAxis(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_rotateAxisDegrees = function quat2_rotateAxisDegrees(angle, axis, out) {\r\n        return Quat2Utils.rotateAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_rotateAxisRadians = function quat2_rotateAxisRadians(angle, axis, out = Quat2Utils.create()) {\r\n        return Quat2Utils.rotateAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_toMatrix = function quat2_toMatrix(out = Mat4Utils.create()) {\r\n        return Quat2Utils.toMatrix(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_fromMatrix = function quat2_fromMatrix(matrix) {\r\n        return Quat2Utils.fromMatrix(matrix, this);\r\n    };\r\n\r\n    quat2Extension.quat2_lerp = function quat2_lerp(to, interpolationFactor, out = Quat2Utils.create()) {\r\n        return Quat2Utils.lerp(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_interpolate = function quat2_interpolate(to, interpolationFactor, easingFunction = EasingFunction.linear, out = Quat2Utils.create()) {\r\n        return Quat2Utils.interpolate(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_slerp = function quat2_slerp(to, interpolationFactor, out = Quat2Utils.create()) {\r\n        return Quat2Utils.slerp(this, ...arguments);\r\n    };\r\n\r\n    quat2Extension.quat2_sinterpolate = function quat2_sinterpolate(to, interpolationFactor, easingFunction = EasingFunction.linear, out = Quat2Utils.create()) {\r\n        return Quat2Utils.sinterpolate(this, ...arguments);\r\n    };\r\n\r\n    // MATRIX 3\r\n\r\n    let mat3Extension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    mat3Extension.mat3_set = function mat3_set(\r\n        m00, m01, m02,\r\n        m10, m11, m12,\r\n        m20, m21, m22) {\r\n        return Mat3Utils.set(this, ...arguments);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    mat3Extension.mat3_toDegrees = function mat3_toDegrees(out = Vec3Utils.create()) {\r\n        return Mat3Utils.toDegrees(this, ...arguments);\r\n    };\r\n\r\n    mat3Extension.mat3_toRadians = function mat3_toRadians(out = Vec3Utils.create()) {\r\n        return Mat3Utils.toRadians(this, ...arguments);\r\n    };\r\n\r\n    mat3Extension.mat3_toQuat = function mat3_toQuat(out = QuatUtils.create()) {\r\n        return Mat3Utils.toQuat(this, ...arguments);\r\n    };\r\n    mat3Extension.mat3_fromAxes = function mat3_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n        return Mat3Utils.fromAxes(leftAxis, upAxis, forwardAxis, this);\r\n    };\r\n\r\n    // MATRIX 4\r\n\r\n    let mat4Extension = {};\r\n\r\n    // glMatrix Bridge\r\n\r\n    mat4Extension.mat4_set = function mat4_set(\r\n        m00, m01, m02, m03,\r\n        m10, m11, m12, m13,\r\n        m20, m21, m22, m23,\r\n        m30, m31, m32, m33) {\r\n        return Mat4Utils.set(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_copy = function mat4_copy(matrix) {\r\n        return Mat4Utils.copy(matrix, this);\r\n    };\r\n\r\n    mat4Extension.mat4_identity = function mat4_identity() {\r\n        return Mat4Utils.identity(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_invert = function mat4_invert(out = Mat4Utils.create()) {\r\n        return Mat4Utils.invert(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_mul = function mat4_mul(matrix, out = Mat4Utils.create()) {\r\n        return Mat4Utils.mul(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_scale = function mat4_scale(vector, out = Mat4Utils.create()) {\r\n        return Mat4Utils.scale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_clone = function mat4_clone(out = Mat4Utils.create()) {\r\n        return Mat4Utils.clone(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getPosition = function mat4_getPosition(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getPosition(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getRotation = function mat4_getRotation(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getRotation(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getRotationDegrees = function mat4_getRotationDegrees(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getRotationRadians = function mat4_getRotationRadians(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getRotationQuat = function mat4_getRotationQuat(out = QuatUtils.create()) {\r\n        return Mat4Utils.getRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getScale = function mat4_getScale(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getScale(this, ...arguments);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    mat4Extension.mat4_setPosition = function mat4_setPosition(position) {\r\n        return Mat4Utils.setPosition(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setRotation = function mat4_setRotation(rotation) {\r\n        return Mat4Utils.setRotation(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setRotationDegrees = function mat4_setRotationDegrees(rotation) {\r\n        return Mat4Utils.setRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setRotationRadians = function mat4_setRotationRadians(rotation) {\r\n        return Mat4Utils.setRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setRotationQuat = function mat4_setRotationQuat(rotation) {\r\n        return Mat4Utils.setRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setScale = function mat4_setScale(scale) {\r\n        return Mat4Utils.setScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationScale = function mat4_setPositionRotationScale(position, rotation, scale) {\r\n        return Mat4Utils.setPositionRotationScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationDegreesScale = function mat4_setPositionRotationDegreesScale(position, rotation, scale) {\r\n        return Mat4Utils.setPositionRotationDegreesScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationRadiansScale = function mat4_setPositionRotationRadiansScale(position, rotation, scale) {\r\n        return Mat4Utils.setPositionRotationRadiansScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationQuatScale = function mat4_setPositionRotationQuatScale(position, rotation, scale) {\r\n        return Mat4Utils.setPositionRotationQuatScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotation = function mat4_setPositionRotation(position, rotation) {\r\n        return Mat4Utils.setPositionRotation(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationDegrees = function mat4_setPositionRotationDegrees(position, rotation) {\r\n        return Mat4Utils.setPositionRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationRadians = function mat4_setPositionRotationRadians(position, rotation) {\r\n        return Mat4Utils.setPositionRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_setPositionRotationQuat = function mat4_setPositionRotationQuat(position, rotation) {\r\n        return Mat4Utils.setPositionRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getAxes = function mat4_getAxes(out = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n        return Mat4Utils.getAxes(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getForward = function mat4_getForward(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getForward(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getBackward = function mat4_getBackward(out) {\r\n        return Mat4Utils.getBackward(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getLeft = function mat4_getLeft(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getLeft(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getRight = function mat4_getRight(out) {\r\n        return Mat4Utils.getRight(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getUp = function mat4_getUp(out = Vec3Utils.create()) {\r\n        return Mat4Utils.getUp(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_getDown = function mat4_getDown(out) {\r\n        return Mat4Utils.getDown(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_toWorld = function mat4_toWorld(parentTransformMatrix, out = Mat4Utils.create()) {\r\n        return Mat4Utils.toWorld(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_toLocal = function mat4_toLocal(parentTransformMatrix, out = Mat4Utils.create()) {\r\n        return Mat4Utils.toLocal(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_hasUniformScale = function mat4_hasUniformScale() {\r\n        return Mat4Utils.hasUniformScale(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_toQuat = function mat4_toQuat(out = Quat2Utils.create()) {\r\n        return Mat4Utils.toQuat(this, ...arguments);\r\n    };\r\n\r\n    mat4Extension.mat4_fromQuat = function mat4_fromQuat(quat) {\r\n        return Mat4Utils.fromQuat(quat, this);\r\n    };\r\n\r\n\r\n\r\n    let arrayPrototypesToExtend = [\r\n        Array.prototype, Uint8ClampedArray.prototype, Uint8Array.prototype, Uint16Array.prototype, Uint32Array.prototype, Int8Array.prototype,\r\n        Int16Array.prototype, Int32Array.prototype, Float32Array.prototype, Float64Array.prototype];\r\n\r\n    for (let arrayPrototypeToExtend of arrayPrototypesToExtend) {\r\n        PluginUtils.injectProperties(arrayExtension, arrayPrototypeToExtend, false, true, true);\r\n\r\n        PluginUtils.injectProperties(vecExtension, arrayPrototypeToExtend, false, true, true);\r\n\r\n        PluginUtils.injectProperties(vec2Extension, arrayPrototypeToExtend, false, true, true);\r\n        PluginUtils.injectProperties(vec3Extension, arrayPrototypeToExtend, false, true, true);\r\n        PluginUtils.injectProperties(vec4Extension, arrayPrototypeToExtend, false, true, true);\r\n\r\n        PluginUtils.injectProperties(quatExtension, arrayPrototypeToExtend, false, true, true);\r\n        PluginUtils.injectProperties(quat2Extension, arrayPrototypeToExtend, false, true, true);\r\n\r\n        PluginUtils.injectProperties(mat3Extension, arrayPrototypeToExtend, false, true, true);\r\n        PluginUtils.injectProperties(mat4Extension, arrayPrototypeToExtend, false, true, true);\r\n\r\n        PluginUtils.injectProperties(arrayExtension, arrayPrototypeToExtend, false, true, true);\r\n    }\r\n}", "/*\r\n    How to use\r\n\r\n    By default the rotations are in Degrees\r\n\r\n    For rotations u can add a suffix like Degrees/Radians to use a specific version, example:\r\n        - pp_angleDistanceSignedDegrees\r\n        - pp_isInsideAngleRangeRadians\r\n        \r\n    List of constants:\r\n        - PP_EPSILON / PP_EPSILON_SQUARED / PP_EPSILON_DEGREES\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like Degrees or Radians) are omitted \r\n\r\n        - pp_clamp\r\n        - pp_sign\r\n        - pp_toDegrees      / pp_toRadians\r\n        - pp_roundDecimal\r\n        - pp_mapToRange\r\n        - pp_random         / pp_randomInt    / pp_randomInt        / pp_randomSign / pp_randomPick\r\n        - pp_lerp           / pp_interpolate\r\n        - pp_angleDistance  / pp_angleDistanceSigned\r\n        - pp_angleClamp\r\n        - pp_isInsideAngleRange\r\n*/\r\n\r\nimport { EasingFunction, MathUtils } from \"../../../cauldron/js/utils/math_utils\";\r\nimport { PluginUtils } from \"../../utils/plugin_utils\";\r\n\r\nexport function initMathExtension() {\r\n    initMathExtensionStatic();\r\n}\r\n\r\nexport function initMathExtensionStatic() {\r\n\r\n    let mathExtension = {};\r\n\r\n    Object.defineProperty(mathExtension, \"PP_EPSILON\", {\r\n        get() {\r\n            return MathUtils.EPSILON;\r\n        },\r\n        set(value) {\r\n            MathUtils.EPSILON = value;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(mathExtension, \"PP_EPSILON_SQUARED\", {\r\n        get() {\r\n            return MathUtils.EPSILON_SQUARED;\r\n        },\r\n        set(value) {\r\n            MathUtils.EPSILON = value;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(mathExtension, \"PP_EPSILON_DEGREES\", {\r\n        get() {\r\n            return MathUtils.EPSILON_DEGREES;\r\n        },\r\n        set(value) {\r\n            MathUtils.EPSILON = value;\r\n        }\r\n    });\r\n\r\n    mathExtension.pp_clamp = function pp_clamp(value, start, end) {\r\n        return MathUtils.clamp(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_sign = function pp_sign(value, zeroSign = 1) {\r\n        return MathUtils.sign(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_toDegrees = function pp_toDegrees(angle) {\r\n        return MathUtils.toDegrees(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_toRadians = function pp_toRadians(angle) {\r\n        return MathUtils.toRadians(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_roundDecimal = function pp_roundDecimal(number, decimalPlaces) {\r\n        return MathUtils.roundDecimal(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_mapToRange = function pp_mapToRange(value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n        return MathUtils.mapToRange(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_random = function pp_random(start = 0, end = 1) {\r\n        return MathUtils.random(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_randomInt = function pp_randomInt(start, end) {\r\n        return MathUtils.randomInt(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_randomBool = function pp_randomBool() {\r\n        return MathUtils.randomBool(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_randomSign = function pp_randomSign() {\r\n        return MathUtils.randomSign(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_randomPick = function pp_randomPick(...args) {\r\n        return MathUtils.randomPick(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_randomUUID = function pp_randomUUID() {\r\n        return MathUtils.randomUUID(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_lerp = function pp_lerp(from, to, interpolationFactor) {\r\n        return MathUtils.lerp(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_interpolate = function pp_interpolate(from, to, interpolationFactor, easingFunction = EasingFunction.linear) {\r\n        return MathUtils.interpolate(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistance = function pp_angleDistance(from, to) {\r\n        return MathUtils.angleDistance(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceDegrees = function pp_angleDistanceDegrees(from, to) {\r\n        return MathUtils.angleDistanceDegrees(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceRadians = function pp_angleDistanceRadians(from, to) {\r\n        return MathUtils.angleDistanceRadians(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSigned = function pp_angleDistanceSigned(from, to) {\r\n        return MathUtils.angleDistanceSigned(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSignedDegrees = function pp_angleDistanceSignedDegrees(from, to) {\r\n        return MathUtils.angleDistanceSignedDegrees(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleDistanceSignedRadians = function pp_angleDistanceSignedRadians(from, to) {\r\n        return MathUtils.angleDistanceSignedRadians(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleClamp = function pp_angleClamp(angle, usePositiveRange = false) {\r\n        return MathUtils.angleClamp(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleClampDegrees = function pp_angleClampDegrees(angle, usePositiveRange = false) {\r\n        return MathUtils.angleClampDegrees(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_angleClampRadians = function pp_angleClampRadians(angle, usePositiveRange = false) {\r\n        return MathUtils.angleClampRadians(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_isInsideAngleRange = function pp_isInsideAngleRange(angle, start, end, useShortestAngle = false) {\r\n        return MathUtils.isInsideAngleRange(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_isInsideAngleRangeDegrees = function pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle = false) {\r\n        return MathUtils.isInsideAngleRangeDegrees(...arguments);\r\n    };\r\n\r\n    mathExtension.pp_isInsideAngleRangeRadians = function pp_isInsideAngleRangeRadians(angle, start, end, useShortestAngle = false) {\r\n        return MathUtils.isInsideAngleRangeRadians(...arguments);\r\n    };\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(mathExtension, Math, false, true, true);\r\n}", "import { PluginUtils } from \"../../utils/plugin_utils\";\r\n\r\nexport function initNumberExtension(engine) {\r\n    initNumberExtensionPrototype();\r\n}\r\n\r\nexport function initNumberExtensionPrototype() {\r\n\r\n    let numberExtension = {};\r\n\r\n    // Mostly added to make it easier to use plain numbers in combo with NumberOverFactor\r\n    numberExtension.get = function get() {\r\n        return this.valueOf();\r\n    };\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(numberExtension, Number.prototype, false, true, true);\r\n}", "import { initArrayExtension } from \"./array_extension\";\r\nimport { initMathExtension } from \"./math_extension\";\r\nimport { initNumberExtension } from \"./number_extension\";\r\n\r\nexport function initJSExtensions() {\r\n    initMathExtension();\r\n    initArrayExtension();\r\n    initNumberExtension();\r\n}", "import { initJSExtensions } from \"./extensions/init_js_extentions\";\r\n\r\nexport function initJSPlugins(engine) {\r\n    initJSExtensions(engine);\r\n}", "/*\r\n    How to use\r\n\r\n    By default the functions work on World space, rotations are in Degrees and transforms are Matrix (and not Quat 2) \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n\r\n    You can add a suffix like World/Local/Object at the end of some functions to specify the space, example:\r\n        - pp_getPositionLocal to get the position in local space (parent space)\r\n        - pp_translateObject to translate in object space\r\n\r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - pp_getRotationDegrees\r\n        - pp_setRotationLocalMatrix\r\n        - pp_rotateWorldQuat\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - pp_getTransformQuat\r\n        - pp_setTransformWorldMatrix\r\n        \r\n    Some functions let you specify if u want them to work on the Hierarchy/Descendants/Children/Self where:\r\n        - Self: the current object only\r\n        - Children: direct children of the object\r\n        - Descendants: all the children of the object, including child of child and so on \r\n        - Hierarchy: Descendants plus the current object\r\n    Examples:\r\n        - pp_getComponent\r\n        - pp_getComponentHierarchy\r\n        - pp_getComponentsAmountMapDescendants\r\n        - pp_setActiveChildren\r\n        - pp_setActiveSelf\r\n    By default the functions work on the Hierarchy\r\n    On some of the functions where u can specify Hierarchy/Descendants u can also specify \r\n    if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getComponentHierarchyBreadth\r\n        - pp_setActiveDescendantsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let position = this.object.pp_getPosition()\r\n        - this.object.pp_getPosition(position)\r\n        - the out parameter is always the last one\r\n\r\n    If a method require an engine parameter, u can always avoid specifying it and it will by default use the current main engine\r\n    If a method require a scene parameter, u can always avoid specifying it and it will by default use the scene from the current main engine\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like World or Radians) are omitted \r\n\r\n        - pp_getPosition    / pp_setPosition    / pp_resetPosition\r\n        - pp_getRotation    / pp_setRotation    / pp_resetRotation\r\n        - pp_getScale       / pp_setScale       (u can specify a single number instead of a vector to uniform scale easily) / pp_resetScale \r\n        - pp_getTransform   / pp_setTransform   / pp_resetTransform\r\n\r\n        - pp_getAxes        / pp_setAxes\r\n        - pp_getLeft        / pp_getRight       / pp_setLeft        / pp_setRight\r\n        - pp_getUp          / pp_getDown        / pp_setUp          / pp_setDown\r\n        - pp_getForward     / pp_getBackward    / pp_setForward     / pp_setBackward\r\n\r\n        - pp_translate      / pp_translateAxis\r\n        - pp_rotate         / pp_rotateAxis     / pp_rotateAround    / pp_rotateAroundAxis\r\n        - pp_scaleObject    (for now scale only have this variant) (u can specify a single number instead of a vector to uniform scale easily)\r\n\r\n        - pp_lookAt         / pp_lookTo (u can avoid to specify up and the function will pickup the object up by default)\r\n\r\n        - pp_getParent      / pp_setParent (let u specify if u want to keep the transform or not)\r\n\r\n        - pp_convertPositionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertDirectionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertTransformObjectToWorld (you can use all the combinations between Object/Local/World) (u also have Quat and Matrix version)\r\n\r\n        - pp_hasUniformScale\r\n\r\n        - pp_addComponent\r\n        - pp_getComponent   / pp_getComponentHierarchy  / pp_getComponentDescendants  / pp_getComponentChildren / pp_getComponentSelf\r\n        - pp_getComponents  / pp_getComponentsHierarchy / pp_getComponentsDescendants / pp_getComponentsChildren / pp_getComponentsSelf\r\n\r\n        - pp_setActive  / pp_setActiveHierarchy / pp_setActiveDescendants / pp_setActiveChildren / pp_setActiveSelf\r\n\r\n        - pp_clone      / pp_isCloneable\r\n        \r\n        - pp_toString   / pp_toStringCompact / pp_toStringExtended\r\n        \r\n        - pp_getObjectByName  / pp_getObjectByNameHierarchy / pp_getObjectByNameDescendants / pp_getObjectByNameChildren\r\n        - pp_getObjectsByName  / pp_getObjectsByNameHierarchy / pp_getObjectsByNameDescendants / pp_getObjectsByNameChildren\r\n        \r\n        - pp_getObjectByID  / pp_getObjectByIDHierarchy / pp_getObjectByIDDescendants / pp_getObjectByIDChildren\r\n\r\n        - pp_getHierarchy / pp_getHierarchyBreadth / pp_getHierarchyDepth \r\n        - pp_getDescendants / pp_getDescendantsBreadth / pp_getDescendantsDepth \r\n        - pp_getChildren\r\n        - pp_getSelf\r\n\r\n        - pp_addObject\r\n        - pp_getName    / pp_setName\r\n        - pp_getEngine\r\n        - pp_getID\r\n        - pp_reserveObjects / pp_reserveObjectsHierarchy / pp_reserveObjectsDescendants / pp_reserveObjectsChildren / pp_reserveObjectsSelf\r\n        - pp_getComponentsAmountMap / pp_getComponentsAmountMapHierarchy / pp_getComponentsAmountMapDescendants / pp_getComponentsAmountMapChildren / pp_getComponentsAmountMapSelf\r\n        - pp_markDirty\r\n        - pp_isTransformChanged\r\n        - pp_equals\r\n        - pp_destroy\r\n*/\r\n\r\nimport { Object3D } from \"@wonderlandengine/api\";\r\nimport { Mat3Utils } from \"../../../cauldron/js/utils/mat3_utils\";\r\nimport { Mat4Utils } from \"../../../cauldron/js/utils/mat4_utils\";\r\nimport { Quat2Utils } from \"../../../cauldron/js/utils/quat2_utils\";\r\nimport { QuatUtils } from \"../../../cauldron/js/utils/quat_utils\";\r\nimport { Vec3Utils } from \"../../../cauldron/js/utils/vec3_utils\";\r\nimport { CloneParams, ObjectUtils } from \"../../../cauldron/wl/utils/object_utils\";\r\nimport { PluginUtils } from \"../../utils/plugin_utils\";\r\n\r\nexport function initObjectExtension() {\r\n    initObjectExtensionProtoype();\r\n}\r\n\r\nexport function initObjectExtensionProtoype() {\r\n\r\n    let objectExtension = {};\r\n\r\n    // GETTER\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_getPosition = function pp_getPosition(position) {\r\n        return ObjectUtils.getPosition(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getPositionWorld = function pp_getPositionWorld(position = Vec3Utils.create()) {\r\n        return ObjectUtils.getPositionWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getPositionLocal = function pp_getPositionLocal(position = Vec3Utils.create()) {\r\n        return ObjectUtils.getPositionLocal(this, ...arguments);\r\n    };\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_getRotation = function pp_getRotation(rotation) {\r\n        return ObjectUtils.getRotation(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationDegrees = function pp_getRotationDegrees(rotation) {\r\n        return ObjectUtils.getRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationRadians = function pp_getRotationRadians(rotation) {\r\n        return ObjectUtils.getRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationMatrix = function pp_getRotationMatrix(rotation) {\r\n        return ObjectUtils.getRotationMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationQuat = function pp_getRotationQuat(rotation) {\r\n        return ObjectUtils.getRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotation World\r\n\r\n    objectExtension.pp_getRotationWorld = function pp_getRotationWorld(rotation) {\r\n        return ObjectUtils.getRotationWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldDegrees = function pp_getRotationWorldDegrees(rotation) {\r\n        return ObjectUtils.getRotationWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldRadians = function pp_getRotationWorldRadians(rotation = Vec3Utils.create()) {\r\n        return ObjectUtils.getRotationWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldMatrix = function pp_getRotationWorldMatrix(rotation = Mat3Utils.create()) {\r\n        return ObjectUtils.getRotationWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationWorldQuat = function pp_getRotationWorldQuat(rotation = QuatUtils.create()) {\r\n        return ObjectUtils.getRotationWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotation Local\r\n\r\n    objectExtension.pp_getRotationLocal = function pp_getRotationLocal(rotation) {\r\n        return ObjectUtils.getRotationLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalDegrees = function pp_getRotationLocalDegrees(rotation) {\r\n        return ObjectUtils.getRotationLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalRadians = function pp_getRotationLocalRadians(rotation = Vec3Utils.create()) {\r\n        return ObjectUtils.getRotationLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalMatrix = function pp_getRotationLocalMatrix(rotation = Mat3Utils.create()) {\r\n        return ObjectUtils.getRotationLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRotationLocalQuat = function pp_getRotationLocalQuat(rotation = QuatUtils.create()) {\r\n        return ObjectUtils.getRotationLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_getScale = function pp_getScale(scale) {\r\n        return ObjectUtils.getScale(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getScaleWorld = function pp_getScaleWorld(scale = Vec3Utils.create()) {\r\n        return ObjectUtils.getScaleWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getScaleLocal = function pp_getScaleLocal(scale = Vec3Utils.create()) {\r\n        return ObjectUtils.getScaleLocal(this, ...arguments);\r\n    };\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_getTransform = function pp_getTransform(transform) {\r\n        return ObjectUtils.getTransform(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformMatrix = function pp_getTransformMatrix(transform) {\r\n        return ObjectUtils.getTransformMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformQuat = function pp_getTransformQuat(transform) {\r\n        return ObjectUtils.getTransformQuat(this, ...arguments);\r\n    };\r\n\r\n    // Transform World\r\n\r\n    objectExtension.pp_getTransformWorld = function pp_getTransformWorld(transform) {\r\n        return ObjectUtils.getTransformWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformWorldMatrix = function pp_getTransformWorldMatrix(transform = Mat4Utils.create()) {\r\n        return ObjectUtils.getTransformWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformWorldQuat = function pp_getTransformWorldQuat(transform = Quat2Utils.create()) {\r\n        return ObjectUtils.getTransformWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Transform Local\r\n\r\n    objectExtension.pp_getTransformLocal = function pp_getTransformLocal(transform) {\r\n        return ObjectUtils.getTransformLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformLocalMatrix = function pp_getTransformLocalMatrix(transform = Mat4Utils.create()) {\r\n        return ObjectUtils.getTransformLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getTransformLocalQuat = function pp_getTransformLocalQuat(transform = Quat2Utils.create()) {\r\n        return ObjectUtils.getTransformLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Axes\r\n\r\n    objectExtension.pp_getAxes = function pp_getAxes(axes) {\r\n        return ObjectUtils.getAxes(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getAxesWorld = function pp_getAxesWorld(axes = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n        return ObjectUtils.getAxesWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getAxesLocal = function pp_getAxesLocal(axes = [Vec3Utils.create(), Vec3Utils.create(), Vec3Utils.create()]) {\r\n        return ObjectUtils.getAxesLocal(this, ...arguments);\r\n    };\r\n\r\n    // Forward\r\n\r\n    objectExtension.pp_getForward = function pp_getForward(forward) {\r\n        return ObjectUtils.getForward(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getForwardWorld = function pp_getForwardWorld(forward = Vec3Utils.create()) {\r\n        return ObjectUtils.getForwardWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getForwardLocal = function pp_getForwardLocal(forward = Vec3Utils.create()) {\r\n        return ObjectUtils.getForwardLocal(this, ...arguments);\r\n    };\r\n\r\n    // Backward\r\n\r\n    objectExtension.pp_getBackward = function pp_getBackward(backward) {\r\n        return ObjectUtils.getBackward(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getBackwardWorld = function pp_getBackwardWorld(backward = Vec3Utils.create()) {\r\n        return ObjectUtils.getBackwardWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getBackwardLocal = function pp_getBackwardLocal(backward = Vec3Utils.create()) {\r\n        return ObjectUtils.getBackwardLocal(this, ...arguments);\r\n    };\r\n\r\n    // Up\r\n\r\n    objectExtension.pp_getUp = function pp_getUp(up) {\r\n        return ObjectUtils.getUp(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getUpWorld = function pp_getUpWorld(up = Vec3Utils.create()) {\r\n        return ObjectUtils.getUpWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getUpLocal = function pp_getUpLocal(up = Vec3Utils.create()) {\r\n        return ObjectUtils.getUpLocal(this, ...arguments);\r\n    };\r\n\r\n    // Down\r\n\r\n    objectExtension.pp_getDown = function pp_getDown(down) {\r\n        return ObjectUtils.getDown(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getDownWorld = function pp_getDownWorld(down = Vec3Utils.create()) {\r\n        return ObjectUtils.getDownWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getDownLocal = function pp_getDownLocal(down = Vec3Utils.create()) {\r\n        return ObjectUtils.getDownLocal(this, ...arguments);\r\n    };\r\n\r\n    // Left\r\n\r\n    objectExtension.pp_getLeft = function pp_getLeft(left) {\r\n        return ObjectUtils.getLeft(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getLeftWorld = function pp_getLeftWorld(left = Vec3Utils.create()) {\r\n        return ObjectUtils.getLeftWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getLeftLocal = function pp_getLeftLocal(left = Vec3Utils.create()) {\r\n        return ObjectUtils.getLeftLocal(this, ...arguments);\r\n    };\r\n\r\n    // Right\r\n\r\n    objectExtension.pp_getRight = function pp_getRight(right) {\r\n        return ObjectUtils.getRight(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRightWorld = function pp_getRightWorld(right = Vec3Utils.create()) {\r\n        return ObjectUtils.getRightWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getRightLocal = function pp_getRightLocal(right = Vec3Utils.create()) {\r\n        return ObjectUtils.getRightLocal(this, ...arguments);\r\n    };\r\n\r\n    // SETTER\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_setPosition = function pp_setPosition(position) {\r\n        return ObjectUtils.setPosition(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setPositionWorld = function pp_setPositionWorld(position) {\r\n        return ObjectUtils.setPositionWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setPositionLocal = function pp_setPositionLocal(position) {\r\n        return ObjectUtils.setPositionLocal(this, ...arguments);\r\n    };\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_setRotation = function pp_setRotation(rotation) {\r\n        return ObjectUtils.setRotation(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationDegrees = function pp_setRotationDegrees(rotation) {\r\n        return ObjectUtils.setRotationDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationRadians = function pp_setRotationRadians(rotation) {\r\n        return ObjectUtils.setRotationRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationMatrix = function pp_setRotationMatrix(rotation) {\r\n        return ObjectUtils.setRotationMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationQuat = function pp_setRotationQuat(rotation) {\r\n        return ObjectUtils.setRotationQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotation World\r\n\r\n    objectExtension.pp_setRotationWorld = function pp_setRotationWorld(rotation) {\r\n        return ObjectUtils.setRotationWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationWorldDegrees = function pp_setRotationWorldDegrees(rotation) {\r\n        return ObjectUtils.setRotationWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationWorldRadians = function pp_setRotationWorldRadians(rotation) {\r\n        return ObjectUtils.setRotationWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationWorldMatrix = function pp_setRotationWorldMatrix(rotation) {\r\n        return ObjectUtils.setRotationWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationWorldQuat = function pp_setRotationWorldQuat(rotation) {\r\n        return ObjectUtils.setRotationWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotation Local\r\n\r\n    objectExtension.pp_setRotationLocal = function pp_setRotationLocal(rotation) {\r\n        return ObjectUtils.setRotationLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationLocalDegrees = function pp_setRotationLocalDegrees(rotation) {\r\n        return ObjectUtils.setRotationLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationLocalRadians = function pp_setRotationLocalRadians(rotation) {\r\n        return ObjectUtils.setRotationLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationLocalMatrix = function pp_setRotationLocalMatrix(rotation) {\r\n        return ObjectUtils.setRotationLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRotationLocalQuat = function pp_setRotationLocalQuat(rotation) {\r\n        return ObjectUtils.setRotationLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_setScale = function pp_setScale(scale) {\r\n        return ObjectUtils.setScale(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setScaleWorld = function pp_setScaleWorld(scale) {\r\n        return ObjectUtils.setScaleWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setScaleLocal = function pp_setScaleLocal(scale) {\r\n        return ObjectUtils.setScaleLocal(this, ...arguments);\r\n    };\r\n\r\n    // Axes    \r\n\r\n    objectExtension.pp_setAxes = function pp_setAxes(left, up, forward) {\r\n        return ObjectUtils.setAxes(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setAxesWorld = function pp_setAxesWorld(left, up, forward) {\r\n        return ObjectUtils.setAxesWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setAxesLocal = function pp_setAxesLocal(left, up, forward) {\r\n        return ObjectUtils.setAxesLocal(this, ...arguments);\r\n    };\r\n\r\n    // Forward\r\n\r\n    objectExtension.pp_setForward = function pp_setForward(forward, up, left) {\r\n        return ObjectUtils.setForward(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setForwardWorld = function pp_setForwardWorld(forward, up = null, left = null) {\r\n        return ObjectUtils.setForwardWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setForwardLocal = function pp_setForwardLocal(forward, up = null, left = null) {\r\n        return ObjectUtils.setForwardLocal(this, ...arguments);\r\n    };\r\n\r\n    // Backward\r\n\r\n    objectExtension.pp_setBackward = function pp_setBackward(backward, up, left) {\r\n        return ObjectUtils.setBackward(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setBackwardWorld = function pp_setBackwardWorld(backward, up = null, left = null) {\r\n        return ObjectUtils.setBackwardWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setBackwardLocal = function pp_setBackwardLocal(backward, up = null, left = null) {\r\n        return ObjectUtils.setBackwardLocal(this, ...arguments);\r\n    };\r\n\r\n    // Up\r\n\r\n    objectExtension.pp_setUp = function pp_setUp(up, forward, left) {\r\n        return ObjectUtils.setUp(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setUpWorld = function pp_setUpWorld(up, forward = null, left = null) {\r\n        return ObjectUtils.setUpWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setUpLocal = function pp_setUpLocal(up, forward = null, left = null) {\r\n        return ObjectUtils.setUpLocal(this, ...arguments);\r\n    };\r\n\r\n    // Down\r\n\r\n    objectExtension.pp_setDown = function pp_setDown(down, forward, left) {\r\n        return ObjectUtils.setDown(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setDownWorld = function pp_setDownWorld(down, forward = null, left = null) {\r\n        return ObjectUtils.setDownWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setDownLocal = function pp_setDownLocal(down, forward = null, left = null) {\r\n        return ObjectUtils.setDownLocal(this, ...arguments);\r\n    };\r\n\r\n    // Left\r\n\r\n    objectExtension.pp_setLeft = function pp_setLeft(left, up, forward) {\r\n        return ObjectUtils.setLeft(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setLeftWorld = function pp_setLeftWorld(left, up = null, forward = null) {\r\n        return ObjectUtils.setLeftWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setLeftLocal = function pp_setLeftLocal(left, up = null, forward = null) {\r\n        return ObjectUtils.setLeftLocal(this, ...arguments);\r\n    };\r\n\r\n    // Right\r\n\r\n    objectExtension.pp_setRight = function pp_setRight(right, up, forward) {\r\n        return ObjectUtils.setRight(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRightWorld = function pp_setRightWorld(right, up = null, forward = null) {\r\n        return ObjectUtils.setRightWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setRightLocal = function pp_setRightLocal(right, up = null, forward = null) {\r\n        return ObjectUtils.setRightLocal(this, ...arguments);\r\n    };\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_setTransform = function pp_setTransform(transform) {\r\n        return ObjectUtils.setTransform(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformMatrix = function pp_setTransformMatrix(transform) {\r\n        return ObjectUtils.setTransformMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformQuat = function pp_setTransformQuat(transform) {\r\n        return ObjectUtils.setTransformQuat(this, ...arguments);\r\n    };\r\n\r\n    // Transform World\r\n\r\n    objectExtension.pp_setTransformWorld = function pp_setTransformWorld(transform) {\r\n        return ObjectUtils.setTransformWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformWorldMatrix = function pp_setTransformWorldMatrix(transform) {\r\n        return ObjectUtils.setTransformWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformWorldQuat = function pp_setTransformWorldQuat(transform) {\r\n        return ObjectUtils.setTransformWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Transform Local\r\n\r\n    objectExtension.pp_setTransformLocal = function pp_setTransformLocal(transform) {\r\n        return ObjectUtils.setTransformLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformLocalMatrix = function pp_setTransformLocalMatrix(transform) {\r\n        return ObjectUtils.setTransformLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setTransformLocalQuat = function pp_setTransformLocalQuat(transform) {\r\n        return ObjectUtils.setTransformLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // RESET\r\n\r\n    // Position\r\n\r\n    objectExtension.pp_resetPosition = function pp_resetPosition() {\r\n        return ObjectUtils.resetPosition(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetPositionWorld = function pp_resetPositionWorld() {\r\n        return ObjectUtils.resetPositionWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetPositionLocal = function pp_resetPositionLocal() {\r\n        return ObjectUtils.resetPositionLocal(this, ...arguments);\r\n    };\r\n\r\n    // Rotation\r\n\r\n    objectExtension.pp_resetRotation = function pp_resetRotation() {\r\n        return ObjectUtils.resetRotation(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetRotationWorld = function pp_resetRotationWorld() {\r\n        return ObjectUtils.resetRotationWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetRotationLocal = function pp_resetRotationLocal() {\r\n        return ObjectUtils.resetRotationLocal(this, ...arguments);\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_resetScale = function pp_resetScale() {\r\n        return ObjectUtils.resetScale(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetScaleWorld = function pp_resetScaleWorld() {\r\n        return ObjectUtils.resetScaleWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetScaleLocal = function pp_resetScaleLocal() {\r\n        return ObjectUtils.resetScaleLocal(this, ...arguments);\r\n    };\r\n\r\n    // Transform\r\n\r\n    objectExtension.pp_resetTransform = function pp_resetTransform() {\r\n        return ObjectUtils.resetTransform(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetTransformWorld = function pp_resetTransformWorld() {\r\n        return ObjectUtils.resetTransformWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_resetTransformLocal = function pp_resetTransformLocal() {\r\n        return ObjectUtils.resetTransformLocal(this, ...arguments);\r\n    };\r\n\r\n    // TRANSFORMATIONS\r\n\r\n    // Translate\r\n\r\n    objectExtension.pp_translate = function pp_translate(translation) {\r\n        return ObjectUtils.translate(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateWorld = function pp_translateWorld(translation) {\r\n        return ObjectUtils.translateWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateLocal = function pp_translateLocal(translation) {\r\n        return ObjectUtils.translateLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateObject = function pp_translateObject(translation) {\r\n        return ObjectUtils.translateObject(this, ...arguments);\r\n    };\r\n\r\n    // Translate Axis\r\n\r\n    objectExtension.pp_translateAxis = function pp_translateAxis(amount, direction) {\r\n        return ObjectUtils.translateAxis(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateAxisWorld = function pp_translateAxisWorld(amount, direction) {\r\n        return ObjectUtils.translateAxisWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateAxisLocal = function pp_translateAxisLocal(amount, direction) {\r\n        return ObjectUtils.translateAxisLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_translateAxisObject = function pp_translateAxisObject(amount, direction) {\r\n        return ObjectUtils.translateAxisObject(this, ...arguments);\r\n    };\r\n\r\n    // Rotate\r\n\r\n    objectExtension.pp_rotate = function pp_rotate(rotation) {\r\n        return ObjectUtils.rotate(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateDegrees = function pp_rotateDegrees(rotation) {\r\n        return ObjectUtils.rotateDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateRadians = function pp_rotateRadians(rotation) {\r\n        return ObjectUtils.rotateRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateMatrix = function pp_rotateMatrix(rotation) {\r\n        return ObjectUtils.rotateMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateQuat = function pp_rotateQuat(rotation) {\r\n        return ObjectUtils.rotateQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate World\r\n\r\n    objectExtension.pp_rotateWorld = function pp_rotateWorld(rotation) {\r\n        return ObjectUtils.rotateWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateWorldDegrees = function pp_rotateWorldDegrees(rotation) {\r\n        return ObjectUtils.rotateWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateWorldRadians = function pp_rotateWorldRadians(rotation) {\r\n        return ObjectUtils.rotateWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateWorldMatrix = function pp_rotateWorldMatrix(rotation) {\r\n        return ObjectUtils.rotateWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateWorldQuat = function pp_rotateWorldQuat(rotation) {\r\n        return ObjectUtils.rotateWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Local\r\n\r\n    objectExtension.pp_rotateLocal = function pp_rotateLocal(rotation) {\r\n        return ObjectUtils.rotateLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateLocalDegrees = function pp_rotateLocalDegrees(rotation) {\r\n        return ObjectUtils.rotateLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateLocalRadians = function pp_rotateLocalRadians(rotation) {\r\n        return ObjectUtils.rotateLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateLocalMatrix = function pp_rotateLocalMatrix(rotation) {\r\n        return ObjectUtils.rotateLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateLocalQuat = function pp_rotateLocalQuat(rotation) {\r\n        return ObjectUtils.rotateLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Object\r\n\r\n    objectExtension.pp_rotateObject = function pp_rotateObject(rotation) {\r\n        return ObjectUtils.rotateObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateObjectDegrees = function pp_rotateObjectDegrees(rotation) {\r\n        return ObjectUtils.rotateObjectDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateObjectRadians = function pp_rotateObjectRadians(rotation) {\r\n        return ObjectUtils.rotateObjectRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateObjectMatrix = function pp_rotateObjectMatrix(rotation) {\r\n        return ObjectUtils.rotateObjectMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateObjectQuat = function pp_rotateObjectQuat(rotation) {\r\n        return ObjectUtils.rotateObjectQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Axis\r\n\r\n    objectExtension.pp_rotateAxis = function pp_rotateAxis(angle, axis) {\r\n        return ObjectUtils.rotateAxis(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisDegrees = function pp_rotateAxisDegrees(angle, axis) {\r\n        return ObjectUtils.rotateAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisRadians = function pp_rotateAxisRadians(angle, axis) {\r\n        return ObjectUtils.rotateAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Axis World\r\n\r\n    objectExtension.pp_rotateAxisWorld = function pp_rotateAxisWorld(angle, axis) {\r\n        return ObjectUtils.rotateAxisWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisWorldDegrees = function pp_rotateAxisWorldDegrees(angle, axis) {\r\n        return ObjectUtils.rotateAxisWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisWorldRadians = function pp_rotateAxisWorldRadians(angle, axis) {\r\n        return ObjectUtils.rotateAxisWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Axis Local\r\n\r\n    objectExtension.pp_rotateAxisLocal = function pp_rotateAxisLocal(angle, axis) {\r\n        return ObjectUtils.rotateAxisLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisLocalDegrees = function pp_rotateAxisLocalDegrees(angle, axis) {\r\n        return ObjectUtils.rotateAxisLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisLocalRadians = function pp_rotateAxisLocalRadians(angle, axis) {\r\n        return ObjectUtils.rotateAxisLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Axis Object\r\n\r\n    objectExtension.pp_rotateAxisObject = function pp_rotateAxisObject(angle, axis) {\r\n        return ObjectUtils.rotateAxisObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisObjectDegrees = function pp_rotateAxisObjectDegrees(angle, axis) {\r\n        return ObjectUtils.rotateAxisObjectDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAxisObjectRadians = function pp_rotateAxisObjectRadians(angle, axis) {\r\n        return ObjectUtils.rotateAxisObjectRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around\r\n\r\n    objectExtension.pp_rotateAround = function pp_rotateAround(rotation, origin) {\r\n        return ObjectUtils.rotateAround(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundDegrees = function pp_rotateAroundDegrees(rotation, origin) {\r\n        return ObjectUtils.rotateAroundDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundRadians = function pp_rotateAroundRadians(rotation, origin) {\r\n        return ObjectUtils.rotateAroundRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundMatrix = function pp_rotateAroundMatrix(rotation, origin) {\r\n        return ObjectUtils.rotateAroundMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundQuat = function pp_rotateAroundQuat(rotation, origin) {\r\n        return ObjectUtils.rotateAroundQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around World\r\n\r\n    objectExtension.pp_rotateAroundWorld = function pp_rotateAroundWorld(rotation, origin) {\r\n        return ObjectUtils.rotateAroundWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundWorldDegrees = function pp_rotateAroundWorldDegrees(rotation, origin) {\r\n        return ObjectUtils.rotateAroundWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundWorldRadians = function pp_rotateAroundWorldRadians(rotation, origin) {\r\n        return ObjectUtils.rotateAroundWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundWorldMatrix = function pp_rotateAroundWorldMatrix(rotation, origin) {\r\n        return ObjectUtils.rotateAroundWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundWorldQuat = function pp_rotateAroundWorldQuat(rotation, origin) {\r\n        return ObjectUtils.rotateAroundWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Local\r\n\r\n    objectExtension.pp_rotateAroundLocal = function pp_rotateAroundLocal(rotation, origin) {\r\n        return ObjectUtils.rotateAroundLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundLocalDegrees = function pp_rotateAroundLocalDegrees(rotation, origin) {\r\n        return ObjectUtils.rotateAroundLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundLocalRadians = function pp_rotateAroundLocalRadians(rotation, origin) {\r\n        return ObjectUtils.rotateAroundLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundLocalMatrix = function pp_rotateAroundLocalMatrix(rotation, origin) {\r\n        return ObjectUtils.rotateAroundLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundLocalQuat = function pp_rotateAroundLocalQuat(rotation, origin) {\r\n        return ObjectUtils.rotateAroundLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Object\r\n\r\n    objectExtension.pp_rotateAroundObject = function pp_rotateAroundObject(rotation, origin) {\r\n        return ObjectUtils.rotateAroundObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundObjectDegrees = function pp_rotateAroundObjectDegrees(rotation, origin) {\r\n        return ObjectUtils.rotateAroundObjectDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundObjectRadians = function pp_rotateAroundObjectRadians(rotation, origin) {\r\n        return ObjectUtils.rotateAroundObjectRadians(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundObjectMatrix = function pp_rotateAroundObjectMatrix(rotation, origin) {\r\n        return ObjectUtils.rotateAroundObjectMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundObjectQuat = function pp_rotateAroundObjectQuat(rotation, origin) {\r\n        return ObjectUtils.rotateAroundObjectQuat(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Axis\r\n\r\n    objectExtension.pp_rotateAroundAxis = function pp_rotateAroundAxis(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxis(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisDegrees = function pp_rotateAroundAxisDegrees(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisRadians = function pp_rotateAroundAxisRadians(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Axis World\r\n\r\n    objectExtension.pp_rotateAroundAxisWorld = function pp_rotateAroundAxisWorld(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisWorldDegrees = function pp_rotateAroundAxisWorldDegrees(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisWorldDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisWorldRadians = function pp_rotateAroundAxisWorldRadians(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisWorldRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Axis Local\r\n\r\n    objectExtension.pp_rotateAroundAxisLocal = function pp_rotateAroundAxisLocal(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisLocalDegrees = function pp_rotateAroundAxisLocalDegrees(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisLocalDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisLocalRadians = function pp_rotateAroundAxisLocalRadians(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisLocalRadians(this, ...arguments);\r\n    };\r\n\r\n    // Rotate Around Axis Object\r\n\r\n    objectExtension.pp_rotateAroundAxisObject = function pp_rotateAroundAxisObject(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisObjectDegrees = function pp_rotateAroundAxisObjectDegrees(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisObjectDegrees(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_rotateAroundAxisObjectRadians = function pp_rotateAroundAxisObjectRadians(angle, axis, origin) {\r\n        return ObjectUtils.rotateAroundAxisObjectRadians(this, ...arguments);\r\n    };\r\n\r\n    // Scale\r\n\r\n    objectExtension.pp_scaleObject = function pp_scaleObject(scale) {\r\n        return ObjectUtils.scaleObject(this, ...arguments);\r\n    };\r\n\r\n    // Look At\r\n\r\n    objectExtension.pp_lookAt = function pp_lookAt(position, up) {\r\n        return ObjectUtils.lookAt(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_lookAtWorld = function pp_lookAtWorld(position, up) {\r\n        return ObjectUtils.lookAtWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_lookAtLocal = function pp_lookAtLocal(position, up) {\r\n        return ObjectUtils.lookAtLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_lookTo = function pp_lookTo(direction, up) {\r\n        return ObjectUtils.lookTo(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_lookToWorld = function pp_lookToWorld(direction, up = this.pp_getUpWorld(internalUp)) {\r\n        return ObjectUtils.lookToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_lookToLocal = function pp_lookToLocal(direction, up = this.pp_getUpLocal(internalUp)) {\r\n        return ObjectUtils.lookToLocal(this, ...arguments);\r\n    };\r\n\r\n    // EXTRA\r\n\r\n    // Parent\r\n\r\n    objectExtension.pp_setParent = function pp_setParent(newParent, keepTransformWorld = true) {\r\n        return ObjectUtils.setParent(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getParent = function pp_getParent() {\r\n        return ObjectUtils.getParent(this, ...arguments);\r\n    };\r\n\r\n    // Convert Vector Object World\r\n\r\n    objectExtension.pp_convertPositionObjectToWorld = function pp_convertPositionObjectToWorld(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionObjectToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionObjectToWorld = function pp_convertDirectionObjectToWorld(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionObjectToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertPositionWorldToObject = function pp_convertPositionWorldToObject(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionWorldToObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionWorldToObject = function pp_convertDirectionWorldToObject(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionWorldToObject(this, ...arguments);\r\n    };\r\n\r\n    // Convert Vector Local World\r\n\r\n    objectExtension.pp_convertPositionLocalToWorld = function pp_convertPositionLocalToWorld(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionLocalToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionLocalToWorld = function pp_convertDirectionLocalToWorld(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionLocalToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertPositionWorldToLocal = function pp_convertPositionWorldToLocal(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionWorldToLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionWorldToLocal = function pp_convertDirectionWorldToLocal(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionWorldToLocal(this, ...arguments);\r\n    };\r\n\r\n    // Convert Vector Local Object\r\n\r\n    objectExtension.pp_convertPositionObjectToLocal = function pp_convertPositionObjectToLocal(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionObjectToLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionObjectToLocal = function pp_convertDirectionObjectToLocal(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionObjectToLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertPositionLocalToObject = function pp_convertPositionLocalToObject(position, resultPosition = Vec3Utils.create()) {\r\n        return ObjectUtils.convertPositionLocalToObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertDirectionLocalToObject = function pp_convertDirectionLocalToObject(direction, resultDirection = Vec3Utils.create()) {\r\n        return ObjectUtils.convertDirectionLocalToObject(this, ...arguments);\r\n    };\r\n\r\n    // Convert Transform Object World\r\n\r\n    objectExtension.pp_convertTransformObjectToWorld = function pp_convertTransformObjectToWorld(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformObjectToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToWorldMatrix = function pp_convertTransformObjectToWorldMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformObjectToWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToWorldQuat = function pp_convertTransformObjectToWorldQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformObjectToWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToObject = function pp_convertTransformWorldToObject(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformWorldToObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToObjectMatrix = function pp_convertTransformWorldToObjectMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformWorldToObjectMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToObjectQuat = function pp_convertTransformWorldToObjectQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformWorldToObjectQuat(this, ...arguments);\r\n    };\r\n\r\n    // Convert Transform Local World\r\n\r\n    objectExtension.pp_convertTransformLocalToWorld = function pp_convertTransformLocalToWorld(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformLocalToWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToWorldMatrix = function pp_convertTransformLocalToWorldMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformLocalToWorldMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToWorldQuat = function pp_convertTransformLocalToWorldQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformLocalToWorldQuat(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocal = function pp_convertTransformWorldToLocal(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformWorldToLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocalMatrix = function pp_convertTransformWorldToLocalMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformWorldToLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformWorldToLocalQuat = function pp_convertTransformWorldToLocalQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformWorldToLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    // Convert Transform Object Local\r\n\r\n    objectExtension.pp_convertTransformObjectToLocal = function pp_convertTransformObjectToLocal(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformObjectToLocal(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToLocalMatrix = function pp_convertTransformObjectToLocalMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformObjectToLocalMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformObjectToLocalQuat = function pp_convertTransformObjectToLocalQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformObjectToLocalQuat(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObject = function pp_convertTransformLocalToObject(transform, resultTransform) {\r\n        return ObjectUtils.convertTransformLocalToObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObjectMatrix = function pp_convertTransformLocalToObjectMatrix(transform, resultTransform = Mat4Utils.create()) {\r\n        return ObjectUtils.convertTransformLocalToObjectMatrix(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_convertTransformLocalToObjectQuat = function pp_convertTransformLocalToObjectQuat(transform, resultTransform = Quat2Utils.create()) {\r\n        return ObjectUtils.convertTransformLocalToObjectQuat(this, ...arguments);\r\n    };\r\n\r\n    // Component\r\n\r\n    objectExtension.pp_addComponent = function pp_addComponent(typeOrClass, paramsOrActive, active = null) {\r\n        return ObjectUtils.addComponent(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponent = function pp_getComponent(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponent(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentSelf = function pp_getComponentSelf(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentSelf(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchy = function pp_getComponentHierarchy(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchyBreadth = function pp_getComponentHierarchyBreadth(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentHierarchyDepth = function pp_getComponentHierarchyDepth(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendants = function pp_getComponentDescendants(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendantsBreadth = function pp_getComponentDescendantsBreadth(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentDescendantsDepth = function pp_getComponentDescendantsDepth(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentChildren = function pp_getComponentChildren(typeOrClass, index = 0) {\r\n        return ObjectUtils.getComponentChildren(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponents = function pp_getComponents(typeOrClass) {\r\n        return ObjectUtils.getComponents(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsSelf = function pp_getComponentsSelf(typeOrClass) {\r\n        return ObjectUtils.getComponentsSelf(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchy = function pp_getComponentsHierarchy(typeOrClass) {\r\n        return ObjectUtils.getComponentsHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchyBreadth = function pp_getComponentsHierarchyBreadth(typeOrClass) {\r\n        return ObjectUtils.getComponentsHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsHierarchyDepth = function pp_getComponentsHierarchyDepth(typeOrClass) {\r\n        return ObjectUtils.getComponentsHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendants = function pp_getComponentsDescendants(typeOrClass) {\r\n        return ObjectUtils.getComponentsDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendantsBreadth = function pp_getComponentsDescendantsBreadth(typeOrClass) {\r\n        return ObjectUtils.getComponentsDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsDescendantsDepth = function pp_getComponentsDescendantsDepth(typeOrClass) {\r\n        return ObjectUtils.getComponentsDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsChildren = function pp_getComponentsChildren(typeOrClass) {\r\n        return ObjectUtils.getComponentsChildren(this, ...arguments);\r\n    };\r\n\r\n    // Active\r\n\r\n    objectExtension.pp_setActive = function pp_setActive(active) {\r\n        return ObjectUtils.setActive(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveSelf = function pp_setActiveSelf(active) {\r\n        return ObjectUtils.setActiveSelf(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchy = function pp_setActiveHierarchy(active) {\r\n        return ObjectUtils.setActiveHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchyBreadth = function pp_setActiveHierarchyBreadth(active) {\r\n        return ObjectUtils.setActiveHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveHierarchyDepth = function pp_setActiveHierarchyDepth(active) {\r\n        return ObjectUtils.setActiveHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendants = function pp_setActiveDescendants(active) {\r\n        return ObjectUtils.setActiveDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendantsBreadth = function pp_setActiveDescendantsBreadth(active) {\r\n        return ObjectUtils.setActiveDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveDescendantsDepth = function pp_setActiveDescendantsDepth(active) {\r\n        return ObjectUtils.setActiveDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setActiveChildren = function pp_setActiveChildren(active) {\r\n        return ObjectUtils.setActiveChildren(this, ...arguments);\r\n    };\r\n\r\n    // Uniform Scale\r\n\r\n    objectExtension.pp_hasUniformScale = function pp_hasUniformScale() {\r\n        return ObjectUtils.hasUniformScale(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_hasUniformScaleWorld = function pp_hasUniformScaleWorld() {\r\n        return ObjectUtils.hasUniformScaleWorld(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_hasUniformScaleLocal = function pp_hasUniformScaleLocal() {\r\n        return ObjectUtils.hasUniformScaleLocal(this, ...arguments);\r\n    };\r\n\r\n    // Clone\r\n\r\n    objectExtension.pp_clone = function pp_clone(cloneParams = new CloneParams()) {\r\n        return ObjectUtils.clone(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_isCloneable = function pp_isCloneable(cloneParams = new CloneParams()) {\r\n        return ObjectUtils.isCloneable(this, ...arguments);\r\n    };\r\n\r\n    // To String\r\n\r\n    objectExtension.pp_toString = function pp_toString() {\r\n        return ObjectUtils.toString(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_toStringExtended = function pp_toStringExtended() {\r\n        return ObjectUtils.toStringExtended(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_toStringCompact = function pp_toStringCompact() {\r\n        return ObjectUtils.toStringCompact(this, ...arguments);\r\n    };\r\n\r\n    // Get Object By Name\r\n\r\n    objectExtension.pp_getObjectByName = function pp_getObjectByName(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByName(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameHierarchy = function pp_getObjectByNameHierarchy(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameHierarchyBreadth = function pp_getObjectByNameHierarchyBreadth(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameHierarchyDepth = function pp_getObjectByNameHierarchyDepth(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameDescendants = function pp_getObjectByNameDescendants(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameDescendantsBreadth = function pp_getObjectByNameDescendantsBreadth(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameDescendantsDepth = function pp_getObjectByNameDescendantsDepth(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByNameChildren = function pp_getObjectByNameChildren(name, regex = false, index = 0) {\r\n        return ObjectUtils.getObjectByNameChildren(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByName = function pp_getObjectsByName(name, regex = false) {\r\n        return ObjectUtils.getObjectsByName(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchy = function pp_getObjectsByNameHierarchy(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchyBreadth = function pp_getObjectsByNameHierarchyBreadth(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameHierarchyDepth = function pp_getObjectsByNameHierarchyDepth(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameDescendants = function pp_getObjectsByNameDescendants(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameDescendantsBreadth = function pp_getObjectsByNameDescendantsBreadth(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameDescendantsDepth = function pp_getObjectsByNameDescendantsDepth(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectsByNameChildren = function pp_getObjectsByNameChildren(name, regex = false) {\r\n        return ObjectUtils.getObjectsByNameChildren(this, ...arguments);\r\n    };\r\n\r\n    // Get Object By ID\r\n\r\n    objectExtension.pp_getObjectByID = function pp_getObjectByID(id) {\r\n        return ObjectUtils.getObjectByID(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDHierarchy = function pp_getObjectByIDHierarchy(id) {\r\n        return ObjectUtils.getObjectByIDHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDHierarchyBreadth = function pp_getObjectByIDHierarchyBreadth(id) {\r\n        return ObjectUtils.getObjectByIDHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDHierarchyDepth = function pp_getObjectByIDHierarchyDepth(id) {\r\n        return ObjectUtils.getObjectByIDHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDDescendants = function pp_getObjectByIDDescendants(id) {\r\n        return ObjectUtils.getObjectByIDDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDDescendantsBreadth = function pp_getObjectByIDDescendantsBreadth(id) {\r\n        return ObjectUtils.getObjectByIDDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDDescendantsDepth = function pp_getObjectByIDDescendantsDepth(id) {\r\n        return ObjectUtils.getObjectByIDDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getObjectByIDChildren = function pp_getObjectByIDChildren(id) {\r\n        return ObjectUtils.getObjectByIDChildren(this, ...arguments);\r\n    };\r\n\r\n    // Get Hierarchy\r\n\r\n    objectExtension.pp_getHierarchyBreadth = function pp_getHierarchyBreadth() {\r\n        return ObjectUtils.getHierarchyBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getHierarchyDepth = function pp_getHierarchyDepth() {\r\n        return ObjectUtils.getHierarchyDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getDescendants = function pp_getDescendants() {\r\n        return ObjectUtils.getDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getDescendantsBreadth = function pp_getDescendantsBreadth() {\r\n        return ObjectUtils.getDescendantsBreadth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getDescendantsDepth = function pp_getDescendantsDepth() {\r\n        return ObjectUtils.getDescendantsDepth(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getChildren = function pp_getChildren() {\r\n        return ObjectUtils.getChildren(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getSelf = function pp_getSelf() {\r\n        return ObjectUtils.getSelf(this, ...arguments);\r\n    };\r\n\r\n    // Cauldron\r\n\r\n    objectExtension.pp_addObject = function pp_addObject() {\r\n        return ObjectUtils.addObject(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getName = function pp_getName() {\r\n        return ObjectUtils.getName(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_setName = function pp_setName(name) {\r\n        return ObjectUtils.setName(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getEngine = function pp_getEngine() {\r\n        return ObjectUtils.getEngine(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getID = function pp_getID() {\r\n        return ObjectUtils.getID(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_markDirty = function pp_markDirty() {\r\n        return ObjectUtils.markDirty(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_isTransformChanged = function pp_isTransformChanged() {\r\n        return ObjectUtils.isTransformChanged(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_equals = function pp_equals(otherObject) {\r\n        return ObjectUtils.equals(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_destroy = function pp_destroy() {\r\n        return ObjectUtils.destroy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjects = function pp_reserveObjects(count) {\r\n        return ObjectUtils.reserveObjects(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsSelf = function pp_reserveObjectsSelf(count) {\r\n        return ObjectUtils.reserveObjectsSelf(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsHierarchy = function pp_reserveObjectsHierarchy(count) {\r\n        return ObjectUtils.reserveObjectsHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsDescendants = function pp_reserveObjectsDescendants(count) {\r\n        return ObjectUtils.reserveObjectsDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_reserveObjectsChildren = function pp_reserveObjectsChildren(count) {\r\n        return ObjectUtils.reserveObjectsChildren(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return ObjectUtils.getComponentsAmountMap(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapSelf = function pp_getComponentsAmountMapSelf(amountMap = new Map()) {\r\n        return ObjectUtils.getComponentsAmountMapSelf(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapHierarchy = function pp_getComponentsAmountMapHierarchy(amountMap = new Map()) {\r\n        return ObjectUtils.getComponentsAmountMapHierarchy(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapDescendants = function pp_getComponentsAmountMapDescendants(amountMap = new Map()) {\r\n        return ObjectUtils.getComponentsAmountMapDescendants(this, ...arguments);\r\n    };\r\n\r\n    objectExtension.pp_getComponentsAmountMapChildren = function pp_getComponentsAmountMapChildren(amountMap = new Map()) {\r\n        return ObjectUtils.getComponentsAmountMapChildren(this, ...arguments);\r\n    };\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(objectExtension, Object3D.prototype, false, true, true);\r\n}", "/*\r\n    How to use\r\n\r\n    On some of the functions u can specify if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getObjectByNameBreadth\r\n        - pp_getComponentsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    List of functions:\r\n        - pp_getRoot\r\n        - pp_getObjects\r\n        \r\n        - pp_getComponent\r\n        - pp_getComponents\r\n        \r\n        - pp_getObjectByName\r\n        - pp_getObjectsByName\r\n        \r\n        - pp_getObjectByID\r\n        \r\n        - pp_toString / pp_toStringCompact / pp_toStringExtended\r\n\r\n        - pp_getComponentsAmountMap\r\n*/\r\n\r\nimport { Scene } from \"@wonderlandengine/api\";\r\nimport { SceneUtils } from \"../../../cauldron/wl/utils/scene_utils\";\r\nimport { PluginUtils } from \"../../utils/plugin_utils\";\r\n\r\nexport function initSceneExtension(engine) {\r\n    initSceneExtensionPrototype();\r\n}\r\n\r\nexport function initSceneExtensionPrototype() {\r\n\r\n    let sceneExtension = {};\r\n\r\n    sceneExtension.pp_getRoot = function pp_getRoot() {\r\n        return SceneUtils.getRoot(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_addObject = function pp_addObject() {\r\n        return SceneUtils.addObject(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjects = function pp_getObjects() {\r\n        return SceneUtils.getObjects(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsBreadth = function pp_getObjectsBreadth() {\r\n        return SceneUtils.getObjectsBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsDepth = function pp_getObjectsDepth() {\r\n        return SceneUtils.getObjectsDepth(this, ...arguments);\r\n    }\r\n\r\n    // Get Component    \r\n\r\n    sceneExtension.pp_getComponent = function pp_getComponent(typeOrClass, index = 0) {\r\n        return SceneUtils.getComponent(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentBreadth = function pp_getComponentBreadth(typeOrClass, index = 0) {\r\n        return SceneUtils.getComponentBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentDepth = function pp_getComponentDepth(typeOrClass, index = 0) {\r\n        return SceneUtils.getComponentDepth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getComponents = function pp_getComponents(typeOrClass) {\r\n        return SceneUtils.getComponents(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentsBreadth = function pp_getComponentsBreadth(typeOrClass) {\r\n        return SceneUtils.getComponentsBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getComponentsDepth = function pp_getComponentsDepth(typeOrClass) {\r\n        return SceneUtils.getComponentsDepth(this, ...arguments);\r\n    }\r\n\r\n    // Get Object By Name\r\n\r\n    sceneExtension.pp_getObjectByName = function pp_getObjectByName(name, index = 0) {\r\n        return SceneUtils.getObjectByName(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByNameBreadth = function pp_getObjectByNameBreadth(name, index = 0) {\r\n        return SceneUtils.getObjectByNameBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByNameDepth = function pp_getObjectByNameDepth(name, index = 0) {\r\n        return SceneUtils.getObjectByNameDepth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByName = function pp_getObjectsByName(name, index = 0) {\r\n        return SceneUtils.getObjectsByName(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByNameBreadth = function pp_getObjectsByNameBreadth(name, index = 0) {\r\n        return SceneUtils.getObjectsByNameBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectsByNameDepth = function pp_getObjectsByNameDepth(name, index = 0) {\r\n        return SceneUtils.getObjectsByNameDepth(this, ...arguments);\r\n    }\r\n\r\n    // Get Object By ID\r\n\r\n    sceneExtension.pp_getObjectByID = function pp_getObjectByID(id) {\r\n        return SceneUtils.getObjectByID(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByIDBreadth = function pp_getObjectByIDBreadth(id) {\r\n        return SceneUtils.getObjectByIDBreadth(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_getObjectByIDDepth = function pp_getObjectByIDDepth(id) {\r\n        return SceneUtils.getObjectByIDDepth(this, ...arguments);\r\n    }\r\n\r\n    // To String\r\n\r\n    sceneExtension.pp_toString = function pp_toString() {\r\n        return SceneUtils.toString(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_toStringCompact = function pp_toStringCompact() {\r\n        return SceneUtils.toStringCompact(this, ...arguments);\r\n    }\r\n\r\n    sceneExtension.pp_toStringExtended = function pp_toStringExtended() {\r\n        return SceneUtils.toStringExtended(this, ...arguments);\r\n    }\r\n\r\n    // Cauldron\r\n\r\n    sceneExtension.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return SceneUtils.getComponentsAmountMap(this, ...arguments);\r\n    }\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(sceneExtension, Scene.prototype, false, true, true);\r\n}", "import { initObjectExtension } from \"./object_extension\";\r\nimport { initSceneExtension } from \"./scene_extension\";\r\n\r\nexport function initWLExtensions(engine) {\r\n    initObjectExtension();\r\n    initSceneExtension(engine);\r\n}", "import { InputComponent, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Cursor, CursorTarget, HitTestLocation } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../../cauldron/utils/xr_utils\";\r\nimport { Handedness } from \"../../../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../../../input/cauldron/input_utils\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { mat4_create, quat2_create, vec3_create } from \"../../../js/extensions/array_extension\";\r\nimport { PluginUtils } from \"../../../utils/plugin_utils\";\r\n\r\nexport function initCursorComponentMod() {\r\n    initCursorComponentModPrototype();\r\n}\r\n\r\nexport function initCursorComponentModPrototype() {\r\n    let cursorComponentMod = {};\r\n\r\n    // Modified Functions\r\n\r\n    cursorComponentMod.init = function init() {\r\n        this.maxDistance = 100;\r\n        this.visible = false;\r\n        this.globalTarget = this.object.pp_addComponent(CursorTarget);\r\n        this.hitTestTarget = this.object.pp_addComponent(CursorTarget);\r\n        this.hoveringObject = null;\r\n        this.hoveringObjectTarget = null;\r\n\r\n        this.cursorPos = vec3_create();\r\n\r\n        this._collisionMask = (1 << this.collisionGroup);\r\n\r\n        this._doubleClickTimer = 0;\r\n        this._tripleClickTimer = 0;\r\n        this._multipleClickObject = null;\r\n        this._multipleClickDelay = 0.3;\r\n\r\n        this._onDestroyCallbacks = [];\r\n\r\n        this._prevHitLocationLocalToTarget = vec3_create();\r\n\r\n        this._pointerID = null;\r\n\r\n        this._updatePointerStyle = false;\r\n\r\n        this._lastClientX = null;\r\n        this._lastClientY = null;\r\n        this._lastWidth = null;\r\n        this._lastHeight = null;\r\n        this._lastPointerID = null;\r\n\r\n        this._lastOriginalMouseEvent = null;\r\n        this._lastOriginalGamepadEvent = null;\r\n\r\n        this._transformQuat = quat2_create();\r\n        this._origin = vec3_create();\r\n        this._direction = vec3_create();\r\n\r\n        this._isHovering = false;\r\n\r\n        this._isDown = false;\r\n        this._lastIsDown = false;\r\n        this._isRealDown = false;\r\n\r\n        this._isDownForUpWithDown = false;\r\n        this._isUpWithNoDown = false;\r\n\r\n        this._tempVec = vec3_create();\r\n\r\n        this._viewComponent = null;\r\n\r\n        this._cursorRayOrigin = vec3_create();\r\n        this._cursorRayScale = vec3_create();\r\n\r\n        this._projectionMatrix = mat4_create();\r\n\r\n        this._hitTestLocation = null;\r\n        this._hitTestObject = null;\r\n\r\n        this._rayHitLocation = vec3_create();\r\n        this._hitObjectData = [null, null, null];\r\n\r\n        this._myViewEventListenersRegistered = false;\r\n    };\r\n\r\n    cursorComponentMod.start = function start() {\r\n        if (this.handedness == 0) {\r\n            let inputComp = this.object.pp_getComponent(InputComponent);\r\n            if (!inputComp) {\r\n                console.warn(\"cursor component on object \" + this.object.pp_getName() + \" was configured with handedness \\\"input component\\\", \" + \"but object has no input component.\");\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = InputUtils.getHandednessByIndex(this.handedness - 1);\r\n        }\r\n\r\n        this.pp_setViewComponent(this.object.pp_getComponent(ViewComponent));\r\n\r\n        XRUtils.registerSessionStartEventListener(this, this.setupVREvents.bind(this), true, false, this.engine);\r\n        this._onDestroyCallbacks.push(() => {\r\n            XRUtils.unregisterSessionStartEventListener(this, this.engine);\r\n        });\r\n\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(false);\r\n            this._cursorRayScale.set(this.cursorRayObject.pp_getScaleLocal());\r\n\r\n            // Set ray to a good default distance of the cursor of 1m \r\n            this._setCursorRayTransform(null);\r\n        }\r\n\r\n        this._setCursorVisibility(false);\r\n\r\n        if (this.useWebXRHitTest) {\r\n            this._hitTestObject = this.object.pp_addObject();\r\n            this._hitTestLocation = this.hitTestObject.pp_addComponent(HitTestLocation, { scaleObject: false, });\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.update = function update(dt) {\r\n        if (this._doubleClickTimer > 0) {\r\n            this._doubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this._tripleClickTimer > 0) {\r\n            this._tripleClickTimer -= dt;\r\n        }\r\n\r\n        // If in XR, set the cursor ray based on object transform\r\n        if (XRUtils.isSessionActive(this.engine)) {\r\n            // Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence \r\n            if (this.arTouchDown && this._pp_isAR()) {\r\n                let axes = XRUtils.getSession(this.engine).inputSources[0].gamepad.axes;\r\n                // Screenspace Y is inverted \r\n                this._direction.vec3_set(axes[0], -axes[1], -1.0);\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.pp_getPosition(this._origin);\r\n                this.object.pp_getForward(this._direction);\r\n            }\r\n\r\n            let hitObjectData = this._pp_rayCast();\r\n            this._pp_hoverBehaviour(hitObjectData[0], hitObjectData[1], hitObjectData[2], this._lastOriginalGamepadEvent);\r\n        } else if (this._viewComponent != null) {\r\n            if (this._lastPointerID != null) {\r\n                this._pp_updateMousePos(this._lastClientX, this._lastClientY, this._lastWidth, this._lastHeight);\r\n\r\n                let hitObjectData = this._pp_rayCast();\r\n                this._pp_hoverBehaviour(hitObjectData[0], hitObjectData[1], hitObjectData[2], this._lastOriginalMouseEvent);\r\n\r\n                if (this.hoveringObject != null) {\r\n                    this._pointerID = this._lastPointerID;\r\n                } else {\r\n                    this._pointerID = null;\r\n                }\r\n            } else if (this.hoveringObject != null) {\r\n                this._pp_hoverBehaviour(null, null, null, this._lastOriginalMouseEvent, true); // Trigger Unhover\r\n            }\r\n        }\r\n\r\n        if (this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n            if (this.cursorObject) {\r\n                this._setCursorVisibility(true);\r\n\r\n                this.cursorObject.pp_setPosition(this.cursorPos);\r\n                this.cursorObject.pp_setTransformLocalQuat(this.cursorObject.pp_getTransformLocalQuat(this._transformQuat).quat2_normalize(this._transformQuat));\r\n            }\r\n\r\n            if (this.cursorRayObject) {\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            }\r\n        } else {\r\n            if (this.cursorObject) {\r\n                this._setCursorVisibility(false);\r\n            }\r\n\r\n            if (this.cursorRayObject) {\r\n                this._setCursorRayTransform(null);\r\n            }\r\n        }\r\n\r\n        if (this.cursorRayObject) {\r\n            if (XRUtils.isSessionActive(this.engine) || (this.handedness != Handedness.LEFT && this.handedness != Handedness.RIGHT)) {\r\n                this.cursorRayObject.pp_setActive(true);\r\n            } else {\r\n                this.cursorRayObject.pp_setActive(false);\r\n            }\r\n        }\r\n\r\n        if (this.hoveringObject == null) {\r\n            this._pointerID = null;\r\n        }\r\n\r\n        this._updatePointerStyle = false;\r\n\r\n        this._lastOriginalMouseEvent = null;\r\n        this._lastOriginalGamepadEvent = null;\r\n    };\r\n\r\n    cursorComponentMod.onActivate = function onActivate() {\r\n        this._isDown = false;\r\n        this._lastIsDown = false;\r\n\r\n        this._isDownForUpWithDown = false;\r\n        this._isUpWithNoDown = false;\r\n    };\r\n\r\n    cursorComponentMod.onDeactivate = function onDeactivate() {\r\n        if (this.hoveringObject) {\r\n            if (!this.hoveringReality) {\r\n                if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUnhover.notify(this.hoveringObject, this, null);\r\n                this.globalTarget.onUnhover.notify(this.hoveringObject, this, null);\r\n            }\r\n        }\r\n\r\n        this.hoveringObject = null;\r\n        this.hoveringObjectTarget = null;\r\n        if (this.styleCursor) {\r\n            Globals.getBody(this.engine).style.cursor = \"default\";\r\n        }\r\n\r\n        this._isDown = false;\r\n        this._lastIsDown = false;\r\n\r\n        this._isDownForUpWithDown = false;\r\n        this._isUpWithNoDown = false;\r\n\r\n        this._setCursorVisibility(false);\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(false);\r\n        }\r\n\r\n        this._pointerID = null;\r\n\r\n        this._lastClientX = null;\r\n        this._lastClientY = null;\r\n        this._lastWidth = null;\r\n        this._lastHeight = null;\r\n\r\n        this._lastOriginalMouseEvent = null;\r\n        this._lastOriginalGamepadEvent = null;\r\n    };\r\n\r\n    cursorComponentMod.onDestroy = function onDestroy() {\r\n        if (this._hitTestObject != null) {\r\n            this._hitTestObject.pp_destroy();\r\n        }\r\n\r\n        for (let callback of this._onDestroyCallbacks) {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.updateDirection = function () {\r\n        let transformWorld = quat2_create();\r\n        return function updateDirection() {\r\n            this.object.pp_getPosition(this._origin);\r\n\r\n            // Reverse-project the direction into view space \r\n            this._direction.vec3_transformMat4(this._projectionMatrix, this._direction);\r\n            this._direction.vec3_normalize(this._direction);\r\n            this._direction.vec3_transformQuat(this.object.pp_getTransformQuat(transformWorld), this._direction);\r\n        };\r\n    }();\r\n\r\n    cursorComponentMod.setupVREvents = function setupVREvents(session) {\r\n        // If in XR, one-time bind the listener \r\n\r\n        let onSelect = this.onSelect.bind(this);\r\n        session.addEventListener(\"select\", onSelect);\r\n        let onSelectStart = this.onSelectStart.bind(this);\r\n        session.addEventListener(\"selectstart\", onSelectStart);\r\n        let onSelectEnd = this.onSelectEnd.bind(this);\r\n        session.addEventListener(\"selectend\", onSelectEnd);\r\n\r\n        this._onDestroyCallbacks.push(() => {\r\n            if (!XRUtils.isSessionActive(this.engine)) return;\r\n\r\n            let session = XRUtils.getSession(this.engine);\r\n            session.removeEventListener(\"select\", onSelect);\r\n            session.removeEventListener(\"selectstart\", onSelectStart);\r\n            session.removeEventListener(\"selectend\", onSelectEnd);\r\n        });\r\n\r\n        // After XR session was entered, the projection matrix changed \r\n        this._onViewportResize();\r\n    };\r\n\r\n    cursorComponentMod.onSelect = function onSelect(e) {\r\n    };\r\n\r\n    cursorComponentMod.onSelectStart = function onSelectStart(e) {\r\n        if (this.active) {\r\n\r\n            if (this._pp_isAR()) {\r\n                this.arTouchDown = true;\r\n                this._lastOriginalGamepadEvent = e;\r\n            } else if (e.inputSource.handedness == this.handedness) {\r\n                this._isDown = true;\r\n                this._isRealDown = true;\r\n\r\n                if (!this._lastIsDown) {\r\n                    this._isDownForUpWithDown = true;\r\n                }\r\n\r\n                this._lastOriginalGamepadEvent = e;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isRealDown = true;\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.onSelectEnd = function onSelectEnd(e) {\r\n        if (this.active) {\r\n            if (this._pp_isAR()) {\r\n                this.arTouchDown = false;\r\n                this._lastOriginalGamepadEvent = e;\r\n            } else if (e.inputSource.handedness == this.handedness) {\r\n                if (!this._isDownForUpWithDown) {\r\n                    this._isUpWithNoDown = true;\r\n                }\r\n\r\n                this._isDown = false;\r\n                this._isRealDown = false;\r\n\r\n                this._isDownForUpWithDown = false;\r\n\r\n                this._lastOriginalGamepadEvent = e;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isRealDown = false;\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.onPointerMove = function onPointerMove(e) {\r\n        if (this.active) {\r\n            // Don't care about secondary pointers \r\n            if (this._pointerID != null && this._pointerID != e.pointerId) return;\r\n\r\n            let bounds = Globals.getBody(this.engine).getBoundingClientRect();\r\n            this._pp_updateMouseData(e, e.clientX, e.clientY, bounds.width, bounds.height, e.pointerId);\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.onClick = function onClick(e) {\r\n    };\r\n\r\n    cursorComponentMod.onPointerDown = function onPointerDown(e) {\r\n        // Don't care about secondary pointers or non-left clicks \r\n        if ((this._pointerID != null && this._pointerID != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            let bounds = Globals.getBody(this.engine).getBoundingClientRect();\r\n            this._pp_updateMouseData(e, e.clientX, e.clientY, bounds.width, bounds.height, e.pointerId);\r\n\r\n            this._isDown = true;\r\n            this._isRealDown = true;\r\n\r\n            if (!this._lastIsDown) {\r\n                this._isDownForUpWithDown = true;\r\n            }\r\n        } else {\r\n            this._isRealDown = true;\r\n        }\r\n    };\r\n\r\n    cursorComponentMod.onPointerUp = function onPointerUp(e) {\r\n        // Don't care about secondary pointers or non-left clicks \r\n        if ((this._pointerID != null && this._pointerID != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            let bounds = Globals.getBody(this.engine).getBoundingClientRect();\r\n            this._pp_updateMouseData(e, e.clientX, e.clientY, bounds.width, bounds.height, e.pointerId);\r\n\r\n            if (!this._isDownForUpWithDown) {\r\n                this._isUpWithNoDown = true;\r\n            }\r\n\r\n            this._isDown = false;\r\n            this._isRealDown = false;\r\n\r\n            this._isDownForUpWithDown = false;\r\n\r\n            this._updatePointerStyle = true;\r\n        } else {\r\n            this._isRealDown = false;\r\n        }\r\n    };\r\n\r\n    cursorComponentMod._onViewportResize = function _onViewportResize() {\r\n        if (!this._viewComponent) return;\r\n\r\n        // Projection matrix will change if the viewport is resized, which will affect the\r\n        // projection matrix because of the aspect ratio\r\n        this._viewComponent.projectionMatrix.mat4_invert(this._projectionMatrix);\r\n    };\r\n\r\n    cursorComponentMod._setCursorRayTransform = function _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject) return;\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.pp_resetScaleLocal();\r\n\r\n            if (hitPosition != null) {\r\n                this.cursorRayObject.pp_getPosition(this._cursorRayOrigin);\r\n                let dist = this._cursorRayOrigin.vec3_distance(hitPosition);\r\n                this._cursorRayScale[this.cursorRayScalingAxis] = dist;\r\n                this.cursorRayObject.pp_scaleObject(this._cursorRayScale);\r\n            }\r\n        }\r\n    };\r\n\r\n    cursorComponentMod._setCursorVisibility = function _setCursorVisibility(visible) {\r\n        this.visible = visible;\r\n        if (!this.cursorObject) return;\r\n\r\n        this.cursorObject.pp_setActive(visible);\r\n    };\r\n\r\n    // New Functions \r\n\r\n    cursorComponentMod._pp_hoverBehaviour = function _pp_hoverBehaviour(hitObject, hitLocation, hitTestResults, originalEvent = null, forceUnhover = false) {\r\n        if (!forceUnhover && hitObject != null) {\r\n            let hoveringObjectChanged = false;\r\n            if (!this.hoveringObject || !this.hoveringObject.pp_equals(hitObject)) {\r\n                // Unhover previous, if exists \r\n                if (this.hoveringObject) {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUnhover.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onUnhover.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onUnhover.notify(null, this, originalEvent);\r\n                    }\r\n                }\r\n\r\n                hoveringObjectChanged = true;\r\n\r\n                // Hover new object \r\n                this.hoveringObject = hitObject;\r\n                this.hoveringObjectTarget = this.hoveringObject.pp_getComponent(CursorTarget);\r\n\r\n                if (!this.hoveringReality) {\r\n                    if (this.hoveringObjectTarget) this.hoveringObjectTarget.onHover.notify(this.hoveringObject, this, originalEvent);\r\n                    this.globalTarget.onHover.notify(this.hoveringObject, this, originalEvent);\r\n                } else {\r\n                    this.hitTestTarget.onHover.notify(hitTestResults, this, originalEvent);\r\n                }\r\n\r\n                if (this.styleCursor && !this._isRealDown && this.hoveringObjectTarget != null && !this.hoveringObjectTarget.isSurface) {\r\n                    Globals.getBody(this.engine).style.cursor = \"pointer\";\r\n                } else if (Globals.getBody(this.engine).style.cursor == \"pointer\") {\r\n                    Globals.getBody(this.engine).style.cursor = \"default\";\r\n                }\r\n\r\n                if (!this._pp_isDownToProcess() && this._isRealDown) {\r\n                    this._isDown = true;\r\n                    this._lastIsDown = true;\r\n\r\n                    this._isDownForUpWithDown = false;\r\n                    this._isUpWithNoDown = false;\r\n\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onDownOnHover.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onDownOnHover.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onDownOnHover.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._updatePointerStyle) {\r\n                if (this.styleCursor && !this._isRealDown && this.hoveringObjectTarget != null && !this.hoveringObjectTarget.isSurface) {\r\n                    Globals.getBody(this.engine).style.cursor = \"pointer\";\r\n                } else if (Globals.getBody(this.engine).style.cursor == \"pointer\") {\r\n                    Globals.getBody(this.engine).style.cursor = \"default\";\r\n                }\r\n            }\r\n\r\n            if (!hoveringObjectChanged && this._pp_isMoving(hitLocation)) {\r\n\r\n                if (!this.hoveringReality) {\r\n                    if (this.hoveringObjectTarget) this.hoveringObjectTarget.onMove.notify(this.hoveringObject, this, originalEvent);\r\n                    this.globalTarget.onMove.notify(this.hoveringObject, this, originalEvent);\r\n                } else {\r\n                    this.hitTestTarget.onMove.notify(hitTestResults, this, originalEvent);\r\n                }\r\n            }\r\n\r\n            if (this._pp_isDownToProcess()) {\r\n                // Cursor down \r\n                if (!this.hoveringReality) {\r\n                    if (this.hoveringObjectTarget) this.hoveringObjectTarget.onDown.notify(this.hoveringObject, this, originalEvent);\r\n                    this.globalTarget.onDown.notify(this.hoveringObject, this, originalEvent);\r\n                } else {\r\n                    this.hitTestTarget.onDown.notify(hitTestResults, this, originalEvent);\r\n                }\r\n\r\n                // Click \r\n                if (!this.hoveringReality) {\r\n                    if (this.hoveringObjectTarget) this.hoveringObjectTarget.onClick.notify(this.hoveringObject, this, originalEvent);\r\n                    this.globalTarget.onClick.notify(this.hoveringObject, this, originalEvent);\r\n                } else {\r\n                    this.hitTestTarget.onClick.notify(hitTestResults, this, originalEvent);\r\n                }\r\n\r\n                // Multiple Clicks \r\n                if (this._tripleClickTimer > 0 && this._multipleClickObject && this._multipleClickObject.pp_equals(this.hoveringObject)) {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onTripleClick.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onTripleClick.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onTripleClick.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n\r\n                    this._tripleClickTimer = 0;\r\n                } else if (this._doubleClickTimer > 0 && this._multipleClickObject && this._multipleClickObject.pp_equals(this.hoveringObject)) {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onDoubleClick.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onDoubleClick.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onDoubleClick.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n\r\n                    this._tripleClickTimer = this._multipleClickDelay;\r\n                    this._doubleClickTimer = 0;\r\n                } else {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onSingleClick.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onSingleClick.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onSingleClick.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n\r\n                    this._tripleClickTimer = 0;\r\n                    this._doubleClickTimer = this._multipleClickDelay;\r\n                    this._multipleClickObject = this.hoveringObject;\r\n                }\r\n            } else {\r\n                // Cursor up \r\n                if (!this._isUpWithNoDown && !hoveringObjectChanged && this._pp_isUpToProcess()) {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUp.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onUp.notify(this.hoveringObject, this, originalEvent);\r\n\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUpWithDown.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onUpWithDown.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onUp.notify(hitTestResults, this, originalEvent);\r\n\r\n                        this.hitTestTarget.onUpWithDown.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n                } else if (this._isUpWithNoDown || (hoveringObjectChanged && this._pp_isUpToProcess())) {\r\n                    if (!this.hoveringReality) {\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUp.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onUp.notify(this.hoveringObject, this, originalEvent);\r\n\r\n                        if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUpWithNoDown.notify(this.hoveringObject, this, originalEvent);\r\n                        this.globalTarget.onUpWithNoDown.notify(this.hoveringObject, this, originalEvent);\r\n                    } else {\r\n                        this.hitTestTarget.onUp.notify(hitTestResults, this, originalEvent);\r\n\r\n                        this.hitTestTarget.onUpWithNoDown.notify(hitTestResults, this, originalEvent);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._prevHitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(hitLocation, this._prevHitLocationLocalToTarget);\r\n        } else if (this.hoveringObject && (forceUnhover || hitObject == null)) {\r\n            if (!this.hoveringReality) {\r\n                if (this.hoveringObjectTarget) this.hoveringObjectTarget.onUnhover.notify(this.hoveringObject, this, originalEvent);\r\n                this.globalTarget.onUnhover.notify(this.hoveringObject, this, originalEvent);\r\n            } else {\r\n                this.hitTestTarget.onUnhover.notify(null, this, originalEvent);\r\n            }\r\n\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if (this.styleCursor && !this._isRealDown) {\r\n                Globals.getBody(this.engine).style.cursor = \"default\";\r\n            }\r\n        }\r\n\r\n        if (this.hoveringObject) {\r\n            this._lastIsDown = this._isDown;\r\n        } else {\r\n            this._isDown = false;\r\n            this._lastIsDown = false;\r\n\r\n            this._isDownForUpWithDown = false;\r\n        }\r\n\r\n        this._isUpWithNoDown = false;\r\n    };\r\n\r\n    cursorComponentMod._pp_rayCast = function _pp_rayCast() {\r\n        let rayHit =\r\n            this.rayCastMode == 0\r\n                ? Globals.getScene(this.engine).rayCast(\r\n                    this._origin,\r\n                    this._direction,\r\n                    this._collisionMask\r\n                )\r\n                : Globals.getPhysics(this.engine).rayCast(\r\n                    this._origin,\r\n                    this._direction,\r\n                    this._collisionMask,\r\n                    this.maxDistance\r\n                );\r\n\r\n        this._hitObjectData[0] = null;\r\n        this._hitObjectData[1] = null;\r\n        this._hitObjectData[2] = null;\r\n\r\n        let hitTestResultDistance = Infinity;\r\n        if (this._hitTestLocation != null && this._hitTestLocation.visible) {\r\n            this._hitTestObject.pp_getPositionWorld(this.cursorPos);\r\n            this._rayHitLocation.vec3_copy(this.cursorPos);\r\n            hitTestResultDistance = this.cursorPos.vec3_distance(this.object.pp_getPositionWorld(this._tempVec));\r\n\r\n            this._hitObjectData[0] = this._hitTestObject;\r\n            this._hitObjectData[1] = this._rayHitLocation;\r\n        }\r\n\r\n        this.hoveringReality = false;\r\n\r\n        if (rayHit.hitCount > 0) {\r\n            let rayHitDistance = rayHit.distances[0];\r\n            if (rayHitDistance <= hitTestResultDistance) {\r\n                // Overwrite cursorPos set by hit test location\r\n                this.cursorPos.vec3_copy(rayHit.locations[0]);\r\n                this._rayHitLocation.vec3_copy(this.cursorPos);\r\n\r\n                this._hitObjectData[0] = rayHit.objects[0];\r\n                this._hitObjectData[1] = this._rayHitLocation;\r\n            } else {\r\n                this.hoveringReality = true;\r\n            }\r\n        } else if (hitTestResultDistance == Infinity) {\r\n            this.cursorPos.vec3_zero();\r\n\r\n            this._hitObjectData[0] = null;\r\n            this._hitObjectData[1] = null;\r\n        }\r\n\r\n        let xrFrame = XRUtils.getFrame(this.engine);\r\n        if (this.hoveringReality && xrFrame != null) {\r\n            this._hitObjectData[2] = this._hitTestLocation.getHitTestResults(xrFrame)[0];\r\n        }\r\n\r\n        return this._hitObjectData;\r\n    };\r\n\r\n    cursorComponentMod._pp_updateMouseData = function _pp_updateMouseData(e, clientX, clientY, w, h, pointerID) {\r\n        this._lastClientX = clientX;\r\n        this._lastClientY = clientY;\r\n        this._lastWidth = w;\r\n        this._lastHeight = h;\r\n        this._lastPointerID = pointerID;\r\n\r\n        this._lastOriginalMouseEvent = e;\r\n    };\r\n\r\n    cursorComponentMod._pp_updateMousePos = function _pp_updateMousePos(clientX, clientY, w, h) {\r\n        // Get direction in normalized device coordinate space from mouse position \r\n        let left = clientX / w;\r\n        let top = clientY / h;\r\n        this._direction.vec3_set(left * 2 - 1, -top * 2 + 1, -1.0);\r\n\r\n        this.updateDirection();\r\n    };\r\n\r\n    cursorComponentMod.pp_setViewComponent = function pp_setViewComponent(viewComponent) {\r\n        this._viewComponent = viewComponent;\r\n\r\n        // If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n        // otherwise just use the objects transformation\r\n        if (this._viewComponent != null) {\r\n            this._viewComponent.projectionMatrix.mat4_invert(this._projectionMatrix);\r\n\r\n            if (!this._myViewEventListenersRegistered) {\r\n                this._myViewEventListenersRegistered = true;\r\n\r\n                let onClick = this.onClick.bind(this);\r\n                Globals.getCanvas(this.engine).addEventListener(\"click\", onClick);\r\n                let onPointerDown = this.onPointerDown.bind(this);\r\n                Globals.getCanvas(this.engine).addEventListener(\"pointerdown\", onPointerDown);\r\n                let onPointerMove = this.onPointerMove.bind(this);\r\n                Globals.getCanvas(this.engine).addEventListener(\"pointermove\", onPointerMove);\r\n                let onPointerUp = this.onPointerUp.bind(this);\r\n                Globals.getCanvas(this.engine).addEventListener(\"pointerup\", onPointerUp);\r\n                let onPointerLeave = this._pp_onPointerLeave.bind(this);\r\n                Globals.getCanvas(this.engine).addEventListener(\"pointerleave\", onPointerLeave);\r\n\r\n                let onViewportResize = this._onViewportResize.bind(this);\r\n                this.engine.onResize.add(onViewportResize);\r\n\r\n                this._onDestroyCallbacks.push(() => {\r\n                    Globals.getCanvas(this.engine).removeEventListener(\"click\", onClick);\r\n                    Globals.getCanvas(this.engine).removeEventListener(\"pointerdown\", onPointerDown);\r\n                    Globals.getCanvas(this.engine).removeEventListener(\"pointermove\", onPointerMove);\r\n                    Globals.getCanvas(this.engine).removeEventListener(\"pointerup\", onPointerUp);\r\n                    Globals.getCanvas(this.engine).removeEventListener(\"pointerleave\", onPointerLeave);\r\n\r\n                    this.engine.onResize.remove(onViewportResize);\r\n\r\n                    this._myViewEventListenersRegistered = false;\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    cursorComponentMod._pp_onPointerLeave = function _pp_onPointerLeave(e) {\r\n        if (this._pointerID == null || this._pointerID == e.pointerId) {\r\n            this._lastPointerID = null;\r\n\r\n            this._lastClientX = null;\r\n            this._lastClientY = null;\r\n            this._lastWidth = null;\r\n            this._lastHeight = null;\r\n\r\n            this._lastOriginalMouseEvent = e;\r\n        }\r\n    };\r\n\r\n    cursorComponentMod._pp_isDownToProcess = function _pp_isDownToProcess() {\r\n        return this._isDown !== this._lastIsDown && this._isDown;\r\n    };\r\n\r\n    cursorComponentMod._pp_isUpToProcess = function _pp_isUpToProcess() {\r\n        return this._isDown !== this._lastIsDown && !this._isDown;\r\n    };\r\n\r\n    cursorComponentMod._pp_isMoving = function () {\r\n        let hitLocationLocalToTarget = vec3_create();\r\n        return function _pp_isMoving(hitLocation) {\r\n            let moving = false;\r\n\r\n            hitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(hitLocation, hitLocationLocalToTarget);\r\n\r\n            if (!hitLocationLocalToTarget.vec_equals(this._prevHitLocationLocalToTarget, 0.0001)) {\r\n                moving = true;\r\n            }\r\n\r\n            return moving;\r\n        };\r\n    }();\r\n\r\n    cursorComponentMod._pp_isAR = function _pp_isAR(e) {\r\n        let firstInputSource = XRUtils.getSession(this.engine).inputSources[0];\r\n        return this.input != null && firstInputSource.handedness === \"none\" && firstInputSource.gamepad != null;\r\n    }\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(cursorComponentMod, Cursor.prototype, false, true, true);\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nexport function getSession(engine = Globals.getMainEngine()) {\r\n    let xr = Globals.getXR(engine);\r\n    return xr != null ? xr.session : null;\r\n}\r\n\r\nexport function getSessionMode(engine = Globals.getMainEngine()) {\r\n    let xr = Globals.getXR(engine);\r\n    return xr != null ? xr.sessionMode : null;\r\n}\r\n\r\nexport function getReferenceSpace(engine = Globals.getMainEngine()) {\r\n    let xr = Globals.getXR(engine);\r\n    return xr != null ? xr.currentReferenceSpace : null;\r\n}\r\n\r\nexport function getReferenceSpaceType(engine = Globals.getMainEngine()) {\r\n    let type = \"local\";\r\n\r\n    try {\r\n        let xr = Globals.getXR(engine);\r\n        type = xr != null ? xr.currentReferenceSpaceType : null;\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    return type;\r\n}\r\n\r\nexport function getFrame(engine = Globals.getMainEngine()) {\r\n    let xr = Globals.getXR(engine);\r\n    return xr != null ? xr.frame : null;\r\n}\r\n\r\nexport function isSessionActive(engine = Globals.getMainEngine()) {\r\n    return XRUtils.getSession(engine) != null;\r\n}\r\n\r\nexport function isReferenceSpaceFloorBased(engine = Globals.getMainEngine()) {\r\n    return XRUtils.getReferenceSpaceType(engine).includes(\"floor\");\r\n}\r\n\r\nexport function exitSession(engine = Globals.getMainEngine()) {\r\n    let xrSession = XRUtils.getSession(engine);\r\n\r\n    if (xrSession != null) {\r\n        xrSession.end();\r\n    }\r\n}\r\n\r\nexport function registerSessionStartEventListener(id, listener, manuallyCallSessionStartIfSessionAlreadyActive = false, addManualCallFlagToStartListener = false, engine = Globals.getMainEngine()) {\r\n    if (listener != null) {\r\n        if (manuallyCallSessionStartIfSessionAlreadyActive && XRUtils.isSessionActive(engine)) {\r\n            if (addManualCallFlagToStartListener) {\r\n                listener(true, XRUtils.getSession(engine), XRUtils.getSessionMode(engine));\r\n            } else {\r\n                listener(XRUtils.getSession(engine), XRUtils.getSessionMode(engine));\r\n            }\r\n        }\r\n\r\n        if (addManualCallFlagToStartListener) {\r\n            engine.onXRSessionStart.add(listener.bind(undefined, false), { id: id, immediate: false });\r\n        } else {\r\n            engine.onXRSessionStart.add(listener, { id: id, immediate: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport function unregisterSessionStartEventListener(id, engine = Globals.getMainEngine()) {\r\n    engine.onXRSessionStart.remove(id);\r\n}\r\n\r\nexport function registerSessionEndEventListener(id, listener, engine = Globals.getMainEngine()) {\r\n    if (listener != null) {\r\n        engine.onXRSessionEnd.add(listener, { id: id });\r\n    }\r\n}\r\n\r\nexport function unregisterSessionEndEventListener(id, engine = Globals.getMainEngine()) {\r\n    return engine.onXRSessionEnd.remove(id);\r\n}\r\n\r\nexport function registerSessionStartEndEventListeners(id, startListener, endListener, manuallyCallSessionStartIfSessionAlreadyActive = false, addManualCallFlagToStartListener = false, engine = Globals.getMainEngine()) {\r\n    XRUtils.registerSessionStartEventListener(id, startListener, manuallyCallSessionStartIfSessionAlreadyActive, addManualCallFlagToStartListener, engine);\r\n    XRUtils.registerSessionEndEventListener(id, endListener, engine);\r\n}\r\n\r\nexport function unregisterSessionStartEndEventListeners(id, engine = Globals.getMainEngine()) {\r\n    XRUtils.unregisterSessionStartEventListener(id, engine);\r\n    XRUtils.unregisterSessionEndEventListener(id, engine);\r\n}\r\n\r\nexport function isXRSupported(engine = Globals.getMainEngine()) {\r\n    return XRUtils.isVRSupported(engine) || XRUtils.isARSupported(engine);\r\n}\r\n\r\nexport function isVRSupported(engine = Globals.getMainEngine()) {\r\n    return engine.vrSupported;\r\n}\r\n\r\nexport function isARSupported(engine = Globals.getMainEngine()) {\r\n    return engine.arSupported;\r\n}\r\n\r\nexport function isDeviceEmulated(engine = Globals.getMainEngine()) {\r\n    let emulated = (\"CustomWebXRPolyfill\" in Globals.getWindow(engine));\r\n    return emulated;\r\n}\r\n\r\nexport let XRUtils = {\r\n    getSession,\r\n    getSessionMode,\r\n    getReferenceSpace,\r\n    getReferenceSpaceType,\r\n    getFrame,\r\n    isSessionActive,\r\n    exitSession,\r\n    registerSessionStartEventListener,\r\n    unregisterSessionStartEventListener,\r\n    registerSessionEndEventListener,\r\n    unregisterSessionEndEventListener,\r\n    registerSessionStartEndEventListeners,\r\n    unregisterSessionStartEndEventListeners,\r\n    isReferenceSpaceFloorBased,\r\n    isXRSupported,\r\n    isVRSupported,\r\n    isARSupported,\r\n    isDeviceEmulated\r\n};", "export let Handedness = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nexport let HandednessIndex = {\r\n    LEFT: 0,\r\n    RIGHT: 1\r\n};\r\n\r\nexport let InputSourceType = {\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};\r\n\r\nexport let TrackedHandJointID = {\r\n    WRIST: \"wrist\",\r\n\r\n    THUMB_METACARPAL: \"thumb-metacarpal\",\r\n    THUMB_PHALANX_PROXIMAL: \"thumb-phalanx-proximal\",\r\n    THUMB_PHALANX_DISTAL: \"thumb-phalanx-distal\",\r\n    THUMB_TIP: \"thumb-tip\",\r\n\r\n    INDEX_FINGER_METACARPAL: \"index-finger-metacarpal\",\r\n    INDEX_FINGER_PHALANX_PROXIMAL: \"index-finger-phalanx-proximal\",\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: \"index-finger-phalanx-intermediate\",\r\n    INDEX_FINGER_PHALANX_DISTAL: \"index-finger-phalanx-distal\",\r\n    INDEX_FINGER_TIP: \"index-finger-tip\",\r\n\r\n    MIDDLE_FINGER_METACARPAL: \"middle-finger-metacarpal\",\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: \"middle-finger-phalanx-proximal\",\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: \"middle-finger-phalanx-intermediate\",\r\n    MIDDLE_FINGER_PHALANX_DISTAL: \"middle-finger-phalanx-distal\",\r\n    MIDDLE_FINGER_TIP: \"middle-finger-tip\",\r\n\r\n    RING_FINGER_METACARPAL: \"ring-finger-metacarpal\",\r\n    RING_FINGER_PHALANX_PROXIMAL: \"ring-finger-phalanx-proximal\",\r\n    RING_FINGER_PHALANX_INTERMEDIATE: \"ring-finger-phalanx-intermediate\",\r\n    RING_FINGER_PHALANX_DISTAL: \"ring-finger-phalanx-distal\",\r\n    RING_FINGER_TIP: \"ring-finger-tip\",\r\n\r\n    PINKY_FINGER_METACARPAL: \"pinky-finger-metacarpal\",\r\n    PINKY_FINGER_PHALANX_PROXIMAL: \"pinky-finger-phalanx-proximal\",\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: \"pinky-finger-phalanx-intermediate\",\r\n    PINKY_FINGER_PHALANX_DISTAL: \"pinky-finger-phalanx-distal\",\r\n    PINKY_FINGER_TIP: \"pinky-finger-tip\",\r\n};\r\n\r\nexport let TrackedHandJointIDIndex = {\r\n    WRIST: 0,\r\n\r\n    THUMB_METACARPAL: 1,\r\n    THUMB_PHALANX_PROXIMAL: 2,\r\n    THUMB_PHALANX_DISTAL: 3,\r\n    THUMB_TIP: 4,\r\n\r\n    INDEX_FINGER_METACARPAL: 5,\r\n    INDEX_FINGER_PHALANX_PROXIMAL: 6,\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: 7,\r\n    INDEX_FINGER_PHALANX_DISTAL: 8,\r\n    INDEX_FINGER_TIP: 9,\r\n\r\n    MIDDLE_FINGER_METACARPAL: 10,\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: 11,\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: 12,\r\n    MIDDLE_FINGER_PHALANX_DISTAL: 13,\r\n    MIDDLE_FINGER_TIP: 14,\r\n\r\n    RING_FINGER_METACARPAL: 15,\r\n    RING_FINGER_PHALANX_PROXIMAL: 16,\r\n    RING_FINGER_PHALANX_INTERMEDIATE: 17,\r\n    RING_FINGER_PHALANX_DISTAL: 18,\r\n    RING_FINGER_TIP: 19,\r\n\r\n    PINKY_FINGER_METACARPAL: 20,\r\n    PINKY_FINGER_PHALANX_PROXIMAL: 21,\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: 22,\r\n    PINKY_FINGER_PHALANX_DISTAL: 23,\r\n    PINKY_FINGER_TIP: 24\r\n};", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { Handedness, HandednessIndex, InputSourceType, TrackedHandJointID, TrackedHandJointIDIndex } from \"./input_types\";\r\n\r\nexport function getHandednessByIndex(index) {\r\n    let handedness = null;\r\n\r\n    switch (index) {\r\n        case HandednessIndex.LEFT:\r\n            handedness = Handedness.LEFT;\r\n            break;\r\n        case HandednessIndex.RIGHT:\r\n            handedness = Handedness.RIGHT;\r\n            break;\r\n    }\r\n\r\n    return handedness;\r\n}\r\n\r\nexport function getInputSource(handedness, inputSourceType = null, engine = Globals.getMainEngine()) {\r\n    let inputSource = null;\r\n\r\n    let xrSession = XRUtils.getSession(engine);\r\n    if (xrSession != null && xrSession.inputSources) {\r\n        for (let i = 0; i < xrSession.inputSources.length; i++) {\r\n            let input = xrSession.inputSources[i];\r\n\r\n            let correctType = (!inputSourceType) || (inputSourceType == InputSourceType.GAMEPAD && !input.hand) || (inputSourceType == InputSourceType.TRACKED_HAND && input.hand);\r\n            if (correctType && input.handedness == handedness) {\r\n                inputSource = input;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return inputSource;\r\n}\r\n\r\nexport function getInputSourceTypeByHandedness(handedness, engine) {\r\n    let inputSource = InputUtils.getInputSource(handedness, undefined, engine);\r\n\r\n    return InputUtils.getInputSourceType(inputSource);\r\n}\r\n\r\nexport function getInputSourceType(inputSource) {\r\n    let inputSourceType = null;\r\n\r\n    if (inputSource) {\r\n        if (inputSource.hand) {\r\n            inputSourceType = InputSourceType.TRACKED_HAND;\r\n        } else {\r\n            inputSourceType = InputSourceType.GAMEPAD;\r\n        }\r\n    }\r\n\r\n    return inputSourceType;\r\n}\r\n\r\nexport function getOppositeHandedness(handedness) {\r\n    let oppositeHandedness = null;\r\n\r\n    switch (handedness) {\r\n        case Handedness.LEFT:\r\n            oppositeHandedness = Handedness.RIGHT;\r\n            break;\r\n        case Handedness.RIGHT:\r\n            oppositeHandedness = Handedness.LEFT;\r\n            break;\r\n    }\r\n\r\n    return oppositeHandedness;\r\n}\r\n\r\nexport function getJointIDByIndex(index) {\r\n    let jointID = null;\r\n\r\n    let jointIDKey = null;\r\n    for (let jointIDIndexKey in TrackedHandJointIDIndex) {\r\n        if (TrackedHandJointIDIndex[jointIDIndexKey] == index) {\r\n            jointIDKey = jointIDIndexKey;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (jointIDKey != null) {\r\n        jointID = TrackedHandJointID[jointIDKey];\r\n    }\r\n\r\n    return jointID;\r\n}\r\n\r\nexport let InputUtils = {\r\n    getHandednessByIndex,\r\n    getInputSource,\r\n    getInputSourceTypeByHandedness,\r\n    getInputSourceType,\r\n    getOppositeHandedness,\r\n    getJointIDByIndex\r\n};", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { PluginUtils } from \"../../../utils/plugin_utils\";\r\n\r\nexport function initCursorTargetComponentMod() {\r\n    initCursorTargetComponentModPrototype();\r\n}\r\n\r\nexport function initCursorTargetComponentModPrototype() {\r\n    let cursorTargetComponentMod = {};\r\n\r\n    // New Functions \r\n\r\n    cursorTargetComponentMod.init = function init() {\r\n        this.onSingleClick = new Emitter();\r\n        this.onDoubleClick = new Emitter();\r\n        this.onTripleClick = new Emitter();\r\n\r\n        this.onDownOnHover = new Emitter();\r\n\r\n        this.onUpWithDown = new Emitter();\r\n        this.onUpWithNoDown = new Emitter();\r\n\r\n        this.isSurface = false; // Just a way to specify if this target is just used as a surface between buttons \r\n    };\r\n\r\n    cursorTargetComponentMod.start = function start() { };\r\n    cursorTargetComponentMod.update = function update(dt) { };\r\n    cursorTargetComponentMod.onActivate = function onActivate() { };\r\n    cursorTargetComponentMod.onDeactivate = function onDeactivate() { };\r\n    cursorTargetComponentMod.onDestroy = function onDestroy() { };\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(cursorTargetComponentMod, CursorTarget.prototype, false, true, true);\r\n}", "import { MouseLookComponent } from \"@wonderlandengine/components\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { vec3_create } from \"../../../js/extensions/array_extension\";\r\nimport { PluginUtils } from \"../../../utils/plugin_utils\";\r\n\r\nexport function initMouseLookComponentMod() {\r\n    initMouseLookComponentModPrototype();\r\n}\r\n\r\nexport function initMouseLookComponentModPrototype() {\r\n    let mouseLookComponentMod = {};\r\n\r\n    // Modified Functions\r\n\r\n    mouseLookComponentMod.init = function init() {\r\n        this.pointerId = null;\r\n        this.prevMoveEvent = null;\r\n\r\n        this.resetMovingDelay = 0.15;\r\n        this.resetMovingTimer = new Timer(this.resetMovingDelay, false);\r\n        this.isMoving = false;\r\n\r\n        this.pointerMoveListener = this._onMove.bind(this);\r\n\r\n        this.contextMenuListener = function (event) {\r\n            if (this.active) {\r\n                event.preventDefault();\r\n            }\r\n        }.bind(this);\r\n\r\n        this.pointerDown = function (event) {\r\n            if (this.active) {\r\n                if (this.pointerId != null) return;\r\n\r\n                if (!this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.pointerId = event.pointerId;\r\n                        this.mouseDown = true;\r\n                        Globals.getBody(this.engine).style.cursor = \"grabbing\";\r\n                        if (event.button == 1) {\r\n                            event.preventDefault(); // Prevent scrolling\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        this.pointerUp = function (event) {\r\n            if (this.active) {\r\n                if (event.pointerId != this.pointerId) return;\r\n\r\n                if (this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.mouseDown = false;\r\n                        Globals.getBody(this.engine).style.cursor = \"default\";\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        this.pointerLeave = function (event) {\r\n            if (this.active) {\r\n                if (event.pointerId != this.pointerId) return;\r\n\r\n                this.pointerId = null;\r\n                this.prevMoveEvent = null;\r\n\r\n                if (this.mouseDown) {\r\n                    this.mouseDown = false;\r\n                    Globals.getBody(this.engine).style.cursor = \"default\";\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        Globals.getBody(this.engine).addEventListener(\"pointermove\", this.pointerMoveListener);\r\n\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex == 2) {\r\n                Globals.getCanvas(this.engine).addEventListener(\"contextmenu\", this.contextMenuListener, false);\r\n            }\r\n\r\n            Globals.getCanvas(this.engine).addEventListener(\"pointerdown\", this.pointerDown);\r\n\r\n            Globals.getBody(this.engine).addEventListener(\"pointerup\", this.pointerUp);\r\n        }\r\n\r\n        Globals.getBody(this.engine).addEventListener(\"pointerleave\", this.pointerLeave);\r\n    };\r\n\r\n    // New Functions\r\n\r\n    mouseLookComponentMod.start = function start() { };\r\n    mouseLookComponentMod.onActivate = function onActivate() { };\r\n\r\n    mouseLookComponentMod.onDeactivate = function onDeactivate() {\r\n        if (this.mouseDown) {\r\n            Globals.getBody(this.engine).style.cursor = \"default\";\r\n        }\r\n\r\n        this.isMoving = false;\r\n        this.mouseDown = false;\r\n\r\n        this.pointerId = null;\r\n        this.prevMoveEvent = null;\r\n    };\r\n\r\n    mouseLookComponentMod.onDestroy = function onDestroy() {\r\n        Globals.getBody(this.engine).removeEventListener(\"pointermove\", this.pointerMoveListener);\r\n        Globals.getCanvas(this.engine).removeEventListener(\"contextmenu\", this.contextMenuListener);\r\n        Globals.getCanvas(this.engine).removeEventListener(\"pointerdown\", this.pointerDown);\r\n        Globals.getBody(this.engine).removeEventListener(\"pointerup\", this.pointerUp);\r\n        Globals.getBody(this.engine).removeEventListener(\"pointerleave\", this.pointerLeave);\r\n    };\r\n\r\n    mouseLookComponentMod.update = function update(dt) {\r\n        if (this.resetMovingTimer.isRunning()) {\r\n            this.resetMovingTimer.update(dt);\r\n            if (this.resetMovingTimer.isDone()) {\r\n                this.resetMovingTimer.reset();\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n\r\n        if (!this.isMoving) {\r\n            if (!this.requireMouseDown || !this.mouseDown) {\r\n                this.pointerId = null;\r\n            }\r\n\r\n            this.prevMoveEvent = null;\r\n        }\r\n    };\r\n\r\n    mouseLookComponentMod._onMove = function () {\r\n        let viewForward = vec3_create();\r\n        let viewUp = vec3_create();\r\n\r\n        let referenceUp = vec3_create();\r\n        let referenceUpNegate = vec3_create();\r\n        let referenceRight = vec3_create();\r\n\r\n        let newUp = vec3_create();\r\n        return function _onMove(event) {\r\n            if (this.active) {\r\n                if (this.pointerId != null && event.pointerId != this.pointerId) return;\r\n\r\n                if (this.mouseDown || !this.requireMouseDown) {\r\n\r\n                    viewForward = this.object.pp_getBackward(viewForward); // The view \"real\" forward is actually the backward\r\n                    viewUp = this.object.pp_getUp(viewUp);\r\n\r\n                    referenceUp.vec3_set(0, 1, 0);\r\n                    if (this.object.pp_getParent() != null) {\r\n                        referenceUp = this.object.pp_getParent().pp_getUp(referenceUp);\r\n                    }\r\n\r\n                    referenceRight = viewForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n                    let minAngle = 1;\r\n                    if (viewForward.vec3_angle(referenceUp) < minAngle) {\r\n                        referenceRight = viewUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n                    } else if (viewForward.vec3_angle(referenceUp.vec3_negate(referenceUpNegate)) < minAngle) {\r\n                        referenceRight = viewUp.vec3_cross(referenceUp, referenceRight);\r\n                    } else if (!viewUp.vec3_isConcordant(referenceUp)) {\r\n                        referenceRight.vec3_negate(referenceRight);\r\n                    }\r\n                    referenceRight.vec3_normalize(referenceRight);\r\n\r\n                    let movementX = event.movementX;\r\n                    let movementY = event.movementY;\r\n\r\n                    if (movementX == null || movementY == null) {\r\n                        if (this.prevMoveEvent != null) {\r\n                            movementX = event.pageX - this.prevMoveEvent.pageX;\r\n                            movementY = event.pageY - this.prevMoveEvent.pageY;\r\n                        } else {\r\n                            movementX = 0;\r\n                            movementY = 0;\r\n                        }\r\n                    }\r\n\r\n                    this.rotationX = -this.sensitity * movementX;\r\n                    this.rotationY = -this.sensitity * movementY;\r\n\r\n                    this.object.pp_rotateAxis(this.rotationY, referenceRight);\r\n\r\n                    let maxVerticalAngle = 90 - 0.001;\r\n                    newUp = this.object.pp_getUp(newUp);\r\n                    let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                    if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                        let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                        this.object.pp_rotateAxis(fixAngle, referenceRight);\r\n                    }\r\n\r\n                    this.object.pp_rotateAxis(this.rotationX, referenceUp);\r\n\r\n                    this.prevMoveEvent = event;\r\n                    this.pointerId = event.pointerId;\r\n\r\n                    this.resetMovingTimer.start(this.resetMovingDelay);\r\n                    this.isMoving = true;\r\n                }\r\n            }\r\n        };\r\n    }();\r\n\r\n\r\n\r\n    PluginUtils.injectProperties(mouseLookComponentMod, MouseLookComponent.prototype, false, true, true);\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\n\r\nexport class Timer {\r\n\r\n    constructor(duration, autoStart = true) {\r\n        this._myDuration = duration;\r\n        this._myOnEndEmitter = new Emitter();     // Signature: listener()\r\n\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    start(duration = null) {\r\n        this.reset(duration);\r\n        this._myStarted = true;\r\n    }\r\n\r\n    end() {\r\n        this._done();\r\n    }\r\n\r\n    reset(duration = null) {\r\n        if (duration != null) {\r\n            this._myDuration = Math.max(0, duration);\r\n        }\r\n\r\n        this._myTimeLeft = this._myDuration;\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myJustDone = false;\r\n\r\n        if (this.isRunning()) {\r\n            this._myTimeLeft = Math.max(0, this._myTimeLeft - dt);\r\n            if (this._myTimeLeft == 0) {\r\n                this._done();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDone;\r\n    }\r\n\r\n    isJustDone() {\r\n        return this._myJustDone;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.isStarted() && !this.isDone();\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myDuration = Math.max(0, duration);\r\n    }\r\n\r\n    getTimeLeft() {\r\n        return this._myTimeLeft;\r\n    }\r\n\r\n    getPercentage() {\r\n        let percentage = 1;\r\n        if (this._myTimeLeft > 0 && this._myDuration > 0) {\r\n            percentage = (this._myDuration - this._myTimeLeft) / this._myDuration;\r\n        }\r\n        return Math.pp_clamp(percentage, 0, 1);\r\n    }\r\n\r\n    setPercentage(percentage) {\r\n        if (this.isRunning()) {\r\n            let durationPercentage = Math.pp_clamp(1 - percentage, 0, 1);\r\n            this._myTimeLeft = this._myDuration * durationPercentage;\r\n        }\r\n    }\r\n\r\n    onEnd(listener, id = null) {\r\n        this._myOnEndEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myOnEndEmitter.remove(id);\r\n    }\r\n\r\n    _done() {\r\n        this._myTimeLeft = 0;\r\n        this._myDone = true;\r\n        this._myJustDone = true;\r\n\r\n        this._myOnEndEmitter.notify();\r\n    }\r\n}", "import { initCursorComponentMod } from \"./cursor_component_mod\";\r\nimport { initCursorTargetComponentMod } from \"./cursor_target_component_mod\";\r\nimport { initMouseLookComponentMod } from \"./mouse_look_component_mod\";\r\n\r\nexport function initComponentMods() {\r\n    initCursorComponentMod();\r\n    initCursorTargetComponentMod();\r\n    initMouseLookComponentMod();\r\n}", "import { initComponentMods } from \"./components/init_component_mods\";\r\n\r\nexport function initWLMods() {\r\n    initComponentMods();\r\n}", "import { initWLExtensions } from \"./extensions/init_wl_extentions\";\r\nimport { initWLMods } from \"./mods/init_wl_mods\";\r\n\r\nexport function initWLPlugins(engine) {\r\n    initWLExtensions(engine);\r\n    initWLMods();\r\n}", "import { initJSPlugins } from \"./js/init_js_plugins\";\r\nimport { initWLPlugins } from \"./wl/init_wl_plugins\";\r\n\r\nexport function initPlugins(engine) {\r\n    initJSPlugins();\r\n    initWLPlugins(engine);\r\n}", "import { AddPPToWindowComponent, AddWLToWindowComponent, AdjustHierarchyPhysXScaleComponent, AudioManagerComponent, BenchmarkMaxPhysXComponent, BenchmarkMaxVisibleTrianglesComponent, CADisplayLeaderboardComponent, CharacterCollisionSystemComponent, ClearConsoleOnXRSessionStartComponent, ConsoleVRToolComponent, CopyHandTransformComponent, CopyHeadTransformComponent, CopyPlayerTransformComponent, CopyReferenceSpaceTransformComponent, DebugArrayFunctionsPerformanceAnalyzerComponent, DebugFunctionsPerformanceAnalyzerComponent, DebugManagerComponent, DebugPPFunctionsPerformanceAnalyzerComponent, DebugTransformComponent, DebugWLComponentsFunctionsPerformanceAnalyzerComponent, DebugWLFunctionsPerformanceAnalyzerComponent, EasyLightAttenuationComponent, EasyLightColorComponent, EasyMeshAmbientFactorComponent, EasyMeshColorComponent, EasyScaleComponent, EasySetTuneTargeetGrabComponent, EasySetTuneTargetChildNumberComponent, EasyTextColorComponent, EasyTransformComponent, EasyTuneImportVariablesComponent, EasyTuneToolComponent, EnableDebugComponent, EnableToolComponent, FingerCursorComponent, GamepadControlSchemeComponent, GamepadMeshAnimatorComponent, GetDefaultResourcesComponent, GetSceneObjectsComponent, GrabbableComponent, GrabberHandComponent, InitConsoleVRComponent, InitEasyTuneVariablesComponent, InputManagerComponent, MuteEverythingComponent, ObjectPoolManagerComponent, PPGatewayComponent, PlayerLocomotionComponent, SetActiveComponent, SetHandLocalTransformComponent, SetHeadLocalTransformComponent, SetPlayerHeightComponent, SetTrackedHandJointLocalTransformComponent, ShowFPSComponent, SpatialAudioListenerComponent, SwitchHandObjectComponent, ToolCursorComponent, TrackedHandDrawAllJointsComponent, TrackedHandDrawJointComponent, TrackedHandDrawSkinComponent, VirtualGamepadComponent, VisualManagerComponent } from \"..\";\r\n\r\nexport function registerPPComponents(engine) {\r\n    engine.registerComponent(\r\n        AddPPToWindowComponent,\r\n        AddWLToWindowComponent,\r\n        AdjustHierarchyPhysXScaleComponent,\r\n        AudioManagerComponent,\r\n        BenchmarkMaxPhysXComponent,\r\n        BenchmarkMaxVisibleTrianglesComponent,\r\n        CADisplayLeaderboardComponent,\r\n        CharacterCollisionSystemComponent,\r\n        ClearConsoleOnXRSessionStartComponent,\r\n        ConsoleVRToolComponent,\r\n        CopyHandTransformComponent,\r\n        CopyHeadTransformComponent,\r\n        CopyReferenceSpaceTransformComponent,\r\n        CopyPlayerTransformComponent,\r\n        DebugArrayFunctionsPerformanceAnalyzerComponent,\r\n        DebugFunctionsPerformanceAnalyzerComponent,\r\n        DebugManagerComponent,\r\n        DebugPPFunctionsPerformanceAnalyzerComponent,\r\n        DebugTransformComponent,\r\n        DebugWLComponentsFunctionsPerformanceAnalyzerComponent,\r\n        DebugWLFunctionsPerformanceAnalyzerComponent,\r\n        EasyLightAttenuationComponent,\r\n        EasyLightColorComponent,\r\n        EasyMeshAmbientFactorComponent,\r\n        EasyMeshColorComponent,\r\n        EasyScaleComponent,\r\n        EasySetTuneTargeetGrabComponent,\r\n        EasySetTuneTargetChildNumberComponent,\r\n        EasyTextColorComponent,\r\n        EasyTransformComponent,\r\n        EasyTuneImportVariablesComponent,\r\n        EasyTuneToolComponent,\r\n        EnableDebugComponent,\r\n        EnableToolComponent,\r\n        FingerCursorComponent,\r\n        GamepadControlSchemeComponent,\r\n        GamepadMeshAnimatorComponent,\r\n        GetDefaultResourcesComponent,\r\n        GetSceneObjectsComponent,\r\n        GrabbableComponent,\r\n        GrabberHandComponent,\r\n        InitConsoleVRComponent,\r\n        InitEasyTuneVariablesComponent,\r\n        InputManagerComponent,\r\n        MuteEverythingComponent,\r\n        ObjectPoolManagerComponent,\r\n        PPGatewayComponent,\r\n        PlayerLocomotionComponent,\r\n        SetActiveComponent,\r\n        SetHandLocalTransformComponent,\r\n        SetHeadLocalTransformComponent,\r\n        SetPlayerHeightComponent,\r\n        SetTrackedHandJointLocalTransformComponent,\r\n        ShowFPSComponent,\r\n        SpatialAudioListenerComponent,\r\n        SwitchHandObjectComponent,\r\n        ToolCursorComponent,\r\n        TrackedHandDrawAllJointsComponent,\r\n        TrackedHandDrawJointComponent,\r\n        TrackedHandDrawSkinComponent,\r\n        VirtualGamepadComponent,\r\n        VisualManagerComponent);\r\n}", "import { registerWLComponents } from \"../cauldron/wl/register_wl_components\";\r\nimport { ComponentUtils } from \"../cauldron/wl/utils/component_utils\";\r\nimport { initPlugins } from \"../plugin/init_plugins\";\r\nimport { Globals } from \"./globals\";\r\nimport { registerPPComponents } from \"./register_pp_components\";\r\n\r\nexport function initPP(engine) {\r\n    Globals.initEngine(engine);\r\n\r\n    ComponentUtils.setDefaultWLComponentCloneCallbacks(engine);\r\n\r\n    registerWLComponents(engine);\r\n    registerPPComponents(engine);\r\n\r\n    initPlugins(engine);\r\n}", "export class SceneObjects {\r\n\r\n    constructor() {\r\n        this.myScene = null;\r\n\r\n        this.myCauldron = null;\r\n        this.myDynamics = null;\r\n        this.myParticles = null;\r\n        this.myVisualElements = null;\r\n        this.myTools = null;\r\n\r\n        this.myPlayerObjects = new PlayerObjects();\r\n    }\r\n}\r\n\r\nexport class PlayerObjects {\r\n\r\n    constructor() {\r\n        this.myPlayer = null;\r\n\r\n        this.myCauldron = null;\r\n        this.myReferenceSpace = null;\r\n\r\n        this.myCameraNonXR = null;\r\n\r\n        this.myEyes = [];\r\n        this.myEyeLeft = null;\r\n        this.myEyeRight = null;\r\n\r\n        this.myHands = [];\r\n        this.myHandLeft = null;\r\n        this.myHandRight = null;\r\n\r\n        this.myHead = null;\r\n        this.myHeadDebugs = null;\r\n    }\r\n}", "export class DefaultResources {\r\n\r\n    constructor() {\r\n        this.myMeshes = new DefaultResourcesMeshes();\r\n        this.myMaterials = new DefaultResourcesMaterials();\r\n    }\r\n}\r\n\r\nexport class DefaultResourcesMeshes {\r\n\r\n    constructor() {\r\n        this.myPlane = null;\r\n        this.myCube = null;\r\n        this.mySphere = null;\r\n        this.myCone = null;\r\n        this.myCylinder = null;\r\n        this.myCircle = null;\r\n\r\n        this.myInvertedCube = null;\r\n        this.myInvertedSphere = null;\r\n        this.myInvertedCone = null;\r\n        this.myInvertedCylinder = null;\r\n\r\n        this.myDoubleSidedPlane = null;\r\n        this.myDoubleSidedCube = null;\r\n        this.myDoubleSidedSphere = null;\r\n        this.myDoubleSidedCone = null;\r\n        this.myDoubleSidedCylinder = null;\r\n        this.myDoubleSidedCircle = null;\r\n    }\r\n}\r\n\r\nexport class DefaultResourcesMaterials {\r\n\r\n    constructor() {\r\n        this.myFlatOpaque = null;\r\n        this.myFlatTransparentNoDepth = null; // For now the pipeline needs to be the last one to make this work properly\r\n        this.myPhongOpaque = null;\r\n        this.myText = null;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { AudioManagerComponent } from \"../../audio/components/audio_manager_component\";\r\nimport { ObjectPoolManagerComponent } from \"../../cauldron/object_pool/components/object_pool_manager_component\";\r\nimport { VisualManagerComponent } from \"../../cauldron/visual/components/visual_manager_component\";\r\nimport { AddWLToWindowComponent } from \"../../cauldron/wl/components/add_wl_to_window_component\";\r\nimport { DebugManagerComponent } from \"../../debug/components/debug_manager_component\";\r\nimport { EnableDebugComponent } from \"../../debug/components/enable_debug_component\";\r\nimport { InputManagerComponent } from \"../../input/cauldron/components/input_manager_component\";\r\nimport { EnableToolComponent } from \"../../tool/cauldron/components/enable_tool_component\";\r\nimport { InitEasyTuneVariablesComponent } from \"../../tool/easy_tune/components/init_easy_tune_variables_component\";\r\nimport { initPP } from \"../init_pp\";\r\nimport { AddPPToWindowComponent } from \"./add_pp_to_window_component\";\r\nimport { GetDefaultResourcesComponent } from \"./get_default_resources_component\";\r\nimport { GetSceneObjectsComponent } from \"./get_scene_objects_component\";\r\n\r\nlet _myRegisteredEngines = new WeakMap();\r\n\r\nexport class PPGatewayComponent extends Component {\r\n    static TypeName = \"pp-gateway\";\r\n    static Properties = {\r\n        _myEnableDebug: Property.bool(true),\r\n        _myEnableTool: Property.bool(true),\r\n        _myAddPPToWindow: Property.bool(true),\r\n        _myAddWLToWindow: Property.bool(true),\r\n        _myInitEasyTuneVariables: Property.bool(true),\r\n        ...ObjectPoolManagerComponent.Properties,\r\n        ...InputManagerComponent.Properties,\r\n        ...AudioManagerComponent.Properties,\r\n        ...VisualManagerComponent.Properties,\r\n        ...DebugManagerComponent.Properties,\r\n        ...GetSceneObjectsComponent.Properties,\r\n        ...GetDefaultResourcesComponent.Properties\r\n    };\r\n\r\n    static onRegister(engine) {\r\n        if (!_myRegisteredEngines.has(engine)) {\r\n            _myRegisteredEngines.set(engine, null);\r\n            initPP(engine);\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this._myGetDefaultResourcesComponent = this.object.pp_addComponent(GetDefaultResourcesComponent, this._getProperties(GetDefaultResourcesComponent.Properties));\r\n        this._myGetSceneObjectsComponent = this.object.pp_addComponent(GetSceneObjectsComponent, this._getProperties(GetSceneObjectsComponent.Properties));\r\n\r\n        this._myEnableDebugComponent = null;\r\n        if (this._myEnableDebug) {\r\n            this._myEnableDebugComponent = this.object.pp_addComponent(EnableDebugComponent, false);\r\n        }\r\n\r\n        this._myEnableToolComponent = null;\r\n        if (this._myEnableTool) {\r\n            this._myEnableToolComponent = this.object.pp_addComponent(EnableToolComponent, false);\r\n        }\r\n\r\n        this._myAddPPToWindowComponent = null;\r\n        if (this._myAddPPToWindow) {\r\n            this._myAddPPToWindowComponent = this.object.pp_addComponent(AddPPToWindowComponent, false);\r\n        }\r\n\r\n        this._myAddWLToWindowComponent = null;\r\n        if (this._myAddWLToWindow) {\r\n            this._myAddWLToWindowComponent = this.object.pp_addComponent(AddWLToWindowComponent, false);\r\n        }\r\n\r\n        this._myInitEasyTuneVariablesComponent = null;\r\n        if (this._myInitEasyTuneVariables) {\r\n            this._myInitEasyTuneVariablesComponent = this.object.pp_addComponent(InitEasyTuneVariablesComponent, false);\r\n        }\r\n\r\n        this._myObjectPoolManagerComponent = this.object.pp_addComponent(ObjectPoolManagerComponent, false);\r\n        this._myInputManagerComponent = this.object.pp_addComponent(InputManagerComponent, this._getProperties(InputManagerComponent.Properties));\r\n        this._myAudioManagerComponent = this.object.pp_addComponent(AudioManagerComponent, false);\r\n        this._myVisualManagerComponent = this.object.pp_addComponent(VisualManagerComponent, false);\r\n        this._myDebugManagerComponent = this.object.pp_addComponent(DebugManagerComponent, false);\r\n    }\r\n\r\n    start() {\r\n        this._myGetDefaultResourcesComponent.active = true;\r\n        this._myGetSceneObjectsComponent.active = true;\r\n\r\n        if (this._myEnableDebugComponent != null) {\r\n            this._myEnableDebugComponent.active = true;\r\n        }\r\n\r\n        if (this._myEnableToolComponent != null) {\r\n            this._myEnableToolComponent.active = true;\r\n        }\r\n\r\n        if (this._myAddPPToWindowComponent != null) {\r\n            this._myAddPPToWindowComponent.active = true;\r\n        }\r\n\r\n        if (this._myAddWLToWindowComponent != null) {\r\n            this._myAddWLToWindowComponent.active = true;\r\n        }\r\n\r\n        if (this._myInitEasyTuneVariablesComponent != null) {\r\n            this._myInitEasyTuneVariablesComponent.active = true;\r\n        }\r\n\r\n        this._myObjectPoolManagerComponent.active = true;\r\n        this._myInputManagerComponent.active = true;\r\n        this._myAudioManagerComponent.active = true;\r\n        this._myVisualManagerComponent.active = true;\r\n        this._myDebugManagerComponent.active = true;\r\n    }\r\n\r\n    _getProperties(propertiesToGet, active = false) {\r\n        let properties = {};\r\n        properties[\"active\"] = active;\r\n        let propertyNames = Object.getOwnPropertyNames(propertiesToGet);\r\n\r\n        for (let propertyName of propertyNames) {\r\n            if (this[propertyName] != undefined) {\r\n                properties[propertyName] = this[propertyName];\r\n            }\r\n        }\r\n\r\n        return properties;\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { AudioManager } from \"../audio_manager\";\r\n\r\nexport class AudioManagerComponent extends Component {\r\n    static TypeName = \"pp-audio-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myAudioManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasAudioManager(this.engine)) {\r\n            this._myAudioManager = new AudioManager();\r\n\r\n            Globals.setAudioManager(this._myAudioManager, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myAudioManager != null && Globals.getAudioManager(this.engine) == this._myAudioManager) {\r\n            Globals.removeAudioManager(this.engine);\r\n        }\r\n    }\r\n}", "import { Howler } from \"howler\";\r\nimport { AudioPlayer } from \"./audio_player\";\r\n\r\nexport class AudioManager {\r\n\r\n    constructor() {\r\n        this._myAudioSetups = new Map();\r\n    }\r\n\r\n    createAudioPlayer(audioSetupID) {\r\n        let audioSetup = this.getAudioSetup(audioSetupID);\r\n        if (audioSetup != null) {\r\n            return new AudioPlayer(this.getAudioSetup(audioSetupID));\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAudioSetup(id) {\r\n        return this._myAudioSetups.get(id);\r\n    }\r\n\r\n    addAudioSetup(id, audioSetup, preload = true) {\r\n        this._myAudioSetups.set(id, audioSetup);\r\n        if (preload) {\r\n            this.createAudioPlayer(id);\r\n        }\r\n    }\r\n\r\n    removeAudioSetup(id) {\r\n        this._myAudioSetups.delete(id);\r\n    }\r\n\r\n    setVolume(volume) {\r\n        Howler.volume(volume);\r\n    }\r\n\r\n    setMute(mute) {\r\n        Howler.mute(mute);\r\n    }\r\n\r\n    stop() {\r\n        Howler.stop();\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { Howl } from \"howler\";\r\nimport { AudioSetup } from \"./audio_setup\";\r\n\r\nexport let AudioEvent = {\r\n    END: \"end\",\r\n    STOP: \"stop\",\r\n    LOAD: \"load\",\r\n    LOAD_ERROR: \"loaderror\",\r\n    PLAY: \"play\",\r\n    PLAY_ERROR: \"playerror\",\r\n    PAUSE: \"pause\",\r\n    MUTE: \"mute\",\r\n    VOLUME: \"volume\",\r\n    RATE: \"rate\",\r\n    SEEK: \"seek\",\r\n    FADE: \"fade\",\r\n    UNLOCK: \"unlock\"\r\n};\r\n\r\nexport class AudioPlayer {\r\n\r\n    constructor(audioSetupOrAudioFilePath, audioInstance = null) {\r\n        if (audioSetupOrAudioFilePath == null) {\r\n            this._myAudioSetup = new AudioSetup();\r\n        } else if (typeof audioSetupOrAudioFilePath === \"string\") {\r\n            this._myAudioSetup = new AudioSetup(audioSetupOrAudioFilePath);\r\n        } else {\r\n            this._myAudioSetup = audioSetupOrAudioFilePath.clone();\r\n        }\r\n\r\n        this._myAudio = null;\r\n\r\n        if (audioInstance == null) {\r\n            this._myAudio = new Howl({\r\n                src: [this._myAudioSetup.myAudioFilePath],\r\n                loop: this._myAudioSetup.myLoop,\r\n                volume: this._myAudioSetup.myVolume,\r\n                autoplay: false,\r\n                rate: this._myAudioSetup.myRate,\r\n                pool: this._myAudioSetup.myPool,\r\n                pos: (this._myAudioSetup.mySpatial) ? this._myAudioSetup.myPosition : null,\r\n                refDistance: this._myAudioSetup.myReferenceDistance,\r\n                preload: this._myAudioSetup.myPreLoad\r\n            });\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n        } else {\r\n            this._myAudio = audioInstance;\r\n        }\r\n\r\n        this._myLastAudioID = null;\r\n\r\n        this._myAudioEventEmitters = new Map();\r\n        for (let eventKey in AudioEvent) {\r\n            this._myAudioEventEmitters.set(AudioEvent[eventKey], new Emitter());    // Signature: listener(audioID)\r\n        }\r\n\r\n        this._addListeners();\r\n\r\n        if (this._myAudioSetup.myAutoPlay) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return this._myAudio != null;\r\n    }\r\n\r\n    play() {\r\n        if (Howler.state != \"running\" && this._myAudioSetup.myPreventPlayWhenAudioContextNotRunning) {\r\n            return false;\r\n        }\r\n\r\n        let audioID = this._myAudio.play();\r\n        if (audioID != null) {\r\n            this._myLastAudioID = audioID;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition, true);\r\n            this.updatePitch(this._myAudioSetup.myPitch, true);\r\n            this.updateVolume(this._myAudioSetup.myVolume, true);\r\n        }\r\n\r\n        return audioID != null;\r\n    }\r\n\r\n    stop() {\r\n        this._myAudio.stop();\r\n    }\r\n\r\n    pause() {\r\n        this._myAudio.pause();\r\n    }\r\n\r\n    resume() {\r\n        this._myAudio.play();\r\n    }\r\n\r\n    isPlaying(checkOnlyLast = false) {\r\n        let playing = false;\r\n\r\n        if (checkOnlyLast) {\r\n            playing = this._myAudio.playing(this._myLastAudioID);\r\n        }\r\n        else {\r\n            playing = this._myAudio.playing();\r\n        }\r\n\r\n        return playing;\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._myAudio.state() == \"loaded\";\r\n    }\r\n\r\n    fade(fromVolume, toVolume, duration, updateOnlyLast = true, setValueOnPlayer = true) {\r\n        if (setValueOnPlayer) {\r\n            this.setVolume(toVolume);\r\n        }\r\n\r\n        if (updateOnlyLast) {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000, this._myLastAudioID);\r\n        } else {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000);\r\n        }\r\n    }\r\n\r\n    isFading(checkOnlyLast = true) {\r\n        let fading = false;\r\n\r\n        if (checkOnlyLast) {\r\n            let lastSound = this._myAudio._soundById(this._myLastAudioID);\r\n            if (lastSound != null) {\r\n                fading = lastSound._fadeTo != null;\r\n            }\r\n        } else {\r\n            for (let sound of this._myAudio._sounds) {\r\n                if (sound._fadeTo != null) {\r\n                    fading = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return fading;\r\n    }\r\n\r\n    updatePosition(position, updateOnlyLast = true, setValueOnPlayer = true) {\r\n        if (setValueOnPlayer) {\r\n            this.setPosition(position);\r\n        }\r\n\r\n        if (this._myAudioSetup.mySpatial && position) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.pos(position[0], position[1], position[2], this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.pos(position[0], position[1], position[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePitch(pitch, updateOnlyLast = true, setValueOnPlayer = true) {\r\n        this.updateRate(pitch, updateOnlyLast, setValueOnPlayer);\r\n    }\r\n\r\n    updateRate(rate, updateOnlyLast = true, setValueOnPlayer = true) {\r\n        if (setValueOnPlayer) {\r\n            this.setRate(rate);\r\n        }\r\n\r\n        if (rate != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.rate(rate, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.rate(rate);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVolume(volume, updateOnlyLast = true, setValueOnPlayer = true) {\r\n        if (setValueOnPlayer) {\r\n            this.setVolume(volume);\r\n        }\r\n\r\n        if (volume != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.volume(volume, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.volume(volume);\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpatial(spatial) {\r\n        this._myAudioSetup.mySpatial = spatial;\r\n    }\r\n\r\n    setPosition(position) {\r\n        this._myAudioSetup.myPosition = position;\r\n    }\r\n\r\n    setPitch(pitch) {\r\n        this._myAudioSetup.myPitch = pitch;\r\n    }\r\n\r\n    setRate(rate) {\r\n        this._myAudioSetup.myRate = rate;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        this._myAudioSetup.myVolume = volume;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myAudio.duration();\r\n    }\r\n\r\n    getVolume() {\r\n        return this._myAudioSetup.myVolume;\r\n    }\r\n\r\n    getPitch() {\r\n        return this._myAudioSetup.myPitch;\r\n    }\r\n\r\n    getRate() {\r\n        return this._myAudioSetup.myRate;\r\n    }\r\n\r\n    registerAudioEventListener(audioEvent, id, listener, notifyOnce = false) {\r\n        this._myAudioEventEmitters.get(audioEvent).add(listener, { id: id, once: notifyOnce });\r\n    }\r\n\r\n    unregisterAudioEventListener(audioEvent, id) {\r\n        this._myAudioEventEmitters.get(audioEvent).remove(id);\r\n    }\r\n\r\n    _addListeners() {\r\n        if (this._myAudio != null) {\r\n            for (let eventKey in AudioEvent) {\r\n                let event = AudioEvent[eventKey];\r\n                this._myAudio.on(event, function (audioID) {\r\n                    let emitter = this._myAudioEventEmitters.get(event);\r\n                    emitter.notify(audioID);\r\n                }.bind(this));\r\n            }\r\n        }\r\n    }\r\n}", "export class AudioSetup {\r\n\r\n    constructor(audioFilePath = null) {\r\n        this.myAudioFilePath = audioFilePath;\r\n\r\n        this.myLoop = false;\r\n        this.myAutoPlay = false;\r\n\r\n        this.myVolume = 1.0;\r\n        this._myRate = 1.0; // From 0.5 to 4.0\r\n\r\n        this.myPool = 5;\r\n        this.myPreLoad = true;\r\n\r\n        this.myPreventPlayWhenAudioContextNotRunning = false;\r\n\r\n        // Spatial Params\r\n\r\n        this.myPosition = null;\r\n        this.mySpatial = true;\r\n        this.myReferenceDistance = Number.MAX_VALUE; // At this distance (and closer) the volume is not reduced\r\n    }\r\n\r\n    clone() {\r\n        let audioSetup = new AudioSetup();\r\n\r\n        audioSetup.myAudioFilePath = this.myAudioFilePath;\r\n\r\n        audioSetup.myLoop = this.myLoop;\r\n        audioSetup.myAutoPlay = this.myAutoPlay;\r\n\r\n        audioSetup.myVolume = this.myVolume;\r\n        audioSetup.myPitch = this.myPitch;\r\n        audioSetup.myRate = this.myRate;\r\n\r\n        audioSetup.myPool = this.myPool;\r\n        audioSetup.myPreLoad = this.myPreLoad;\r\n\r\n        audioSetup.myPreventPlayWhenAudioContextNotRunning = this.myPreventPlayWhenAudioContextNotRunning;\r\n\r\n        // Spatial\r\n\r\n        if (this.myPosition != null) {\r\n            audioSetup.myPosition = this.myPosition.vec3_clone();\r\n        } else {\r\n            audioSetup.myPosition = null;\r\n        }\r\n\r\n        audioSetup.mySpatial = this.mySpatial;\r\n        audioSetup.myReferenceDistance = this.myReferenceDistance;\r\n\r\n        return audioSetup;\r\n    }\r\n\r\n    get myPitch() {\r\n        return this._myRate;\r\n    }\r\n\r\n    get myRate() {\r\n        return this._myRate;\r\n    }\r\n\r\n    set myPitch(pitch) {\r\n        this._myRate = pitch;\r\n    }\r\n\r\n    set myRate(rate) {\r\n        this._myRate = rate;\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { ObjectPoolManager } from \"../object_pool_manager\";\r\n\r\nexport class ObjectPoolManagerComponent extends Component {\r\n    static TypeName = \"pp-object-pools-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myObjectPoolManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasObjectPoolManager(this.engine)) {\r\n            this._myObjectPoolManager = new ObjectPoolManager();\r\n\r\n            Globals.setObjectPoolManager(this._myObjectPoolManager, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myObjectPoolManager != null && Globals.getObjectPoolManager(this.engine) == this._myObjectPoolManager) {\r\n            Globals.removeObjectPoolManager(this.engine);\r\n        }\r\n    }\r\n}", "export class ObjectPoolManager {\r\n\r\n    constructor() {\r\n        this._myPools = new Map();\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    addPool(poolID, pool) {\r\n        if (!this._myPools.has(poolID)) {\r\n            this._myPools.set(poolID, pool);\r\n        } else {\r\n            console.warn(\"Trying to add a Pool with an ID that has been already used:\", poolID);\r\n        }\r\n    }\r\n\r\n    removePool(poolID) {\r\n        let poolToRemove = this._myPools.get(poolID);\r\n        if (poolToRemove != null) {\r\n            this._myPools.delete(poolID);\r\n            poolToRemove.destroy();\r\n        }\r\n    }\r\n\r\n    getPool(poolID) {\r\n        return this._myPools.get(poolID);\r\n    }\r\n\r\n    hasPool(poolID) {\r\n        return this._myPools.has(poolID);\r\n    }\r\n\r\n    get(poolID) {\r\n        if (this._myPools.has(poolID)) {\r\n            return this._myPools.get(poolID).get();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    release(poolIDOrObject, object) {\r\n        if (object === undefined) {\r\n            for (let pool of this._myPools.values()) {\r\n                pool.release(poolIDOrObject);\r\n            }\r\n        } else {\r\n            this._myPools.get(poolIDOrObject).release(object);\r\n        }\r\n    }\r\n\r\n    releaseAll(poolID = undefined) {\r\n        if (poolID === undefined) {\r\n            for (let pool of this._myPools.values()) {\r\n                pool.releaseAll();\r\n            }\r\n        } else {\r\n            this._myPools.get(poolID).releaseAll();\r\n        }\r\n    }\r\n\r\n    increase(poolID, amount) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increase(amount);\r\n        }\r\n    }\r\n\r\n    increasePercentage(poolID, percentage) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increasePercentage(percentage);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let pool of this._myPools.values()) {\r\n            pool.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualManager } from \"../visual_manager\";\r\nimport { VisualResources } from \"../visual_resources\";\r\n\r\nexport class VisualManagerComponent extends Component {\r\n    static TypeName = \"pp-visual-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myVisualManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasVisualManager(this.engine)) {\r\n            this._myVisualManager = new VisualManager(this.engine);\r\n\r\n            Globals.setVisualManager(this._myVisualManager, this.engine);\r\n        }\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasVisualResources(this.engine)) {\r\n            this._myVisualResources = new VisualResources();\r\n\r\n            Globals.setVisualResources(this._myVisualResources, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myVisualResources != null) {\r\n            this._myVisualResources.myDefaultMaterials.myMesh = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n\r\n            this._myVisualResources.myDefaultMaterials.myText = Globals.getDefaultMaterials(this.engine).myText.clone();\r\n\r\n            this._myVisualResources.myDefaultMaterials.myRight = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            this._myVisualResources.myDefaultMaterials.myRight.color = vec4_create(1, 0, 0, 1);\r\n            this._myVisualResources.myDefaultMaterials.myUp = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            this._myVisualResources.myDefaultMaterials.myUp.color = vec4_create(0, 1, 0, 1);\r\n            this._myVisualResources.myDefaultMaterials.myForward = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            this._myVisualResources.myDefaultMaterials.myForward.color = vec4_create(0, 0, 1, 1);\r\n\r\n            this._myVisualResources.myDefaultMaterials.myRay = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            this._myVisualResources.myDefaultMaterials.myRay.color = vec4_create(0, 1, 0, 1);\r\n            this._myVisualResources.myDefaultMaterials.myHitNormal = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            this._myVisualResources.myDefaultMaterials.myHitNormal.color = vec4_create(1, 0, 0, 1);\r\n        }\r\n\r\n        if (this.myVisualManager != null) {\r\n            this.myVisualManager.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.myVisualManager != null) {\r\n            this.myVisualManager.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myVisualManager != null && Globals.getVisualManager(this.engine) == this._myVisualManager) {\r\n            Globals.removeVisualManager(this.engine);\r\n\r\n            this._myVisualManager.destroy();\r\n        }\r\n\r\n        if (this._myVisualResources != null && Globals.getVisualResources(this.engine) == this._myVisualResources) {\r\n            Globals.removeVisualResources(this.engine);\r\n        }\r\n    }\r\n}", "export class ObjectPoolParams {\r\n\r\n    constructor() {\r\n        this.myInitialPoolSize = 0;\r\n        this.myAmountToAddWhenEmpty = 0;        // If all the objects are busy, this amount will be added to the pool\r\n        this.myPercentageToAddWhenEmpty = 0;    // If all the objects are busy, this percentage of the current pool size will be added to the pool        \r\n\r\n        this.myCloneParams = undefined;\r\n\r\n        this.myOptimizeObjectsAllocation = true;    // If true it will pre-allocate the memory before adding new objects to the pool\r\n\r\n        // These extra functions can be used if u want to use the pool with objects that are not from WL (WL Object)\r\n        this.myCloneCallback = undefined;                       // Signature: callback(object, cloneParams) -> clonedObject\r\n        this.mySetActiveCallback = undefined;                   // Signature: callback(object, active)\r\n        this.myEqualCallback = undefined;                       // Signature: callback(firstObject, secondObject) -> bool\r\n        this.myDestroyCallback = undefined;                     // Signature: callback(object)\r\n        this.myOptimizeObjectsAllocationCallback = undefined;   // Signature: callback(object, numberOfObjectsToAllocate)\r\n\r\n        this.myLogEnabled = false;\r\n    }\r\n}\r\n\r\nexport class ObjectPool {\r\n\r\n    constructor(poolObject, objectPoolParams) {\r\n        this._myObjectPoolParams = objectPoolParams;\r\n        this._myPrototype = this._clone(poolObject);\r\n\r\n        this._myAvailableObjects = [];\r\n        this._myBusyObjects = [];\r\n\r\n        this._addToPool(objectPoolParams.myInitialPoolSize, false);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    get() {\r\n        let object = this._myAvailableObjects.shift();\r\n\r\n        if (object == null) {\r\n            let amountToAdd = Math.ceil(this._myBusyObjects.length * this._myObjectPoolParams.myPercentageToAddWhenEmpty);\r\n            amountToAdd += this._myObjectPoolParams.myAmountToAddWhenEmpty;\r\n            this._addToPool(amountToAdd, this._myObjectPoolParams.myLogEnabled);\r\n            object = this._myAvailableObjects.shift();\r\n        }\r\n\r\n        // Object could still be null if the amountToAdd is 0\r\n        if (object != null) {\r\n            this._myBusyObjects.push(object);\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    release(object) {\r\n        let released = this._myBusyObjects.pp_remove(this._equals.bind(this, object));\r\n        if (released != null) {\r\n            this._setActive(released, false);\r\n            this._myAvailableObjects.push(released);\r\n        }\r\n    }\r\n\r\n    releaseAll() {\r\n        for (let busyObject of this._myBusyObjects) {\r\n            this._setActive(busyObject, false);\r\n            this._myAvailableObjects.push(busyObject);\r\n        }\r\n    }\r\n\r\n    increase(amount) {\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    increasePercentage(percentage) {\r\n        let amount = Math.ceil((this.getSize()) * percentage);\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    getSize() {\r\n        return this._myBusyObjects.length + this._myAvailableObjects.length;\r\n    }\r\n\r\n    getAvailableSize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    getBusySize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    _addToPool(size, logEnabled) {\r\n        if (size <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._myObjectPoolParams.myOptimizeObjectsAllocation) {\r\n            if (this._myObjectPoolParams.myOptimizeObjectsAllocationCallback != null) {\r\n                this._myObjectPoolParams.myOptimizeObjectsAllocationCallback(this._myPrototype, size);\r\n            } else if (this._myPrototype.pp_reserveObjects != null) {\r\n                this._myPrototype.pp_reserveObjects(size);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            this._myAvailableObjects.push(this._clone(this._myPrototype));\r\n        }\r\n\r\n        if (logEnabled) {\r\n            console.warn(\"Added new elements to the pool:\", size);\r\n        }\r\n    }\r\n\r\n    _clone(object) {\r\n        let clone = null;\r\n\r\n        if (this._myObjectPoolParams.myCloneCallback != null) {\r\n            clone = this._myObjectPoolParams.myCloneCallback(object, this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.pp_clone != null) {\r\n            clone = object.pp_clone(this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.clone != null) {\r\n            clone = object.clone(this._myObjectPoolParams.myCloneParams);\r\n        }\r\n\r\n        if (clone == null) {\r\n            console.error(\"Object not cloneable, pool will return null\");\r\n        } else {\r\n            this._setActive(clone, false);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    _setActive(object, active) {\r\n        if (this._myObjectPoolParams.mySetActiveCallback != null) {\r\n            this._myObjectPoolParams.mySetActiveCallback(object, active);\r\n        } else if (object.pp_setActive != null) {\r\n            object.pp_setActive(active);\r\n        } else if (object.setActive != null) {\r\n            object.setActive(active);\r\n        }\r\n    }\r\n\r\n    _equals(first, second) {\r\n        let equals = false;\r\n\r\n        if (this._myObjectPoolParams.myEqualCallback != null) {\r\n            equals = this._myObjectPoolParams.myEqualCallback(first, second);\r\n        } else if (first.pp_equals != null) {\r\n            equals = first.pp_equals(second);\r\n        } else if (first.equals != null) {\r\n            equals = first.equals(second);\r\n        } else {\r\n            equals = first == second;\r\n        }\r\n\r\n        return equals;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let object of this._myAvailableObjects) {\r\n            this._destroyObject(object);\r\n        }\r\n\r\n        for (let object of this._myBusyObjects) {\r\n            this._destroyObject(object);\r\n        }\r\n\r\n        this._destroyObject(this._myPrototype);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n\r\n    _destroyObject(object) {\r\n        if (this._myObjectPoolParams.myDestroyCallback != null) {\r\n            this._myObjectPoolParams.myDestroyCallback(object);\r\n        } else if (object.pp_destroy != null) {\r\n            object.pp_destroy(active);\r\n        } else if (object.destroy != null) {\r\n            object.destroy(active);\r\n        }\r\n    }\r\n}", "/*\r\nlet visualParams = new VisualArrowParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualArrow = new VisualArrow(visualParams);\r\n*/\r\n\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./visual_line\";\r\n\r\nexport class VisualArrowParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myStart = vec3_create();\r\n        this.myDirection = vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myArrowThickness = null;   // null means this.myThickness * 1.5 will be used\r\n        this.myArrowLength = null;      // null means this.myThickness * 3.5 will be used\r\n\r\n        this.myShareArrowLengthWithLineWhenArrowLongerThanLength = true;\r\n\r\n        this.myLineMesh = null;     // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n        this.myArrowMesh = null;    // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCone\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.ARROW;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualArrow {\r\n\r\n    constructor(params = new VisualArrowParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualLine = new VisualLine(new VisualLineParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualLine.setAutoRefresh(false);\r\n\r\n        this._myArrowParentObject = null;\r\n        this._myArrowObject = null;\r\n        this._myArrowMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualLine.setVisible(visible);\r\n            this._myArrowParentObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualLine.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualLine.update(dt);\r\n    }\r\n\r\n    _build() {\r\n        this._myArrowParentObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n        this._myArrowObject = this._myArrowParentObject.pp_addObject();\r\n\r\n        this._myArrowMeshComponent = this._myArrowObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualArrowParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualArrow(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myVisualLine.destroy();\r\n        this._myArrowParentObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualArrow.prototype._refresh = function () {\r\n    let arrowPosition = vec3_create();\r\n    let parentTranslate = vec3_create();\r\n    let arrowScale = vec3_create();\r\n\r\n    let forward = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myArrowParentObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        let arrowThickness = (this._myParams.myArrowThickness != null) ? this._myParams.myArrowThickness : this._myParams.myThickness * 1.5;\r\n        let arrowLength = (this._myParams.myArrowLength != null) ? this._myParams.myArrowLength : this._myParams.myThickness * 3.5;\r\n\r\n        if (this._myParams.myShareArrowLengthWithLineWhenArrowLongerThanLength && arrowLength > this._myParams.myLength / 2) {\r\n            arrowLength = this._myParams.myLength / 2;\r\n        }\r\n\r\n        arrowLength = Math.min(arrowLength, this._myParams.myLength);\r\n\r\n        arrowScale.vec3_set(arrowThickness, arrowLength / 2, arrowThickness);\r\n\r\n        let lineLength = this._myParams.myLength - arrowLength;\r\n\r\n        this._myParams.myDirection.vec3_scale(lineLength, arrowPosition);\r\n        arrowPosition.vec3_add(this._myParams.myStart, arrowPosition);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myArrowParentObject.pp_setPositionLocal(arrowPosition);\r\n            this._myArrowParentObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myArrowParentObject.pp_setPosition(arrowPosition);\r\n            this._myArrowParentObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        parentTranslate.vec3_set(0, (arrowLength / 2) - 0.00001, 0);\r\n        this._myArrowParentObject.pp_translateObject(parentTranslate);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myArrowObject.pp_setScaleLocal(arrowScale);\r\n        } else {\r\n            this._myArrowObject.pp_setScale(arrowScale);\r\n        }\r\n\r\n        if (this._myParams.myArrowMesh != null) {\r\n            this._myArrowMeshComponent.mesh = this._myParams.myArrowMesh;\r\n        } else {\r\n            this._myArrowMeshComponent.mesh = Globals.getDefaultMeshes(this._myParams.myParent.pp_getEngine()).myCone;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myArrowMeshComponent.material = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = Globals.getDefaultMaterials(this._myParams.myParent.pp_getEngine()).myFlatOpaque.clone();\r\n                }\r\n                this._myArrowMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myArrowMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        let visualLineParams = this._myVisualLine.getParams();\r\n        visualLineParams.myStart.vec3_copy(this._myParams.myStart);\r\n        visualLineParams.myDirection.vec3_copy(this._myParams.myDirection);\r\n        visualLineParams.myLength = lineLength;\r\n        visualLineParams.myThickness = this._myParams.myThickness;\r\n        visualLineParams.myMesh = this._myParams.myLineMesh;\r\n\r\n        visualLineParams.myMaterial = this._myArrowMeshComponent.material;\r\n\r\n        visualLineParams.myParent = this._myParams.myParent;\r\n        visualLineParams.myLocal = this._myParams.myLocal;\r\n\r\n        this._myVisualLine.paramsUpdated();\r\n    };\r\n}();\r\n\r\nVisualArrowParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myArrowThickness = other.myArrowThickness;\r\n    this.myArrowLength = other.myArrowLength;\r\n\r\n    this.myShareArrowLengthWithLineWhenArrowLongerThanLength = other.myShareArrowLengthWithLineWhenArrowLongerThanLength;\r\n\r\n    this.myArrowMesh = other.myArrowMesh;\r\n    this.myLineMesh = other.myLineMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "export let VisualElementType = {\r\n    MESH: 0,\r\n    LINE: 1,\r\n    POINT: 2,\r\n    TEXT: 3,\r\n    ARROW: 4,\r\n    TRANSFORM: 5,\r\n    RAYCAST: 6,\r\n    TORUS: 7\r\n};", "/*\r\nlet visualParams = new VisualLineParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualLine = new VisualLine(visualParams);\r\n*/\r\n\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualLineParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myStart = vec3_create();\r\n        this.myDirection = vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myMesh = null;         // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.LINE;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualLine {\r\n\r\n    constructor(params = new VisualLineParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myLineParentObject = null;\r\n        this._myLineObject = null;\r\n        this._myLineMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myLineParentObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myLineParentObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n        this._myLineObject = this._myLineParentObject.pp_addObject();\r\n\r\n        this._myLineMeshComponent = this._myLineObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualLineParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualLine(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myLineParentObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualLine.prototype._refresh = function () {\r\n    let scaleLine = vec3_create();\r\n    let translateLine = vec3_create();\r\n\r\n    let forward = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myLineParentObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myLineParentObject.pp_setPositionLocal(this._myParams.myStart);\r\n        } else {\r\n            this._myLineParentObject.pp_setPosition(this._myParams.myStart);\r\n        }\r\n\r\n        scaleLine.vec3_set(this._myParams.myThickness / 2, this._myParams.myLength / 2, this._myParams.myThickness / 2);\r\n        if (this._myParams.myLocal) {\r\n            this._myLineObject.pp_setScaleLocal(scaleLine);\r\n        } else {\r\n            this._myLineObject.pp_setScale(scaleLine);\r\n        }\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myLineObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myLineObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        this._myLineObject.pp_resetPositionLocal();\r\n        translateLine.vec3_set(0, this._myParams.myLength / 2, 0);\r\n        this._myLineObject.pp_translateObject(translateLine);\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myLineMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myLineMeshComponent.mesh = Globals.getDefaultMeshes(this._myParams.myParent.pp_getEngine()).myCylinder;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myLineMeshComponent.material = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = Globals.getDefaultMaterials(this._myParams.myParent.pp_getEngine()).myFlatOpaque.clone();\r\n                }\r\n                this._myLineMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myLineMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    };\r\n}();\r\n\r\nVisualLineParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualMeshParams();\r\nvisualParams.myTransform = transform;\r\nvisualParams.myMesh = myDefaultResources.myMeshes.mySphere;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualMesh = new VisualMesh(visualParams);\r\n*/\r\n\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { mat4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualMeshParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n\r\n        this.myMesh = null;\r\n        this.myMaterial = null;\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.MESH;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualMesh {\r\n\r\n    constructor(params = new VisualMeshParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myMeshObject = null;\r\n        this._myMeshComponent = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myMeshObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myMeshObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myMeshObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myMeshObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMesh == null) {\r\n            this._myMeshComponent.mesh = Globals.getDefaultMeshes(this._myParams.myParent.pp_getEngine()).mySphere;\r\n        } else {\r\n            this._myMeshComponent.mesh = this._myParams.myMesh;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            this._myMeshComponent.material = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n        } else {\r\n            this._myMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myMeshObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n\r\n        this._myMeshComponent = this._myMeshObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualMeshParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualMesh(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myMeshObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualMeshParams.prototype.copy = function copy(other) {\r\n    this.myTransform.pp_copy(other.myTransform);\r\n\r\n    if (other.myMesh != null) {\r\n        this.myMesh = other.myMesh;\r\n    } else {\r\n        this.myMesh = null;\r\n    }\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualPointParams();\r\nvisualParams.myPosition.vec3_copy(position);\r\nvisualParams.myRadius = 0.005;\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualPoint = new VisualPoint(visualParams);\r\n*/\r\n\r\nimport { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualPointParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPosition = vec3_create();\r\n        this.myRadius = 0.005;\r\n\r\n        this.myMesh = null;         // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.mySphere\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.POINT;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualPoint {\r\n\r\n    constructor(params = new VisualPointParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myPointObject = null;\r\n        this._myPointMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myPointObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myPointObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n\r\n        this._myPointMeshComponent = this._myPointObject.pp_addComponent(MeshComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualPointParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualPoint(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myPointObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualPoint.prototype._refresh = function () {\r\n    let rotation = vec3_create(0, 0, 0);\r\n    return function _refresh() {\r\n        this._myPointObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myPointObject.pp_setPositionLocal(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotationLocal(rotation);\r\n            this._myPointObject.pp_setScaleLocal(this._myParams.myRadius);\r\n        } else {\r\n            this._myPointObject.pp_setPosition(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotation(rotation);\r\n            this._myPointObject.pp_setScale(this._myParams.myRadius);\r\n        }\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myPointMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myPointMeshComponent.mesh = Globals.getDefaultMeshes(this._myParams.myParent.pp_getEngine()).mySphere;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myPointMeshComponent.material = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = Globals.getDefaultMaterials(this._myParams.myParent.pp_getEngine()).myFlatOpaque.clone();\r\n                }\r\n                this._myPointMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myPointMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n}();\r\n\r\nVisualPointParams.prototype.copy = function copy(other) {\r\n    this.myPosition.vec3_copy(other.myPosition);\r\n    this.myRadius = other.myRadius;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "import { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { RaycastHit, RaycastParams, RaycastResults } from \"./physics_raycast_params\";\r\n\r\nlet _myLayerFlagsNames = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\r\n\r\nexport function setLayerFlagsNames(layerFlagsNames) {\r\n    _myLayerFlagsNames = layerFlagsNames;\r\n}\r\n\r\nexport function getLayerFlagsNames() {\r\n    return _myLayerFlagsNames;\r\n}\r\n\r\nexport let raycast = function () {\r\n    let insideCheckSubVector = vec3_create();\r\n    let invertedRaycastDirection = vec3_create();\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function raycast(raycastParams, raycastResults = new RaycastResults()) {\r\n        let internalRaycastResults = raycastParams.myPhysics.rayCast(raycastParams.myOrigin, raycastParams.myDirection, raycastParams.myBlockLayerFlags.getMask(), raycastParams.myDistance);\r\n\r\n        if (raycastResults.myRaycastParams == null) {\r\n            raycastResults.myRaycastParams = new RaycastParams(raycastParams.myPhysics);\r\n        }\r\n\r\n        raycastResults.myRaycastParams.copy(raycastParams);\r\n\r\n        let currentValidHitIndex = 0;\r\n        let validHitsCount = 0;\r\n\r\n        let hitCount = internalRaycastResults.hitCount;\r\n        if (hitCount != 0) {\r\n            let objects = null;\r\n            let distances = null;\r\n            let locations = null;\r\n            let normals = null;\r\n\r\n            invertedRaycastDirection = raycastParams.myDirection.vec3_negate(invertedRaycastDirection);\r\n\r\n            for (let i = 0; i < hitCount; i++) {\r\n                if (raycastParams.myObjectsToIgnore.length != 0) {\r\n                    if (objects == null) {\r\n                        objects = internalRaycastResults.objects;\r\n                    }\r\n\r\n                    if (raycastParams.myObjectsToIgnore.pp_hasEqual(objects[i], objectsEqualCallback)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (distances == null) {\r\n                    distances = internalRaycastResults.distances;\r\n                }\r\n\r\n                let hitInsideCollision = distances[i] == 0;\r\n                if (hitInsideCollision) {\r\n                    if (locations == null) {\r\n                        locations = internalRaycastResults.locations;\r\n                    }\r\n\r\n                    hitInsideCollision &&= raycastParams.myOrigin.vec3_sub(locations[i], insideCheckSubVector).vec3_isZero(Math.PP_EPSILON);\r\n\r\n                    if (hitInsideCollision) {\r\n                        if (!normals) {\r\n                            normals = internalRaycastResults.normals;\r\n                        }\r\n\r\n                        hitInsideCollision &&= invertedRaycastDirection.vec3_equals(normals[i], Math.PP_EPSILON_DEGREES);\r\n                    }\r\n                }\r\n\r\n                if (!raycastParams.myIgnoreHitsInsideCollision || !hitInsideCollision) {\r\n                    let hit = null;\r\n\r\n                    if (currentValidHitIndex < raycastResults.myHits.length) {\r\n                        hit = raycastResults.myHits[currentValidHitIndex];\r\n                    } else if (raycastResults._myUnusedHits != null && raycastResults._myUnusedHits.length > 0) {\r\n                        hit = raycastResults._myUnusedHits.pop();\r\n                        raycastResults.myHits.push(hit);\r\n                    } else {\r\n                        hit = new RaycastHit();\r\n                        raycastResults.myHits.push(hit);\r\n                    }\r\n\r\n                    if (objects == null) {\r\n                        objects = internalRaycastResults.objects;\r\n                    }\r\n\r\n                    if (locations == null) {\r\n                        locations = internalRaycastResults.locations;\r\n                    }\r\n\r\n                    if (normals == null) {\r\n                        normals = internalRaycastResults.normals;\r\n                    }\r\n\r\n                    hit.myPosition.vec3_copy(locations[i]);\r\n                    hit.myNormal.vec3_copy(normals[i]);\r\n                    hit.myDistance = distances[i];\r\n                    hit.myObject = objects[i];\r\n                    hit.myInsideCollision = hitInsideCollision;\r\n\r\n                    validHitsCount++;\r\n                    currentValidHitIndex++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (raycastResults.myHits.length > validHitsCount) {\r\n            if (raycastResults._myUnusedHits == null) {\r\n                raycastResults._myUnusedHits = [];\r\n            }\r\n\r\n            let hitsToRemove = raycastResults.myHits.length - validHitsCount;\r\n            for (let i = 0; i < hitsToRemove; i++) {\r\n                raycastResults._myUnusedHits.push(raycastResults.myHits.pop());\r\n            }\r\n        }\r\n\r\n        return raycastResults;\r\n    };\r\n}();\r\n\r\nexport let PhysicsUtils = {\r\n    setLayerFlagsNames,\r\n    getLayerFlagsNames,\r\n    raycast\r\n};", "import { PhysicsUtils } from \"./physics_utils\";\r\n\r\nexport class PhysicsLayerFlags {\r\n\r\n    constructor() {\r\n        this._myLayerMask = 0;\r\n    }\r\n\r\n    setFlagActive(indexOrName, active) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        if (index >= 0 && index < PhysicsUtils.getLayerFlagsNames().length) {\r\n            let mask = 1 << index;\r\n\r\n            if (active) {\r\n                this._myLayerMask = this._myLayerMask | mask;\r\n            } else {\r\n                this._myLayerMask = this._myLayerMask & ~mask;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFlagActive(indexOrName) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        let active = false;\r\n\r\n        if (index >= 0 && index < PhysicsUtils.getLayerFlagsNames().length) {\r\n            let mask = 1 << index;\r\n            active = !!(this._myLayerMask & mask);\r\n        }\r\n\r\n        return active;\r\n    }\r\n\r\n    setAllFlagsActive(active) {\r\n        if (!active) {\r\n            this._myLayerMask = 0;\r\n        } else {\r\n            this._myLayerMask = Math.pow(2, PhysicsUtils.getLayerFlagsNames().length) - 1;\r\n        }\r\n    }\r\n\r\n    add(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask | layerFlags.getMask();\r\n    }\r\n\r\n    remove(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & ~(layerFlags.getMask());\r\n    }\r\n\r\n    intersect(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & layerFlags.getMask();\r\n    }\r\n\r\n    copy(layerFlags) {\r\n        this._myLayerMask = layerFlags._myLayerMask;\r\n    }\r\n\r\n    getMask() {\r\n        return this._myLayerMask;\r\n    }\r\n\r\n    setMask(layerMask) {\r\n        this._myLayerMask = layerMask;\r\n    }\r\n}", "/*\r\nlet raycastParams = new RaycastParams();\r\n\r\nraycastParams.myOrigin.vec3_copy(origin);\r\nraycastParams.myDirection.vec3_copy(direction);\r\nraycastParams.myDistance = distance;\r\nraycastParams.myBlockLayerFlags.setMask(flags);\r\nraycastParams.myObjectsToIgnore.pp_clear();\r\nraycastParams.myIgnoreHitsInsideCollision = false;\r\n\r\nlet raycastResults = PhysicsUtils.raycast(raycastParams);\r\n*/\r\n\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { PhysicsLayerFlags } from \"./physics_layer_flags\";\r\n\r\nexport class RaycastParams {\r\n\r\n    constructor(physics = Globals.getPhysics()) {\r\n        this.myOrigin = vec3_create();\r\n        this.myDirection = vec3_create();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myObjectsToIgnore = [];\r\n        this.myIgnoreHitsInsideCollision = false;\r\n\r\n        this.myPhysics = physics;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myOrigin.vec3_copy(other.myOrigin);\r\n        this.myDirection.vec3_copy(other.myDirection);\r\n        this.myDistance = other.myDistance;\r\n\r\n        this.myBlockLayerFlags.copy(other.myBlockLayerFlags);\r\n\r\n        this.myObjectsToIgnore.pp_copy(other.myObjectsToIgnore);\r\n        this.myIgnoreHitsInsideCollision = other.myIgnoreHitsInsideCollision;\r\n\r\n        this.myPhysics = other.myPhysics;\r\n    }\r\n\r\n    reset() {\r\n        this.myOrigin.vec3_zero();\r\n        this.myDirection.vec3_zero();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags.setAllFlagsActive(false);\r\n\r\n        this.myObjectsToIgnore.pp_clear();\r\n        this.myIgnoreHitsInsideCollision = false;\r\n    }\r\n}\r\n\r\nexport class RaycastResults {\r\n\r\n    constructor() {\r\n        this.myRaycastParams = null;\r\n        this.myHits = [];\r\n\r\n        this._myUnusedHits = null;\r\n    }\r\n\r\n    isColliding(ignoreHitsInsideCollision = false) {\r\n        return ignoreHitsInsideCollision ? this.getFirstHitOutsideCollision() != null : this.myHits.length > 0;\r\n    }\r\n\r\n    getFirstHitInsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getFirstHitOutsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getHitsInsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    getHitsOutsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    removeHit(hitIndex) {\r\n        let removedHit = this.myHits.pp_removeIndex(hitIndex);\r\n\r\n        if (removedHit != null) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            this._myUnusedHits.push(removedHit);\r\n        }\r\n\r\n        return removedHit;\r\n    }\r\n\r\n    removeAllHits() {\r\n        if (this._myUnusedHits == null) {\r\n            this._myUnusedHits = [];\r\n        }\r\n\r\n        this._myUnusedHits.push(...this.myHits);\r\n\r\n        this.myHits.pp_clear();\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    reset() {\r\n        if (this.myRaycastParams != null) {\r\n            this.myRaycastParams.reset();\r\n        }\r\n\r\n        this.removeAllHits();\r\n    }\r\n}\r\n\r\nexport class RaycastHit {\r\n\r\n    constructor() {\r\n        this.myPosition = vec3_create();\r\n        this.myNormal = vec3_create();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n\r\n        this.myInsideCollision = false;\r\n    }\r\n\r\n    isValid() {\r\n        return this.myObject != null;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myPosition.vec3_copy(other.myPosition);\r\n        this.myNormal.vec3_copy(other.myNormal);\r\n        this.myDistance = other.myDistance;\r\n        this.myObject = other.myObject;\r\n        this.myInsideCollision = other.myInsideCollision;\r\n    }\r\n\r\n    reset() {\r\n        this.myPosition.vec3_zero();\r\n        this.myNormal.vec3_zero();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n        this.myInsideCollision = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nRaycastResults.prototype.copy = function () {\r\n    let copyHitCallback = function (currentElement, elementToCopy) {\r\n        if (currentElement == null) {\r\n            currentElement = new RaycastHit();\r\n        }\r\n\r\n        currentElement.copy(elementToCopy);\r\n\r\n        return currentElement;\r\n    };\r\n\r\n    return function copy(other) {\r\n        if (other.myRaycastParams == null) {\r\n            this.myRaycastParams = null;\r\n        } else {\r\n            if (this.myRaycastParams == null) {\r\n                this.myRaycastParams = new RaycastParams(other.myRaycastParams.myPhysics);\r\n            }\r\n\r\n            this.myRaycastParams.copy(other.myRaycastParams);\r\n        }\r\n\r\n        if (this.myHits.length > other.myHits.length) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            for (let i = 0; i < this.myHits.length - other.myHits.length; i++) {\r\n                this._myUnusedHits.push(this.myHits.pop());\r\n            }\r\n        } else if (this.myHits.length < other.myHits.length) {\r\n            if (this._myUnusedHits != null) {\r\n                let length = Math.min(this._myUnusedHits.length, other.myHits.length - this.myHits.length);\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    this.myHits.push(this._myUnusedHits.pop());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.myHits.pp_copy(other.myHits, copyHitCallback);\r\n    };\r\n}();", "/*\r\nlet visualParams = new VisualRaycastParams();\r\nvisualParams.myRaycastResults = raycastResults;\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualRaycast = new VisualRaycast(visualParams);\r\n*/\r\n\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { RaycastResults } from \"../../physics/physics_raycast_params\";\r\nimport { VisualArrow, VisualArrowParams } from \"./visual_arrow\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualRaycastParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myRaycastResults = new RaycastResults();\r\n\r\n        this.myHitNormalLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myShowOnlyFirstHit = true;\r\n\r\n        this.myRayMaterial = null;\r\n        this.myHitNormalMaterial = null;\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.RAYCAST;\r\n    }\r\n\r\n    get myRaycastResults() {\r\n        return this._myRaycastResults;\r\n    }\r\n\r\n    set myRaycastResults(result) {\r\n        this._myRaycastResults.copy(result);\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualRaycast {\r\n\r\n    constructor(params = new VisualRaycastParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRaycast = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        this._myVisualRaycast.setAutoRefresh(false);\r\n\r\n        this._myVisualRaycastHitList = [];\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._addVisualRaycastHit();\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                if (this._myParams.myRaycastResults.myRaycastParams != null) {\r\n                    this._myVisualRaycast.setVisible(true);\r\n                }\r\n\r\n                if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n                    let hitsToShow = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n                    for (let i = 0; i < hitsToShow; i++) {\r\n                        let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                        visualRaycastHit.setVisible(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._myVisualRaycast.setVisible(false);\r\n\r\n                for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n                    visualRaycastHit.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRaycast.forceRefresh();\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let hitsToRefresh = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n            for (let i = 0; i < hitsToRefresh; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                visualRaycastHit.forceRefresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRaycast.update(dt);\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.update(dt);\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.setVisible(false);\r\n        }\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let raycastDistance = this._myParams.myShowOnlyFirstHit ?\r\n                this._myParams.myRaycastResults.myHits.pp_first().myDistance :\r\n                this._myParams.myRaycastResults.myHits.pp_last().myDistance;\r\n\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastParams.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastParams.myDirection);\r\n                visualRaycastParams.myLength = raycastDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRay;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myLocal = this._myParams.myLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n\r\n            let hitsToShow = this._myParams.myShowOnlyFirstHit ? 1 : this._myParams.myRaycastResults.myHits.length;\r\n            while (hitsToShow > this._myVisualRaycastHitList.length) {\r\n                this._addVisualRaycastHit();\r\n            }\r\n\r\n            for (let i = 0; i < hitsToShow; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n\r\n                {\r\n                    let visualRaycastHitParams = visualRaycastHit.getParams();\r\n                    visualRaycastHitParams.myStart.vec3_copy(this._myParams.myRaycastResults.myHits[i].myPosition);\r\n                    visualRaycastHitParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myHits[i].myNormal);\r\n                    visualRaycastHitParams.myLength = this._myParams.myHitNormalLength;\r\n                    visualRaycastHitParams.myThickness = this._myParams.myThickness;\r\n\r\n                    if (this._myParams.myHitNormalMaterial == null) {\r\n                        visualRaycastHitParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myHitNormal;\r\n                    } else {\r\n                        visualRaycastHitParams.myMaterial = this._myParams.myHitNormalMaterial;\r\n                    }\r\n\r\n                    visualRaycastHitParams.myParent = this._myParams.myParent;\r\n                    visualRaycastHitParams.myLocal = this._myParams.myLocal;\r\n\r\n                    visualRaycastHit.paramsUpdated();\r\n\r\n                    visualRaycastHit.setVisible(this._myVisible);\r\n                }\r\n            }\r\n\r\n        } else if (this._myParams.myRaycastResults.myRaycastParams != null) {\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastParams.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastParams.myDirection);\r\n                visualRaycastParams.myLength = this._myParams.myRaycastResults.myRaycastParams.myDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRay;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myLocal = this._myParams.myLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n        } else {\r\n            this._myVisualRaycast.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualRaycastParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualRaycast(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _addVisualRaycastHit() {\r\n        let visualRaycastHit = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        visualRaycastHit.setAutoRefresh(false);\r\n        visualRaycastHit.setVisible(false);\r\n\r\n        this._myVisualRaycastHitList.push(visualRaycastHit);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myVisualRaycast.destroy();\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualRaycastParams.prototype.copy = function copy(other) {\r\n    this.myRaycastResults = other.myRaycastResults;\r\n    this.myHitNormalLength = other.myHitNormalLength;\r\n    this.myThickness = other.myThickness;\r\n    this.myShowOnlyFirstHit = other.myShowOnlyFirstHit;\r\n\r\n    if (other.myRayMaterial != null) {\r\n        this.myRayMaterial = other.myRayMaterial.clone();\r\n    } else {\r\n        this.myRayMaterial = null;\r\n    }\r\n\r\n    if (other.myHitNormalMaterial != null) {\r\n        this.myHitNormalMaterial = other.myHitNormalMaterial.clone();\r\n    } else {\r\n        this.myHitNormalMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualTextParams();\r\nvisualParams.myText = text;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myText.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualText = new VisualText(visualParams);\r\n*/\r\n\r\nimport { Alignment, Justification, TextComponent } from \"@wonderlandengine/api\";\r\nimport { mat4_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualTextParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myText = \"\";\r\n        this.myAlignment = Alignment.Center;\r\n        this.myJustification = Justification.Middle;\r\n\r\n        this.myTransform = mat4_create();\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myDefaultTextMaterial\r\n\r\n        this.myColor = null;        // If this is set and material is null, it will use the default text material with this color\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myLookAtObject = null;\r\n\r\n        this.myType = VisualElementType.TEXT;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualText {\r\n\r\n    constructor(params = new VisualTextParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTextObject = null;\r\n        this._myTextComponent = null;\r\n\r\n        this._myTextMaterial = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myTextObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty || this._myParams.myLookAtObject != null) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _build() {\r\n        this._myTextObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n        this._myTextComponent = this._myTextObject.pp_addComponent(TextComponent);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTextParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualText(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myTextObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTextParams.prototype.copy = function copy(other) {\r\n    this.myText = other.myText;\r\n    this.myAlignment = other.myAlignment;\r\n    this.myJustification = other.myJustification;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myLookAtObject = other.myLookAtObject;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\nVisualText.prototype._refresh = function () {\r\n    let lookAtPosition = vec3_create();\r\n    return function _refresh() {\r\n        this._myTextObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myTextObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTextObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myLookAtObject != null) {\r\n            this._myParams.myLookAtObject.pp_getPosition(lookAtPosition);\r\n            this._myTextObject.pp_lookAt(lookAtPosition);\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myTextComponent.material = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myText;\r\n            } else {\r\n                if (this._myTextMaterial == null) {\r\n                    this._myTextMaterial = Globals.getDefaultMaterials(this._myParams.myParent.pp_getEngine()).myText.clone();\r\n                }\r\n                this._myTextComponent.material = this._myTextMaterial;\r\n                this._myTextMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myTextComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        this._myTextComponent.text = this._myParams.myText;\r\n        this._myTextComponent.alignment = this._myParams.myAlignment;\r\n        this._myTextComponent.justification = this._myParams.myJustification;\r\n\r\n        this._myDirty = false;\r\n    };\r\n}();", "/*\r\nlet visualParams = new VisualTorusParams();\r\nvisualParams.myRadius = 1;\r\nvisualParams.mySegmentsAmount = 12;\r\nvisualParams.mySegmentThickness = 0.05;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTorus = new VisualTorus(visualParams);\r\n*/\r\n\r\nimport { mat4_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./visual_line\";\r\n\r\nexport class VisualTorusParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n        this.myRadius = 0;\r\n\r\n        this.mySegmentsAmount = 12;\r\n        this.mySegmentThickness = 0.05;\r\n\r\n        this.mySegmentMesh = null;  // The mesh is scaled along up axis, null means it will default on myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // If this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.TORUS;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualTorus {\r\n\r\n    constructor(params = new VisualTorusParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTorusParentObject = null;\r\n\r\n        this._myVisualSegmentList = [];\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                let segmentToShow = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n                for (let i = 0; i < segmentToShow; i++) {\r\n                    let visualSegment = this._myVisualSegmentList[i];\r\n                    visualSegment.setVisible(true);\r\n                }\r\n            } else {\r\n                for (let visualSegment of this._myVisualSegmentList) {\r\n                    visualSegment.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        let segmentToRefresh = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n        for (let i = 0; i < segmentToRefresh; i++) {\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n            visualSegment.forceRefresh();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.update(dt);\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myTorusParentObject = Globals.getSceneObjects(this._myParams.myParent.pp_getEngine()).myVisualElements.pp_addObject();\r\n\r\n        this._fillSegmentList();\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    _fillSegmentList() {\r\n        while (this._myVisualSegmentList.length < this._myParams.mySegmentsAmount) {\r\n            let visualSegment = new VisualLine(new VisualLineParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n            visualSegment.setAutoRefresh(false);\r\n            visualSegment.setVisible(false);\r\n\r\n            visualSegment.getParams().myParent = this._myTorusParentObject;\r\n            visualSegment.getParams().myLocal = true;\r\n\r\n            this._myVisualSegmentList.push(visualSegment);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTorusParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualTorus(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.destroy();\r\n        }\r\n        this._myTorusParentObject.pp_destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTorus.prototype._refresh = function () {\r\n    let segmentStart = vec3_create();\r\n    let segmentEnd = vec3_create();\r\n\r\n    let segmentDirection = vec3_create();\r\n\r\n    let fixedSegmentStart = vec3_create();\r\n    let fixedSegmentEnd = vec3_create();\r\n\r\n    let up = vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._fillSegmentList();\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.setVisible(false);\r\n        }\r\n\r\n        this._myTorusParentObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myLocal) {\r\n            this._myTorusParentObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTorusParentObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        let sliceAngle = 2 * Math.PI / this._myParams.mySegmentsAmount;\r\n        segmentStart.vec3_set(this._myParams.myRadius, 0, 0);\r\n        for (let i = 0; i < this._myParams.mySegmentsAmount; i++) {\r\n            segmentEnd = segmentStart.vec3_rotateAxisRadians(sliceAngle, up, segmentEnd);\r\n\r\n            segmentDirection = segmentEnd.vec3_sub(segmentStart, segmentDirection).vec3_normalize(segmentDirection);\r\n\r\n            let extraLength = Math.tan(sliceAngle / 2) * this._myParams.mySegmentThickness / 2;\r\n\r\n            fixedSegmentStart = segmentStart.vec3_sub(segmentDirection.vec3_scale(extraLength, fixedSegmentStart), fixedSegmentStart);\r\n            fixedSegmentEnd = segmentEnd.vec3_add(segmentDirection.vec3_scale(extraLength, fixedSegmentEnd), fixedSegmentEnd);\r\n\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n\r\n            let visualSegmentParams = visualSegment.getParams();\r\n            visualSegmentParams.setStartEnd(fixedSegmentStart, fixedSegmentEnd);\r\n            visualSegmentParams.myThickness = this._myParams.mySegmentThickness;\r\n\r\n            visualSegmentParams.myMesh = this._myParams.mySegmentMesh;\r\n\r\n            if (this._myParams.myMaterial == null) {\r\n                if (this._myParams.myColor == null) {\r\n                    visualSegmentParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myMesh;\r\n                } else {\r\n                    if (this._myFlatOpaqueMaterial == null) {\r\n                        this._myFlatOpaqueMaterial = Globals.getDefaultMaterials(this._myParams.myParent.pp_getEngine()).myFlatOpaque.clone();\r\n                    }\r\n                    visualSegmentParams.myMaterial = this._myFlatOpaqueMaterial;\r\n                    this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n                }\r\n            } else {\r\n                visualSegmentParams.myMaterial = this._myParams.myMaterial;\r\n            }\r\n\r\n            visualSegment.paramsUpdated();\r\n\r\n            visualSegment.setVisible(this._myVisible);\r\n\r\n            segmentStart.vec3_copy(segmentEnd);\r\n        }\r\n    };\r\n}();\r\n\r\nVisualTorusParams.prototype.copy = function copy(other) {\r\n    this.myRadius = other.myRadius;\r\n    this.mySegmentsAmount = other.mySegmentsAmount;\r\n    this.mySegmentThickness = other.mySegmentThickness;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    this.mySegmentMesh = other.mySegmentMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "/*\r\nlet visualParams = new VisualTransformParams();\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myLength = 0.2;\r\nGlobals.getVisualManager().draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTransform = new VisualTransform(visualParams);\r\n*/\r\n\r\nimport { mat4_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { VisualArrow, VisualArrowParams } from \"./visual_arrow\";\r\nimport { VisualElementType } from \"./visual_element_types\";\r\n\r\nexport class VisualTransformParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myTransform = mat4_create();\r\n        this.myLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myForwardMaterial = null;\r\n        this.myUpMaterial = null;\r\n        this.myRightMaterial = null;\r\n\r\n        this.myParent = Globals.getSceneObjects(engine).myVisualElements;\r\n        this.myLocal = false;\r\n\r\n        this.myType = VisualElementType.TRANSFORM;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class VisualTransform {\r\n\r\n    constructor(params = new VisualTransformParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRight = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualUp = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n        this._myVisualForward = new VisualArrow(new VisualArrowParams(this._myParams.myParent.pp_getEngine()));\r\n\r\n        this._myVisualRight.setAutoRefresh(false);\r\n        this._myVisualUp.setAutoRefresh(false);\r\n        this._myVisualForward.setAutoRefresh(false);\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualRight.setVisible(visible);\r\n            this._myVisualUp.setVisible(visible);\r\n            this._myVisualForward.setVisible(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRight.forceRefresh();\r\n        this._myVisualUp.forceRefresh();\r\n        this._myVisualForward.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRight.update(dt);\r\n        this._myVisualUp.update(dt);\r\n        this._myVisualForward.update(dt);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new VisualTransformParams(this._myParams.myParent.pp_getEngine());\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new VisualTransform(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _refresh() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myVisualRight.destroy();\r\n        this._myVisualUp.destroy();\r\n        this._myVisualForward.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nVisualTransform.prototype._refresh = function () {\r\n    let axes = [vec3_create(), vec3_create(), vec3_create()];\r\n    let scale = vec3_create();\r\n    let position = vec3_create();\r\n    return function _refresh() {\r\n        axes = this._myParams.myTransform.mat4_getAxes(axes);\r\n        scale = this._myParams.myTransform.mat4_getScale(scale);\r\n        let maxValue = 0;\r\n        for (let value of scale) {\r\n            maxValue = Math.max(value, maxValue);\r\n        }\r\n\r\n        if (maxValue == 0) {\r\n            scale[0] = 1;\r\n            scale[1] = 1;\r\n            scale[2] = 1;\r\n        } else {\r\n            scale[0] = scale[0] / maxValue;\r\n            scale[1] = scale[1] / maxValue;\r\n            scale[2] = scale[2] / maxValue;\r\n        }\r\n\r\n        position = this._myParams.myTransform.mat4_getPosition(position);\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualRight.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[0].vec3_negate(visualArrowParams.myDirection).vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[0], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myRightMaterial == null) {\r\n                visualArrowParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myRight;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myRightMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myLocal = this._myParams.myLocal;\r\n\r\n            this._myVisualRight.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualUp.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[1].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[1], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myUpMaterial == null) {\r\n                visualArrowParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myUp;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myUpMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myLocal = this._myParams.myLocal;\r\n\r\n            this._myVisualUp.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualForward.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[2].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[2], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myForwardMaterial == null) {\r\n                visualArrowParams.myMaterial = Globals.getVisualResources(this._myParams.myParent.pp_getEngine()).myDefaultMaterials.myForward;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myForwardMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myLocal = this._myParams.myLocal;\r\n\r\n            this._myVisualForward.paramsUpdated();\r\n        }\r\n    };\r\n}();\r\n\r\nVisualTransformParams.prototype.copy = function copy(other) {\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    if (other.myRightMaterial != null) {\r\n        this.myRightMaterial = other.myRightMaterial.clone();\r\n    } else {\r\n        this.myRightMaterial = null;\r\n    }\r\n\r\n    if (other.myUpMaterial != null) {\r\n        this.myUpMaterial = other.myUpMaterial.clone();\r\n    } else {\r\n        this.myUpMaterial = null;\r\n    }\r\n\r\n    if (other.myForwardMaterial != null) {\r\n        this.myForwardMaterial = other.myForwardMaterial.clone();\r\n    } else {\r\n        this.myForwardMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myLocal = other.myLocal;\r\n\r\n    this.myType = other.myType;\r\n};", "import { Globals } from \"../../pp/globals\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { ObjectPool, ObjectPoolParams } from \"../object_pool/object_pool\";\r\nimport { VisualArrow, VisualArrowParams } from \"./elements/visual_arrow\";\r\nimport { VisualElementType } from \"./elements/visual_element_types\";\r\nimport { VisualLine, VisualLineParams } from \"./elements/visual_line\";\r\nimport { VisualMesh, VisualMeshParams } from \"./elements/visual_mesh\";\r\nimport { VisualPoint, VisualPointParams } from \"./elements/visual_point\";\r\nimport { VisualRaycast, VisualRaycastParams } from \"./elements/visual_raycast\";\r\nimport { VisualText, VisualTextParams } from \"./elements/visual_text\";\r\nimport { VisualTorus, VisualTorusParams } from \"./elements/visual_torus\";\r\nimport { VisualTransform, VisualTransformParams } from \"./elements/visual_transform\";\r\n\r\nexport class VisualManager {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myVisualElementPrototypeCreationCallbacks = new Map();\r\n\r\n        this._myVisualElementsTypeMap = new Map();\r\n        this._myVisualElementLastID = 0;\r\n        this._myVisualElementsToShow = [];\r\n\r\n        this._myActive = true;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._myObjectPoolManagerPrefix = this._getClassName() + \"_\" + Math.pp_randomUUID() + \"_visual_element_type_\";\r\n        this._myTypePoolIDs = new Map();\r\n\r\n        this._addStandardVisualElementTypes();\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (!this._myActive) {\r\n                this.clearVisualElement();\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return this._myActive;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myActive) {\r\n            this._updateDraw(dt);\r\n        }\r\n    }\r\n\r\n    // lifetimeSeconds can be null, in that case the element will be drawn until cleared\r\n    draw(visualElementParams, lifetimeSeconds = 0, idToReuse = null) {\r\n        if (!this._myActive) {\r\n            return 0;\r\n        }\r\n\r\n        let visualElement = null;\r\n        let idReused = false;\r\n        if (idToReuse != null) {\r\n            if (this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n                let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n                if (visualElements.has(idToReuse)) {\r\n                    visualElement = visualElements.get(idToReuse)[0];\r\n                    visualElement.copyParams(visualElementParams);\r\n                    visualElement.setVisible(false);\r\n                    idReused = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            visualElement = this._getVisualElementFromPool(visualElementParams);\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            console.error(\"Couldn't create the requested visual element\");\r\n            return null;\r\n        }\r\n\r\n        if (!this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n            this._myVisualElementsTypeMap.set(visualElementParams.myType, new Map());\r\n        }\r\n        let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n\r\n        let elementID = null;\r\n        if (!idReused) {\r\n            elementID = this._myVisualElementLastID + 1;\r\n            this._myVisualElementLastID = elementID;\r\n\r\n            visualElements.set(elementID, [visualElement, new Timer(lifetimeSeconds, lifetimeSeconds != null)]);\r\n        } else {\r\n            elementID = idToReuse;\r\n            let visualElementPair = visualElements.get(elementID);\r\n            visualElementPair[0] = visualElement;\r\n            visualElementPair[1].reset(lifetimeSeconds);\r\n            if (lifetimeSeconds != null) {\r\n                visualElementPair[1].start();\r\n            }\r\n        }\r\n\r\n        this._myVisualElementsToShow.push(visualElement);\r\n\r\n        return elementID;\r\n    }\r\n\r\n    getVisualElement(elementID) {\r\n        let visualElement = null;\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            if (visualElements.has(elementID)) {\r\n                let visualElementPair = visualElements.get(elementID);\r\n                visualElement = visualElementPair[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return visualElement;\r\n    }\r\n\r\n    getVisualElementParams(elementID) {\r\n        return this.getVisualElement(elementID).getParams();\r\n    }\r\n\r\n    getVisualElementID(visualElement) {\r\n        let elementID = null;\r\n        for (let currentVisualElements of this._myVisualElementsTypeMap.values()) {\r\n            for (let [currentElementID, currentVisualElement] of currentVisualElements.entries()) {\r\n                if (currentVisualElement[0] == visualElement) {\r\n                    elementID = currentElementID;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (elementID != null) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return elementID;\r\n    }\r\n\r\n    clearVisualElement(elementID = null) {\r\n        if (elementID == null) {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                for (let visualElement of visualElements.values()) {\r\n                    this._releaseElement(visualElement[0]);\r\n                }\r\n            }\r\n\r\n            this._myVisualElementsToShow = [];\r\n            this._myVisualElementsTypeMap = new Map();\r\n            this._myVisualElementLastID = 0;\r\n        } else {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                if (visualElements.has(elementID)) {\r\n                    let visualElementPair = visualElements.get(elementID);\r\n                    this._releaseElement(visualElementPair[0]);\r\n                    visualElements.delete(elementID);\r\n\r\n                    this._myVisualElementsToShow.pp_removeEqual(visualElementPair[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    allocateVisualElementType(visualElementType, amount) {\r\n        if (!Globals.getObjectPoolManager(this._myEngine).hasPool(this._getTypePoolID(visualElementType))) {\r\n            this._addVisualElementTypeToPool(visualElementType);\r\n        }\r\n\r\n        let pool = Globals.getObjectPoolManager(this._myEngine).getPool(this._getTypePoolID(visualElementType));\r\n\r\n        let difference = pool.getAvailableSize() - amount;\r\n        if (difference < 0) {\r\n            pool.increase(-difference);\r\n        }\r\n    }\r\n\r\n    addVisualElementType(visualElementType, visuaElementPrototypeCreationCallback) {\r\n        this._myVisualElementPrototypeCreationCallbacks.set(visualElementType, visuaElementPrototypeCreationCallback);\r\n    }\r\n\r\n    removeVisualElementType(visualElementType) {\r\n        this._myVisualElementPrototypeCreationCallbacks.delete(visualElementType);\r\n    }\r\n\r\n    _updateDraw(dt) {\r\n        for (let visualElement of this._myVisualElementsToShow) {\r\n            visualElement.setVisible(true);\r\n        }\r\n        this._myVisualElementsToShow.pp_clear();\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            let idsToRemove = [];\r\n            for (let visualElementsEntry of visualElements.entries()) {\r\n                let visualElement = visualElementsEntry[1];\r\n                if (visualElement[1].isDone()) {\r\n                    this._releaseElement(visualElement[0]);\r\n                    idsToRemove.push(visualElementsEntry[0]);\r\n                } else {\r\n                    visualElement[0].update(dt);\r\n                    visualElement[1].update(dt);\r\n                }\r\n            }\r\n\r\n            for (let id of idsToRemove) {\r\n                visualElements.delete(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getVisualElementFromPool(params) {\r\n        let element = null;\r\n\r\n        if (!Globals.getObjectPoolManager(this._myEngine).hasPool(this._getTypePoolID(params.myType))) {\r\n            this._addVisualElementTypeToPool(params.myType);\r\n        }\r\n\r\n        element = Globals.getObjectPoolManager(this._myEngine).get(this._getTypePoolID(params.myType));\r\n\r\n        if (element != null) {\r\n            element.copyParams(params);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    _addVisualElementTypeToPool(type) {\r\n        let objectPoolParams = new ObjectPoolParams();\r\n        objectPoolParams.myInitialPoolSize = 10;\r\n        objectPoolParams.myAmountToAddWhenEmpty = 0;\r\n        objectPoolParams.myPercentageToAddWhenEmpty = 0.5;\r\n        objectPoolParams.mySetActiveCallback = function (object, active) {\r\n            object.setVisible(active);\r\n        };\r\n\r\n        let visualElementPrototype = null;\r\n        if (this._myVisualElementPrototypeCreationCallbacks.has(type)) {\r\n            visualElementPrototype = this._myVisualElementPrototypeCreationCallbacks.get(type)();\r\n        }\r\n\r\n        if (visualElementPrototype != null) {\r\n            visualElementPrototype.setVisible(false);\r\n            visualElementPrototype.setAutoRefresh(true);\r\n\r\n            Globals.getObjectPoolManager(this._myEngine).addPool(this._getTypePoolID(type), new ObjectPool(visualElementPrototype, objectPoolParams));\r\n        } else {\r\n            console.error(\"Visual element type not supported\");\r\n        }\r\n    }\r\n\r\n    _addStandardVisualElementTypes() {\r\n        this.addVisualElementType(VisualElementType.LINE, () => new VisualLine(new VisualLineParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.MESH, () => new VisualMesh(new VisualMeshParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.POINT, () => new VisualPoint(new VisualPointParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.ARROW, () => new VisualArrow(new VisualArrowParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TEXT, () => new VisualText(new VisualTextParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TRANSFORM, () => new VisualTransform(new VisualTransformParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.RAYCAST, () => new VisualRaycast(new VisualRaycastParams(this._myEngine)));\r\n        this.addVisualElementType(VisualElementType.TORUS, () => new VisualTorus(new VisualTorusParams(this._myEngine)));\r\n    }\r\n\r\n    _getTypePoolID(type) {\r\n        let typePoolID = this._myTypePoolIDs.get(type);\r\n\r\n        if (typePoolID == null) {\r\n            typePoolID = this._myObjectPoolManagerPrefix + type;\r\n            this._myTypePoolIDs.set(type, typePoolID);\r\n        }\r\n\r\n        return typePoolID;\r\n    }\r\n\r\n    _releaseElement(visualElement) {\r\n        let defaultElementsParent = Globals.getSceneObjects(this._myEngine).myVisualElements;\r\n        if (visualElement.getParams().myParent != defaultElementsParent) {\r\n            visualElement.getParams().myParent = defaultElementsParent;\r\n            visualElement.forceRefresh(); // just used to trigger the parent change, I'm lazy\r\n        }\r\n\r\n        Globals.getObjectPoolManager(this._myEngine).release(this._getTypePoolID(visualElement.getParams().myType), visualElement);\r\n    }\r\n\r\n    _getClassName() {\r\n        return \"visual_manager\";\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        Globals.getObjectPoolManager(this._myEngine).destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "export class VisualResources {\r\n\r\n    constructor() {\r\n        this.myDefaultMaterials = new VisualResourcesMaterials();\r\n    }\r\n}\r\n\r\nexport class VisualResourcesMaterials {\r\n\r\n    constructor() {\r\n        this.myMesh = null;\r\n        this.myText = null;\r\n        this.myRight = null;\r\n        this.myUp = null;\r\n        this.myForward = null;\r\n        this.myRay = null;\r\n        this.myHitNormal = null;\r\n    }\r\n}", "import * as WLAPI from \"@wonderlandengine/api\";\r\nimport { Component, Property } from \"@wonderlandengine/api\";\r\nimport * as WLComponents from \"@wonderlandengine/components\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class AddWLToWindowComponent extends Component {\r\n    static TypeName = \"pp-add-wl-to-window\";\r\n    static Properties = {\r\n        _myAdd: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        if (this._myAdd) {\r\n            Globals.getWindow(this.engine).WL = {};\r\n            this._addProperties(WLAPI);\r\n            this._addProperties(WLComponents);\r\n        }\r\n    }\r\n\r\n    _addProperties(object) {\r\n        let propertyNames = Object.getOwnPropertyNames(object);\r\n        for (let propertyName of propertyNames) {\r\n            if (object[propertyName] != undefined) {\r\n                Globals.getWindow(this.engine).WL[propertyName] = object[propertyName];\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getWindow(this.engine).WL = undefined;\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { DebugManager } from \"../debug_manager\";\r\n\r\nexport class DebugManagerComponent extends Component {\r\n    static TypeName = \"pp-debug-manager\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myDebugManager = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasDebugManager(this.engine)) {\r\n            this._myDebugManager = new DebugManager(this.engine);\r\n\r\n            Globals.setDebugManager(this._myDebugManager, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myDebugManager != null) {\r\n            this._myDebugManager.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDebugManager != null) {\r\n            this._myDebugManager.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDebugManager != null && Globals.getDebugManager(this.engine) == this._myDebugManager) {\r\n            Globals.removeDebugManager(this.engine);\r\n\r\n            this._myDebugManager.destroy();\r\n        }\r\n    }\r\n}", "import { Alignment, Justification } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../cauldron/utils/xr_utils\";\r\nimport { VisualArrowParams } from \"../cauldron/visual/elements/visual_arrow\";\r\nimport { VisualLineParams } from \"../cauldron/visual/elements/visual_line\";\r\nimport { VisualPointParams } from \"../cauldron/visual/elements/visual_point\";\r\nimport { VisualRaycastParams } from \"../cauldron/visual/elements/visual_raycast\";\r\nimport { VisualTextParams } from \"../cauldron/visual/elements/visual_text\";\r\nimport { VisualTransformParams } from \"../cauldron/visual/elements/visual_transform\";\r\nimport { VisualManager } from \"../cauldron/visual/visual_manager\";\r\nimport { mat4_create, quat_create, vec3_create, vec4_create } from \"../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../pp/globals\";\r\n\r\nexport class DebugVisualManager extends VisualManager {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n\r\n        this._myDefaultColor = vec4_create(1, 0, 1, 1);\r\n        this._myDefaultLineThickness = 0.005;\r\n        this._myDefaultPointRadius = 0.01;\r\n        this._myDefaultAxisLength = 0.2;\r\n\r\n        this._myDefaultTextLookAtPlayer = true;\r\n        this._myDefaultTextAlignment = Alignment.Center;\r\n        this._myDefaultTextJustification = Justification.Middle;\r\n\r\n        this._myDefaultUITextAlignment = Alignment.Center;\r\n        this._myDefaultUITextJustification = Justification.Middle;\r\n        this._myDefaultUITextScale = 1;\r\n\r\n        this._myDefaultUITextScreenPosition = vec3_create(1, 1, 1);\r\n    }\r\n\r\n    drawLine(lifetimeSeconds, start, direction, length, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualLineParams(this._myEngine);\r\n            visualParams.myStart.vec3_copy(start);\r\n            visualParams.myDirection.vec3_copy(direction);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawLineEnd(lifetimeSeconds, start, end, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    drawArrow(lifetimeSeconds, start, direction, length, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualArrowParams(this._myEngine);\r\n            visualParams.myStart.vec3_copy(start);\r\n            visualParams.myDirection.vec3_copy(direction);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawArrowEnd(lifetimeSeconds, start, end, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    drawPoint(lifetimeSeconds, position, color = this._myDefaultColor, radius = this._myDefaultPointRadius) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualPointParams(this._myEngine);\r\n            visualParams.myPosition.vec3_copy(position);\r\n            visualParams.myRadius = radius;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawText(lifetimeSeconds, text, transform, color = this._myDefaultColor, lookAtPlayer = this._myDefaultTextLookAtPlayer, alignment = this._myDefaultTextAlignment, justification = this._myDefaultTextJustification) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualTextParams(this._myEngine);\r\n            visualParams.myText = text;\r\n            visualParams.myAlignment = alignment;\r\n            visualParams.myJustification = justification;\r\n            visualParams.myTransform.mat4_copy(transform);\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n\r\n            if (lookAtPlayer) {\r\n                visualParams.myLookAtObject = Globals.getPlayerObjects(this._myEngine).myHead;\r\n            }\r\n\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawRaycast(lifetimeSeconds, raycastResult, showOnlyFirstHit = true, hitNormalLength = this._myDefaultAxisLength, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualRaycastParams(this._myEngine);\r\n            visualParams.myRaycastResults = raycastResult;\r\n            visualParams.myShowOnlyFirstHit = showOnlyFirstHit;\r\n            visualParams.myHitNormalLength = hitNormalLength;\r\n            visualParams.myThickness = thickness;\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawTransform(lifetimeSeconds, transform, length = this._myDefaultAxisLength, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualTransformParams(this._myEngine);\r\n            visualParams.myTransform.mat4_copy(transform);\r\n            visualParams.myLength = length;\r\n            visualParams.myThickness = thickness;\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    }\r\n\r\n    drawUIText(lifetimeSeconds, text, screenPosition, scale = this._myDefaultUITextScale, color = this._myDefaultColor, alignment = this._myDefaultUITextAlignment, justification = this._myDefaultUITextJustification) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _getClassName() {\r\n        return \"debug_visual_manager\";\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nDebugVisualManager.prototype.drawLineEnd = function () {\r\n    let direction = vec3_create();\r\n    return function drawLineEnd(lifetimeSeconds, start, end, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            direction = end.vec3_sub(start, direction);\r\n            length = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n            this.drawLine(lifetimeSeconds, start, direction, length, color, thickness);\r\n        }\r\n    };\r\n}();\r\n\r\nDebugVisualManager.prototype.drawArrowEnd = function () {\r\n    let direction = vec3_create();\r\n    return function drawArrowEnd(lifetimeSeconds, start, end, color = this._myDefaultColor, thickness = this._myDefaultLineThickness) {\r\n        if (this.isActive()) {\r\n            direction = end.vec3_sub(start, direction);\r\n            length = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n            this.drawArrow(lifetimeSeconds, start, direction, length, color, thickness);\r\n        }\r\n    };\r\n}();\r\n\r\nDebugVisualManager.prototype.drawUIText = function () {\r\n    let textRotationQuat = quat_create();\r\n    let up = vec3_create(0, 1, 0);\r\n    let lookToForward = vec3_create();\r\n\r\n    let screenPositionNormalizedXR = vec3_create(-0.12 * 1, 0.12 * 1, 0.35);\r\n    let screenPositionNormalizedNonXR = vec3_create(-0.27 * 1.15, 0.13 * 1.05, 0.35);\r\n\r\n    let textPosition = vec3_create();\r\n    let textRotation = vec3_create();\r\n    let textScale = vec3_create();\r\n    return function drawUIText(lifetimeSeconds, text, screenPosition = this._myDefaultUITextScreenPosition, scale = this._myDefaultUITextScale, color = this._myDefaultColor, alignment = this._myDefaultUITextAlignment, justification = this._myDefaultUITextJustification) {\r\n        if (this.isActive()) {\r\n            let visualParams = new VisualTextParams(this._myEngine);\r\n            visualParams.myText = text;\r\n            visualParams.myAlignment = alignment;\r\n            visualParams.myJustification = justification;\r\n            visualParams.myColor = vec4_create();\r\n            visualParams.myColor.vec4_copy(color);\r\n\r\n            let scaleNormalized = 0.2;\r\n\r\n            if (XRUtils.isSessionActive(this._myEngine)) {\r\n                visualParams.myTransform.mat4_setPositionRotationScale(\r\n                    screenPositionNormalizedXR.vec3_mul(screenPosition, textPosition),\r\n                    textRotation.vec3_set(0, 180, 0),\r\n                    textScale.vec3_set(scaleNormalized * scale, scaleNormalized * scale, scaleNormalized * scale));\r\n\r\n                lookToForward = visualParams.myTransform.mat4_getPosition(lookToForward).vec3_negate(lookToForward).vec3_normalize(lookToForward);\r\n                textRotationQuat = visualParams.myTransform.mat4_getRotationQuat(textRotationQuat);\r\n                textRotationQuat.quat_setForward(lookToForward, up, textRotationQuat);\r\n                visualParams.myTransform.mat4_setRotationQuat(textRotationQuat);\r\n            } else {\r\n                visualParams.myTransform.mat4_setPositionRotationScale(\r\n                    screenPositionNormalizedNonXR.vec3_mul(screenPosition, textPosition),\r\n                    textRotation.vec3_set(0, 180, 0),\r\n                    textScale.vec3_set(scaleNormalized * scale, scaleNormalized * scale, scaleNormalized * scale));\r\n            }\r\n\r\n            visualParams.myParent = Globals.getPlayerObjects(this._myEngine).myHeadDebugs;\r\n            visualParams.myLocal = true;\r\n\r\n            this.draw(visualParams, lifetimeSeconds);\r\n        }\r\n    };\r\n}();", "import { Globals } from \"../pp/globals\";\r\nimport { DebugVisualManager } from \"./debug_visual_manager\";\r\n\r\nexport class DebugManager {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n        this._myDebugVisualManager = new DebugVisualManager(this._myEngine);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    getDebugVisualManager() {\r\n        return this._myDebugVisualManager;\r\n    }\r\n\r\n    start() {\r\n        this._myDebugVisualManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myDebugVisualManager.setActive(Globals.isDebugEnabled(this._myEngine));\r\n        this._myDebugVisualManager.update(dt);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myDebugVisualManager.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class EnableDebugComponent extends Component {\r\n    static TypeName = \"pp-enable-debug\";\r\n    static Properties = {\r\n        _myEnable: Property.bool(true),\r\n    };\r\n\r\n    init() {\r\n        this._myDebugEnabled = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasDebugEnabled(this.engine)) {\r\n            this._myDebugEnabled = this._myEnable;\r\n\r\n            Globals.setDebugEnabled(this._myDebugEnabled, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDebugEnabled != null && Globals.isDebugEnabled(this.engine) == this._myDebugEnabled) {\r\n            Globals.removeDebugEnabled(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { ClassicGamepadCore } from \"../../gamepad/gamepad_cores/classic_gamepad_core\";\r\nimport { KeyboardGamepadCore } from \"../../gamepad/gamepad_cores/keyboard_gamepad_core\";\r\nimport { XRGamepadCore } from \"../../gamepad/gamepad_cores/xr_gamepad_core\";\r\nimport { InputManager } from \"../input_manager\";\r\n\r\nexport class InputManagerComponent extends Component {\r\n    static TypeName = \"pp-input-manager\";\r\n    static Properties = {\r\n        _myPoseForwardFixed: Property.bool(true),\r\n        _myMousePreventContextMenu: Property.bool(true),\r\n        _myMousePreventMiddleButtonScroll: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myInputManager = null;\r\n        this._myPoseForwardFixedGlobal = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasInputManager(this.engine)) {\r\n            this._myInputManager = new InputManager(this.engine);\r\n\r\n            Globals.setInputManager(this._myInputManager, this.engine);\r\n        }\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasPoseForwardFixed(this.engine)) {\r\n            this._myPoseForwardFixedGlobal = this._myPoseForwardFixed;\r\n\r\n            Globals.setPoseForwardFixed(this._myPoseForwardFixedGlobal, this.engine);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myInputManager != null) {\r\n            this._myInputManager.start();\r\n\r\n            this._setupMousePrevent();\r\n\r\n            this._addGamepadCores();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myInputManager != null) {\r\n            this._myInputManager.update(dt);\r\n        }\r\n    }\r\n\r\n    _setupMousePrevent() {\r\n        if (this._myMousePreventContextMenu) {\r\n            this._myInputManager.getMouse().setContextMenuActive(false);\r\n        }\r\n\r\n        if (this._myMousePreventMiddleButtonScroll) {\r\n            this._myInputManager.getMouse().setMiddleButtonScrollActive(false);\r\n        }\r\n    }\r\n\r\n    _addGamepadCores() {\r\n        let leftHandPose = this._myInputManager.getLeftHandPose();\r\n        let rightHandPose = this._myInputManager.getRightHandPose();\r\n\r\n        let leftXRGamepadCore = new XRGamepadCore(leftHandPose);\r\n        let rightXRGamepadCore = new XRGamepadCore(rightHandPose);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_xr_gamepad\", leftXRGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_xr_gamepad\", rightXRGamepadCore);\r\n\r\n        let leftKeyboardGamepadCore = new KeyboardGamepadCore(leftHandPose);\r\n        let rightKeyboardGamepadCore = new KeyboardGamepadCore(rightHandPose);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_keyboard_gamepad\", leftKeyboardGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_keyboard_gamepad\", rightKeyboardGamepadCore);\r\n\r\n        let leftClassicGamepadCore = new ClassicGamepadCore(null, leftHandPose);\r\n        let rightClassicGamepadCore = new ClassicGamepadCore(null, rightHandPose);\r\n\r\n        this._myInputManager.getGamepadsManager().getLeftGamepad().addGamepadCore(\"pp_left_classic_gamepad\", leftClassicGamepadCore);\r\n        this._myInputManager.getGamepadsManager().getRightGamepad().addGamepadCore(\"pp_right_classic_gamepad\", rightClassicGamepadCore);\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myInputManager != null && Globals.getInputManager(this.engine) == this._myInputManager) {\r\n            Globals.removeInputManager(this.engine);\r\n\r\n            this._myInputManager.destroy();\r\n        }\r\n\r\n        if (this._myPoseForwardFixedGlobal != null && Globals.isPoseForwardFixed(this.engine) == this._myPoseForwardFixedGlobal) {\r\n            Globals.removePoseForwardFixed(this.engine);\r\n        }\r\n    }\r\n}", "import { vec2_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport let GamepadButtonID = {\r\n    SELECT: 0,          // Trigger\r\n    SQUEEZE: 1,         // Grip\r\n    TOUCHPAD: 2,\r\n    THUMBSTICK: 3,\r\n    BOTTOM_BUTTON: 4,   // A or X button on oculus quest gamepad\r\n    TOP_BUTTON: 5,      // B or Y button on oculus quest gamepad, reverts to TOUCHPAD button for gamepads that does not support TOP_BUTTON\r\n    THUMB_REST: 6\r\n};\r\n\r\nexport let GamepadButtonEvent = {\r\n    PRESS_START: 0,\r\n    PRESS_END: 1,\r\n    PRESSED: 2,         // Every frame that it is pressed\r\n    NOT_PRESSED: 3,     // Every frame that it is not pressed\r\n    TOUCH_START: 4,\r\n    TOUCH_END: 5,\r\n    TOUCHED: 6,         // Every frame that it is touched\r\n    NOT_TOUCHED: 7,     // Every frame that it is not touched\r\n    VALUE_CHANGED: 8,\r\n    ALWAYS: 9           // Every frame\r\n};\r\n\r\nexport let GamepadAxesID = {\r\n    THUMBSTICK: 0\r\n};\r\n\r\nexport let GamepadAxesEvent = {\r\n    X_CHANGED: 0,\r\n    Y_CHANGED: 1,\r\n    AXES_CHANGED: 2,\r\n    ALWAYS: 3\r\n};\r\n\r\nexport class GamepadButtonInfo {\r\n\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n        this.myHandedness = handedness;\r\n\r\n        this.myPressed = false;\r\n        this.myPrevIsPressed = false;\r\n\r\n        this.myTouched = false;\r\n        this.myPrevIsTouched = false;\r\n\r\n        this.myValue = 0.0;\r\n        this.myPrevValue = 0.0;\r\n\r\n        this.myTimePressed = 0;\r\n        this.myPrevTimePressed = 0;\r\n\r\n        this.myTimeNotPressed = 0;\r\n        this.myPrevTimeNotPressed = 0;\r\n\r\n        this.myTimeTouched = 0;\r\n        this.myPrevTimeTouched = 0;\r\n\r\n        this.myTimeNotTouched = 0;\r\n        this.myPrevTimeNotTouched = 0;\r\n\r\n        this.myMultiplePressStartCount = 0;\r\n        this.myPrevMultiplePressStartCount = 0;\r\n        this.myMultiplePressEndCount = 0;\r\n        this.myPrevMultiplePressEndCount = 0;\r\n\r\n        this.myMultipleTouchStartCount = 0;\r\n        this.myPrevMultipleTouchStartCount = 0;\r\n        this.myMultipleTouchEndCount = 0;\r\n        this.myPrevMultipleTouchEndCount = 0;\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    isPressed() {\r\n        return this.myPressed;\r\n    }\r\n\r\n    isTouched() {\r\n        return this.myTouched;\r\n    }\r\n\r\n    isPressStart(multiplePressCount = null) {\r\n        return (this.myPressed && !this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressStartCount == multiplePressCount);\r\n    }\r\n\r\n    isPressEnd(multiplePressCount = null) {\r\n        return (!this.myPressed && this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressEndCount == multiplePressCount);\r\n    }\r\n\r\n    isTouchStart(multipleTouchCount = null) {\r\n        return (this.myTouched && !this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchStartCount == multipleTouchCount);\r\n    }\r\n\r\n    isTouchEnd(multipleTouchCount = null) {\r\n        return (!this.myTouched && this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchEndCount == multipleTouchCount);\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadButtonInfo(this.myID, this.myHandedness);\r\n        value.myPressed = this.myPressed;\r\n        value.myPrevIsPressed = this.myPrevIsPressed;\r\n        value.myTouched = this.myTouched;\r\n        value.myPrevIsTouched = this.myPrevIsTouched;\r\n        value.myValue = this.myValue;\r\n        value.myPrevValue = this.myPrevValue;\r\n\r\n        value.myTimePressed = this.myTimePressed;\r\n        value.myPrevTimePressed = this.myPrevTimePressed;\r\n        value.myTimeNotPressed = this.myTimeNotPressed;\r\n        value.myPrevTimeNotPressed = this.myPrevTimeNotPressed;\r\n\r\n        value.myTimeTouched = this.myTimeTouched;\r\n        value.myPrevTimeTouched = this.myPrevTimeTouched;\r\n        value.myTimeNotTouched = this.myTimeNotTouched;\r\n        value.myPrevTimeNotTouched = this.myPrevTimeNotTouched;\r\n\r\n        value.myMultiplePressStartCount = this.myMultiplePressStartCount;\r\n        value.myPrevMultiplePressStartCount = this.myPrevMultiplePressStartCount;\r\n        value.myMultiplePressEndCount = this.myMultiplePressEndCount;\r\n        value.myPrevMultiplePressEndCount = this.myPrevMultiplePressEndCount;\r\n\r\n        value.myMultipleTouchStartCount = this.myMultipleTouchStartCount;\r\n        value.myPrevMultipleTouchStartCount = this.myPrevMultipleTouchStartCount;\r\n        value.myMultipleTouchEndCount = this.myMultipleTouchEndCount;\r\n        value.myPrevMultipleTouchEndCount = this.myPrevMultipleTouchEndCount;\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class GamepadAxesInfo {\r\n\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n\r\n        this.myHandedness = handedness;\r\n\r\n        this.myAxes = vec2_create(0, 0); // this.myAxes[0] is X,  this.myAxes[1] is Y\r\n        this.myPrevAxes = vec2_create(0, 0);\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getAxes() {\r\n        return this.myAxes;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadAxesInfo(this.myID, this.myHandedness);\r\n        value.myAxes.vec2_copy(this.myAxes);\r\n        value.myPrevAxes.vec2_copy(this.myPrevAxes);\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class GamepadPulseInfo {\r\n\r\n    constructor() {\r\n        this.myIntensity = 0.0;\r\n        this.myDuration = 0.0;\r\n\r\n        this.myDevicePulsing = false; // true if the gamepad actually sent a request to pulse to the device\r\n    }\r\n\r\n    clone() {\r\n        let value = new GamepadPulseInfo();\r\n        value.myIntensity = this.myIntensity;\r\n        value.myDuration = this.myDuration;\r\n        value.myDevicePulsing = this.myDevicePulsing;\r\n\r\n        return value;\r\n    }\r\n}", "import { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        this._myHandPose = handPose;\r\n\r\n        this._myManagingHandPose = false;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.getHandPose().getHandedness();\r\n    }\r\n\r\n    getHandPose() {\r\n        return this._myHandPose;\r\n    }\r\n\r\n    getEngine() {\r\n        return this.getHandPose().getEngine();\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    setManageHandPose(manageHandPose) {\r\n        this._myManagingHandPose = manageHandPose;\r\n    }\r\n\r\n    isManagingHandPose() {\r\n        return this._myManagingHandPose;\r\n    }\r\n\r\n    start() {\r\n        if (this.getHandPose() && this.isManagingHandPose()) {\r\n            this.getHandPose().start();\r\n        }\r\n\r\n        this._startHook();\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this.getHandPose() && this.isManagingHandPose()) {\r\n            this.getHandPose().update(dt);\r\n        }\r\n\r\n        this._preUpdateHook(dt);\r\n    }\r\n\r\n    postUpdate(dt) {\r\n        this._postUpdateHook(dt);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        let hapticActuators = [];\r\n        return hapticActuators;\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _startHook() {\r\n\r\n    }\r\n\r\n    _preUpdateHook(dt) {\r\n\r\n    }\r\n\r\n    _postUpdateHook(dt) {\r\n\r\n    }\r\n\r\n    _destroyHook() {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _createButtonData() {\r\n        return { myPressed: false, myTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return vec2_create(0, 0);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._destroyHook();\r\n\r\n        if (this.isManagingHandPose()) {\r\n            this.getHandPose().destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class ClassicGamepadCore extends GamepadCore {\r\n\r\n    constructor(gamepadIndex, handPose) {\r\n        super(handPose);\r\n\r\n        this._myGamepadIndex = gamepadIndex;    // null means any active gamepad\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        let classicGamepad = this._getClassicGamepad();\r\n        return classicGamepad != null && (classicGamepad.connected == null || classicGamepad.connected);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myPressed = false;\r\n        this._myButtonData.myTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            let button = null;\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[4];\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[6];\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[10];\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[13];\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[12];\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[5];\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[7];\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[11];\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[0];\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[3];\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (button != null) {\r\n                this._myButtonData.myPressed = button.pressed;\r\n                this._myButtonData.myTouched = button.touched;\r\n                this._myButtonData.myValue = button.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                this._myAxesData[0] = classicGamepad.axes[0];\r\n                this._myAxesData[1] = classicGamepad.axes[1];\r\n            } else {\r\n                this._myAxesData[0] = classicGamepad.axes[2];\r\n                this._myAxesData[1] = classicGamepad.axes[3];\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (classicGamepad.hapticActuators != null && classicGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...classicGamepad.hapticActuators);\r\n            }\r\n\r\n            if (classicGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(classicGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _getClassicGamepad() {\r\n        let classicGamepad = null;\r\n\r\n        let gamepads = Globals.getNavigator(this.getEngine()).getGamepads();\r\n        if (this._myGamepadIndex != null) {\r\n            if (this._myGamepadIndex < gamepads.length) {\r\n                classicGamepad = gamepads[this._myGamepadIndex];\r\n            }\r\n        } else {\r\n            for (let gamepad of gamepads) {\r\n                if (gamepad != null && (gamepad.connected == null || gamepad.connected)) {\r\n                    classicGamepad = gamepad;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return classicGamepad;\r\n    }\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nexport let KeyID = {\r\n    _0: \"0\",\r\n    _1: \"1\",\r\n    _2: \"2\",\r\n    _3: \"3\",\r\n    _4: \"4\",\r\n    _5: \"5\",\r\n    _6: \"6\",\r\n    _7: \"7\",\r\n    _8: \"8\",\r\n    _9: \"9\",\r\n\r\n    A: \"A\",\r\n    B: \"B\",\r\n    C: \"C\",\r\n    D: \"D\",\r\n    E: \"E\",\r\n    F: \"F\",\r\n    G: \"G\",\r\n    H: \"H\",\r\n    I: \"I\",\r\n    J: \"J\",\r\n    K: \"K\",\r\n    L: \"L\",\r\n    M: \"M\",\r\n    N: \"N\",\r\n    O: \"O\",\r\n    P: \"P\",\r\n    Q: \"Q\",\r\n    R: \"R\",\r\n    S: \"S\",\r\n    T: \"T\",\r\n    U: \"U\",\r\n    V: \"V\",\r\n    W: \"W\",\r\n    X: \"X\",\r\n    Y: \"Y\",\r\n    Z: \"Z\",\r\n\r\n    a: \"a\",\r\n    b: \"b\",\r\n    c: \"c\",\r\n    d: \"d\",\r\n    e: \"e\",\r\n    f: \"f\",\r\n    g: \"g\",\r\n    h: \"h\",\r\n    i: \"i\",\r\n    j: \"j\",\r\n    k: \"k\",\r\n    l: \"l\",\r\n    m: \"m\",\r\n    n: \"n\",\r\n    o: \"o\",\r\n    p: \"p\",\r\n    q: \"q\",\r\n    r: \"r\",\r\n    s: \"s\",\r\n    t: \"t\",\r\n    u: \"u\",\r\n    v: \"v\",\r\n    w: \"w\",\r\n    x: \"x\",\r\n    y: \"y\",\r\n    z: \"z\",\r\n\r\n    UP: \"ArrowUp\",\r\n    DOWN: \"ArrowDown\",\r\n    LEFT: \"ArrowLeft\",\r\n    RIGHT: \"ArrowRight\",\r\n\r\n    SPACE: \" \",\r\n    ENTER: \"Enter\",\r\n    BACKSPACE: \"Backspace\",\r\n    ESC: \"Escape\",\r\n\r\n    SHIFT_LEFT: \"ShiftLeft\",\r\n    SHIFT_RIGHT: \"ShiftRight\",\r\n    CONTROL_LEFT: \"ControlLeft\",\r\n    CONTROL_RIGHT: \"ControlRight\",\r\n    ALT_LEFT: \"AltLeft\",\r\n    ALT_RIGHT: \"AltRight\"\r\n};\r\n\r\nexport class Keyboard {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myKeyInfos = new Map();\r\n\r\n        for (let key in KeyID) {\r\n            this.addKey(KeyID[key]);\r\n        }\r\n\r\n        this._myOnKeyDownEventListener = null;\r\n        this._myOnKeyUpEventListener = null;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    isKeyPressed(keyID) {\r\n        let pressed = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            pressed = this._myKeyInfos.get(keyID).myPressed;\r\n        }\r\n\r\n        return pressed;\r\n    }\r\n\r\n    isKeyPressStart(keyID) {\r\n        let pressStart = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            pressStart = this._myKeyInfos.get(keyID).myPressStart;\r\n        }\r\n\r\n        return pressStart;\r\n    }\r\n\r\n    isKeyPressEnd(keyID) {\r\n        let pressEnd = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            pressEnd = this._myKeyInfos.get(keyID).myPressEnd;\r\n        }\r\n\r\n        return pressEnd;\r\n    }\r\n\r\n    addKey(keyID) {\r\n        this._myKeyInfos.set(keyID, this._createKeyInfo());\r\n    }\r\n\r\n    start() {\r\n        this._myOnKeyDownEventListener = this._keyDown.bind(this);\r\n        Globals.getWindow(this._myEngine).addEventListener(\"keydown\", this._myOnKeyDownEventListener);\r\n        this._myOnKeyUpEventListener = this._keyUp.bind(this);\r\n        Globals.getWindow(this._myEngine).addEventListener(\"keyup\", this._myOnKeyUpEventListener);\r\n    }\r\n\r\n    update(dt) {\r\n        if (!Globals.getDocument(this._myEngine).hasFocus()) {\r\n            for (let keyInfo of this._myKeyInfos.values()) {\r\n                if (keyInfo.myPressed) {\r\n                    keyInfo.myPressed = false;\r\n                    keyInfo.myPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let keyInfo of this._myKeyInfos.values()) {\r\n            keyInfo.myPressStart = keyInfo.myPressStartToProcess;\r\n            keyInfo.myPressEnd = keyInfo.myPressEndToProcess;\r\n            keyInfo.myPressStartToProcess = false;\r\n            keyInfo.myPressEndToProcess = false;\r\n        }\r\n    }\r\n\r\n    _keyDown(event) {\r\n        this._keyPressedChanged(event.key, true);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, true);\r\n        }\r\n    }\r\n\r\n    _keyUp(event) {\r\n        this._keyPressedChanged(event.key, false);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, false);\r\n        }\r\n    }\r\n\r\n    _keyPressedChanged(keyID, pressed) {\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            let keyInfo = this._myKeyInfos.get(keyID);\r\n\r\n            if (pressed) {\r\n                keyInfo.myPressed = true;\r\n                keyInfo.myPressStartToProcess = true;\r\n            } else {\r\n                keyInfo.myPressed = false;\r\n                keyInfo.myPressEndToProcess = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _createKeyInfo() {\r\n        return { myPressed: false, myPressStart: false, myPressStartToProcess: false, myPressEnd: false, myPressEndToProcess: false, };\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        Globals.getWindow(this._myEngine).removeEventListener(\"keydown\", this._myOnKeyDownEventListener);\r\n        Globals.getWindow(this._myEngine).removeEventListener(\"keyup\", this._myOnKeyUpEventListener);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { KeyID } from \"../../cauldron/keyboard\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class KeyboardGamepadCore extends GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        super(handPose);\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myPressed = false;\r\n        this._myButtonData.myTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        let keyboard = Globals.getKeyboard(this.getEngine());\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.E) || keyboard.isKeyPressed(KeyID.e);\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.Q) || keyboard.isKeyPressed(KeyID.q);\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.X) || keyboard.isKeyPressed(KeyID.x);\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.R) || keyboard.isKeyPressed(KeyID.r);\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.C) || keyboard.isKeyPressed(KeyID.c);\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.F) || keyboard.isKeyPressed(KeyID.f);\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.V) || keyboard.isKeyPressed(KeyID.v);\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case GamepadButtonID.SELECT:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.U) || keyboard.isKeyPressed(KeyID.u);\r\n                        break;\r\n                    case GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.O) || keyboard.isKeyPressed(KeyID.o);\r\n                        break;\r\n                    case GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.M) || keyboard.isKeyPressed(KeyID.m);\r\n                        break;\r\n                    case GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.Y) || keyboard.isKeyPressed(KeyID.y);\r\n                        break;\r\n                    case GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.N) || keyboard.isKeyPressed(KeyID.n);\r\n                        break;\r\n                    case GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.H) || keyboard.isKeyPressed(KeyID.h);\r\n                        break;\r\n                    case GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myPressed = keyboard.isKeyPressed(KeyID.B) || keyboard.isKeyPressed(KeyID.b);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myButtonData.myPressed) {\r\n            this._myButtonData.myTouched = true;\r\n            this._myButtonData.myValue = 1;\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        let keyboard = Globals.getKeyboard(this.getEngine());\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == Handedness.LEFT) {\r\n                if (keyboard.isKeyPressed(KeyID.W) || keyboard.isKeyPressed(KeyID.w)) this._myAxesData[1] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.S) || keyboard.isKeyPressed(KeyID.s)) this._myAxesData[1] += -1.0;\r\n                if (keyboard.isKeyPressed(KeyID.D) || keyboard.isKeyPressed(KeyID.d)) this._myAxesData[0] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.A) || keyboard.isKeyPressed(KeyID.a)) this._myAxesData[0] += -1.0;\r\n            } else {\r\n                if (keyboard.isKeyPressed(KeyID.I) || keyboard.isKeyPressed(KeyID.i) || keyboard.isKeyPressed(KeyID.UP)) this._myAxesData[1] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.K) || keyboard.isKeyPressed(KeyID.k) || keyboard.isKeyPressed(KeyID.DOWN)) this._myAxesData[1] += -1.0;\r\n                if (keyboard.isKeyPressed(KeyID.L) || keyboard.isKeyPressed(KeyID.l) || keyboard.isKeyPressed(KeyID.RIGHT)) this._myAxesData[0] += 1.0;\r\n                if (keyboard.isKeyPressed(KeyID.J) || keyboard.isKeyPressed(KeyID.j) || keyboard.isKeyPressed(KeyID.LEFT)) this._myAxesData[0] += -1.0;\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n}", "// xr-standard mapping is assumed\r\n\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class XRGamepadCore extends GamepadCore {\r\n\r\n    constructor(handPose) {\r\n        super(handPose);\r\n\r\n        this._mySelectPressed = false;\r\n        this._mySqueezePressed = false;\r\n\r\n        this._myXRSessionActive = false;\r\n        this._myInputSource = null;\r\n        this._myGamepad = null;\r\n\r\n        this._mySelectStartEventListener = null;\r\n        this._mySelectEndEventListener = null;\r\n        this._mySqueezeStartEventListener = null;\r\n        this._mySqueezeEndEventListener = null;\r\n\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        // connected == null is to fix webxr emulator that leaves that field undefined\r\n        return this._myXRSessionActive && this._myGamepad != null && (this._myGamepad.connected == null || this._myGamepad.connected);\r\n    }\r\n\r\n    _startHook() {\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this.getEngine());\r\n    }\r\n\r\n    _preUpdateHook(dt) {\r\n        this._myInputSource = this.getHandPose().getInputSource();\r\n        if (this._myInputSource != null) {\r\n            this._myGamepad = this._myInputSource.gamepad;\r\n        } else {\r\n            this._myGamepad = null;\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myPressed = false;\r\n        this._myButtonData.myTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID < this._myGamepad.buttons.length) {\r\n                let gamepadButton = this._myGamepad.buttons[buttonID];\r\n\r\n                if (buttonID != GamepadButtonID.SELECT && buttonID != GamepadButtonID.SQUEEZE) {\r\n                    this._myButtonData.myPressed = gamepadButton.pressed;\r\n                } else {\r\n                    this._myButtonData.myPressed = this._getSpecialButtonPressed(buttonID);\r\n                }\r\n\r\n                this._myButtonData.myTouched = gamepadButton.touched;\r\n                this._myButtonData.myValue = gamepadButton.value;\r\n            } else if (buttonID == GamepadButtonID.TOP_BUTTON && this._myGamepad.buttons.length >= 3) {\r\n                // This way if you are using a basic touch gamepad, top button will work anyway\r\n\r\n                let touchButton = this._myGamepad.buttons[2];\r\n                this._myButtonData.myPressed = touchButton.pressed;\r\n                this._myButtonData.myTouched = touchButton.touched;\r\n                this._myButtonData.myValue = touchButton.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            let internalAxes = this._myGamepad.axes;\r\n            if (internalAxes.length == 4) {\r\n                // In this case it could be both touch axes or thumbstick axes, that depends on the gamepad\r\n                // to support both I simply choose the absolute max value (unused axes will always be 0)\r\n\r\n                // X\r\n                if (Math.abs(internalAxes[0]) > Math.abs(internalAxes[2])) {\r\n                    this._myAxesData[0] = internalAxes[0];\r\n                } else {\r\n                    this._myAxesData[0] = internalAxes[2];\r\n                }\r\n\r\n                // Y\r\n                if (Math.abs(internalAxes[1]) > Math.abs(internalAxes[3])) {\r\n                    this._myAxesData[1] = internalAxes[1];\r\n                } else {\r\n                    this._myAxesData[1] = internalAxes[3];\r\n                }\r\n\r\n            } else if (internalAxes.length == 2) {\r\n                this._myAxesData[0] = internalAxes[0];\r\n                this._myAxesData[1] = internalAxes[1];\r\n            }\r\n\r\n            // Y axis is recorded negative when thumbstick is pressed forward for weird reasons\r\n            this._myAxesData[1] = -this._myAxesData[1];\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myGamepad.hapticActuators != null && this._myGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...this._myGamepad.hapticActuators);\r\n            }\r\n\r\n            if (this._myGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(this._myGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    // This is to be more compatible\r\n    _getSpecialButtonPressed(buttonID) {\r\n        let pressed = false;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID == GamepadButtonID.SELECT) {\r\n                pressed = this._mySelectPressed;\r\n            } else if (buttonID == GamepadButtonID.SQUEEZE) {\r\n                pressed = this._mySqueezePressed;\r\n            }\r\n        }\r\n\r\n        return pressed;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        this._mySelectStartEventListener = this._selectStart.bind(this);\r\n        this._mySelectEndEventListener = this._selectEnd.bind(this);\r\n        this._mySqueezeStartEventListener = this._squeezeStart.bind(this);\r\n        this._mySqueezeEndEventListener = this._squeezeEnd.bind(this);\r\n\r\n        session.addEventListener(\"selectstart\", this._mySelectStartEventListener);\r\n        session.addEventListener(\"selectend\", this._mySelectEndEventListener);\r\n\r\n        session.addEventListener(\"squeezestart\", this._mySqueezeStartEventListener);\r\n        session.addEventListener(\"squeezeend\", this._mySqueezeEndEventListener);\r\n\r\n        this._myXRSessionActive = true;\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._mySelectStartEventListener = null;\r\n        this._mySelectEndEventListener = null;\r\n        this._mySqueezeStartEventListener = null;\r\n        this._mySqueezeEndEventListener = null;\r\n\r\n        this._myXRSessionActive = false;\r\n    }\r\n\r\n    // Select and Squeeze are managed this way to be more compatible\r\n    _selectStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = true;\r\n        }\r\n    }\r\n\r\n    _selectEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = false;\r\n        }\r\n    }\r\n\r\n    _squeezeStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = true;\r\n        }\r\n    }\r\n\r\n    _squeezeEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = false;\r\n        }\r\n    }\r\n\r\n    _destroyHook() {\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"selectstart\", this._mySelectStartEventListener);\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"selectend\", this._mySelectEndEventListener);\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"squeezestart\", this._mySqueezeStartEventListener);\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"squeezeend\", this._mySqueezeEndEventListener);\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this.getEngine());\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { vec2_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { GamepadAxesEvent, GamepadAxesID, GamepadAxesInfo, GamepadButtonEvent, GamepadButtonID, GamepadButtonInfo, GamepadPulseInfo } from \"./gamepad_buttons\";\r\n\r\nexport class BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myButtonInfos = [];\r\n        for (let key in GamepadButtonID) {\r\n            this._myButtonInfos[GamepadButtonID[key]] = new GamepadButtonInfo(GamepadButtonID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myAxesInfos = [];\r\n        for (let key in GamepadAxesID) {\r\n            this._myAxesInfos[GamepadAxesID[key]] = new GamepadAxesInfo(GamepadAxesID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myButtonEmitters = [];    // Signature: listener(ButtonInfo, Gamepad)\r\n        for (let key in GamepadButtonID) {\r\n            this._myButtonEmitters[GamepadButtonID[key]] = [];\r\n            for (let eventKey in GamepadButtonEvent) {\r\n                this._myButtonEmitters[GamepadButtonID[key]][GamepadButtonEvent[eventKey]] = new Emitter();\r\n            }\r\n        }\r\n\r\n        this._myAxesEmitters = [];      // Signature: listener(AxesInfo, Gamepad)\r\n        for (let key in GamepadAxesID) {\r\n            this._myAxesEmitters[GamepadAxesID[key]] = [];\r\n            for (let eventKey in GamepadAxesEvent) {\r\n                this._myAxesEmitters[GamepadAxesID[key]][GamepadAxesEvent[eventKey]] = new Emitter();\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo = new GamepadPulseInfo();\r\n\r\n        this._myDestroyed = false;\r\n\r\n        // Config\r\n\r\n        this._myMultiplePressMaxDelay = 0.4;\r\n        this._myMultipleTouchMaxDelay = 0.4;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getButtonInfo(buttonID) {\r\n        return this._myButtonInfos[buttonID];\r\n    }\r\n\r\n    registerButtonEventListener(buttonID, buttonEvent, id, listener) {\r\n        this._myButtonEmitters[buttonID][buttonEvent].add(listener, { id: id });\r\n    }\r\n\r\n    unregisterButtonEventListener(buttonID, buttonEvent, id) {\r\n        this._myButtonEmitters[buttonID][buttonEvent].remove(id);\r\n    }\r\n\r\n    getAxesInfo(axesID) {\r\n        return this._myAxesInfos[axesID];\r\n    }\r\n\r\n    registerAxesEventListener(axesID, axesEvent, id, listener) {\r\n        this._myAxesEmitters[axesID][axesEvent].add(listener, { id: id });\r\n    }\r\n\r\n    unregisterAxesEventListener(axesID, axesEvent, id) {\r\n        this._myAxesEmitters[axesID][axesEvent].remove(id);\r\n    }\r\n\r\n    pulse(intensity, duration = 0) {\r\n        this._myPulseInfo.myIntensity = Math.pp_clamp(intensity, 0, 1);\r\n        this._myPulseInfo.myDuration = Math.max(duration, 0);\r\n    }\r\n\r\n    stopPulse() {\r\n        this._myPulseInfo.myIntensity = 0;\r\n        this._myPulseInfo.myDuration = 0;\r\n    }\r\n\r\n    isPulsing() {\r\n        return this._myPulseInfo.myIntensity > 0 || this._myPulseInfo.myDuration > 0;\r\n    }\r\n\r\n    getPulseInfo() {\r\n        return this._myPulseInfo;\r\n    }\r\n\r\n    getMultiplePressMaxDelay() {\r\n        return this._myMultiplePressMaxDelay;\r\n    }\r\n\r\n    setMultiplePressMaxDelay(maxDelay) {\r\n        this._myMultiplePressMaxDelay = maxDelay;\r\n    }\r\n\r\n    getMultipleTouchMaxDelay() {\r\n        return this._myMultipleTouchMaxDelay;\r\n    }\r\n\r\n    setMultipleTouchMaxDelay(maxDelay) {\r\n        this._myMultipleTouchMaxDelay = maxDelay;\r\n    }\r\n\r\n    // Hooks\r\n\r\n    getHandPose() {\r\n        return null;\r\n    }\r\n\r\n    _startHook() {\r\n\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        let hapticActuator = [];\r\n        return hapticActuator;\r\n    }\r\n\r\n    _destroyHook() {\r\n\r\n    }\r\n\r\n    // Hooks End\r\n\r\n    start() {\r\n        this._startHook();\r\n    }\r\n\r\n    update(dt) {\r\n        this._preUpdate(dt);\r\n\r\n        this._preUpdateButtonInfos();\r\n        this._updateButtonInfos();\r\n        this._postUpdateButtonInfos(dt);\r\n\r\n        this._preUpdateAxesInfos();\r\n        this._updateAxesInfos();\r\n        this._postUpdateAxesInfos();\r\n\r\n        this._updatePulse(dt);\r\n\r\n        this._postUpdate(dt);\r\n    }\r\n\r\n    _preUpdateButtonInfos() {\r\n        for (let info of this._myButtonInfos) {\r\n            info.myPrevIsPressed = info.myPressed;\r\n            info.myPrevIsTouched = info.myTouched;\r\n            info.myPrevValue = info.myValue;\r\n        }\r\n    }\r\n\r\n    _updateButtonInfos() {\r\n        this._updateSingleButtonInfo(GamepadButtonID.SELECT);\r\n        this._updateSingleButtonInfo(GamepadButtonID.SQUEEZE);\r\n        this._updateSingleButtonInfo(GamepadButtonID.TOUCHPAD);\r\n        this._updateSingleButtonInfo(GamepadButtonID.THUMBSTICK);\r\n        this._updateSingleButtonInfo(GamepadButtonID.BOTTOM_BUTTON);\r\n        this._updateSingleButtonInfo(GamepadButtonID.TOP_BUTTON);\r\n        this._updateSingleButtonInfo(GamepadButtonID.THUMB_REST);\r\n    }\r\n\r\n    _updateSingleButtonInfo(buttonID) {\r\n        let buttonInfo = this._myButtonInfos[buttonID];\r\n        let buttonData = this._getButtonData(buttonID);\r\n\r\n        buttonInfo.myPressed = buttonData.myPressed;\r\n        buttonInfo.myTouched = buttonData.myTouched;\r\n        buttonInfo.myValue = buttonData.myValue;\r\n    }\r\n\r\n    _postUpdateButtonInfos(dt) {\r\n        for (let info of this._myButtonInfos) {\r\n            if (info.myPressed) {\r\n                info.myTimePressed += dt;\r\n                if (!info.myPrevIsPressed) {\r\n                    info.myMultiplePressStartCount += 1;\r\n\r\n                    info.myPrevTimeNotPressed = info.myTimeNotPressed;\r\n                    info.myTimeNotPressed = 0;\r\n                }\r\n\r\n                if (info.myPrevTimeNotPressed + info.myTimePressed > this._myMultiplePressMaxDelay && info.myMultiplePressEndCount > 0) {\r\n                    info.myPrevMultiplePressEndCount = info.myMultiplePressEndCount;\r\n                    info.myMultiplePressEndCount = 0;\r\n                }\r\n\r\n                if (info.myTimePressed > this._myMultiplePressMaxDelay && info.myMultiplePressStartCount > 0) {\r\n                    info.myPrevMultiplePressStartCount = info.myMultiplePressStartCount;\r\n                    info.myMultiplePressStartCount = 0;\r\n                }\r\n            } else {\r\n                info.myTimeNotPressed += dt;\r\n                if (info.myPrevIsPressed) {\r\n                    info.myMultiplePressEndCount += 1;\r\n\r\n                    info.myPrevTimePressed = info.myTimePressed;\r\n                    info.myTimePressed = 0;\r\n                }\r\n\r\n                if (info.myPrevTimePressed + info.myTimeNotPressed > this._myMultiplePressMaxDelay && info.myMultiplePressStartCount > 0) {\r\n                    info.myPrevMultiplePressStartCount = info.myMultiplePressStartCount;\r\n                    info.myMultiplePressStartCount = 0;\r\n                }\r\n\r\n                if (info.myTimeNotPressed > this._myMultiplePressMaxDelay && info.myMultiplePressEndCount > 0) {\r\n                    info.myPrevMultiplePressEndCount = info.myMultiplePressEndCount;\r\n                    info.myMultiplePressEndCount = 0;\r\n                }\r\n            }\r\n\r\n            if (info.myTouched) {\r\n                info.myTimeTouched += dt;\r\n                if (!info.myPrevIsTouched) {\r\n                    info.myMultipleTouchStartCount += 1;\r\n\r\n                    info.myPrevTimeNotTouched = info.myTimeNotTouched;\r\n                    info.myTimeNotTouched = 0;\r\n                }\r\n\r\n                if (info.myPrevTimeNotTouched + info.myTimeTouched > this._myMultipleTouchMaxDelay && info.myMultipleTouchEndCount > 0) {\r\n                    info.myPrevMultipleTouchEndCount = info.myMultipleTouchEndCount;\r\n                    info.myMultipleTouchEndCount = 0;\r\n                }\r\n\r\n                if (info.myTimeTouched > this._myMultipleTouchMaxDelay && info.myMultipleTouchStartCount > 0) {\r\n                    info.myPrevMultipleTouchStartCount = info.myMultipleTouchStartCount;\r\n                    info.myMultipleTouchStartCount = 0;\r\n                }\r\n            } else {\r\n                info.myTimeNotTouched += dt;\r\n                if (info.myPrevIsTouched) {\r\n                    info.myMultipleTouchEndCount += 1;\r\n\r\n                    info.myPrevTimeTouched = info.myTimeTouched;\r\n                    info.myTimeTouched = 0;\r\n                }\r\n\r\n                if (info.myPrevTimeTouched + info.myTimeNotTouched > this._myMultipleTouchMaxDelay && info.myMultipleTouchStartCount > 0) {\r\n                    info.myPrevMultipleTouchStartCount = info.myMultipleTouchStartCount;\r\n                    info.myMultipleTouchStartCount = 0;\r\n                }\r\n\r\n                if (info.myTimeNotTouched > this._myMultipleTouchMaxDelay && info.myMultipleTouchEndCount > 0) {\r\n                    info.myPrevMultipleTouchEndCount = info.myMultipleTouchEndCount;\r\n                    info.myMultipleTouchEndCount = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in GamepadButtonID) {\r\n            let buttonInfo = this._myButtonInfos[GamepadButtonID[key]];\r\n            let buttonEventEmitters = this._myButtonEmitters[GamepadButtonID[key]];\r\n\r\n            // PRESSED\r\n            if (buttonInfo.myPressed && !buttonInfo.myPrevIsPressed) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.PRESS_START];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            if (!buttonInfo.myPressed && buttonInfo.myPrevIsPressed) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.PRESS_END];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            if (buttonInfo.myPressed) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.PRESSED];\r\n                emitter.notify(buttonInfo, this);\r\n            } else {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.NOT_PRESSED];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            // TOUCHED\r\n            if (buttonInfo.myTouched && !buttonInfo.myPrevIsTouched) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.TOUCH_START];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            if (!buttonInfo.myTouched && buttonInfo.myPrevIsTouched) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.TOUCH_END];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            if (buttonInfo.myTouched) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.TOUCHED];\r\n                emitter.notify(buttonInfo, this);\r\n            } else {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.NOT_TOUCHED];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            // VALUE\r\n            if (buttonInfo.myValue != buttonInfo.myPrevValue) {\r\n                let emitter = buttonEventEmitters[GamepadButtonEvent.VALUE_CHANGED];\r\n                emitter.notify(buttonInfo, this);\r\n            }\r\n\r\n            // ALWAYS\r\n            let emitter = buttonEventEmitters[GamepadButtonEvent.ALWAYS];\r\n            emitter.notify(buttonInfo, this);\r\n        }\r\n\r\n        this._mySelectStart = false;\r\n        this._mySelectEnd = false;\r\n        this._mySqueezeStart = false;\r\n        this._mySqueezeEnd = false;\r\n    }\r\n\r\n    _preUpdateAxesInfos() {\r\n        for (let info of this._myAxesInfos) {\r\n            info.myPrevAxes[0] = info.myAxes[0];\r\n            info.myPrevAxes[1] = info.myAxes[1];\r\n        }\r\n    }\r\n\r\n    _updateAxesInfos() {\r\n        this._updateSingleAxesInfo(GamepadAxesID.THUMBSTICK);\r\n    }\r\n\r\n    _updateSingleAxesInfo(axesID) {\r\n        let axesInfo = this._myAxesInfos[axesID];\r\n        let axesData = this._getAxesData(axesID);\r\n\r\n        axesInfo.myAxes[0] = axesData[0];\r\n        axesInfo.myAxes[1] = axesData[1];\r\n    }\r\n\r\n    _postUpdateAxesInfos() {\r\n        for (let key in GamepadAxesID) {\r\n            let axesInfo = this._myAxesInfos[GamepadAxesID[key]];\r\n            let axesEventEmitters = this._myAxesEmitters[GamepadAxesID[key]];\r\n\r\n            // X CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0]) {\r\n                let emitter = axesEventEmitters[GamepadAxesEvent.X_CHANGED];\r\n                emitter.notify(axesInfo, this);\r\n            }\r\n\r\n            // Y CHANGED\r\n            if (axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let emitter = axesEventEmitters[GamepadAxesEvent.Y_CHANGED];\r\n                emitter.notify(axesInfo, this);\r\n            }\r\n\r\n            // AXES CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0] ||\r\n                axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let emitter = axesEventEmitters[GamepadAxesEvent.AXES_CHANGED];\r\n                emitter.notify(axesInfo, this);\r\n            }\r\n\r\n            // ALWAYS        \r\n            let emitter = axesEventEmitters[GamepadAxesEvent.ALWAYS];\r\n            emitter.notify(axesInfo, this);\r\n        }\r\n    }\r\n\r\n    _updatePulse(dt) {\r\n        if (this._myPulseInfo.myDevicePulsing || this._myPulseInfo.myIntensity > 0) {\r\n            let hapticActuators = this._getHapticActuators();\r\n            if (hapticActuators.length > 0) {\r\n                if (this._myPulseInfo.myIntensity > 0) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.pulse(this._myPulseInfo.myIntensity, Math.max(500, this._myPulseInfo.myDuration * 1000)); // Duration is managed by this class\r\n                    }\r\n                    this._myPulseInfo.myDevicePulsing = true;\r\n                } else if (this._myPulseInfo.myDevicePulsing) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.reset();\r\n                    }\r\n                    this._myPulseInfo.myDevicePulsing = false;\r\n                }\r\n            } else {\r\n                this._myPulseInfo.myDevicePulsing = false;\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo.myDuration -= dt;\r\n        if (this._myPulseInfo.myDuration <= 0) {\r\n            this._myPulseInfo.myIntensity = 0;\r\n            this._myPulseInfo.myDuration = 0;\r\n        }\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myPressed: false, myTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return vec2_create(0, 0);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._destroyHook();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { BaseGamepad } from \"./base_gamepad\";\r\n\r\nexport class UniversalGamepad extends BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        super(handedness);\r\n\r\n        this._myGamepadCores = new Map();\r\n\r\n        this._myStarted = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    addGamepadCore(id, gamepadCore) {\r\n        if (gamepadCore.getHandedness() == this.getHandedness()) {\r\n            this._myGamepadCores.set(id, gamepadCore);\r\n            if (this._myStarted) {\r\n                gamepadCore.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    getGamepadCore(id) {\r\n        return this._myGamepadCores.get(id);\r\n    }\r\n\r\n    removeGamepadCore(id) {\r\n        let gamepadCore = this._myGamepadCores.get(id);\r\n        if (gamepadCore) {\r\n            this._myGamepadCores.delete(id);\r\n        }\r\n    }\r\n\r\n    removeAllGamepadCores() {\r\n        for (let id of this._myGamepadCores.keys()) {\r\n            this.removeGamepadCore(id);\r\n        }\r\n    }\r\n\r\n    getHandPose() {\r\n        let handPose = null;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let currentCoreHandPose = core.getHandPose();\r\n                if (handPose == null || (currentCoreHandPose != null && currentCoreHandPose.isValid())) {\r\n                    handPose = currentCoreHandPose;\r\n                }\r\n            }\r\n\r\n            if (handPose != null && handPose.isValid()) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return handPose;\r\n    }\r\n\r\n    _startHook() {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.start();\r\n        }\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.preUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.postUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        this._myButtonData.myPressed = false;\r\n        this._myButtonData.myTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreButtonData = core.getButtonData(buttonID);\r\n                this._myButtonData.myPressed = this._myButtonData.myPressed || coreButtonData.myPressed;\r\n                this._myButtonData.myTouched = this._myButtonData.myTouched || coreButtonData.myTouched;\r\n                if (Math.abs(coreButtonData.myValue) > Math.abs(this._myButtonData.myValue)) {\r\n                    this._myButtonData.myValue = coreButtonData.myValue;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreAxesData = core.getAxesData(axesID);\r\n\r\n                if (Math.abs(coreAxesData[0]) > Math.abs(this._myAxesData[0])) {\r\n                    this._myAxesData[0] = coreAxesData[0];\r\n                }\r\n\r\n                if (Math.abs(coreAxesData[1]) > Math.abs(this._myAxesData[1])) {\r\n                    this._myAxesData[1] = coreAxesData[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                this._myHapticActuators.push(...core.getHapticActuators());\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _destroyHook() {\r\n        for (let gamepadCore of this._myGamepadCores.values()) {\r\n            gamepadCore.destroy();\r\n        }\r\n    }\r\n}", "import { Handedness } from \"../../cauldron/input_types\";\r\nimport { UniversalGamepad } from \"../universal_gamepad\";\r\n\r\nexport class GamepadsManager {\r\n\r\n    constructor() {\r\n        this._myGamepads = [];\r\n\r\n        this._myGamepads[Handedness.LEFT] = new UniversalGamepad(Handedness.LEFT);\r\n        this._myGamepads[Handedness.RIGHT] = new UniversalGamepad(Handedness.RIGHT);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        for (let key in this._myGamepads) {\r\n            this._myGamepads[key].start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        for (let key in this._myGamepads) {\r\n            this._myGamepads[key].update(dt);\r\n        }\r\n    }\r\n\r\n    getLeftGamepad() {\r\n        return this._myGamepads[Handedness.LEFT];\r\n    }\r\n\r\n    getRightGamepad() {\r\n        return this._myGamepads[Handedness.RIGHT];\r\n    }\r\n\r\n    getGamepad(handedness) {\r\n        return this._myGamepads[handedness];\r\n    }\r\n\r\n    getGamepads() {\r\n        return this._myGamepads;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let key in this._myGamepads) {\r\n            this._myGamepads[key].destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { mat4_create, quat2_create, quat_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class BasePoseParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myReferenceObject = null;\r\n        this.myForwardFixed = true;\r\n        this.myUpdateOnViewReset = true;\r\n        this.myForceEmulatedVelocities = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\n// BasePose transform is local by default (as if the parent/reference object was the identity transform)\r\n// You can use setReferenceObject if you want the BasePose to return the transform in world space \r\nexport class BasePose {\r\n\r\n    constructor(basePoseParams = new BasePoseParams()) {\r\n        this._myForwardFixed = basePoseParams.myForwardFixed;\r\n        this._myForceEmulatedVelocities = basePoseParams.myForceEmulatedVelocities;\r\n        this._myUpdateOnViewReset = basePoseParams.myUpdateOnViewReset;\r\n\r\n        this._myReferenceObject = basePoseParams.myReferenceObject;\r\n\r\n        this._myEngine = basePoseParams.myEngine;\r\n\r\n        this._myPosition = vec3_create();\r\n        this._myRotationQuat = quat2_create();\r\n\r\n        this._myPrevPosition = vec3_create();\r\n        this._myPrevRotationQuat = quat_create();\r\n\r\n        this._myLinearVelocity = vec3_create();\r\n        this._myAngularVelocityRadians = vec3_create();\r\n\r\n        this._myValid = false;\r\n        this._myLinearVelocityEmulated = true;\r\n        this._myAngularVelocityEmulated = true;\r\n\r\n        this._myPoseUpdatedEmitter = new Emitter();   // Signature: listener(thisPose)\r\n\r\n        this._myViewResetEventListener = null;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    getEngine() {\r\n        return this._myEngine;\r\n    }\r\n\r\n    // If the reference object is set, the transform will be converted using it as a parent,\r\n    // otherwise the transform will be local, as if the parent/reference object was the identity transform\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setForwardFixed(forwardFixed) {\r\n        this._myForwardFixed = forwardFixed;\r\n    }\r\n\r\n    isForwardFixed() {\r\n        return this._myForwardFixed;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n\r\n    setUpdateOnViewReset(updateOnViewReset) {\r\n        this._myUpdateOnViewReset = updateOnViewReset;\r\n    }\r\n\r\n    isUpdateOnViewReset() {\r\n        return this._myUpdateOnViewReset;\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return XRUtils.getReferenceSpace(this._myEngine);\r\n    }\r\n\r\n    getPosition(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotation(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        return this.getRotationDegrees(out, referenceObjectOverride);\r\n    }\r\n\r\n    getRotationDegrees(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotationRadians(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotationQuat(out = quat_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransform(out = mat4_create(), referenceObjectOverride = undefined) {\r\n        return this.getTransformMatrix(out, referenceObjectOverride);\r\n    }\r\n\r\n    getTransformMatrix(out = mat4_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformQuat(out = quat2_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getLinearVelocity(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocity(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        return this.getAngularVelocityDegrees(out, referenceObjectOverride);\r\n    }\r\n\r\n    getAngularVelocityDegrees(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocityRadians(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    isValid() {\r\n        return this._myValid;\r\n    }\r\n\r\n    isLinearVelocityEmulated() {\r\n        return this._myLinearVelocityEmulated;\r\n    }\r\n\r\n    isAngularVelocityEmulated() {\r\n        return this._myAngularVelocityEmulated;\r\n    }\r\n\r\n    registerPoseUpdatedEventListener(id, listener) {\r\n        this._myPoseUpdatedEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterPoseUpdatedEventListener(id) {\r\n        this._myPoseUpdatedEmitter.remove(id);\r\n    }\r\n\r\n    start() {\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, true, this._myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        this._update(dt, true);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _isReadyToGetPose() {\r\n        return true;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return null;\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n\r\n    }\r\n\r\n    _onViewResetHook() {\r\n\r\n    }\r\n\r\n    _destroyHook() {\r\n\r\n    }\r\n\r\n    // Hooks End\r\n\r\n    _update(dt, updateVelocity) {\r\n        this._myPrevPosition.vec3_copy(this._myPosition);\r\n        this._myPrevRotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        let xrFrame = XRUtils.getFrame(this._myEngine);\r\n        if (xrFrame && this._isReadyToGetPose()) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = this._getPose(xrFrame);\r\n            } catch (error) {\r\n                // Not handled, pose will be null\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotationQuat[0] = xrPose.transform.orientation.x;\r\n                this._myRotationQuat[1] = xrPose.transform.orientation.y;\r\n                this._myRotationQuat[2] = xrPose.transform.orientation.z;\r\n                this._myRotationQuat[3] = xrPose.transform.orientation.w;\r\n                this._myRotationQuat.quat_normalize(this._myRotationQuat);\r\n\r\n                if (updateVelocity) {\r\n                    if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                        this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                        this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n\r\n                        this._myLinearVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedLinearVelocity(dt);\r\n\r\n                        this._myLinearVelocityEmulated = true;\r\n                    }\r\n\r\n                    if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myAngularVelocityRadians[0] = xrPose.angularVelocity.x;\r\n                        this._myAngularVelocityRadians[1] = xrPose.angularVelocity.y;\r\n                        this._myAngularVelocityRadians[2] = xrPose.angularVelocity.z;\r\n\r\n                        this._myAngularVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedAngularVelocity(dt);\r\n\r\n                        this._myAngularVelocityEmulated = true;\r\n                    }\r\n                }\r\n\r\n                this._myValid = true;\r\n            } else {\r\n                // Keep previous position and rotation but reset velocity because reasons\r\n\r\n                if (updateVelocity) {\r\n                    this._myLinearVelocity[0] = 0;\r\n                    this._myLinearVelocity[1] = 0;\r\n                    this._myLinearVelocity[2] = 0;\r\n\r\n                    this._myAngularVelocityRadians[0] = 0;\r\n                    this._myAngularVelocityRadians[1] = 0;\r\n                    this._myAngularVelocityRadians[2] = 0;\r\n                }\r\n\r\n                this._myValid = false;\r\n                this._myLinearVelocityEmulated = true;\r\n                this._myAngularVelocityEmulated = true;\r\n            }\r\n\r\n            this._updateHook(dt, updateVelocity, xrPose);\r\n        } else {\r\n            // Keep previous position and rotation but reset velocity because reasons\r\n\r\n            if (updateVelocity) {\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocityRadians[0] = 0;\r\n                this._myAngularVelocityRadians[1] = 0;\r\n                this._myAngularVelocityRadians[2] = 0;\r\n            }\r\n\r\n            this._myValid = false;\r\n            this._myLinearVelocityEmulated = true;\r\n            this._myAngularVelocityEmulated = true;\r\n\r\n            this._updateHook(dt, updateVelocity, null);\r\n        }\r\n\r\n        this._myPoseUpdatedEmitter.notify(this);\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            this._myPosition.vec3_sub(this._myPrevPosition, this._myLinearVelocity);\r\n            this._myLinearVelocity.vec3_scale(1 / dt, this._myLinearVelocity);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(manualCall, session) {\r\n        let referenceSpace = XRUtils.getReferenceSpace(this._myEngine);\r\n\r\n        if (referenceSpace.addEventListener != null) {\r\n            this._myViewResetEventListener = this._onViewReset.bind(this);\r\n            referenceSpace.addEventListener(\"reset\", this._myViewResetEventListener);\r\n        }\r\n\r\n        this._onXRSessionStartHook(manualCall, session);\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionEndHook();\r\n\r\n        this._myViewResetEventListener = null;\r\n    }\r\n\r\n    _onViewReset() {\r\n        if (this._myUpdateOnViewReset) {\r\n            this._update(0, false);\r\n        }\r\n\r\n        this._onViewResetHook();\r\n    }\r\n\r\n    _computeEmulatedAngularVelocity() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._destroyHook();\r\n\r\n        XRUtils.getReferenceSpace(this._myEngine)?.removeEventListener?.(\"reset\", this._myViewResetEventListener);\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nBasePose.prototype.getPosition = function () {\r\n    let transform = mat4_create();\r\n    return function getPosition(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.vec3_copy(this._myPosition);\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.vec3_convertPositionToWorld(referenceObject.pp_getTransform(transform), out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getRotationDegrees = function () {\r\n    let rotationQuat = quat_create();\r\n    return function getRotationDegrees(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        return this.getRotationQuat(rotationQuat, referenceObjectOverride).quat_toDegrees(out);\r\n    }\r\n}();\r\n\r\nBasePose.prototype.getRotationRadians = function () {\r\n    let rotationQuat = quat_create();\r\n    return function getRotationRadians(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        return this.getRotationQuat(rotationQuat, referenceObjectOverride).quat_toRadians(out);\r\n    }\r\n}();\r\n\r\nBasePose.prototype.getRotationQuat = function () {\r\n    let playerRotationQuat = quat_create();\r\n    let up = vec3_create();\r\n    return function getRotationQuat(out = quat_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myForwardFixed) {\r\n            out.quat_rotateAxisRadians(Math.PI, out.quat_getUp(up), out);\r\n        }\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.quat_toWorld(referenceObject.pp_getRotationQuat(playerRotationQuat), out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getTransformMatrix = function () {\r\n    let transformQuat = quat2_create();\r\n    return function getTransformMatrix(out = mat4_create(), referenceObjectOverride = undefined) {\r\n        return this.getTransformQuat(transformQuat, referenceObjectOverride).quat2_toMatrix(out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getTransformQuat = function () {\r\n    let rotationQuat = quat_create();\r\n    let playerTransformQuat = quat2_create();\r\n    return function getTransformQuat(out = quat2_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.quat2_identity();\r\n        out.quat2_setPositionRotationQuat(this._myPosition, this.getRotationQuat(rotationQuat, referenceObjectOverride));\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.quat_toWorld(referenceObject.pp_getTransformQuat(playerTransformQuat), out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getLinearVelocity = function () {\r\n    let transform = mat4_create();\r\n    return function getLinearVelocity(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.vec3_copy(this._myLinearVelocity);\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.vec3_convertDirectionToWorld(referenceObject.pp_getTransform(transform), out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getAngularVelocityDegrees = function () {\r\n    let velocityRadians = vec3_create();\r\n    return function getAngularVelocityDegrees(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        return this.getAngularVelocityRadians(velocityRadians, referenceObjectOverride).vec3_toDegrees(out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype.getAngularVelocityRadians = function () {\r\n    let transform = mat4_create();\r\n    return function getAngularVelocityRadians(out = vec3_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.vec3_copy(this._myAngularVelocityRadians);\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.vec3_convertDirectionToWorld(referenceObject.pp_getTransform(transform), out);\r\n    };\r\n}();\r\n\r\nBasePose.prototype._computeEmulatedAngularVelocity = function () {\r\n    let rotationRadians = vec3_create();\r\n    let prevRotationRadians = vec3_create();\r\n    return function _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            rotationRadians = this._myRotationQuat.quat_toRadians(rotationRadians);\r\n            prevRotationRadians = this._myPrevRotationQuat.quat_toRadians(prevRotationRadians);\r\n            rotationRadians.vec3_sub(prevRotationRadians, this._myAngularVelocityRadians);\r\n            this._myAngularVelocityRadians.vec3_scale(1 / dt, this._myAngularVelocityRadians);\r\n        } else {\r\n            this._myAngularVelocityRadians[0] = 0;\r\n            this._myAngularVelocityRadians[1] = 0;\r\n            this._myAngularVelocityRadians[2] = 0;\r\n        }\r\n    };\r\n}();", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { quat_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Handedness, InputSourceType } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePose, BasePoseParams } from \"./base_pose\";\r\n\r\nexport class HandPoseParams extends BasePoseParams {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n\r\n        this.myFixTrackedHandRotation = true;\r\n    }\r\n}\r\n\r\nexport class HandPose extends BasePose {\r\n\r\n    constructor(handedness, handPoseParams = new HandPoseParams()) {\r\n        super(handPoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myFixTrackedHandRotation = handPoseParams.myFixTrackedHandRotation;\r\n\r\n        this._myTrackedHand = false;\r\n\r\n        this._myInputSourcesChangeEventListener = null;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getInputSource() {\r\n        return this._myInputSource;\r\n    }\r\n\r\n    getInputSourceType() {\r\n        if (this._myInputSource == null) {\r\n            return null;\r\n        }\r\n\r\n        return InputUtils.getInputSourceType(this._myInputSource);\r\n    }\r\n\r\n    isFixTrackedHandRotation() {\r\n        return this._myFixTrackedHandRotation;\r\n    }\r\n\r\n    setFixTrackedHandRotation(fixTrackedHandRotation) {\r\n        this.myFixTrackedHandRotation = fixTrackedHandRotation;\r\n    }\r\n\r\n    getRotationQuat(referenceObjectOverride = undefined) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getPose(this._myInputSource.gripSpace, this.getReferenceSpace());\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n        this._myInputSourcesChangeEventListener = function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        this._myInputSource = item;\r\n                        this._myTrackedHand = InputUtils.getInputSourceType(this._myInputSource) == InputSourceType.TRACKED_HAND;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        session.addEventListener(\"inputsourceschange\", this._myInputSourcesChangeEventListener);\r\n\r\n        if (manualCall && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    this._myInputSource = item;\r\n                    this._myTrackedHand = InputUtils.getInputSourceType(this._myInputSource) == InputSourceType.TRACKED_HAND;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n\r\n        this._myInputSourcesChangeEventListener = null;\r\n    }\r\n\r\n    _destroyHook() {\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"inputsourceschange\", this._myInputSourcesChangeEventListener);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nHandPose.prototype.getRotationQuat = function () {\r\n    let playerRotationQuat = quat_create();\r\n    let up = vec3_create();\r\n    let right = vec3_create();\r\n    let forward = vec3_create();\r\n    return function getRotationQuat(out = quat_create(), referenceObjectOverride = undefined) {\r\n        let referenceObject = referenceObjectOverride === undefined ? this._myReferenceObject : referenceObjectOverride;\r\n\r\n        out.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myForwardFixed) {\r\n            out.quat_rotateAxisRadians(Math.PI, out.quat_getUp(up), out);\r\n        }\r\n\r\n        if (this._myFixTrackedHandRotation && this._myTrackedHand) {\r\n            out.quat_rotateAxis(-60, out.quat_getRight(right), out);\r\n\r\n            let forwardRotation = 20;\r\n            forwardRotation = (this._myHandedness == Handedness.LEFT) ? forwardRotation : -forwardRotation;\r\n            out.quat_rotateAxis(forwardRotation, out.quat_getForward(forward), out);\r\n        }\r\n\r\n        if (referenceObject == null) {\r\n            return out;\r\n        }\r\n\r\n        return out.quat_toWorld(referenceObject.pp_getRotationQuat(playerRotationQuat), out);\r\n    };\r\n}();", "import { BasePose } from \"./base_pose\";\r\n\r\nexport class HeadPose extends BasePose {\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getViewerPose(this.getReferenceSpace());\r\n    }\r\n}", "import { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { InputSourceType } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePose, BasePoseParams } from \"./base_pose\";\r\n\r\nexport class TrackedHandJointPose extends BasePose {\r\n\r\n    constructor(handedness, trackedHandJointID, basePoseParams = new BasePoseParams()) {\r\n        super(basePoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n\r\n        this._myJointRadius = 0;\r\n\r\n        this._myInputSourcesChangeEventListener = null;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getTrackedHandJointID() {\r\n        return this._myTrackedHandJointID;\r\n    }\r\n\r\n    setTrackedHandJointID(trackedHandJointID) {\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n    }\r\n\r\n    getJointRadius() {\r\n        return this._myJointRadius;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getJointPose(this._myInputSource.hand.get(this._myTrackedHandJointID), this.getReferenceSpace());\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n        if (xrPose != null) {\r\n            this._myJointRadius = xrPose.radius;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStartHook(manualCall, session) {\r\n        this._myInputSourcesChangeEventListener = function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        if (InputUtils.getInputSourceType(item) == InputSourceType.TRACKED_HAND) {\r\n                            this._myInputSource = item;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        session.addEventListener(\"inputsourceschange\", this._myInputSourcesChangeEventListener);\r\n\r\n        if (manualCall && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    if (InputUtils.getInputSourceType(item) == InputSourceType.TRACKED_HAND) {\r\n                        this._myInputSource = item;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n\r\n        this._myInputSourcesChangeEventListener = null;\r\n    }\r\n\r\n    _destroyHook() {\r\n        XRUtils.getSession(this.getEngine())?.removeEventListener(\"inputsourceschange\", this._myInputSourcesChangeEventListener);\r\n    }\r\n}", "import { Globals } from \"../../pp/globals\";\r\nimport { TrackedHandJointID } from \"../cauldron/input_types\";\r\nimport { InputUtils } from \"../cauldron/input_utils\";\r\nimport { BasePoseParams } from \"./base_pose\";\r\nimport { TrackedHandJointPose } from \"./tracked_hand_joint_pose\";\r\n\r\nexport class TrackedHandPoseParams extends BasePoseParams {\r\n\r\n    constructor(addAllJointIDs = true, engine = Globals.getMainEngine()) {\r\n        super(engine);\r\n\r\n        this.myTrackedHandJointIDList = [];\r\n\r\n        if (addAllJointIDs) {\r\n            for (let key in TrackedHandJointID) {\r\n                this.myTrackedHandJointIDList.push([TrackedHandJointID[key]]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class TrackedHandPose {\r\n\r\n    constructor(handedness, trackedHandPoseParams = new TrackedHandPoseParams()) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myForwardFixed = trackedHandPoseParams.myForwardFixed;\r\n        this._myForceEmulatedVelocities = trackedHandPoseParams.myForceEmulatedVelocities;\r\n        this._myReferenceObject = trackedHandPoseParams.myReferenceObject;\r\n\r\n        this._myEngine = trackedHandPoseParams.myEngine;\r\n\r\n        this._myTrackedHandJointPoseParams = new BasePoseParams(this._myEngine);\r\n        this._myTrackedHandJointPoseParams.myForwardFixed = this._myForwardFixed;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoses = [];\r\n        for (let jointID of trackedHandPoseParams.myTrackedHandJointIDList) {\r\n            let trackedHandJointPose = new TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoses[jointID] = trackedHandJointPose;\r\n        }\r\n    }\r\n\r\n    start() {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoses) {\r\n            let jointPose = this._myTrackedHandJointPoses[jointPoseKey];\r\n            jointPose.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoses) {\r\n            let jointPose = this._myTrackedHandJointPoses[jointPoseKey];\r\n            jointPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getEngine() {\r\n        this._myEngine;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getJointPose(jointID) {\r\n        return this._myTrackedHandJointPoses[jointID];\r\n    }\r\n\r\n    getJointPoseByIndex(jointIDIndex) {\r\n        return this._myTrackedHandJointPoses[InputUtils.getJointIDByIndex(jointIDIndex)];\r\n    }\r\n\r\n    getJointPoses() {\r\n        return this._myTrackedHandJointPoses;\r\n    }\r\n\r\n    addTrackedHandJointID(jointID) {\r\n        if (!this._myTrackedHandJointPoses.pp_has(element => element.getTrackedHandJointID() == jointID)) {\r\n            let trackedHandJointPose = new TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoses.push(trackedHandJointPose);\r\n        }\r\n    }\r\n\r\n    removeTrackedHandJointID(jointID) {\r\n        this._myTrackedHandJointPoses.pp_remove(element => element.getTrackedHandJointID() == jointID);\r\n    }\r\n\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoses) {\r\n            let jointPose = this._myTrackedHandJointPoses[jointPoseKey];\r\n            jointPose.setReferenceObject(referenceObject);\r\n        }\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setForwardFixed(forwardFixed) {\r\n        this._myForwardFixed = forwardFixed;\r\n        this._myTrackedHandJointPoseParams.myForwardFixed = this._myForwardFixed;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoses) {\r\n            let jointPose = this._myTrackedHandJointPoses[jointPoseKey];\r\n            jointPose.setForwardFixed(forwardFixed);\r\n        }\r\n    }\r\n\r\n    isForwardFixed() {\r\n        return this._myForwardFixed;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoses) {\r\n            let jointPose = this._myTrackedHandJointPoses[jointPoseKey];\r\n            jointPose.setForceEmulatedVelocities(forceEmulatedVelocities);\r\n        }\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let jointPose of this._myTrackedHandJointPoses) {\r\n            jointPose.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../cauldron/cauldron/timer\";\r\nimport { RaycastResults } from \"../../cauldron/physics/physics_raycast_params\";\r\nimport { PhysicsUtils } from \"../../cauldron/physics/physics_utils\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { mat4_create, quat_create, vec2_create, vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport let MouseButtonID = {\r\n    LEFT: 0,\r\n    MIDDLE: 1,\r\n    RIGHT: 2\r\n};\r\n\r\n// #TODO Refactor Mouse/Keyboard/Gamepad and create a sort of parent ButtonHandler that have the base ButtonInfo and all of them inherit\r\nexport class Mouse {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myButtonInfos = new Map();\r\n        for (let key in MouseButtonID) {\r\n            this._myButtonInfos.set(MouseButtonID[key], this._createButtonInfo());\r\n        }\r\n\r\n        this._myPreventContextMenuEventListener = this._preventContextMenu.bind(this);\r\n        this._myPreventMiddleButtonScrollEventListener = this._preventMiddleButtonScroll.bind(this);\r\n\r\n        this._myInternalMousePosition = vec2_create();\r\n        this._myScreenSize = vec2_create();\r\n        this._updateScreenSize();\r\n\r\n        this._myResetMovingDelay = 0.15;\r\n        this._myResetMovingTimer = new Timer(this._myResetMovingDelay, false);\r\n        this._myMoving = false;\r\n\r\n        this._myInsideView = false;\r\n        this._myValid = false;\r\n\r\n        this._myPointerUpOnPointerLeave = true;\r\n\r\n        this._myContextMenuActive = true;\r\n        this._myMiddleButtonScrollActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myLastValidPointerEvent = null;\r\n\r\n        this._myPointerEventValidCallbacks = new Map();      // Signature: callback(event)\r\n\r\n        this._myPointerMoveEventListener = null;\r\n        this._myPointerDownEventListener = null;\r\n        this._myPointerUpEventListener = null;\r\n        this._myPointerLeaveEventListener = null;\r\n        this._myPointerEnterEventListener = null;\r\n        this._myMouseDownEventListener = null;\r\n        this._myMouseUpEventListener = null;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        // Support Variables\r\n        this._myProjectionMatrixInverse = mat4_create();\r\n        this._myRotationQuat = quat_create();\r\n        this._myOriginWorld = vec3_create();\r\n        this._myDirectionWorld = vec3_create();\r\n    }\r\n\r\n    start() {\r\n        this._myPointerMoveEventListener = this._onPointerAction.bind(this, this._onPointerMove.bind(this));\r\n        Globals.getBody(this._myEngine).addEventListener(\"pointermove\", this._myPointerMoveEventListener);\r\n        this._myPointerDownEventListener = this._onPointerAction.bind(this, this._onPointerDown.bind(this));\r\n        Globals.getBody(this._myEngine).addEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n        this._myPointerUpEventListener = this._onPointerAction.bind(this, this._onPointerUp.bind(this));\r\n        Globals.getBody(this._myEngine).addEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n        this._myPointerLeaveEventListener = this._onPointerLeave.bind(this);\r\n        Globals.getBody(this._myEngine).addEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n        this._myPointerEnterEventListener = this._onPointerEnter.bind(this);\r\n        Globals.getBody(this._myEngine).addEventListener(\"pointerenter\", this._myPointerEnterEventListener);\r\n\r\n        // These are needed to being able to detect for example left and right click together, pointer only allow one down at a time\r\n        this._myMouseDownEventListener = this._onMouseAction.bind(this, this._onPointerDown.bind(this));\r\n        Globals.getBody(this._myEngine).addEventListener(\"mousedown\", this._myMouseDownEventListener);\r\n        this._myMouseUpEventListener = this._onMouseAction.bind(this, this._onPointerUp.bind(this));\r\n        Globals.getBody(this._myEngine).addEventListener(\"mouseup\", this._myMouseUpEventListener);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myResetMovingTimer.isRunning()) {\r\n            this._myResetMovingTimer.update(dt);\r\n            if (this._myResetMovingTimer.isDone()) {\r\n                this._myResetMovingTimer.reset();\r\n                this._myMoving = false;\r\n            }\r\n        }\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            buttonInfo.myPressStart = buttonInfo.myPressStartToProcess;\r\n            buttonInfo.myPressEnd = buttonInfo.myPressEndToProcess;\r\n            buttonInfo.myPressStartToProcess = false;\r\n            buttonInfo.myPressEndToProcess = false;\r\n        }\r\n\r\n        this._updateScreenSize();\r\n\r\n        if (!this.isAnyButtonPressed() && !this._myMoving) {\r\n            this._myPointerID = null;\r\n        }\r\n\r\n        if (this._myLastValidPointerEvent != null) {\r\n            let lastValidPointerEventStillValid = this._isPointerEventValid(this._myLastValidPointerEvent);\r\n            if (!lastValidPointerEventStillValid) {\r\n                if (this._myInsideView) {\r\n                    this._onPointerLeave(this._myLastValidPointerEvent);\r\n                }\r\n\r\n                this._myLastValidPointerEvent = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return this._myValid;\r\n    }\r\n\r\n    isButtonPressed(buttonID) {\r\n        let pressed = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            pressed = this._myButtonInfos.get(buttonID).myPressed;\r\n        }\r\n\r\n        return pressed;\r\n    }\r\n\r\n    isAnyButtonPressed() {\r\n        let pressed = false;\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            if (buttonInfo.myPressed) {\r\n                pressed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return pressed;\r\n    }\r\n\r\n    isButtonPressStart(buttonID) {\r\n        let pressStart = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            pressStart = this._myButtonInfos.get(buttonID).myPressStart;\r\n        }\r\n\r\n        return pressStart;\r\n    }\r\n\r\n    isButtonPressEnd(buttonID = null) {\r\n        let pressEnd = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            pressEnd = this._myButtonInfos.get(buttonID).myPressEnd;\r\n        }\r\n\r\n        return pressEnd;\r\n    }\r\n\r\n    isMoving() {\r\n        return this._myMoving;\r\n    }\r\n\r\n    isInsideView() {\r\n        return this._myInsideView;\r\n    }\r\n\r\n    isTargetingRenderCanvas() {\r\n        return this.isInsideView() && this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.target == Globals.getCanvas(this._myEngine);\r\n    }\r\n\r\n    // The origin and direction are set by the mouse\r\n    raycastWorld(raycastParams, raycastResults = new RaycastResults()) {\r\n        this.getOriginWorld(raycastParams.myOrigin);\r\n        this.getDirectionWorld(raycastParams.myDirection);\r\n        raycastResults = PhysicsUtils.raycast(raycastParams, raycastResults, Globals.getPhysics(this._myEngine));\r\n        return raycastResults;\r\n    }\r\n\r\n    getPositionScreen(out = vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = this._myInternalMousePosition[0];\r\n        mousePosition[1] = this._myScreenSize[1] - 1 - this._myInternalMousePosition[1];\r\n        return mousePosition;\r\n    }\r\n\r\n    getPositionScreenNormalized(out = vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = (this._myScreenSize[0] == 0) ? 0 : ((this._myInternalMousePosition[0] / this._myScreenSize[0]) * 2 - 1);\r\n        mousePosition[1] = (this._myScreenSize[1] == 0) ? 0 : (((this._myScreenSize[1] - 1 - this._myInternalMousePosition[1]) / this._myScreenSize[1]) * 2 - 1);\r\n        return mousePosition;\r\n    }\r\n\r\n    getScreenSize() {\r\n        return this._myScreenSize;\r\n    }\r\n\r\n    getPositionWorld(distanceFromCamera, out = vec3_create()) {\r\n        let originWorld = this.getOriginWorld(this._myOriginWorld);\r\n        let directionWorld = this.getDirectionWorld(this._myDirectionWorld);\r\n\r\n        out = originWorld.vec3_add(directionWorld.vec3_scale(distanceFromCamera, out), out);\r\n        return out;\r\n    }\r\n\r\n    getOriginWorld(out = vec3_create()) {\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            Globals.getPlayerObjects(this._myEngine).myEyeLeft.pp_getPosition(out); // In theory mouse should not be used inside the session, but may make sense for AR which uses eye left\r\n        } else {\r\n            Globals.getPlayerObjects(this._myEngine).myCameraNonXR.pp_getPosition(out);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getDirectionWorld(out = vec3_create()) {\r\n        let right = this._myInternalMousePosition[0] / this._myScreenSize[0];\r\n        let up = this._myInternalMousePosition[1] / this._myScreenSize[1];\r\n\r\n        let directionLocal = out;\r\n        directionLocal.vec3_set(right * 2 - 1, -up * 2 + 1, -1.0);\r\n\r\n        let projectionMatrixInvert = this._myProjectionMatrixInverse;\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            projectionMatrixInvert = Globals.getPlayerObjects(this._myEngine).myEyeLeft.pp_getComponent(ViewComponent).projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        } else {\r\n            projectionMatrixInvert = Globals.getPlayerObjects(this._myEngine).myCameraNonXR.pp_getComponent(ViewComponent).projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        }\r\n\r\n        directionLocal.vec3_transformMat4(projectionMatrixInvert, directionLocal);\r\n        directionLocal.vec3_normalize(directionLocal);\r\n\r\n        let directionWorld = directionLocal;\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            directionWorld = directionLocal.vec3_transformQuat(Globals.getPlayerObjects(this._myEngine).myEyeLeft.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        } else {\r\n            directionWorld = directionLocal.vec3_transformQuat(Globals.getPlayerObjects(this._myEngine).myCameraNonXR.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        }\r\n\r\n        directionWorld.vec3_normalize(directionWorld);\r\n\r\n        return out;\r\n    }\r\n\r\n    setTouchValid(touchValid) {\r\n        let callbackID = \"pp_internal_touch_valid_callback\";\r\n        if (touchValid) {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        } else {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.pointerType == \"mouse\";\r\n            });\r\n        }\r\n    }\r\n\r\n    setTargetOnlyRenderCanvas(targetOnlyRenderCanvas) {\r\n        let callbackID = \"pp_internal_target_only_render_canvas_callback\";\r\n        if (targetOnlyRenderCanvas) {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.target == Globals.getCanvas(this._myEngine);\r\n            });\r\n        } else {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        }\r\n    }\r\n\r\n    getLastValidPointerEvent() {\r\n        return this._myLastValidPointerEvent;\r\n    }\r\n\r\n    // Can be used to specify that only some pointerType are valid (eg: mouse, touch, pen) or just some target (eg: Globals.getCanvas(this._myEngine))\r\n    addPointerEventValidCallback(id, callback) {\r\n        this._myPointerEventValidCallbacks.set(id, callback);\r\n    }\r\n\r\n    removePointerEventValidCallback(id) {\r\n        this._myPointerEventValidCallbacks.delete(id);\r\n    }\r\n\r\n    isPointerUpOnPointerLeave() {\r\n        return this._myPointerUpOnPointerLeave;\r\n    }\r\n\r\n    setPointerUpOnPointerLeave(pointerUpOnPointerLeave) {\r\n        this._myPointerUpOnPointerLeave = pointerUpOnPointerLeave;\r\n    }\r\n\r\n    isContextMenuActive() {\r\n        return this._myContextMenuActive;\r\n    }\r\n\r\n    setContextMenuActive(active) {\r\n        if (this._myContextMenuActive != active) {\r\n            if (active) {\r\n                Globals.getBody(this._myEngine).removeEventListener(\"contextmenu\", this._myPreventContextMenuEventListener);\r\n            } else {\r\n                Globals.getBody(this._myEngine).addEventListener(\"contextmenu\", this._myPreventContextMenuEventListener, false);\r\n            }\r\n            this._myContextMenuActive = active;\r\n        }\r\n    }\r\n\r\n    isMiddleButtonScrollActive() {\r\n        return this._myMiddleButtonScrollActive;\r\n    }\r\n\r\n    setMiddleButtonScrollActive(active) {\r\n        if (this._myMiddleButtonScrollActive != active) {\r\n            if (active) {\r\n                Globals.getBody(this._myEngine).removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollEventListener);\r\n            } else {\r\n                Globals.getBody(this._myEngine).addEventListener(\"mousedown\", this._myPreventMiddleButtonScrollEventListener, false);\r\n            }\r\n            this._myMiddleButtonScrollActive = active;\r\n        }\r\n    }\r\n\r\n    setResetMovingDelay(delay) {\r\n        this._myResetMovingDelay = delay;\r\n    }\r\n\r\n    getResetMovingDelay() {\r\n        return this._myResetMovingDelay;\r\n    }\r\n\r\n    _onPointerAction(actionCallback, event) {\r\n        if (!this._isPointerEventIDValid(event)) return;\r\n\r\n        if (!this._isPointerEventValid(event)) {\r\n            if (this._myInsideView) {\r\n                this._onPointerLeave(event);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!this._myInsideView) {\r\n            this._onPointerEnter(event);\r\n        }\r\n\r\n        actionCallback(event);\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _onMouseAction(actionCallback, event) {\r\n        if (!this._myInsideView) return;\r\n        if (!this._isMouseAllowed()) return;\r\n        if (!this._isPointerEventIDValid(this._myLastValidPointerEvent)) return;\r\n        if (!this._isPointerEventValid(this._myLastValidPointerEvent)) return;\r\n\r\n        actionCallback(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        this._myResetMovingTimer.start(this._myResetMovingDelay);\r\n        this._myMoving = true;\r\n    }\r\n\r\n    _onPointerDown(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (!buttonInfo.myPressed) {\r\n            buttonInfo.myPressed = true;\r\n            buttonInfo.myPressStartToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (buttonInfo.myPressed) {\r\n            buttonInfo.myPressed = false;\r\n            buttonInfo.myPressEndToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myInsideView || this._myLastValidPointerEvent == null || event.pointerId != this._myLastValidPointerEvent.pointerId) return;\r\n\r\n        this._myInsideView = false;\r\n\r\n        this._myMoving = false;\r\n\r\n        if (this._myPointerUpOnPointerLeave) {\r\n            for (let buttonInfo of this._myButtonInfos.values()) {\r\n                if (buttonInfo.myPressed) {\r\n                    buttonInfo.myPressed = false;\r\n                    buttonInfo.myPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._myPointerID = null;\r\n    }\r\n\r\n    _onPointerEnter(event) {\r\n        if ((this._myInsideView && this._myPointerID != null) || !this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        this._myInsideView = true;\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _preventContextMenu(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    _preventMiddleButtonScroll(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        if (event.button == 1) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _updatePositionAndScreen(event) {\r\n        this._updateScreenSize();\r\n        this._myInternalMousePosition[0] = event.clientX;\r\n        this._myInternalMousePosition[1] = event.clientY;\r\n\r\n        this._myValid = true;\r\n    }\r\n\r\n    _updateScreenSize() {\r\n        let bounds = Globals.getBody(this._myEngine).getBoundingClientRect();\r\n        this._myScreenSize[0] = bounds.width;\r\n        this._myScreenSize[1] = bounds.height;\r\n    }\r\n\r\n    _updatePointerData(event) {\r\n        this._myPointerID = event.pointerId;\r\n        this._myLastValidPointerEvent = event;\r\n    }\r\n\r\n    _isPointerEventIDValid(event) {\r\n        if (event == null) return false;\r\n\r\n        return this._myPointerID == null || this._myPointerID == event.pointerId;\r\n    }\r\n\r\n    _isPointerEventValid(event) {\r\n        if (event == null) return false;\r\n\r\n        let valid = true;\r\n\r\n        for (let callback of this._myPointerEventValidCallbacks.values()) {\r\n            if (!callback(event)) {\r\n                valid = false;\r\n                break;\r\n            };\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    _isMouseAllowed() {\r\n        // Mouse events are valid only if the last pointer event was a mouse (id==1)\r\n        return this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.pointerId == 1;\r\n    }\r\n\r\n    _createButtonInfo() {\r\n        return { myPressed: false, myPressStart: false, myPressStartToProcess: false, myPressEnd: false, myPressEndToProcess: false, };\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        Globals.getBody(this._myEngine).removeEventListener(\"pointermove\", this._myPointerMoveEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"pointerenter\", this._myPointerEnterEventListener);\r\n\r\n        Globals.getBody(this._myEngine).removeEventListener(\"mousedown\", this._myMouseDownEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"mouseup\", this._myMouseUpEventListener);\r\n\r\n        Globals.getBody(this._myEngine).removeEventListener(\"contextmenu\", this._myPreventContextMenuEventListener);\r\n        Globals.getBody(this._myEngine).removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollEventListener);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Globals } from \"../../pp/globals\";\r\nimport { GamepadsManager } from \"../gamepad/cauldron/gamepads_manager\";\r\nimport { BasePoseParams } from \"../pose/base_pose\";\r\nimport { HandPose, HandPoseParams } from \"../pose/hand_pose\";\r\nimport { HeadPose } from \"../pose/head_pose\";\r\nimport { TrackedHandPose, TrackedHandPoseParams } from \"../pose/tracked_hand_pose\";\r\nimport { Handedness } from \"./input_types\";\r\nimport { Keyboard } from \"./keyboard\";\r\nimport { Mouse } from \"./mouse\";\r\n\r\nexport class InputManager {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myMouse = new Mouse(this._myEngine);\r\n        this._myKeyboard = new Keyboard(this._myEngine);\r\n\r\n        this._myHeadPose = new HeadPose(new BasePoseParams(this._myEngine));\r\n        this._myHeadPose.setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myHeadPose.setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n\r\n        this._myHandPoses = [];\r\n        this._myHandPoses[Handedness.LEFT] = new HandPose(Handedness.LEFT, new HandPoseParams(this._myEngine));\r\n        this._myHandPoses[Handedness.RIGHT] = new HandPose(Handedness.RIGHT, new HandPoseParams(this._myEngine));\r\n        this._myHandPoses[Handedness.LEFT].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myHandPoses[Handedness.RIGHT].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myHandPoses[Handedness.LEFT].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n        this._myHandPoses[Handedness.RIGHT].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n\r\n        this._myTrackedHandPoses = [];\r\n        this._myTrackedHandPoses[Handedness.LEFT] = new TrackedHandPose(Handedness.LEFT, new TrackedHandPoseParams(true, this._myEngine));\r\n        this._myTrackedHandPoses[Handedness.RIGHT] = new TrackedHandPose(Handedness.RIGHT, new TrackedHandPoseParams(true, this._myEngine));\r\n        this._myTrackedHandPoses[Handedness.LEFT].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myTrackedHandPoses[Handedness.RIGHT].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myTrackedHandPoses[Handedness.LEFT].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n        this._myTrackedHandPoses[Handedness.RIGHT].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n\r\n        this._myGamepadsManager = new GamepadsManager(this._myEngine);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        this._myMouse.start();\r\n        this._myKeyboard.start();\r\n\r\n        this._myHeadPose.setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myHeadPose.setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n        this._myHeadPose.start();\r\n\r\n        for (let key in this._myHandPoses) {\r\n            this._myHandPoses[key].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n            this._myHandPoses[key].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n            this._myHandPoses[key].start();\r\n        }\r\n\r\n        for (let key in this._myTrackedHandPoses) {\r\n            this._myTrackedHandPoses[key].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n            this._myTrackedHandPoses[key].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n            this._myTrackedHandPoses[key].start();\r\n        }\r\n\r\n        this._myGamepadsManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMouse.update(dt);\r\n        this._myKeyboard.update(dt);\r\n\r\n        this._myHeadPose.setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n        this._myHeadPose.setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n        this._myHeadPose.update(dt);\r\n\r\n        for (let key in this._myHandPoses) {\r\n            this._myHandPoses[key].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n            this._myHandPoses[key].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n            this._myHandPoses[key].update(dt);\r\n        }\r\n\r\n        for (let key in this._myTrackedHandPoses) {\r\n            this._myTrackedHandPoses[key].setReferenceObject(Globals.getPlayerObjects(this._myEngine).myReferenceSpace);\r\n            this._myTrackedHandPoses[key].setForwardFixed(Globals.isPoseForwardFixed(this._myEngine));\r\n            this._myTrackedHandPoses[key].update(dt);\r\n        }\r\n\r\n        this._myGamepadsManager.update(dt);\r\n    }\r\n\r\n    getMouse() {\r\n        return this._myMouse;\r\n    }\r\n\r\n    getKeyboard() {\r\n        return this._myKeyboard;\r\n    }\r\n\r\n    getGamepadsManager() {\r\n        return this._myGamepadsManager;\r\n    }\r\n\r\n    getHeadPose() {\r\n        return this._myHeadPose;\r\n    }\r\n\r\n    getLeftHandPose() {\r\n        return this._myHandPoses[Handedness.LEFT];\r\n    }\r\n\r\n    getRightHandPose() {\r\n        return this._myHandPoses[Handedness.RIGHT];\r\n    }\r\n\r\n    getHandPose(handedness) {\r\n        return this._myHandPoses[handedness];\r\n    }\r\n\r\n    getHandPoses() {\r\n        return this._myHandPoses;\r\n    }\r\n\r\n    getLeftTrackedHandPose() {\r\n        return this._myTrackedHandPoses[Handedness.LEFT];\r\n    }\r\n\r\n    getRightTrackedHandPose() {\r\n        return this._myTrackedHandPoses[Handedness.RIGHT];\r\n    }\r\n\r\n    getTrackedHandPose(handedness) {\r\n        return this._myTrackedHandPoses[handedness];\r\n    }\r\n\r\n    getTrackedHandPoses() {\r\n        return this._myTrackedHandPoses;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myMouse.destroy();\r\n        this._myKeyboard.destroy();\r\n\r\n        this._myHeadPose.destroy();\r\n\r\n        for (let key in this._myHandPoses) {\r\n            this._myHandPoses[key].destroy();\r\n        }\r\n\r\n        for (let key in this._myTrackedHandPoses) {\r\n            this._myTrackedHandPoses[key].destroy();\r\n        }\r\n\r\n        this._myGamepadsManager.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class EnableToolComponent extends Component {\r\n    static TypeName = \"pp-enable-tools\";\r\n    static Properties = {\r\n        _myEnable: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myToolEnabled = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasToolEnabled(this.engine)) {\r\n            this._myToolEnabled = this._myEnable;\r\n\r\n            Globals.setToolEnabled(this._myToolEnabled, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myToolEnabled != null && Globals.isToolEnabled(this.engine) == this._myToolEnabled) {\r\n            Globals.removeToolEnabled(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneVariables } from \"../easy_tune_variables\";\r\n\r\nexport class InitEasyTuneVariablesComponent extends Component {\r\n    static TypeName = \"pp-init-easy-tune-variables\";\r\n    static Properties = {\r\n        _myInit: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyTuneVariables = null;\r\n\r\n        if (this._myInit) {\r\n            // Prevents double global from same engine\r\n            if (!Globals.hasEasyTuneVariables(this.engine)) {\r\n                this._myEasyTuneVariables = new EasyTuneVariables();\r\n\r\n                Globals.setEasyTuneVariables(this._myEasyTuneVariables, this.engine);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myEasyTuneVariables != null && Globals.getEasyTuneVariables(this.engine) == this._myEasyTuneVariables) {\r\n            Globals.removeEasyTuneVariables(this.engine);\r\n        }\r\n    }\r\n}", "export class EasyTuneVariables {\r\n\r\n    constructor() {\r\n        this._myVariables = new Map();\r\n    }\r\n\r\n    add(variable, overwriteCurrentOne = false) {\r\n        if (overwriteCurrentOne || !this._myVariables.has(variable.getName())) {\r\n            this._myVariables.set(variable.getName(), variable);\r\n        }\r\n    }\r\n\r\n    remove(variableName) {\r\n        this._myVariables.delete(variableName);\r\n    }\r\n\r\n    get(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.getValue();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set(variableName, value, resetDefaultValue = false) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            variable.setValue(value, resetDefaultValue);\r\n        }\r\n    }\r\n\r\n    has(variableName) {\r\n        return this._myVariables.has(variableName);\r\n    }\r\n\r\n    length() {\r\n        return this._myVariables.size;\r\n    }\r\n\r\n    isWidgetCurrentVariable(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.isWidgetCurrentVariable();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getEasyTuneVariable(variableName) {\r\n        return this._myVariables.get(variableName);\r\n    }\r\n\r\n    getEasyTuneVariablesList() {\r\n        return Array.from(this._myVariables.values());\r\n    }\r\n\r\n    getEasyTuneVariablesNames() {\r\n        return Array.from(this._myVariables.keys());\r\n    }\r\n\r\n    fromJSON(json, resetDefaultValue = false) {\r\n        let objectJSON = JSON.parse(json);\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            let variableValueJSON = objectJSON[variable.getName()];\r\n            if (variableValueJSON !== undefined) {\r\n                variable.fromJSON(variableValueJSON, resetDefaultValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let objectJSON = {};\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            objectJSON[variable.getName()] = variable.toJSON();\r\n        }\r\n\r\n        return JSON.stringify(objectJSON);\r\n    }\r\n\r\n    registerValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).registerValueChangedEventListener(callbackID, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).unregisterValueChangedEventListener(callbackID);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport * as PPAPI from \"../..\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class AddPPToWindowComponent extends Component {\r\n    static TypeName = \"pp-add-pp-to-window\";\r\n    static Properties = {\r\n        _myAdd: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        if (this._myAdd) {\r\n            Globals.getWindow(this.engine).PP = {};\r\n            this._addProperties(PPAPI);\r\n        }\r\n    }\r\n\r\n    _addProperties(object) {\r\n        let propertyNames = Object.getOwnPropertyNames(object);\r\n        for (let propertyName of propertyNames) {\r\n            if (object[propertyName] != undefined) {\r\n                Globals.getWindow(this.engine).PP[propertyName] = object[propertyName];\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getWindow(this.engine).PP = undefined;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { MeshUtils } from \"../../cauldron/utils/mesh_utils\";\r\nimport { DefaultResources } from \"../default_resources\";\r\nimport { Globals } from \"../globals\";\r\n\r\nexport class GetDefaultResourcesComponent extends Component {\r\n    static TypeName = \"pp-get-default-resources\";\r\n    static Properties = {\r\n        _myPlane: Property.mesh(),\r\n        _myCube: Property.mesh(),\r\n        _mySphere: Property.mesh(),\r\n        _myCone: Property.mesh(),\r\n        _myCylinder: Property.mesh(),\r\n        _myCircle: Property.mesh(),\r\n\r\n        _myFlatOpaque: Property.material(),\r\n        _myFlatTransparentNoDepth: Property.material(),\r\n        _myPhongOpaque: Property.material(),\r\n        _myText: Property.material()\r\n    };\r\n\r\n    init() {\r\n        this._myDefaultResources = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasDefaultResources(this.engine)) {\r\n            this._myDefaultResources = new DefaultResources();\r\n            this._myDefaultResources.myMeshes.myPlane = MeshUtils.clone(this._myPlane);\r\n            this._myDefaultResources.myMeshes.myCube = MeshUtils.clone(this._myCube);\r\n            this._myDefaultResources.myMeshes.mySphere = MeshUtils.clone(this._mySphere);\r\n            this._myDefaultResources.myMeshes.myCone = MeshUtils.clone(this._myCone);\r\n            this._myDefaultResources.myMeshes.myCylinder = MeshUtils.clone(this._myCylinder);\r\n            this._myDefaultResources.myMeshes.myCircle = MeshUtils.clone(this._myCircle);\r\n\r\n            this._myDefaultResources.myMeshes.myInvertedCube = MeshUtils.invert(this._myCube);\r\n            this._myDefaultResources.myMeshes.myInvertedSphere = MeshUtils.invert(this._mySphere);\r\n            this._myDefaultResources.myMeshes.myInvertedCone = MeshUtils.invert(this._myCone);\r\n            this._myDefaultResources.myMeshes.myInvertedCylinder = MeshUtils.invert(this._myCylinder);\r\n\r\n            this._myDefaultResources.myMeshes.myDoubleSidedPlane = MeshUtils.makeDoubleSided(this._myPlane);\r\n            this._myDefaultResources.myMeshes.myDoubleSidedCube = MeshUtils.makeDoubleSided(this._myCube);\r\n            this._myDefaultResources.myMeshes.myDoubleSidedSphere = MeshUtils.makeDoubleSided(this._mySphere);\r\n            this._myDefaultResources.myMeshes.myDoubleSidedCone = MeshUtils.makeDoubleSided(this._myCone);\r\n            this._myDefaultResources.myMeshes.myDoubleSidedCylinder = MeshUtils.makeDoubleSided(this._myCylinder);\r\n            this._myDefaultResources.myMeshes.myDoubleSidedCircle = MeshUtils.makeDoubleSided(this._myCircle);\r\n\r\n            if (this._myFlatOpaque != null) {\r\n                this._myDefaultResources.myMaterials.myFlatOpaque = this._myFlatOpaque.clone();\r\n            }\r\n\r\n            if (this._myFlatTransparentNoDepth != null) {\r\n                this._myDefaultResources.myMaterials.myFlatTransparentNoDepth = this._myFlatTransparentNoDepth.clone();\r\n            }\r\n\r\n            if (this._myPhongOpaque != null) {\r\n                this._myDefaultResources.myMaterials.myPhongOpaque = this._myPhongOpaque.clone();\r\n            }\r\n\r\n            if (this._myText != null) {\r\n                this._myDefaultResources.myMaterials.myText = this._myText.clone();\r\n            }\r\n\r\n            Globals.setDefaultResources(this._myDefaultResources, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myDefaultResources != null && Globals.getDefaultResources(this.engine) == this._myDefaultResources) {\r\n            Globals.removeDefaultResources(this.engine);\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Handedness } from \"../../input/cauldron/input_types\";\r\nimport { Globals } from \"../globals\";\r\nimport { SceneObjects } from \"../scene_objects\";\r\n\r\nexport class GetSceneObjectsComponent extends Component {\r\n    static TypeName = \"pp-get-scene-objects\";\r\n    static Properties = {\r\n        _myScene: Property.object(),\r\n\r\n        _myPlayer: Property.object(),\r\n        _myReferenceSpace: Property.object(),   // If u don't have a pivot under the player you set this to null, by default will be the same as the player\r\n        _myCameraNonXR: Property.object(),\r\n        _myEyeLeft: Property.object(),\r\n        _myEyeRight: Property.object(),\r\n        _myHandLeft: Property.object(),\r\n        _myHandRight: Property.object(),\r\n        _myHead: Property.object()\r\n    };\r\n\r\n    init() {\r\n        this._mySceneObjects = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasSceneObjects(this.engine)) {\r\n            this._mySceneObjects = new SceneObjects();\r\n\r\n            this._mySceneObjects.myScene = this._myScene;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myPlayer = this._myPlayer;\r\n            this._mySceneObjects.myPlayerObjects.myReferenceSpace = this._myReferenceSpace;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myCameraNonXR = this._myCameraNonXR;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myEyeLeft = this._myEyeLeft;\r\n            this._mySceneObjects.myPlayerObjects.myEyeRight = this._myEyeRight;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myHandLeft = this._myHandLeft;\r\n            this._mySceneObjects.myPlayerObjects.myHandRight = this._myHandRight;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myEyes = [];\r\n            this._mySceneObjects.myPlayerObjects.myEyes[Handedness.LEFT] = this._myEyeLeft;\r\n            this._mySceneObjects.myPlayerObjects.myEyes[Handedness.RIGHT] = this._myEyeRight;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myHands = [];\r\n            this._mySceneObjects.myPlayerObjects.myHands[Handedness.LEFT] = this._myHandLeft;\r\n            this._mySceneObjects.myPlayerObjects.myHands[Handedness.RIGHT] = this._myHandRight;\r\n\r\n            this._mySceneObjects.myPlayerObjects.myHead = this._myHead;\r\n\r\n            if (this._mySceneObjects.myPlayerObjects.myReferenceSpace == null) {\r\n                this._mySceneObjects.myPlayerObjects.myReferenceSpace = this._mySceneObjects.myPlayerObjects.myPlayer;\r\n            }\r\n\r\n            this._mySceneObjects.myCauldron = this._mySceneObjects.myScene.pp_addObject();\r\n            this._mySceneObjects.myCauldron.pp_setName(\"Cauldron\");\r\n            this._mySceneObjects.myDynamics = this._mySceneObjects.myScene.pp_addObject();\r\n            this._mySceneObjects.myDynamics.pp_setName(\"Dynamics\");\r\n            this._mySceneObjects.myParticles = this._mySceneObjects.myScene.pp_addObject();\r\n            this._mySceneObjects.myParticles.pp_setName(\"Particles\");\r\n            this._mySceneObjects.myVisualElements = this._mySceneObjects.myScene.pp_addObject();\r\n            this._mySceneObjects.myVisualElements.pp_setName(\"Visual Elements\");\r\n            this._mySceneObjects.myTools = this._mySceneObjects.myScene.pp_addObject();\r\n            this._mySceneObjects.myTools.pp_setName(\"Tools\");\r\n\r\n            this._mySceneObjects.myPlayerObjects.myCauldron = this._mySceneObjects.myPlayerObjects.myPlayer.pp_addObject();\r\n            this._mySceneObjects.myPlayerObjects.myCauldron.pp_setName(\"Cauldron\");\r\n            this._mySceneObjects.myPlayerObjects.myHeadDebugs = this._mySceneObjects.myPlayerObjects.myHead.pp_addObject();\r\n            this._mySceneObjects.myPlayerObjects.myHeadDebugs.pp_setName(\"Head Debugs\");\r\n\r\n            Globals.setSceneObjects(this._mySceneObjects, this.engine);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._mySceneObjects != null && Globals.getSceneObjects(this.engine) == this._mySceneObjects) {\r\n            Globals.removeSceneObjects(this.engine);\r\n        }\r\n    }\r\n}", "import { Howler } from \"howler\";\r\n\r\nexport function isPlaybackBlocked() {\r\n    let blocked = false;\r\n\r\n    if (Howler != null && Howler.state != \"running\") {\r\n        blocked = true;\r\n    }\r\n\r\n    return blocked;\r\n}\r\n\r\nexport let AudioUtils = {\r\n    isPlaybackBlocked\r\n};", "import { AudioPlayer } from \"../audio_player\";\r\n\r\nexport class HowlerAudioPlayer extends AudioPlayer {\r\n\r\n    constructor(howl, audioSetup = null) {\r\n        super(audioSetup, howl);\r\n\r\n        if (audioSetup == null) {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudioSetup.myLoop = this._myAudio._loop;\r\n            this._myAudioSetup.myAutoPlay = this._myAudio._autoplay;\r\n\r\n            this._myAudioSetup.myVolume = this._myAudio._volume;\r\n            this._myAudioSetup.myRate = this._myAudio._rate;\r\n\r\n            this._myAudioSetup.myPool = this._myAudio._pool;\r\n            this._myAudioSetup.myPreLoad = this._myAudio._preload;\r\n\r\n            this._myAudioSetup.myPosition = (this._myAudio._pos != null) ? this._myAudio._pos.vec3_clone() : null;\r\n            this._myAudioSetup.mySpatial = this._myAudio._pos != null;\r\n            this._myAudioSetup.myReferenceDistance = this._myAudio._pannerAttr.refDistance;\r\n        } else {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudio.loop(this._myAudioSetup.myLoop);\r\n            this._myAudio._autoplay = this._myAudioSetup.myAutoPlay;\r\n\r\n            this._myAudio.volume(this._myAudioSetup.myVolume);\r\n            this._myAudio.rate(this._myAudioSetup.myRate);\r\n\r\n            this._myAudio._pool = this._myAudioSetup.myPool;\r\n            this._myAudio._preload = this._myAudioSetup.myPreLoad;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition);\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n\r\n            if (this._myAudioSetup.myAutoPlay) {\r\n                this._myAudio.play();\r\n            }\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Howler } from \"howler\";\r\n\r\nexport class MuteEverythingComponent extends Component {\r\n    static TypeName = \"pp-mute-everything\";\r\n    static Properties = {};\r\n\r\n    start() {\r\n        Howler.mute(true);\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Howler } from \"howler\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport class SpatialAudioListenerComponent extends Component {\r\n    static TypeName = \"pp-spatial-audio-listener\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myOrigin = vec3_create();\r\n        this._myForward = vec3_create();\r\n        this._myUp = vec3_create();\r\n    }\r\n\r\n    start() {\r\n        this._updateAudioListener();\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateAudioListener();\r\n    }\r\n\r\n    _updateAudioListener() {\r\n        this.object.pp_getPosition(this._myOrigin);\r\n        this.object.pp_getForward(this._myForward);\r\n        this.object.pp_getUp(this._myUp);\r\n\r\n        Howler.pos(this._myOrigin[0], this._myOrigin[1], this._myOrigin[2]);\r\n        Howler.orientation(this._myForward[0], this._myForward[1], this._myForward[2],\r\n            this._myUp[0], this._myUp[1], this._myUp[2]);\r\n    }\r\n}", "import { Component, PhysXComponent, Property, Shape } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { PhysicsCollisionCollector } from \"../physics/physics_collision_collector\";\r\nimport { RaycastParams, RaycastResults } from \"../physics/physics_raycast_params\";\r\nimport { PhysicsUtils } from \"../physics/physics_utils\";\r\n\r\n// Adjust the gravity to a low value like -0.05 to have better results, since the dynamic objects will move slowly instead of quickly falling far away\r\nexport class BenchmarkMaxPhysXComponent extends Component {\r\n    static TypeName = \"pp-benchmark-max-physx\";\r\n    static Properties = {\r\n        _myStaticDomeSize: Property.float(40),\r\n        _myStaticPhysXCount: Property.int(1000),\r\n        _myDynamicDomeSize: Property.float(80),\r\n        _myDynamicPhysXCount: Property.int(250),\r\n        _myKinematicDomeSize: Property.float(120),\r\n        _myKinematicPhysXCount: Property.int(250),\r\n        _myRaycastCount: Property.int(100),\r\n        _myVisualizeRaycast: Property.bool(false),\r\n        _myVisualizeRaycastDelay: Property.float(0.5),\r\n\r\n        // You can use this to test with convex mesh, \r\n        // but u first need to add a physx with a convex mesh to the scene and read the shapeData index on the component to set it as _myShapeIndex\r\n        _myUseConvexMesh: Property.bool(false),\r\n        _myShapeIndex: Property.int(0),\r\n        _myShapeScaleMultiplier: Property.float(1), // Used to adjust the scale of the convex mesh if too big or small based on how u imported it\r\n\r\n        _myLogEnabled: Property.bool(true),\r\n        _myClearConsoleBeforeLog: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myValid = false;\r\n\r\n        if (!Globals.isDebugEnabled(this.engine)) return;\r\n\r\n        this._myValid = true;\r\n        this._myStarted = false;\r\n        this._myPreStartTimer = new Timer(1);\r\n    }\r\n\r\n    _start() {\r\n        this._myParentObject = this.object.pp_addObject();\r\n\r\n        this._myRaycastParams = new RaycastParams(Globals.getPhysics(this.engine));\r\n        this._myRaycastResults = new RaycastResults();\r\n\r\n        this._myStaticPhysXObjects = [];\r\n        this._myStaticPhysXComponents = [];\r\n        this._myStaticPhysXCollectors = [];\r\n        this._myDynamicPhysXObjects = [];\r\n        this._myDynamicPhysXComponents = [];\r\n        this._myDynamicPhysXCollectors = [];\r\n        this._myKinematicPhysXObjects = [];\r\n        this._myKinematicPhysXComponents = [];\r\n        this._myKinematicPhysXCollectors = [];\r\n\r\n        this._spawnDome(true, false);\r\n        this._spawnDome(false, false);\r\n        this._spawnDome(false, true);\r\n\r\n        this._myStartTimer = new Timer(1);\r\n        this._myTimer = new Timer(0);\r\n        this._myDebugTimer = new Timer(this._myVisualizeRaycastDelay);\r\n        this._myLogEnabledTimer = new Timer(1);\r\n        this._myFPSHistory = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            this._myFPSHistory.push(0);\r\n        }\r\n\r\n        this._myAddVelocityDelay = 10;\r\n\r\n        this._myTranslateVec3 = vec3_create();\r\n        this._myRotateVec3 = vec3_create();\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._myValid) return;\r\n\r\n        if (!this._myStarted) {\r\n            this._myPreStartTimer.update(dt);\r\n            if (this._myPreStartTimer.isDone()) {\r\n                this._start();\r\n            }\r\n        } else {\r\n            this._myStartTimer.update(dt);\r\n            if (this._myStartTimer.isDone()) {\r\n                this._myTimer.update(dt);\r\n                this._myDebugTimer.update(dt);\r\n                this._myLogEnabledTimer.update(dt);\r\n                if (this._myTimer.isDone()) {\r\n                    this._myTimer.start();\r\n\r\n                    let debugEnabled = false;\r\n                    if (this._myDebugTimer.isDone()) {\r\n                        this._myDebugTimer.start();\r\n                        debugEnabled = true;\r\n                    }\r\n\r\n                    debugEnabled = debugEnabled && this._myVisualizeRaycast;\r\n                    this._raycastTest(debugEnabled);\r\n                }\r\n\r\n                this._myFPSHistory.pop();\r\n                this._myFPSHistory.unshift(Math.round(1 / dt));\r\n\r\n                if (this._myLogEnabled) {\r\n                    if (this._myLogEnabledTimer.isDone()) {\r\n                        this._myLogEnabledTimer.start();\r\n                        if (this._myClearConsoleBeforeLog) {\r\n                            console.clear();\r\n                        }\r\n                        console.log(\"Static PhysX Dome Size:\", this._myStaticPhysXObjects.length);\r\n                        console.log(\"Dynamic PhysX Dome Size:\", this._myDynamicPhysXObjects.length);\r\n                        console.log(\"Kinematic PhysX Dome Size:\", this._myKinematicPhysXObjects.length);\r\n\r\n                        let staticCollisions = 0;\r\n                        for (let collector of this._myStaticPhysXCollectors) {\r\n                            staticCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        let dynamicCollisions = 0;\r\n                        for (let collector of this._myDynamicPhysXCollectors) {\r\n                            dynamicCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        let kinematicCollisions = 0;\r\n                        for (let collector of this._myKinematicPhysXCollectors) {\r\n                            kinematicCollisions += collector.getCollisions().length;\r\n                        }\r\n\r\n                        // Every collision is considered twice since it is caught by 2 physX\r\n                        let totalCollisions = (staticCollisions + dynamicCollisions + kinematicCollisions) / 2;\r\n\r\n                        console.log(\"Current Collisions Count:\", totalCollisions);\r\n                        console.log(\"Raycast Count:\", this._myRaycastCount);\r\n                        console.log(\"FPS History:\");\r\n                        let fpsString = \"\";\r\n                        for (let fps of this._myFPSHistory) {\r\n                            fpsString = fpsString.concat(fps, \"\\n\");\r\n                        }\r\n                        console.log(fpsString);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myAddVelocityDelay > 0) {\r\n                this._myAddVelocityDelay--;\r\n                if (this._myAddVelocityDelay == 0) {\r\n                    for (let physX of this._myDynamicPhysXComponents) {\r\n                        physX.kinematic = false;\r\n                        let strength = 50;\r\n                        physX.linearVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                        physX.angularVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let physX of this._myKinematicPhysXObjects) {\r\n                let strength = 5 * dt;\r\n                this._myTranslateVec3.vec3_set(Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength));\r\n                physX.pp_translate(this._myTranslateVec3);\r\n\r\n                let rotateStrength = 50 * dt;\r\n                this._myRotateVec3.vec3_set(Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength));\r\n                physX.pp_rotate(this._myRotateVec3);\r\n            }\r\n        }\r\n    }\r\n\r\n    _raycastTest(debugEnabled) {\r\n        let raycastCount = this._myRaycastCount;\r\n\r\n        let distance = 10000;\r\n\r\n        for (let i = 0; i < raycastCount; i++) {\r\n            let origin = [Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign()];\r\n            let direction = [Math.pp_random(-1, 1), Math.pp_random(-1, 1), Math.pp_random(-1, 1)];\r\n            direction.vec3_normalize(direction);\r\n\r\n            this._myRaycastParams.myOrigin.vec3_copy(origin);\r\n            this._myRaycastParams.myDirection.vec3_copy(direction);\r\n            this._myRaycastParams.myDistance = distance;\r\n            this._myRaycastParams.myBlockLayerFlags.setAllFlagsActive();\r\n\r\n            let raycastResults = PhysicsUtils.raycast(this._myRaycastParams, this._myRaycastResults);\r\n\r\n            if (debugEnabled && Globals.isDebugEnabled(this.engine)) {\r\n                Globals.getDebugVisualManager(this.engine).drawRaycast(this._myDebugTimer.getDuration(), raycastResults, true, 5, 0.015);\r\n            }\r\n        }\r\n    }\r\n\r\n    _spawnDome(staticDome, dynamicDome) {\r\n        let maxCount = this._myStaticPhysXCount;\r\n        let physXList = this._myStaticPhysXObjects;\r\n        let cloves = Math.ceil(Math.sqrt(this._myStaticPhysXCount));\r\n        if (!staticDome) {\r\n            if (dynamicDome) {\r\n                cloves = Math.ceil(Math.sqrt(this._myDynamicPhysXCount));\r\n                maxCount = this._myDynamicPhysXCount;\r\n                physXList = this._myDynamicPhysXObjects;\r\n            } else {\r\n                cloves = Math.ceil(Math.sqrt(this._myKinematicPhysXCount));\r\n                maxCount = this._myKinematicPhysXCount;\r\n                physXList = this._myKinematicPhysXObjects;\r\n            }\r\n        }\r\n\r\n        let angleForClove = Math.PI * 2 / cloves;\r\n\r\n        let minDistance = Math.max(0, this._myStaticDomeSize - 20);\r\n        let maxDistance = this._myStaticDomeSize + 20;\r\n\r\n        if (!staticDome) {\r\n            if (dynamicDome) {\r\n                minDistance = Math.max(0, this._myDynamicDomeSize - 20);\r\n                maxDistance = this._myDynamicDomeSize + 20;\r\n            } else {\r\n                minDistance = Math.max(0, this._myKinematicDomeSize - 20);\r\n                maxDistance = this._myKinematicDomeSize + 20;\r\n            }\r\n        }\r\n\r\n        let minExtraRotation = 0;\r\n        let maxExtraRotation = Math.pp_toRadians(10);\r\n\r\n        let upDirection = vec3_create(0, 1, 0);\r\n        let horizontalDirection = vec3_create(0, 0, -1);\r\n\r\n        for (let i = 0; i < cloves / 2; i++) {\r\n            let verticalDirection = vec3_create(0, 1, 0);\r\n\r\n            let rotationAxis = vec3_create();\r\n            horizontalDirection.vec3_cross(verticalDirection, rotationAxis);\r\n            rotationAxis.vec3_normalize(rotationAxis);\r\n\r\n            for (let j = 0; j < cloves; j++) {\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.pp_clone();\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, staticDome, dynamicDome);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.pp_clone();\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, staticDome, dynamicDome);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n            }\r\n\r\n            horizontalDirection.vec3_rotateAxisRadians(angleForClove, upDirection, horizontalDirection);\r\n        }\r\n    }\r\n\r\n    _addPhysX(physXDirection, staticDome, dynamicDome) {\r\n        let position = physXDirection;\r\n        let scale = Math.pp_random(1, 10);\r\n        let shape = Math.pp_randomPick(Shape.Sphere, Shape.Box);\r\n        if (this._myUseConvexMesh) {\r\n            shape = Shape.ConvexMesh;\r\n            scale *= this._myShapeScaleMultiplier;\r\n        }\r\n\r\n        let physX = this._myParentObject.pp_addObject();\r\n        physX.pp_setPosition(position);\r\n\r\n        let physXComponent = physX.pp_addComponent(PhysXComponent, {\r\n            \"shape\": shape,\r\n            \"shapeData\": { index: this._myShapeIndex },\r\n            \"extents\": vec3_create(scale, scale, scale),\r\n            \"static\": staticDome,\r\n            \"kinematic\": !dynamicDome,\r\n            \"mass\": 1\r\n        });\r\n\r\n        if (staticDome) {\r\n            this._myStaticPhysXObjects.push(physX);\r\n            this._myStaticPhysXComponents.push(physXComponent);\r\n            this._myStaticPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        } else if (dynamicDome) {\r\n            this._myDynamicPhysXObjects.push(physX);\r\n            this._myDynamicPhysXComponents.push(physXComponent);\r\n            this._myDynamicPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        } else {\r\n            this._myKinematicPhysXObjects.push(physX);\r\n            this._myKinematicPhysXComponents.push(physXComponent);\r\n            this._myKinematicPhysXCollectors.push(new PhysicsCollisionCollector(physXComponent));\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        for (let collector of this._myStaticPhysXCollectors) {\r\n            collector.destroy();\r\n        }\r\n\r\n        for (let collector of this._myDynamicPhysXCollectors) {\r\n            collector.destroy();\r\n        }\r\n\r\n        for (let collector of this._myKinematicPhysXCollectors) {\r\n            collector.destroy();\r\n        }\r\n    }\r\n}", "import { CollisionEventType, Emitter, PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../cauldron/timer\";\r\n\r\nexport class PhysicsCollisionCollector {\r\n\r\n    constructor(physXComponent, trigger = false) {\r\n        this._myPhysX = physXComponent;\r\n\r\n        this._myTrigger = trigger;\r\n\r\n        this._myCollisions = [];\r\n\r\n        this._myCollisionsStart = [];\r\n        this._myCollisionsEnd = [];\r\n\r\n        this._myUpdateActive = false;\r\n        this._myCollisionsStartToProcess = [];\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        this._myCollisionCallbackID = null;\r\n\r\n        this._myActive = false;\r\n        this.setActive(true);\r\n\r\n        this._myLogEnabled = false;\r\n\r\n        this._myTriggerDesyncFixDelay = new Timer(0.1);\r\n\r\n        this._myCollisionEmitter = new Emitter();          // Signature: listener(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionStartEmitter = new Emitter();     // Signature: listener(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionEndEmitter = new Emitter();       // Signature: listener(thisPhysX, otherPhysX, collisionType)\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    getPhysX() {\r\n        return this._myPhysX;\r\n    }\r\n\r\n    getCollisions() {\r\n        return this._myCollisions;\r\n    }\r\n\r\n    getCollisionsStart() {\r\n        return this._myCollisionsStart;\r\n    }\r\n\r\n    getCollisionsEnd() {\r\n        return this._myCollisionsEnd;\r\n    }\r\n\r\n    isActive() {\r\n        return this._myActive;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            this._myCollisions = [];\r\n\r\n            this._myCollisionsStart = [];\r\n            this._myCollisionsEnd = [];\r\n            this._myUpdateActive = false;\r\n            this._myCollisionsStartToProcess = [];\r\n            this._myCollisionsEndToProcess = [];\r\n\r\n            if (this._myActive) {\r\n                this._myCollisionCallbackID = this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            } else if (this._myCollisionCallbackID != null) {\r\n                this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n                this._myCollisionCallbackID = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Set to true only if u are going to actually update this object and don't want to lose any collision start/end events prior to updating the first time after activation\r\n    setUpdateActive(active) {\r\n        this._myUpdateActive = active;\r\n    }\r\n\r\n    // Update is not mandatory, use it only if u want to access collisions start and end\r\n    update(dt) {\r\n        if (!this._myActive) {\r\n            return;\r\n        }\r\n\r\n        this._myUpdateActive = true;\r\n\r\n        this._myCollisionsStart = this._myCollisionsStartToProcess;\r\n        this._myCollisionsStartToProcess = [];\r\n\r\n        this._myCollisionsEnd = this._myCollisionsEndToProcess;\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        if (this._myTrigger) {\r\n            this._triggerDesyncFix(dt);\r\n        }\r\n    }\r\n\r\n    isLogEnabled() {\r\n        return this._myLogEnabled;\r\n    }\r\n\r\n    setLogEnabled(enabled) {\r\n        this._myLogEnabled = enabled;\r\n    }\r\n\r\n    registerCollisionEventListener(id, listener) {\r\n        this._myCollisionEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterCollisionEventListener(id) {\r\n        this._myCollisionEmitter.remove(id);\r\n    }\r\n\r\n    registerCollisionStartEventListener(id, listener) {\r\n        this._myCollisionStartEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterCollisionStartEventListener(id) {\r\n        this._myCollisionStartEmitter.remove(id);\r\n    }\r\n\r\n    registerCollisionEndEventListener(id, listener) {\r\n        this._myCollisionEndEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterCollisionEndEventListener(id) {\r\n        this._myCollisionEndEmitter.remove(id);\r\n    }\r\n\r\n    _onCollision(type, physXComponent) {\r\n        if (type == CollisionEventType.Touch || type == CollisionEventType.TriggerTouch) {\r\n            this._onCollisionStart(type, physXComponent);\r\n        } else if (type == CollisionEventType.TouchLost || type == CollisionEventType.TriggerTouchLost) {\r\n            this._onCollisionEnd(type, physXComponent);\r\n        }\r\n\r\n        this._myCollisionEmitter.notify(this._myPhysX, physXComponent, type);\r\n    }\r\n\r\n    _onCollisionStart(type, physXComponent) {\r\n        if (this._myLogEnabled) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (objectFound) {\r\n                console.error(\"Collision Start on object already collected\");\r\n            }\r\n        }\r\n\r\n        this._myCollisions.push(physXComponent.object);\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsStartToProcess.push(physXComponent.object);\r\n            this._myCollisionsEndToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myLogEnabled) {\r\n            console.log(\"Collision Start -\", this._myCollisions.length);\r\n        }\r\n\r\n        this._myCollisionStartEmitter.notify(this._myPhysX, physXComponent, type);\r\n    }\r\n\r\n    _onCollisionEnd(type, physXComponent) {\r\n        if (this._myLogEnabled) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!objectFound) {\r\n                console.error(\"Collision End on object not collected\");\r\n            }\r\n        }\r\n\r\n\r\n        this._myCollisions.pp_removeAll(function (element) {\r\n            return element.pp_equals(physXComponent.object);\r\n        });\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsEndToProcess.push(physXComponent.object);\r\n            this._myCollisionsStartToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myLogEnabled) {\r\n            console.log(\"Collision End -\", this._myCollisions.length);\r\n        }\r\n\r\n        this._myCollisionEndEmitter.notify(this._myPhysX, physXComponent, type);\r\n    }\r\n\r\n    _triggerDesyncFix(dt) {\r\n        this._myTriggerDesyncFixDelay.update(dt);\r\n        if (this._myTriggerDesyncFixDelay.isDone()) {\r\n            this._myTriggerDesyncFixDelay.start();\r\n\r\n            let collisionsToEnd = this._myCollisions.pp_findAll(function (element) {\r\n                let physX = element.pp_getComponentSelf(PhysXComponent);\r\n                return physX == null || !physX.active;\r\n            });\r\n\r\n            if (collisionsToEnd.length > 0) {\r\n                //console.error(\"DESYNC RESOLVED\");\r\n\r\n                for (let collision of collisionsToEnd) {\r\n                    let physX = collision.pp_getComponentSelf(PhysXComponent);\r\n                    if (physX) {\r\n                        this._onCollisionEnd(CollisionEventType.TriggerTouchLost, physX);\r\n                    } else {\r\n                        console.error(\"NO PHYSX, HOW?\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Alignment, Component, Justification, MeshComponent, Property, TextComponent } from \"@wonderlandengine/api\";\r\nimport { vec2_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { Timer } from \"../cauldron/timer\";\r\nimport { ObjectPool, ObjectPoolParams } from \"../object_pool/object_pool\";\r\nimport { MeshCreationParams, MeshCreationTriangleParams, MeshCreationVertexParams, MeshUtils } from \"../utils/mesh_utils\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\nimport { CloneParams } from \"../wl/utils/object_utils\";\r\n\r\nexport class BenchmarkMaxVisibleTrianglesComponent extends Component {\r\n    static TypeName = \"pp-benchmark-max-visible-triangles\";\r\n    static Properties = {\r\n        _myTargetFrameRate: Property.int(-1),                // -1 means it will auto detect it at start\r\n        _myTargetFrameRateThreshold: Property.int(3),\r\n        _myStartPlaneCount: Property.int(1),\r\n        _myPlaneTriangles: Property.int(100),\r\n        _mySecondsBeforeDoubling: Property.float(0.5),       // Higher gives a better frame rate evaluation\r\n        _myDTHistoryToIgnorePercentage: Property.float(0.25),\r\n        _myCloneMaterial: Property.bool(false),\r\n        _myCloneMesh: Property.bool(false),\r\n\r\n        _myLogEnabled: Property.bool(true),\r\n\r\n        _myStartOnXRStart: Property.bool(false),\r\n        _myDisplayInFrontOfPlayer: Property.bool(true),\r\n        _myDisplayInFrontOfPlayerDistance: Property.float(10),\r\n\r\n        _myPlaneMaterial: Property.material(),\r\n        _myBackgroundMaterial: Property.material(),\r\n        _myTextMaterial: Property.material(null)\r\n    };\r\n\r\n    _start() {\r\n        this._myBackgroundSize = 4;\r\n        this._myBackgroundObject.pp_setActive(true);\r\n        this._myBackgroundObject.pp_setScale(this._myBackgroundSize + 0.1);\r\n        this._myBackgroundObject.pp_translateLocal(vec3_create(0, 0, -0.001));\r\n\r\n        this._myDoubleTimer = new Timer(this._mySecondsBeforeDoubling);\r\n        this._myDone = false;\r\n\r\n        this._myCurrentPlanes = this._myStartPlaneCount;\r\n\r\n        this._myDTHistory = [];\r\n\r\n        this._myUpperLimit = -1;\r\n        this._myLowerLimit = 0;\r\n\r\n        this._myPlanes = [];\r\n        this._mySkipNextFrames = 0;\r\n        this._myMaxWaitFrames = 0;\r\n\r\n        this._myMaxPlanesReached = false;\r\n\r\n        this._myFirstTime = true;\r\n    }\r\n\r\n    _update(dt) {\r\n        // Skip lag frames after the new set of plane has been shown, wait for it to be stable\r\n        {\r\n            if (dt < 0.00001) {\r\n                return;\r\n            }\r\n\r\n            if (dt > 0.5 && this._myMaxWaitFrames > 0) {\r\n                this._myMaxWaitFrames--;\r\n                return;\r\n            }\r\n\r\n            this._myMaxWaitFrames = 10;\r\n\r\n            if (this._mySkipNextFrames > 0) {\r\n                this._mySkipNextFrames--;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._myDone) {\r\n            this._myDoubleTimer.update(dt);\r\n\r\n            this._myDTHistory.push(dt);\r\n\r\n            if (this._myDoubleTimer.isDone()) {\r\n                this._myDoubleTimer.start();\r\n\r\n                let frameRate = this._computeAverageFrameRate(false);\r\n\r\n                if (this._myFirstTime) {\r\n                    this._myFirstTime = false;\r\n                } else {\r\n\r\n                    // If there is not lag, the current plane count is a good lower limit, otherwise the current count is now a upper threshold, we have to search below it\r\n                    let lagging = false;\r\n                    if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                        this._myUpperLimit = this._myCurrentPlanes;\r\n\r\n                        lagging = true;\r\n\r\n                        if (this._myUpperLimit == 1) {\r\n                            this._myLowerLimit = 1;\r\n                        }\r\n                    } else {\r\n                        this._myLowerLimit = this._myCurrentPlanes;\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myUpperLimit = Math.max(this._myUpperLimit, this._myLowerLimit);\r\n                        }\r\n                    }\r\n\r\n                    this._myTriangleTextComponent.text = \"Triangles: \" + this._myCurrentPlanes * this._myRealTrianglesAmount;\r\n                    this._myPlaneTextComponent.text = \"Planes: \" + this._myCurrentPlanes;\r\n                    this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                    if (lagging) {\r\n                        this._myTriangleTextComponent.material.color = this._myLagColor;\r\n                        this._myPlaneTextComponent.material.color = this._myLagColor;\r\n                        this._myFPSTextComponent.material.color = this._myLagColor;\r\n                    } else {\r\n                        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n                        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n                        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n                    }\r\n\r\n                    let reset = false;\r\n\r\n                    // Check if the binary search is completed\r\n                    if ((this._myUpperLimit > 0 &&\r\n                        (!lagging && (this._myUpperLimit - this._myLowerLimit) <= Math.max(2, 1000 / this._myRealTrianglesAmount)) ||\r\n                        (lagging && (this._myUpperLimit - this._myLowerLimit) <= 1)) ||\r\n                        (!lagging && this._myMaxPlanesReached)) {\r\n                        if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                            // Going a bit back with the binary search, maybe the lower limit was not lower after all cause of a bad assumption of average FPS\r\n                            this._myLowerLimit = Math.max(1, Math.floor(this._myUpperLimit / 2.5));\r\n                            this._myUpperLimit = 0;\r\n                            reset = true;\r\n\r\n                            if (this._myLogEnabled) {\r\n                                // Reset\r\n                                console.log(\"Rst - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                            }\r\n                        } else {\r\n                            if (this._myMaxPlanesReached) {\r\n                                if (this._myLogEnabled) {\r\n                                    console.log(\"Aborted - Max Planes Reached\");\r\n\r\n                                    this._myDoneTextComponent.text = \"Aborted - Max Planes Reached\";\r\n                                }\r\n                            } else {\r\n                                this._displayPlanes(this._myLowerLimit);\r\n\r\n                                if (this._myLogEnabled) {\r\n                                    console.log(\"\\nEnd - Triangles:\", this._myLowerLimit * this._myRealTrianglesAmount, \"- Planes:\", this._myLowerLimit, \"- Frame Rate:\", frameRate);\r\n                                    console.log(\"Plane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                                    console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                                }\r\n\r\n                                this._myTriangleTextComponent.text = \"Triangles: \" + this._myLowerLimit * this._myRealTrianglesAmount;\r\n                                this._myPlaneTextComponent.text = \"Planes: \" + this._myLowerLimit;\r\n                                this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                                this._myDoneTextComponent.text = \"End\";\r\n                            }\r\n                            this._myDone = true;\r\n                        }\r\n                    }\r\n\r\n                    if (lagging && !reset) {\r\n                        if (this._myLogEnabled) {\r\n                            console.log(\"Lag - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                        }\r\n                    }\r\n\r\n                    if (!this._myDone) {\r\n                        // Sort of binary search, if there is no upper limit yet, just double\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myCurrentPlanes = Math.floor((this._myUpperLimit + this._myLowerLimit) / 2);\r\n                            this._myCurrentPlanes = Math.max(this._myCurrentPlanes, 1);\r\n                        } else if (!reset) {\r\n                            this._myCurrentPlanes = this._myLowerLimit * 2;\r\n                        } else {\r\n                            this._myCurrentPlanes = this._myLowerLimit;\r\n                        }\r\n\r\n                        if (this._myCurrentPlanes > 50000) {\r\n                            this._myCurrentPlanes = 50000;\r\n                            this._myMaxPlanesReached = true;\r\n                        } else {\r\n                            this._myMaxPlanesReached = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myDone) {\r\n                    this._displayPlanes(this._myCurrentPlanes);\r\n                    this._myElapsedTime = 0;\r\n                    this._myFrameCount = 0;\r\n\r\n                    this._mySkipNextFrames = 30;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _displayPlanes(count) {\r\n        while (this._myPlanes.length > count) {\r\n            let plane = this._myPlanes.pop();\r\n            this._myPlanePool.release(plane);\r\n        }\r\n\r\n        while (this._myPlanes.length < count) {\r\n            let plane = this._myPlanePool.get();\r\n            this._myPlanes.push(plane);\r\n        }\r\n\r\n        let gridSize = 1;\r\n        while (gridSize * gridSize < count) {\r\n            gridSize++;\r\n        }\r\n\r\n        let spaceBetween = 0.01;\r\n        let totalSpaceBetween = spaceBetween * (gridSize - 1);\r\n        let planeSize = (this._myBackgroundSize * 2 - totalSpaceBetween) / (gridSize * 2);\r\n\r\n        let currentCount = count;\r\n\r\n        for (let i = 0; i < gridSize && currentCount > 0; i++) {\r\n            for (let j = 0; j < gridSize && currentCount > 0; j++) {\r\n                let plane = this._myPlanes[currentCount - 1];\r\n                plane.pp_setScale(planeSize);\r\n\r\n                let position = [-this._myBackgroundSize + planeSize + j * planeSize * 2 + j * spaceBetween, this._myBackgroundSize - planeSize - i * planeSize * 2 - i * spaceBetween, 0];\r\n\r\n                plane.pp_setPositionLocal(position);\r\n                plane.pp_setActive(true);\r\n\r\n                currentCount--;\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this._myValid = false;\r\n\r\n        if (!Globals.isDebugEnabled(this.engine)) return;\r\n\r\n        this._myValid = true;\r\n\r\n        if (this._myPlaneMaterial == null) {\r\n            this._myPlaneMaterial = Globals.getDefaultMaterials(this.engine).myPhongOpaque.clone();\r\n            this._myPlaneMaterial.diffuseColor = vec4_create(0.95, 0.95, 0.95, 1);\r\n            this._myPlaneMaterial.ambientColor = vec4_create(0, 0, 0, 1);\r\n            this._myPlaneMaterial.ambientFactor = 0.5;\r\n        }\r\n\r\n        if (this._myBackgroundMaterial == null) {\r\n            this._myBackgroundMaterial = Globals.getDefaultMaterials(this.engine).myPhongOpaque.clone();\r\n            this._myBackgroundMaterial.diffuseColor = vec4_create(0.25, 0.25, 0.25, 1);\r\n            this._myBackgroundMaterial.ambientColor = vec4_create(0, 0, 0, 1);\r\n            this._myBackgroundMaterial.ambientFactor = 0.5;\r\n        }\r\n\r\n        if (this._myTextMaterial == null) {\r\n            this._myTextMaterial = Globals.getDefaultMaterials(this.engine).myText.clone();\r\n        }\r\n\r\n        this._myLagColor = vec4_create(0.6, 0, 0, 1);\r\n        this._myNormalColor = vec4_create(0.25, 0.25, 0.25, 1);\r\n\r\n        this._myRealTrianglesAmount = 0;\r\n\r\n        let parent = this.object;\r\n        if (this._myDisplayInFrontOfPlayer) {\r\n            parent = Globals.getPlayerObjects(this.engine).myHead.pp_addObject();\r\n            parent.pp_rotateAxis(180, vec3_create(0, 1, 0));\r\n            parent.pp_translateLocal(vec3_create(0, 0, this._myDisplayInFrontOfPlayerDistance));\r\n        }\r\n\r\n        this._myTrianglesObject = parent.pp_addObject();\r\n\r\n        this._myBackgroundObject = this._myTrianglesObject.pp_addObject();\r\n        {\r\n            let meshComponent = this._myBackgroundObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = MeshUtils.createPlane(this.engine);\r\n            meshComponent.material = this._myBackgroundMaterial.clone();\r\n        }\r\n\r\n        this._myPlaneObject = this._myTrianglesObject.pp_addObject();\r\n        {\r\n            let meshComponent = this._myPlaneObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = this._createPlaneMesh(this._myPlaneTriangles);\r\n            this._myRealTrianglesAmount = meshComponent.mesh.indexData.length / 3;\r\n            meshComponent.material = this._myPlaneMaterial.clone();\r\n        }\r\n\r\n        let poolParams = new ObjectPoolParams();\r\n        if (!this._myCloneMesh) {\r\n            poolParams.myInitialPoolSize = 30000;\r\n        } else {\r\n            if (this._myRealTrianglesAmount <= 4) {\r\n                poolParams.myInitialPoolSize = 15000;\r\n            } else if (this._myRealTrianglesAmount <= 8) {\r\n                poolParams.myInitialPoolSize = 10000;\r\n            } else if (this._myRealTrianglesAmount <= 64) {\r\n                poolParams.myInitialPoolSize = 7500;\r\n            } else {\r\n                poolParams.myInitialPoolSize = 5000;\r\n            }\r\n        }\r\n        poolParams.myPercentageToAddWhenEmpty = 0;\r\n        poolParams.myAmountToAddWhenEmpty = 10000;\r\n        poolParams.myCloneParams = new CloneParams();\r\n        poolParams.myCloneParams.myComponentDeepCloneParams.setDeepCloneComponentVariable(MeshComponent.TypeName, \"material\", this._myCloneMaterial);\r\n        poolParams.myCloneParams.myComponentDeepCloneParams.setDeepCloneComponentVariable(MeshComponent.TypeName, \"mesh\", this._myCloneMesh);\r\n        this._myPlanePool = new ObjectPool(this._myPlaneObject, poolParams);\r\n\r\n        this._myBackgroundObject.pp_setActive(false);\r\n        this._myPlaneObject.pp_setActive(false);\r\n\r\n        this._myStartTimer = new Timer(2);\r\n        this._mySessionStarted = false;\r\n\r\n        this._myTextsObject = this._myTrianglesObject.pp_addObject();\r\n        //this._myTextsObject.pp_addComponent(EasyTransformComponent);\r\n\r\n        this._myTriangleTextObject = this._myTextsObject.pp_addObject();\r\n        //this._myTriangleTextObject.pp_addComponent(EasyTransformComponent, { _myLocal: true });\r\n\r\n        this._myTriangleTextComponent = this._myTriangleTextObject.pp_addComponent(TextComponent);\r\n\r\n        this._myTriangleTextComponent.alignment = Alignment.Left;\r\n        this._myTriangleTextComponent.justification = Justification.Line;\r\n        this._myTriangleTextComponent.material = this._myTextMaterial.clone();\r\n        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n        this._myTriangleTextComponent.text = \" \";\r\n        //this._myTriangleTextComponent.text = \"Triangles: 9999999\";\r\n\r\n        this._myPlaneTextObject = this._myTextsObject.pp_addObject();\r\n\r\n        this._myPlaneTextComponent = this._myPlaneTextObject.pp_addComponent(TextComponent);\r\n        //this._myPlaneTextObject.pp_addComponent(EasyTransformComponent, { _myLocal: true });\r\n\r\n        this._myPlaneTextComponent.alignment = Alignment.Left;\r\n        this._myPlaneTextComponent.justification = Justification.Line;\r\n        this._myPlaneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n        this._myPlaneTextComponent.text = \" \";\r\n        //this._myPlaneTextComponent.text = \"Planes: 9999999\";\r\n\r\n        this._myFPSTextObject = this._myTextsObject.pp_addObject();\r\n\r\n        this._myFPSTextComponent = this._myFPSTextObject.pp_addComponent(TextComponent);\r\n        //this._myFPSTextObject.pp_addComponent(EasyTransformComponent, { _myLocal: true });\r\n\r\n        this._myFPSTextComponent.alignment = Alignment.Left;\r\n        this._myFPSTextComponent.justification = Justification.Line;\r\n        this._myFPSTextComponent.material = this._myTextMaterial.clone();\r\n        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n        this._myFPSTextComponent.text = \" \";\r\n        //this._myFPSTextComponent.text = \"FPS: 99.99\";\r\n\r\n        this._myDoneTextObject = this._myTrianglesObject.pp_addObject();\r\n\r\n        this._myDoneTextComponent = this._myDoneTextObject.pp_addComponent(TextComponent);\r\n        //this._myDoneTextObject.pp_addComponent(EasyTransformComponent, { _myLocal: true });\r\n\r\n        this._myDoneTextComponent.alignment = Alignment.Center;\r\n        this._myDoneTextComponent.justification = Justification.Line;\r\n        this._myDoneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myDoneTextComponent.material.color = this._myNormalColor;\r\n        this._myDoneTextComponent.text = \" \";\r\n        //this._myDoneTextComponent.text = \"End\";\r\n\r\n        this._myTextsObject.pp_setPositionLocal(vec3_create(0, 4.3, 0));\r\n        this._myTextsObject.pp_setScale(2.75);\r\n\r\n        this._myTriangleTextObject.pp_setPositionLocal(vec3_create(-1.4, 0, 0));\r\n        this._myPlaneTextObject.pp_setPositionLocal(vec3_create(0.55, 0, 0));\r\n        this._myFPSTextObject.pp_setPositionLocal(vec3_create(-0.315, 0, 0));\r\n        this._myDoneTextObject.pp_setPositionLocal(vec3_create(0, -4.6, 0));\r\n        this._myDoneTextObject.pp_setScale(4);\r\n\r\n        this._myDTHistory = [];\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._myValid) return;\r\n\r\n        if (this._mySessionStarted || !this._myStartOnXRStart) {\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n\r\n                this._myDTHistory.push(dt);\r\n\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._myStableFrameRate = this._computeAverageFrameRate(true);\r\n                    if (this._myTargetFrameRate > 0) {\r\n                        this._myStableFrameRate = this._myTargetFrameRate;\r\n                    }\r\n\r\n                    if (this._myLogEnabled) {\r\n                        console.log(\"\\nPlane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                        console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                        console.log(\"\");\r\n                    }\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._update(dt);\r\n            }\r\n        } else {\r\n            this._mySessionStarted = XRUtils.getSession(this.engine) != null;\r\n        }\r\n    }\r\n\r\n    _computeAverageFrameRate(firstCompute) {\r\n        let frameRate = 0;\r\n\r\n        this._myDTHistory.sort();\r\n        let elementToRemove = Math.floor(this._myDTHistory.length) * Math.min(0.9, this._myDTHistoryToIgnorePercentage * (firstCompute ? 2 : 1));\r\n        for (let i = 0; i < elementToRemove; i++) {\r\n            this._myDTHistory.pop();\r\n        }\r\n\r\n        let averageDT = 0;\r\n        for (let dt of this._myDTHistory) {\r\n            averageDT += dt;\r\n        }\r\n        averageDT /= this._myDTHistory.length;\r\n        frameRate = Math.round(1 / averageDT);\r\n\r\n        this._myDTHistory = [];\r\n\r\n        return frameRate;\r\n    }\r\n\r\n    _createPlaneMesh(trianglesAmount) {\r\n        let squaresAmount = Math.ceil(trianglesAmount / 2);\r\n\r\n        let row = 1;\r\n        let column = 1;\r\n\r\n        let closestSqrt = 1;\r\n        while (closestSqrt * closestSqrt < squaresAmount) {\r\n            closestSqrt++;\r\n        }\r\n\r\n        row = closestSqrt;\r\n        column = closestSqrt;\r\n\r\n        while (row > 1 && column > 1 && row * column > squaresAmount && ((row - 1) * column >= squaresAmount)) {\r\n            row--;\r\n        }\r\n\r\n        let meshCreationParams = new MeshCreationParams(this.engine);\r\n\r\n        for (let i = 0; i < row + 1; i++) {\r\n            for (let j = 0; j < column + 1; j++) {\r\n\r\n                let x = (2 / column) * j;\r\n                let y = (2 / row) * i;\r\n\r\n                let vertexCreationParams = new MeshCreationVertexParams();\r\n\r\n                vertexCreationParams.myPosition = vec3_create();\r\n                vertexCreationParams.myPosition[0] = x - 1;\r\n                vertexCreationParams.myPosition[1] = y - 1;\r\n                vertexCreationParams.myPosition[2] = 0;\r\n\r\n                vertexCreationParams.myTextureCoordinates = vec2_create();\r\n                vertexCreationParams.myTextureCoordinates[0] = x / 2;\r\n                vertexCreationParams.myTextureCoordinates[1] = y / 2;\r\n\r\n                vertexCreationParams.myNormal = vec3_create();\r\n                vertexCreationParams.myNormal[0] = 0;\r\n                vertexCreationParams.myNormal[1] = 0;\r\n                vertexCreationParams.myNormal[2] = 1;\r\n\r\n                meshCreationParams.myVertexes.push(vertexCreationParams);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < column; j++) {\r\n                let firstTriangle = new MeshCreationTriangleParams();\r\n                firstTriangle.myIndexes[0] = (i * (column + 1)) + j;\r\n                firstTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                firstTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j;\r\n\r\n                let secondTriangle = new MeshCreationTriangleParams();\r\n                secondTriangle.myIndexes[0] = ((i + 1) * (column + 1)) + j;\r\n                secondTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                secondTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j + 1;\r\n\r\n                meshCreationParams.myTriangles.push(firstTriangle);\r\n                meshCreationParams.myTriangles.push(secondTriangle);\r\n            }\r\n        }\r\n\r\n        let mesh = MeshUtils.create(meshCreationParams);\r\n\r\n        return mesh;\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { SaveUtils } from \"../utils/save_utils\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\nimport { Timer } from \"./timer\";\r\n\r\nexport class SaveManager {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._mySaveCache = new Map();\r\n        this._myCacheEnabled = true;\r\n\r\n        this._myCommitSavesDelayTimer = new Timer(0, false);\r\n        this._myDelaySavesCommit = true;\r\n        this._myIDsToCommit = [];\r\n\r\n        this._myCacheDefaultValueOnFail = true;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n\r\n        this._myClearEmitter = new Emitter();                   // Signature: listener()\r\n        this._myDeleteEmitter = new Emitter();                  // Signature: listener(id)\r\n        this._myDeleteIDEmitters = new Map();                   // Signature: listener(id)\r\n        this._mySaveEmitter = new Emitter();                    // Signature: listener(id, value)\r\n        this._mySaveValueChangedEmitter = new Emitter();        // Signature: listener(id, value)\r\n        this._mySaveIDEmitters = new Map();                     // Signature: listener(id, value)\r\n        this._mySaveValueChangedIDEmitters = new Map();         // Signature: listener(id, value)\r\n        this._myCommitSaveEmitter = new Emitter();              // Signature: listener(id, value, commitSaveDelayed, failed)\r\n        this._myCommitSaveIDEmitters = new Map();               // Signature: listener(id, value, commitSaveDelayed, failed)\r\n        this._myCommitSavesEmitter = new Emitter();             // Signature: listener(commitSavesDelayed, failed)\r\n\r\n        this._myLoadEmitter = new Emitter();                    // Signature: listener(id, value, loadFromCache, failed)\r\n        this._myLoadIDEmitters = new Map();                     // Signature: listener(id, value, loadFromCache, failed)\r\n\r\n        this._myVisibilityChangeEventListener = null;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    setCommitSavesDelay(delay) {\r\n        this._myCommitSavesDelayTimer.start(delay);\r\n    }\r\n\r\n    setDelaySavesCommit(delayed) {\r\n        this._myDelaySavesCommit = delayed;\r\n    }\r\n\r\n    setCacheDefaultValueOnFail(cache) {\r\n        this._myCacheDefaultValueOnFail = cache;\r\n    }\r\n\r\n    setCacheEnabled(enabled) {\r\n        this._myCacheEnabled = enabled;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCommitSavesDelayTimer.isRunning()) {\r\n            this._myCommitSavesDelayTimer.update(dt);\r\n            if (this._myCommitSavesDelayTimer.isDone()) {\r\n                this.commitSaves();\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id, value, delaySavesCommitOverride = null, cacheEnabledOverride = null) {\r\n        let sameValue = false;\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(cacheEnabledOverride)) {\r\n            sameValue = this._mySaveCache.get(id) === value;\r\n        }\r\n\r\n        if (!sameValue) {\r\n            this._mySaveCache.set(id, value);\r\n            if ((this._myDelaySavesCommit && delaySavesCommitOverride == null) || (delaySavesCommitOverride != null && delaySavesCommitOverride)) {\r\n                this._myIDsToCommit.pp_pushUnique(id);\r\n                if (!this._myCommitSavesDelayTimer.isRunning()) {\r\n                    this._myCommitSavesDelayTimer.start();\r\n                }\r\n            } else {\r\n                let failed = this._commitSave(id, false);\r\n\r\n                let commitSaveDelayed = false;\r\n                this._myCommitSavesEmitter.notify(commitSaveDelayed, failed);\r\n            }\r\n        }\r\n\r\n        this._mySaveEmitter.notify(id, value);\r\n\r\n        if (this._mySaveIDEmitters.size > 0) {\r\n            let emitter = this._mySaveIDEmitters.get(id);\r\n            if (emitter != null) {\r\n                emitter.notify(id, value);\r\n            }\r\n        }\r\n\r\n        if (!sameValue) {\r\n            this._mySaveValueChangedEmitter.notify(id, value);\r\n\r\n            if (this._mySaveValueChangedIDEmitters.size > 0) {\r\n                let emitter = this._mySaveValueChangedIDEmitters.get(id);\r\n                if (emitter != null) {\r\n                    emitter.notify(id, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    commitSaves() {\r\n        if (this._myIDsToCommit.length > 0) {\r\n            let failed = false;\r\n\r\n            for (let id of this._myIDsToCommit) {\r\n                if (this._mySaveCache.has(id)) {\r\n                    let result = this._commitSave(id, true);\r\n                    failed = failed || result;\r\n                }\r\n            }\r\n\r\n            this._myIDsToCommit = [];\r\n\r\n            let commitSavesDelayed = true;\r\n            this._myCommitSavesEmitter.notify(commitSavesDelayed, failed);\r\n        }\r\n    }\r\n\r\n    has(id, cacheEnabledOverride = null) {\r\n        return (this._mySaveCache.has(id) && this._isCacheEnabled(cacheEnabledOverride)) || SaveUtils.has(id);\r\n    }\r\n\r\n    remove(id) {\r\n        this._mySaveCache.delete(id);\r\n        SaveUtils.remove(id);\r\n\r\n        this._myDeleteEmitter.notify(id);\r\n\r\n        if (this._myDeleteIDEmitters.size > 0) {\r\n            let emitter = this._myDeleteIDEmitters.get(id);\r\n            if (emitter != null) {\r\n                emitter.notify(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._mySaveCache.clear();\r\n        SaveUtils.clear();\r\n\r\n        this._myClearEmitter.notify();\r\n    }\r\n\r\n    load(id, defaultValue = null, cacheEnabledOverride = null) {\r\n        return this._load(id, defaultValue, \"load\", cacheEnabledOverride);\r\n    }\r\n\r\n    loadString(id, defaultValue = null, cacheEnabledOverride = null) {\r\n        return this._load(id, defaultValue, \"loadString\", cacheEnabledOverride);\r\n    }\r\n\r\n    loadNumber(id, defaultValue = null, cacheEnabledOverride = null) {\r\n        return this._load(id, defaultValue, \"loadNumber\", cacheEnabledOverride);\r\n    }\r\n\r\n    loadBool(id, defaultValue = null, cacheEnabledOverride = null) {\r\n        return this._load(id, defaultValue, \"loadBool\", cacheEnabledOverride);\r\n    }\r\n\r\n    getCommitSavesDelay() {\r\n        return this._myCommitSavesDelayTimer.getDuration();\r\n    }\r\n\r\n    isDelaySavesCommit() {\r\n        return this._myDelaySavesCommit;\r\n    }\r\n\r\n    isCacheDefaultValueOnFail() {\r\n        return this._myCacheDefaultValueOnFail;\r\n    }\r\n\r\n    isCacheEnabled() {\r\n        return this._myCacheEnabled;\r\n    }\r\n\r\n    _commitSave(id, commitSaveDelayed) {\r\n        let value = this._mySaveCache.get(id);\r\n        let failed = false;\r\n\r\n        try {\r\n            SaveUtils.save(id, value);\r\n        } catch (error) {\r\n            failed = true;\r\n        }\r\n\r\n        this._myCommitSaveEmitter.notify(id, value, commitSaveDelayed, failed);\r\n\r\n        if (this._myCommitSaveIDEmitters.size > 0) {\r\n            let emitter = this._myCommitSaveIDEmitters.get(id);\r\n            if (emitter != null) {\r\n                emitter.notify(id, value, commitSaveDelayed, failed);\r\n            }\r\n        }\r\n\r\n        return failed;\r\n    }\r\n\r\n    _load(id, defaultValue, functionName, cacheEnabledOverride = null) {\r\n        let value = null;\r\n        let failed = false;\r\n        let loadFromCache = false;\r\n\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(cacheEnabledOverride)) {\r\n            value = this._mySaveCache.get(id);\r\n\r\n            if (value == null && defaultValue != null) {\r\n                value = defaultValue;\r\n                if (this._myCacheDefaultValueOnFail) {\r\n                    this._mySaveCache.set(id, value);\r\n                }\r\n            }\r\n\r\n            loadFromCache = true;\r\n        } else {\r\n            let saveResult = null;\r\n            try {\r\n                saveResult = SaveUtils[functionName](id, null);\r\n            } catch (error) {\r\n                // Error is managed as if it worked but there was no value\r\n                saveResult = null;\r\n                failed = true;\r\n            }\r\n\r\n            if (saveResult == null) {\r\n                value = defaultValue;\r\n            } else {\r\n                value = saveResult;\r\n            }\r\n\r\n            if (saveResult != null || this._myCacheDefaultValueOnFail) {\r\n                this._mySaveCache.set(id, value);\r\n            } else {\r\n                this._mySaveCache.set(id, null);\r\n            }\r\n        }\r\n\r\n        this._myLoadEmitter.notify(id, value, loadFromCache, failed);\r\n\r\n        if (this._myLoadIDEmitters.size > 0) {\r\n            let emitter = this._myLoadIDEmitters.get(id);\r\n            if (emitter != null) {\r\n                emitter.notify(id, value, loadFromCache, failed);\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        this._myVisibilityChangeEventListener = function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this);\r\n\r\n        session.addEventListener(\"visibilitychange\", this._myVisibilityChangeEventListener);\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._myVisibilityChangeEventListener = null;\r\n\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        this.commitSaves();\r\n    }\r\n\r\n    registerClearEventListener(listenerID, listener) {\r\n        this._myClearEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterClearEventListener(listenerID) {\r\n        this._myClearEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerDeleteEventListener(listenerID, listener) {\r\n        this._myDeleteEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterDeleteEventListener(listenerID) {\r\n        this._myDeleteEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerDeleteIDEventListener(valueID, listenerID, listener) {\r\n        let valueIDEmitter = this._myDeleteIDEmitters.get(valueID);\r\n        if (valueIDEmitter == null) {\r\n            this._myDeleteIDEmitters.set(valueID, new Map());\r\n            valueIDEmitter = this._myDeleteIDEmitters.get(valueID);\r\n        }\r\n\r\n        valueIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterDeleteIDEventListener(valueID, listenerID) {\r\n        let valueIDEmitter = this._myDeleteIDEmitters.get(valueID);\r\n        if (valueIDEmitter != null) {\r\n            valueIDEmitter.remove(listenerID);\r\n\r\n            if (valueIDEmitter.size <= 0) {\r\n                this._myDeleteIDEmitters.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveEventListener(listenerID, listener) {\r\n        this._mySaveEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterSaveEventListener(listenerID) {\r\n        this._mySaveEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerSaveIDEventListener(valueID, listenerID, listener) {\r\n        let valueIDEmitter = this._mySaveIDEmitters.get(valueID);\r\n        if (valueIDEmitter == null) {\r\n            this._mySaveIDEmitters.set(valueID, new Map());\r\n            valueIDEmitter = this._mySaveIDEmitters.get(valueID);\r\n        }\r\n\r\n        valueIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterSaveIDEventListener(valueID, listenerID) {\r\n        let valueIDEmitter = this._mySaveIDEmitters.get(valueID);\r\n        if (valueIDEmitter != null) {\r\n            valueIDEmitter.remove(listenerID);\r\n\r\n            if (valueIDEmitter.size <= 0) {\r\n                this._mySaveIDEmitters.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveValueChangedEventListener(listenerID, listener) {\r\n        this._mySaveValueChangedEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterSaveValueChangedEventListener(listenerID) {\r\n        this._mySaveValueChangedEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerSaveValueChangedIDEventListener(valueID, listenerID, listener) {\r\n        let valueIDEmitter = this._mySaveValueChangedIDEmitters.get(valueID);\r\n        if (valueIDEmitter == null) {\r\n            this._mySaveValueChangedIDEmitters.set(valueID, new Map());\r\n            valueIDEmitter = this._mySaveValueChangedIDEmitters.get(valueID);\r\n        }\r\n\r\n        valueIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterSaveValueChangedIDEventListener(valueID, listenerID) {\r\n        let valueIDEmitter = this._mySaveValueChangedIDEmitters.get(valueID);\r\n        if (valueIDEmitter != null) {\r\n            valueIDEmitter.remove(listenerID);\r\n\r\n            if (valueIDEmitter.size <= 0) {\r\n                this._mySaveValueChangedIDEmitters.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommitSavesEventListener(listenerID, listener) {\r\n        this._myCommitSavesEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterCommitSavesEventListener(listenerID) {\r\n        this._myCommitSavesEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerCommitSaveEventListener(listenerID, listener) {\r\n        this._myCommitSaveEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterCommitSaveEventListener(listenerID) {\r\n        this._myCommitSaveEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerCommitSaveIDEventListener(valueID, listenerID, listener) {\r\n        let valueIDEmitter = this._myCommitSaveIDEmitters.get(valueID);\r\n        if (valueIDEmitter == null) {\r\n            this._myCommitSaveIDEmitters.set(valueID, new Map());\r\n            valueIDEmitter = this._myCommitSaveIDEmitters.get(valueID);\r\n        }\r\n\r\n        valueIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterCommitSaveIDEventListener(valueID, listenerID) {\r\n        let valueIDEmitter = this._myCommitSaveIDEmitters.get(valueID);\r\n        if (valueIDEmitter != null) {\r\n            valueIDEmitter.remove(listenerID);\r\n\r\n            if (valueIDEmitter.size <= 0) {\r\n                this._myCommitSaveIDEmitters.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerLoadEventListener(listenerID, listener) {\r\n        this._myLoadEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterLoadEventListener(listenerID) {\r\n        this._myLoadEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerLoadIDEventListener(valueID, listenerID, listener) {\r\n        let valueIDEmitter = this._myLoadIDEmitters.get(valueID);\r\n        if (valueIDEmitter == null) {\r\n            this._myLoadIDEmitters.set(valueID, new Map());\r\n            valueIDEmitter = this._myLoadIDEmitters.get(valueID);\r\n        }\r\n\r\n        valueIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterLoadIDEventListener(valueID, listenerID) {\r\n        let valueIDEmitter = this._myLoadIDEmitters.get(valueID);\r\n        if (valueIDEmitter != null) {\r\n            valueIDEmitter.remove(listenerID);\r\n\r\n            if (valueIDEmitter.size <= 0) {\r\n                this._myLoadIDEmitters.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _isCacheEnabled(cacheEnabledOverride = null) {\r\n        return (this._myCacheEnabled && cacheEnabledOverride == null) || (cacheEnabledOverride != null && cacheEnabledOverride);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.getSession(this._myEngine)?.removeEventListener(\"visibilitychange\", this._myVisibilityChangeEventListener);\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "export function save(id, value) {\r\n    if (value != null) {\r\n        localStorage.setItem(id, value);\r\n    }\r\n}\r\n\r\nexport function has(id) {\r\n    return SaveUtils.loadString(id, null) != null;\r\n}\r\n\r\nexport function remove(id) {\r\n    return localStorage.removeItem(id);\r\n}\r\n\r\nexport function clear() {\r\n    return localStorage.clear();\r\n}\r\n\r\nexport function load(id, defaultValue = null) {\r\n    return SaveUtils.loadString(id, defaultValue);\r\n}\r\n\r\nexport function loadString(id, defaultValue = null) {\r\n    let item = localStorage.getItem(id);\r\n\r\n    if (item == null) {\r\n        item = defaultValue;\r\n    }\r\n\r\n    return item;\r\n}\r\n\r\nexport function loadNumber(id, defaultValue = null) {\r\n    let item = SaveUtils.loadString(id);\r\n\r\n    if (item != null) {\r\n        return Number(item);\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function loadBool(id, defaultValue = null) {\r\n    let item = SaveUtils.loadString(id);\r\n\r\n    if (item == \"true\") {\r\n        return true;\r\n    } else if (item == \"false\") {\r\n        return false;\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport let SaveUtils = {\r\n    save,\r\n    has,\r\n    remove,\r\n    clear,\r\n    load,\r\n    loadString,\r\n    loadNumber,\r\n    loadBool\r\n};", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\n\r\nexport class ClearConsoleOnXRSessionStartComponent extends Component {\r\n    static TypeName = \"pp-clear-console-on-xr-session-start\";\r\n    static Properties = {\r\n        _myFirstTimeOnly: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myFirstTime = true;\r\n        XRUtils.registerSessionStartEventListener(this, this._onXRSessionStart.bind(this), true, false, this.engine);\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        if (!this._myFirstTimeOnly || this._myFirstTime) {\r\n            this._myFirstTime = false;\r\n            console.clear();\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        XRUtils.unregisterSessionStartEventListener(this, this.engine);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../utils/xr_utils\";\r\n\r\nexport class SetActiveComponent extends Component {\r\n    static TypeName = \"pp-set-active\";\r\n    static Properties = {\r\n        _myActive: Property.bool(true),\r\n        _mySetActiveOn: Property.enum([\"Self\", \"Children\", \"Descendants\", \"Hierarchy\"], \"Hierarchy\"),\r\n        _mySetActiveWhen: Property.enum([\"Init\", \"Start\", \"First Update\", \"Enter XR\", \"Exit XR\", \"First Enter XR\", \"First Exit XR\"], \"Init\")\r\n    };\r\n\r\n    init() {\r\n        if (this.active && this._mySetActiveWhen == 0) {\r\n            this._setActive();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._mySetActiveWhen == 1) {\r\n            this._setActive();\r\n        }\r\n\r\n        this._myFirstUpdate = true;\r\n        this._myFirstXRStart = true;\r\n        this._myFirstXREnd = true;\r\n\r\n        if (this._mySetActiveWhen == 3 || this._mySetActiveWhen == 5) {\r\n            XRUtils.registerSessionStartEventListener(this, this._onXRSessionStart.bind(this), true, true, this.engine);\r\n        }\r\n\r\n        if (this._mySetActiveWhen == 4 || this._mySetActiveWhen == 6) {\r\n            XRUtils.registerSessionEndEventListener(this, this._onXRSessionEnd.bind(this), this.engine);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._mySetActiveWhen == 2 && this._myFirstUpdate) {\r\n            this._setActive();\r\n        }\r\n\r\n        this._myFirstUpdate = false;\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        if (this._mySetActiveWhen == 3 || (this._mySetActiveWhen == 5 && this._myFirstXRStart)) {\r\n            this._setActive();\r\n        }\r\n\r\n        this._myFirstXRStart = false;\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._mySetActiveWhen == 4 || (this._mySetActiveWhen == 6 && this._myFirstXREnd)) {\r\n            this._setActive();\r\n        }\r\n\r\n        this._myFirstXREnd = false;\r\n    }\r\n\r\n    _setActive() {\r\n        if (this._mySetActiveOn == 0) {\r\n            this.object.pp_setActiveSelf(this._myActive);\r\n        } else if (this._mySetActiveOn == 1) {\r\n            this.object.pp_setActiveChildren(this._myActive);\r\n        } else if (this._mySetActiveOn == 2) {\r\n            this.object.pp_setActiveDescendants(this._myActive);\r\n        } else {\r\n            this.object.pp_setActive(this._myActive);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this.engine);\r\n    }\r\n}", "import { Component, PhysXComponent, Property } from \"@wonderlandengine/api\";\r\n\r\nexport class AdjustHierarchyPhysXScaleComponent extends Component {\r\n    static TypeName = \"pp-adjust-hierarchy-physx-scale\";\r\n    static Properties = {\r\n        _myWhen: Property.enum([\"Init\", \"Start\", \"First Update\"], \"Start\")\r\n    };\r\n\r\n    init() {\r\n        if (this.active && this._myWhen == 0) {\r\n            this._adjustScale();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this._myWhen == 1) {\r\n            this._adjustScale();\r\n        }\r\n        this._myFirst = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._adjustScale();\r\n        }\r\n    }\r\n\r\n    _adjustScale() {\r\n        let scale = this.object.pp_getScale();\r\n        let physXComponents = this.object.pp_getComponents(PhysXComponent);\r\n        for (let physX of physXComponents) {\r\n            physX.extents[0] = physX.extents[0] * scale[0];\r\n            physX.extents[1] = physX.extents[1] * scale[1];\r\n            physX.extents[2] = physX.extents[2] * scale[2];\r\n\r\n            if (physX.active) {\r\n                physX.active = false;\r\n                physX.active = true;\r\n            }\r\n        }\r\n    }\r\n}", "import { Alignment, Component, Justification, Property } from \"@wonderlandengine/api\";\r\nimport { vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { Timer } from \"../cauldron/timer\";\r\n\r\nexport class ShowFPSComponent extends Component {\r\n    static TypeName = \"pp-show-fps\";\r\n    static Properties = {\r\n        _myRefreshSeconds: Property.float(0.25),\r\n        _myScreenPositionX: Property.float(1),\r\n        _myScreenPositionY: Property.float(-1),\r\n        _myScreenPositionZ: Property.float(1),\r\n        _myScale: Property.float(1.5),\r\n        _myTextMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._myColor = vec4_create(1, 1, 1, 1);\r\n        if (this._myTextMaterial != null) {\r\n            this._myColor.vec4_copy(this._myTextMaterial.color);\r\n        }\r\n\r\n        this._myScreenPosition = vec3_create(this._myScreenPositionX, this._myScreenPositionY, this._myScreenPositionZ);\r\n\r\n        this._myCurrentFPS = 0;\r\n\r\n        this._myTimer = new Timer(this._myRefreshSeconds);\r\n        this._myTotalDT = 0;\r\n        this._myFrames = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isDebugEnabled(this.engine)) {\r\n            this._myTotalDT += dt;\r\n            this._myFrames++;\r\n\r\n            this._myTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.start();\r\n\r\n                this._myCurrentFPS = Math.round(this._myFrames / this._myTotalDT);\r\n\r\n                this._myTotalDT = 0;\r\n                this._myFrames = 0;\r\n            }\r\n\r\n            Globals.getDebugVisualManager(this.engine).drawUIText(0, this._myCurrentFPS.toFixed(0), this._myScreenPosition, this._myScale, this._myColor, Alignment.Right, Justification.Bottom);\r\n        }\r\n    }\r\n}", "/*\r\n    You can also use plain functions for state/transition if u want to do something simple and quick\r\n\r\n    Signatures:\r\n        function stateUpdate(dt, fsm)\r\n        function init(fsm, initStateData)\r\n        function transition(fsm, transitionData)\r\n*/\r\n\r\nimport { Emitter } from \"@wonderlandengine/api\";\r\n\r\nexport class StateData {\r\n\r\n    constructor(stateID, stateObject) {\r\n        this.myID = stateID;\r\n        this.myObject = stateObject;\r\n    }\r\n}\r\n\r\nexport class TransitionData {\r\n\r\n    constructor(transitionID, fromStateData, toStateData, transitionObject, skipStateFunction) {\r\n        this.myID = transitionID;\r\n        this.myFromState = fromStateData;\r\n        this.myToState = toStateData;\r\n        this.myObject = transitionObject;\r\n        this.mySkipStateFunction = skipStateFunction;\r\n    }\r\n}\r\n\r\nexport let PerformMode = {\r\n    IMMEDIATE: 0,\r\n    DELAYED: 1\r\n};\r\n\r\nexport let PerformDelayedMode = {\r\n    QUEUE: 0,\r\n    KEEP_FIRST: 1,\r\n    KEEP_LAST: 2\r\n};\r\n\r\nexport let SkipStateFunction = {\r\n    NONE: 0,\r\n    END: 1,\r\n    START: 2,\r\n    BOTH: 3\r\n};\r\n\r\nexport class FSM {\r\n\r\n    constructor(performMode = PerformMode.IMMEDIATE, performDelayedMode = PerformDelayedMode.QUEUE) {\r\n        this._myCurrentStateData = null;\r\n\r\n        this._myStates = new Map();\r\n        this._myTransitions = new Map();\r\n\r\n        this._myLogEnabled = false;\r\n        this._myLogShowDelayedInfo = false;\r\n        this._myLogFSMName = \"FSM\";\r\n\r\n        this._myPerformMode = performMode;\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n        this._myPendingPerforms = [];\r\n        this._myCurrentlyPerformedTransition = null;\r\n\r\n        this._myInitEmitter = new Emitter();             // Signature: listener(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myInitIDEmitters = new Map();              // Signature: listener(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myTransitionEmitter = new Emitter();       // Signature: listener(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n        this._myTransitionIDEmitters = [];               // Signature: listener(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n    }\r\n\r\n    addState(stateID, state = null) {\r\n        let stateObject = null;\r\n        if (!state || typeof state == \"function\") {\r\n            stateObject = {};\r\n            if (typeof state == \"function\") {\r\n                stateObject.update = function update() { return state(...arguments); };\r\n            } else {\r\n                stateObject.update = null;\r\n            }\r\n            stateObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.update = this.update;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            stateObject = state;\r\n        }\r\n\r\n        let stateData = new StateData(stateID, stateObject);\r\n        this._myStates.set(stateID, stateData);\r\n        this._myTransitions.set(stateID, new Map());\r\n    }\r\n\r\n    addTransition(fromStateID, toStateID, transitionID, transition = null, skipStateFunction = SkipStateFunction.NONE) {\r\n        let transitionObject = null;\r\n        if (!transition || typeof transition == \"function\") {\r\n            transitionObject = {};\r\n            if (typeof transition == \"function\") {\r\n                transitionObject.perform = function perform() { return transition(...arguments); };\r\n            } else {\r\n                transitionObject.perform = null;\r\n            }\r\n            transitionObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.perform = this.perform;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            transitionObject = transition;\r\n        }\r\n\r\n        if (this.hasState(fromStateID) && this.hasState(toStateID)) {\r\n            let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n            let transitionData = new TransitionData(transitionID, this.getState(fromStateID), this.getState(toStateID), transitionObject, skipStateFunction);\r\n            transitionsFromState.set(transitionID, transitionData);\r\n        } else {\r\n            if (!this.hasState(fromStateID) && !this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID, \"- to state not found:\", toStateID);\r\n            } else if (!this.hasState(fromStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID);\r\n            } else if (!this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- to state not found:\", toStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    init(initStateID, initTransition = null, ...args) {\r\n        let initTransitionObject = initTransition;\r\n        if (initTransition && typeof initTransition == \"function\") {\r\n            initTransitionObject = {};\r\n            initTransitionObject.performInit = initTransition;\r\n        }\r\n\r\n        if (this.hasState(initStateID)) {\r\n            let initStateData = this._myStates.get(initStateID);\r\n\r\n            if (this._myLogEnabled) {\r\n                console.log(this._myLogFSMName, \"- Init:\", initStateID);\r\n            }\r\n\r\n            if (initTransitionObject && initTransitionObject.performInit) {\r\n                initTransitionObject.performInit(this, initStateData, ...args);\r\n            } else if (initStateData.myObject && initStateData.myObject.init) {\r\n                initStateData.myObject.init(this, initStateData, ...args);\r\n            }\r\n\r\n            this._myCurrentStateData = initStateData;\r\n\r\n            this._myInitEmitter.notify(this, initStateData, initTransitionObject, ...args);\r\n\r\n            if (this._myInitIDEmitters.size > 0) {\r\n                let emitter = this._myInitIDEmitters.get(initStateID);\r\n                if (emitter != null) {\r\n                    emitter.notify(this, initStateData, initTransitionObject, ...args);\r\n                }\r\n            }\r\n        } else if (this._myLogEnabled) {\r\n            console.warn(this._myLogFSMName, \"- Init state not found:\", initStateID);\r\n        }\r\n    }\r\n\r\n    update(dt, ...args) {\r\n        if (this._myPendingPerforms.length > 0) {\r\n            for (let i = 0; i < this._myPendingPerforms.length; i++) {\r\n                this._perform(this._myPendingPerforms[i].myID, PerformMode.DELAYED, ...this._myPendingPerforms[i].myArgs);\r\n            }\r\n            this._myPendingPerforms = [];\r\n        }\r\n\r\n        if (this._myCurrentStateData && this._myCurrentStateData.myObject && this._myCurrentStateData.myObject.update) {\r\n            this._myCurrentStateData.myObject.update(dt, this, ...args);\r\n        }\r\n    }\r\n\r\n    perform(transitionID, ...args) {\r\n        if (this._myPerformMode == PerformMode.DELAYED) {\r\n            this.performDelayed(transitionID, ...args);\r\n        } else {\r\n            this.performImmediate(transitionID, ...args);\r\n        }\r\n    }\r\n\r\n    performDelayed(transitionID, ...args) {\r\n        let performDelayed = false;\r\n\r\n        switch (this._myPerformDelayedMode) {\r\n            case PerformDelayedMode.QUEUE:\r\n                this._myPendingPerforms.push(new _PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n            case PerformDelayedMode.KEEP_FIRST:\r\n                if (!this.hasPendingPerforms()) {\r\n                    this._myPendingPerforms.push(new _PendingPerform(transitionID, ...args));\r\n                    performDelayed = true;\r\n                }\r\n                break;\r\n            case PerformDelayedMode.KEEP_LAST:\r\n                this.resetPendingPerforms();\r\n                this._myPendingPerforms.push(new _PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n        }\r\n\r\n        return performDelayed;\r\n    }\r\n\r\n    performImmediate(transitionID, ...args) {\r\n        return this._perform(transitionID, PerformMode.IMMEDIATE, ...args);\r\n    }\r\n\r\n    canPerform(transitionID) {\r\n        return this.hasTransitionFromState(this._myCurrentStateData.myID, transitionID);\r\n    }\r\n\r\n    canGoTo(stateID, transitionID = null) {\r\n        return this.hasTransitionFromStateToState(this._myCurrentStateData.myID, stateID, transitionID);\r\n    }\r\n\r\n    isInState(stateID) {\r\n        return this._myCurrentStateData != null && this._myCurrentStateData.myID == stateID;\r\n    }\r\n\r\n    isPerformingTransition() {\r\n        return this._myCurrentlyPerformedTransition != null;\r\n    }\r\n\r\n    getCurrentlyPerformedTransition() {\r\n        return this._myCurrentlyPerformedTransition;\r\n    }\r\n\r\n    hasBeenInit() {\r\n        return this._myCurrentStateData != null;\r\n    }\r\n\r\n    reset() {\r\n        this.resetState();\r\n        this.resetPendingPerforms();\r\n    }\r\n\r\n    resetState() {\r\n        this._myCurrentStateData = null;\r\n    }\r\n\r\n    resetPendingPerforms() {\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this._myCurrentStateData;\r\n    }\r\n\r\n    getCurrentTransitions() {\r\n        return this.getTransitionsFromState(this._myCurrentStateData.myID);\r\n    }\r\n\r\n    getCurrentTransitionsToState(stateID) {\r\n        return this.getTransitionsFromStateToState(this._myCurrentStateData.myID, stateID);\r\n    }\r\n\r\n    getState(stateID) {\r\n        return this._myStates.get(stateID);\r\n    }\r\n\r\n    getStates() {\r\n        return this._myStates.values();\r\n    }\r\n\r\n    getTransitions() {\r\n        let transitions = [];\r\n\r\n        for (let transitionsFromState of this._myTransitions.values()) {\r\n            for (let transitionData of transitionsFromState.values()) {\r\n                transitions.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitions;\r\n    }\r\n\r\n    getTransitionsFromState(fromStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n        return Array.from(transitionsFromState.values());\r\n    }\r\n\r\n    getTransitionsFromStateToState(fromStateID, toStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n        let transitionsToState = [];\r\n        for (let transitionData of transitionsFromState.values()) {\r\n            if (transitionData.myToState.myID == toStateID) {\r\n                transitionsToState.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitionsToState;\r\n    }\r\n\r\n    removeState(stateID) {\r\n        if (this.hasState(stateID)) {\r\n            this._myStates.delete(stateID);\r\n            this._myTransitions.delete(stateID);\r\n\r\n            for (let transitionsFromState of this._myTransitions.values()) {\r\n                let toDelete = [];\r\n                for (let [transitionID, transitionData] of transitionsFromState.entries()) {\r\n                    if (transitionData.myToState.myID == stateID) {\r\n                        toDelete.push(transitionID);\r\n                    }\r\n                }\r\n\r\n                for (let transitionID of toDelete) {\r\n                    transitionsFromState.delete(transitionID);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeTransitionFromState(fromStateID, transitionID) {\r\n        let fromTransitions = this._getTransitionsFromState(fromStateID);\r\n        if (fromTransitions) {\r\n            return fromTransitions.delete(transitionID);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hasState(stateID) {\r\n        return this._myStates.has(stateID);\r\n    }\r\n\r\n    hasTransitionFromState(fromStateID, transitionID) {\r\n        let transitions = this.getTransitionsFromState(fromStateID);\r\n\r\n        let transitionIndex = transitions.findIndex(function (transition) {\r\n            return transition.myID == transitionID;\r\n        });\r\n\r\n        return transitionIndex >= 0;\r\n    }\r\n\r\n    hasTransitionFromStateToState(fromStateID, toStateID, transitionID = null) {\r\n        let transitions = this.getTransitionsFromStateToState(fromStateID, toStateID);\r\n\r\n        let hasTransition = false;\r\n        if (transitionID) {\r\n            let transitionIndex = transitions.findIndex(function (transition) {\r\n                return transition.myID == transitionID;\r\n            });\r\n\r\n            hasTransition = transitionIndex >= 0;\r\n        } else {\r\n            hasTransition = transitions.length > 0;\r\n        }\r\n\r\n        return hasTransition;\r\n    }\r\n\r\n    setPerformMode(performMode) {\r\n        this._myPerformMode = performMode;\r\n    }\r\n\r\n    getPerformMode() {\r\n        return this._myPerformMode;\r\n    }\r\n\r\n    setPerformDelayedMode(performDelayedMode) {\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n    }\r\n\r\n    getPerformDelayedMode() {\r\n        return this._myPerformDelayedMode;\r\n    }\r\n\r\n    hasPendingPerforms() {\r\n        return this._myPendingPerforms.length > 0;\r\n    }\r\n\r\n    getPendingPerforms() {\r\n        return this._myPendingPerforms.pp_clone();\r\n    }\r\n\r\n    clone(deepClone = false) {\r\n        if (!this.isCloneable(deepClone)) {\r\n            return null;\r\n        }\r\n\r\n        let cloneFSM = new FSM();\r\n\r\n        cloneFSM._myLogEnabled = this._myLogEnabled;\r\n        cloneFSM._myLogShowDelayedInfo = this._myLogShowDelayedInfo;\r\n        cloneFSM._myLogFSMName = this._myLogFSMName;\r\n\r\n        cloneFSM._myPerformMode = this._myPerformMode;\r\n        cloneFSM._myPerformDelayedMode = this._myPerformDelayedMode;\r\n        cloneFSM._myPendingPerforms = this._myPendingPerforms.pp_clone();\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            let stateData = null;\r\n\r\n            if (deepClone) {\r\n                stateData = new StateData(entry[1].myID, entry[1].myObject.clone());\r\n            } else {\r\n                stateData = new StateData(entry[1].myID, entry[1].myObject);\r\n            }\r\n\r\n            cloneFSM._myStates.set(stateData.myID, stateData);\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            let transitionsFromState = new Map();\r\n            cloneFSM._myTransitions.set(entry[0], transitionsFromState);\r\n\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                let transitionData = null;\r\n\r\n                let fromState = cloneFSM.getState(transitonEntry[1].myFromState.myID);\r\n                let toState = cloneFSM.getState(transitonEntry[1].myToState.myID);\r\n\r\n                if (deepClone) {\r\n                    transitionData = new TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject.clone(), transitonEntry[1].mySkipStateFunction);\r\n                } else {\r\n                    transitionData = new TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject, transitonEntry[1].mySkipStateFunction);\r\n                }\r\n\r\n                transitionsFromState.set(transitionData.myID, transitionData);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            cloneFSM._myCurrentStateData = cloneFSM.getState(this._myCurrentStateData.myID);\r\n        }\r\n\r\n        return cloneFSM;\r\n    }\r\n\r\n    isCloneable(deepClone = false) {\r\n        if (!deepClone) {\r\n            return true;\r\n        }\r\n\r\n        let deepCloneable = true;\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            deepCloneable = deepCloneable && entry[1].myObject.clone != null;\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                deepCloneable = deepCloneable && transitonEntry[1].myObject.clone != null;\r\n            }\r\n        }\r\n\r\n        return deepCloneable;\r\n    }\r\n\r\n    setLogEnabled(active, fsmName = null, showDelayedInfo = false) {\r\n        this._myLogEnabled = active;\r\n        this._myLogShowDelayedInfo = showDelayedInfo;\r\n        if (fsmName) {\r\n            this._myLogFSMName = \"FSM: \".concat(fsmName);\r\n        }\r\n    }\r\n\r\n    registerInitEventListener(listenerID, listener) {\r\n        this._myInitEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterInitEventListener(listenerID) {\r\n        this._myInitEmitter.remove(listenerID);\r\n    }\r\n\r\n    registerInitIDEventListener(initStateID, listenerID, listener) {\r\n        let initStateIDEmitter = this._myInitIDEmitters.get(initStateID);\r\n        if (initStateIDEmitter == null) {\r\n            this._myInitIDEmitters.set(initStateID, new Emitter());\r\n            initStateIDEmitter = this._myInitIDEmitters.get(initStateID);\r\n        }\r\n\r\n        initStateIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterInitIDEventListener(initStateID, listenerID) {\r\n        let initStateIDEmitter = this._myInitIDEmitters.get(initStateID);\r\n        if (initStateIDEmitter != null) {\r\n            initStateIDEmitter.remove(listenerID);\r\n\r\n            if (initStateIDEmitter.isEmpty) {\r\n                this._myInitIDEmitters.delete(initStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerTransitionEventListener(listenerID, listener) {\r\n        this._myTransitionEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterTransitionEventListener(listenerID) {\r\n        this._myTransitionEmitter.remove(listenerID);\r\n    }\r\n\r\n    // The fsm IDs can be null, that means that the listener is called whenever only the valid IDs match\r\n    // This let you register to all the transitions with a specific ID and from of a specific state but to every state (toStateID == null)\r\n    registerTransitionIDEventListener(fromStateID, toStateID, transitionID, listenerID, listener) {\r\n        let internalTransitionIDEmitter = null;\r\n        for (let value of this._myTransitionIDEmitters) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDEmitter = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDEmitter == null) {\r\n            let transitionIDEmitter = [];\r\n            transitionIDEmitter[0] = fromStateID;\r\n            transitionIDEmitter[1] = toStateID;\r\n            transitionIDEmitter[2] = transitionID;\r\n            transitionIDEmitter[3] = new Emitter();\r\n\r\n            internalTransitionIDEmitter = transitionIDEmitter[3];\r\n\r\n            this._myTransitionIDEmitters.push(transitionIDEmitter);\r\n        }\r\n\r\n        internalTransitionIDEmitter.add(listener, { id: listenerID });\r\n    }\r\n\r\n    unregisterTransitionIDEventListener(fromStateID, toStateID, transitionID, listenerID) {\r\n        let internalTransitionIDEmitter = null;\r\n        for (let value of this._myTransitionIDEmitters) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDEmitter = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDEmitter != null) {\r\n            internalTransitionIDEmitter.remove(listenerID);\r\n\r\n            if (internalTransitionIDEmitter.isEmpty) {\r\n                this._myTransitionIDEmitters.pp_remove(element => element[0] == fromStateID && element[1] == toStateID && element[2] == transitionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _perform(transitionID, performMode, ...args) {\r\n        if (this.isPerformingTransition()) {\r\n            let currentlyPerformedTransition = this.getCurrentlyPerformedTransition();\r\n            let consoleArguments = [this._myLogFSMName, \"- Trying to perform:\", transitionID];\r\n            if (this._myLogShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            consoleArguments.push(\"- But another transition is currently being performed -\", currentlyPerformedTransition.myID);\r\n            console.warn(...consoleArguments);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            if (this.canPerform(transitionID)) {\r\n                let transitions = this._myTransitions.get(this._myCurrentStateData.myID);\r\n                let transitionToPerform = transitions.get(transitionID);\r\n\r\n                this._myCurrentlyPerformedTransition = transitionToPerform;\r\n\r\n                let fromState = this._myCurrentStateData;\r\n                let toState = this._myStates.get(transitionToPerform.myToState.myID);\r\n\r\n                if (this._myLogEnabled) {\r\n                    let consoleArguments = [this._myLogFSMName, \"- From:\", fromState.myID, \"- To:\", toState.myID, \"- With:\", transitionID];\r\n                    if (this._myLogShowDelayedInfo) {\r\n                        consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                    }\r\n                    console.log(...consoleArguments);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != SkipStateFunction.END && transitionToPerform.mySkipStateFunction != SkipStateFunction.BOTH &&\r\n                    fromState.myObject && fromState.myObject.end) {\r\n                    fromState.myObject.end(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.myObject && transitionToPerform.myObject.perform) {\r\n                    transitionToPerform.myObject.perform(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != SkipStateFunction.START && transitionToPerform.mySkipStateFunction != SkipStateFunction.BOTH &&\r\n                    toState.myObject && toState.myObject.start) {\r\n                    toState.myObject.start(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                this._myCurrentStateData = transitionToPerform.myToState;\r\n\r\n                this._myTransitionEmitter.notify(this, fromState, toState, transitionToPerform, performMode, ...args);\r\n\r\n                if (this._myTransitionIDEmitters.length > 0) {\r\n                    let internalTransitionIDEmitters = [];\r\n                    for (let value of this._myTransitionIDEmitters) {\r\n                        if ((value[0] == null || value[0] == fromState.myID) &&\r\n                            (value[1] == null || value[1] == toState.myID) &&\r\n                            (value[2] == null || value[2] == transitionToPerform.myID)) {\r\n                            internalTransitionIDEmitters.push(value[3]);\r\n                        }\r\n                    }\r\n\r\n                    for (let emitter of internalTransitionIDEmitters) {\r\n                        emitter.notify(this, fromState, toState, transitionToPerform, performMode, ...args);\r\n                    }\r\n                }\r\n\r\n                this._myCurrentlyPerformedTransition = null;\r\n\r\n                return true;\r\n            } else if (this._myLogEnabled) {\r\n                let consoleArguments = [this._myLogFSMName, \"- No Transition:\", transitionID, \"- From:\", this._myCurrentStateData.myID];\r\n                if (this._myLogShowDelayedInfo) {\r\n                    consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                }\r\n                console.warn(...consoleArguments);\r\n            }\r\n        } else if (this._myLogEnabled) {\r\n            let consoleArguments = [this._myLogFSMName, \"- FSM not initialized yet\"];\r\n            if (this._myLogShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            console.warn(...consoleArguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _getTransitionsFromState(fromStateID) {\r\n        return this._myTransitions.get(fromStateID);\r\n    }\r\n}\r\n\r\nclass _PendingPerform {\r\n\r\n    constructor(transitionID, ...args) {\r\n        this.myID = transitionID;\r\n        this.myArgs = args;\r\n    }\r\n}", "/*\r\n    There is no need to inherit from this state, especially since states can be only functions\r\n    It's more like an example of what is needed\r\n    \r\n    If you don't specify some functions the fsm will just skip them\r\n    Or consider them always valid\r\n\r\n    The param state is of type StateData and can be used to retrieve the stateID and other data\r\n    The param transition is of type TransitionData and can be used to retrieve the transitionID, the from and to states and other data\r\n*/\r\n\r\nexport class State {\r\n\r\n    // Called every frame if this is the current state\r\n    // You can retrieve this state data by calling fsm.getCurrentState()\r\n    update(dt, fsm, ...args) {\r\n    }\r\n\r\n    // Called when the fsm is started with this init state if no init transition object is specified or it does not have a performInit function\r\n    // Since the state is set as the current one after the init, you can't use fsm.getCurrentState() to get it, so it is forwarded as a param if needed\r\n    init(fsm, state, ...args) {\r\n    }\r\n\r\n    // Called when entering this state if no transition object is specified or it does not have a perform function\r\n    // You can get this state data by accesing to the to state data inside the transition\r\n    start(fsm, transition, ...args) {\r\n    }\r\n\r\n    // Called when exiting this state if no transition function is specified\r\n    // You can get this state data by accesing to the from state data inside the transition\r\n    end(fsm, transition, ...args) {\r\n    }\r\n}", "/*\r\n    There is no need to inherit from this transition, especially since states can be only transitions\r\n    It's more like an example of what is needed\r\n    \r\n    The param transition (forwarded at the end every function) is of type TransitionData and can be used to retrieve the transitionID and other data\r\n    The initState param is of type StateData and can be used to retrieve the stateID and other data\r\n*/\r\n\r\nexport class Transition {\r\n\r\n    // Called if this is used as an init transition for the fsm\r\n    performInit(fsm, initState, ...args) {\r\n\r\n    }\r\n\r\n    // Called when performing a transition\r\n    // You can find the from and to states inside the transition params\r\n    perform(fsm, transition, ...args) {\r\n    }\r\n}", "import { Timer } from \"../../cauldron/timer\";\r\nimport { State } from \"../state\";\r\n\r\nexport class TimerState extends State {\r\n\r\n    constructor(duration = 0, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        super();\r\n\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n\r\n        this._myTimer = new Timer(duration, false);\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myTimer.setDuration(duration);\r\n    }\r\n\r\n    setTransitionToPerformOnEnd(transitionToPerformOnEnd, ...transitionArgs) {\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myTimer.onEnd(callback, id);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myTimer.unregisterOnEnd(id);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            if (this._myTransitionToPerformOnEnd != null) {\r\n                fsm.perform(this._myTransitionToPerformOnEnd, ...this._myTransitionArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transition, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n\r\n    init(fsm, state, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n}", "// RGB is in [0,1], alpha is not changed\r\nexport function rgbToHSV(rgb) {\r\n    let hsv = rgb.pp_clone();\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    hsv[0] = h;\r\n    hsv[1] = s;\r\n    hsv[2] = v;\r\n\r\n    return hsv;\r\n}\r\n\r\n// Alpha is not changed\r\nexport function hsvToRGB(hsv) {\r\n    let rgb = hsv.pp_clone();\r\n\r\n    let h = hsv[0];\r\n    let s = hsv[1];\r\n    let v = hsv[2];\r\n\r\n    let r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n\r\n    rgb[0] = r;\r\n    rgb[1] = g;\r\n    rgb[2] = b;\r\n\r\n    return rgb;\r\n}\r\n\r\nexport function rgbCodeToHuman(rgb) {\r\n    return ColorUtils.color1To255(rgb);\r\n}\r\n\r\nexport function rgbHumanToCode(rgb) {\r\n    return ColorUtils.color255To1(rgb);\r\n}\r\n\r\nexport function hsvCodeToHuman(hsv) {\r\n    return ColorUtils.color1To255(hsv);\r\n}\r\n\r\nexport function hsvHumanToCode(hsv) {\r\n    return ColorUtils.color255To1(hsv);\r\n}\r\n\r\nexport function color255To1(color) {\r\n    let result = color.pp_clone();\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n        result[i] /= 255;\r\n        result[i] = Math.pp_clamp(result[i], 0, 1);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function color1To255(color) {\r\n    let result = color.pp_clone();\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n        result[i] = Math.round(result[i] * 255);\r\n        result[i] = Math.pp_clamp(result[i], 0, 255);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport let ColorUtils = {\r\n    rgbToHSV,\r\n    hsvToRGB,\r\n    rgbCodeToHuman,\r\n    rgbHumanToCode,\r\n    hsvCodeToHuman,\r\n    hsvHumanToCode,\r\n    color255To1,\r\n    color1To255\r\n};", "import { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\n\r\nexport let setAlpha = function () {\r\n    let color = vec4_create();\r\n    return function setAlpha(material, alpha) {\r\n        if (material.color != null) {\r\n            color.vec4_copy(material.color);\r\n            color[3] = alpha;\r\n            material.color = color;\r\n        }\r\n\r\n        if (material.diffuseColor != null) {\r\n            color.vec4_copy(material.diffuseColor);\r\n            color[3] = alpha;\r\n            material.diffuseColor = color;\r\n        }\r\n\r\n        if (material.ambientColor != null) {\r\n            color.vec4_copy(material.ambientColor);\r\n            color[3] = alpha;\r\n            material.ambientColor = color;\r\n        }\r\n    };\r\n}();\r\n\r\nexport function setObjectAlpha(object, alpha) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material != null) {\r\n            MaterialUtils.setAlpha(meshComponent.material, alpha);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectMaterial(object, material, cloneMaterial = false) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (cloneMaterial) {\r\n            meshComponent.material = material.clone();\r\n        } else {\r\n            meshComponent.material = material;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectClonedMaterials(object) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        meshComponent.material = meshComponent.material.clone();\r\n    }\r\n}\r\n\r\nexport function setObjectSpecularColor(object, color) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material.specularColor != null) {\r\n            meshComponent.material.specularColor = color;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setObjectFogColor(object, color) {\r\n    let meshComponents = object.pp_getComponents(MeshComponent);\r\n\r\n    for (let meshComponent of meshComponents) {\r\n        if (meshComponent.material.fogColor != null) {\r\n            meshComponent.material.fogColor = color;\r\n        }\r\n    }\r\n}\r\n\r\nexport let MaterialUtils = {\r\n    setAlpha,\r\n    setObjectAlpha,\r\n    setObjectMaterial,\r\n    setObjectClonedMaterials,\r\n    setObjectSpecularColor,\r\n    setObjectFogColor\r\n};", "import { TextComponent } from \"@wonderlandengine/api\";\r\n\r\nexport function setClonedMaterials(object) {\r\n    let textComponents = object.pp_getComponents(TextComponent);\r\n\r\n    for (let textComponent of textComponents) {\r\n        textComponent.material = textComponent.material.clone();\r\n    }\r\n}\r\n\r\nexport let TextUtils = {\r\n    setClonedMaterials\r\n};", "import { Globals } from \"../../pp/globals\";\r\nimport { XRUtils } from \"./xr_utils\";\r\n\r\nexport function isMobile(engine = Globals.getMainEngine()) {\r\n    return /Mobi/i.test(Globals.getNavigator(engine).userAgent);\r\n}\r\n\r\nexport function isDesktop(engine = Globals.getMainEngine()) {\r\n    return !BrowserUtils.isMobile(engine);\r\n}\r\n\r\nexport function openLink(url, newTab = true, exitXRSession = true, onSuccessCallback = null, onFailureCallback = null, engine = Globals.getMainEngine()) {\r\n    if (exitXRSession) {\r\n        XRUtils.exitSession(engine);\r\n    }\r\n\r\n    let document = Globals.getDocument(engine);\r\n\r\n    let element = document.createElement(\"a\");\r\n\r\n    element.style.display = \"none\";\r\n\r\n    document.body.appendChild(element);\r\n\r\n    element.addEventListener(\"click\", function () {\r\n        let targetPage = undefined;\r\n        if (newTab) {\r\n            targetPage = \"_blank\";\r\n        }\r\n\r\n        let result = window.open(url, targetPage);\r\n\r\n        if (result != null) {\r\n            if (onSuccessCallback != null) {\r\n                onSuccessCallback();\r\n            }\r\n        } else {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n        }\r\n    });\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n}\r\n\r\nexport function openLinkPersistent(url, newTab = true, exitXRSession = true, timeOutSeconds = null, onSuccessCallback = null, onFailureCallback = null, engine = Globals.getMainEngine()) {\r\n    let totalSeconds = 0;\r\n    let secondsTillNextAttempt = 0.5;\r\n    let onPersistentFailureCallback = function (...args) {\r\n        if (timeOutSeconds != null && totalSeconds >= timeOutSeconds) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback(...args);\r\n            }\r\n        } else {\r\n            totalSeconds += secondsTillNextAttempt;\r\n            setTimeout(function () {\r\n                BrowserUtils.openLink(url, newTab, exitXRSession, onSuccessCallback, onPersistentFailureCallback, engine);\r\n            }, secondsTillNextAttempt * 1000);\r\n        }\r\n    };\r\n\r\n    BrowserUtils.openLink(url, newTab, exitXRSession, onSuccessCallback, onPersistentFailureCallback, engine);\r\n}\r\n\r\nexport let BrowserUtils = {\r\n    isMobile,\r\n    isDesktop,\r\n    openLink,\r\n    openLinkPersistent\r\n};", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { VisualTransform, VisualTransformParams } from \"../../cauldron/visual/elements/visual_transform\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class DebugTransformComponent extends Component {\r\n    static TypeName = \"pp-debug-transform\";\r\n    static Properties = {\r\n        _myLength: Property.float(0.1),\r\n        _myThickness: Property.float(0.005)\r\n    };\r\n\r\n    start() {\r\n        this._myDebugVisualTransform = null;\r\n\r\n        this._myDebugTransformParams = new VisualTransformParams(this.engine);\r\n        this._myDebugTransformParams.myLength = this._myLength;\r\n        this._myDebugTransformParams.myThickness = this._myThickness;\r\n\r\n        this._myDebugVisualTransform = new VisualTransform(this._myDebugTransformParams);\r\n        this._myDebugVisualTransform.setVisible(Globals.isDebugEnabled(this.engine));\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDebugVisualTransform != null) {\r\n            if (Globals.isDebugEnabled(this.engine)) {\r\n                this.object.pp_getTransform(this._myDebugTransformParams.myTransform);\r\n                this._myDebugVisualTransform.paramsUpdated();\r\n                this._myDebugVisualTransform.setVisible(true);\r\n            } else {\r\n                this._myDebugVisualTransform.setVisible(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myDebugVisualTransform.destroy();\r\n    }\r\n}", "// #TODO Add getter/setter accessors overwrite\r\n// #TODO If both a class and the parent class are in the list, they should be overwritten in parent first order\r\n// #TODO How to overwrite class and objects from modules?\r\n// #TODO Some functions, like glMatrix.vec3.copy, are defined as getter, how to overwrite them?\r\n\r\nimport { JSUtils } from \"../../cauldron/js/utils/js_utils\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class DebugFunctionsOverwriterParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myObjectsByReference = [];         // You can specify to count the call on a specific object instance\r\n        this.myObjectsByPath = [];              // If you want you can specify the instance by path, but it means it must be reachable from window\r\n\r\n        this.myClassesByReference = [];         // By Reference means by using a reference to the class, like doing Timer, but also let ref = Timer and use ref\r\n        this.myClassesByPath = [];              // By Path means by using the full class path, like \"Timer\", this is requiredneeded if u want to count the constructor\r\n\r\n        this.myFunctionsByPath = [];\r\n        // You can also count the call to a specific function, but it must be reachable from window, no reference way\r\n        // It's mostly for global functions, which could be tracked anyway using window as object reference\r\n\r\n        this.myExcludeConstructors = false;      // Constructor calls count can be a problem for some classes (like Array)\r\n        this.myExcludeJSObjectFunctions = false;\r\n\r\n        this.myFunctionNamesToInclude = [];     // Empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionNamesToExclude = [];     // Empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // These can be used if u want to have a bit more control on function name filtering\r\n        this.myFunctionPathsToInclude = [];         // Empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionPathsToExclude = [];         // Empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectAddObjectDescendantsDepthLevel = 0;      // You can specify if you want to also count the OBJECT descendants of the objects you have specified\r\n        this.myObjectAddClassDescendantsDepthLevel = 0;       // You can specify if you want to also count the CLASS descendants of the objects you have specified\r\n        // The depth level specify how deep in the hierarchy, level 0 means no recursion, 1 only children, 2 also grand children, and so on\r\n        // -1 to select all the hierarchy\r\n\r\n        // These filters are only useful if u are doing recursion\r\n        this.myObjectNamesToInclude = [];           // Empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectNamesToExclude = [];           // Empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassNamesToInclude = [];            // Empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassNamesToExclude = [];            // Empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectPathsToInclude = [];           // Empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectPathsToExclude = [];           // Empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassPathsToInclude = [];            // Empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassPathsToExclude = [];            // Empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // Tricks\r\n        // - you can specify an object/class/function as a pair [object, \"name\"] instead of just object\r\n        //   and the name, if not null, will be used as path instead of the default one\r\n        //   WARNING: this means that there is a specific case, an array of 2 elements with a string, which can't be tracked if you don't put it inside an array like above\r\n\r\n        this.myLogEnabled = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionsOverwriter {\r\n\r\n    constructor(params = new DebugFunctionsOverwriterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myPropertiesAlreadyOverwritten = new Map();\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        let classesAndParents = this._getReferencesAndParents(this._myParams.myClassesByReference, this._myParams.myClassesByPath, true);\r\n        let objectsAndParents = this._getReferencesAndParents(this._myParams.myObjectsByReference, this._myParams.myObjectsByPath, false);\r\n        let functionsAndParents = this._getReferencesAndParents([], this._myParams.myFunctionsByPath, false);\r\n\r\n        this._objectAddDescendants(objectsAndParents, classesAndParents);\r\n\r\n        for (let referenceAndParent of classesAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, true);\r\n        }\r\n\r\n        for (let referenceAndParent of objectsAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, false);\r\n        }\r\n\r\n        for (let referenceAndParent of functionsAndParents) {\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n\r\n            this._overwriteFunction(referenceParent, referenceName, null, null, referencePath, false, true);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return JSUtils.getObjectProperty(reference, propertyName);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return JSUtils.getObjectProperty(reference, propertyName);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, isClass) {\r\n        let includePathList = this._myParams.myObjectPathsToInclude;\r\n        let excludePathList = this._myParams.myObjectPathsToExclude;\r\n        let includeNameList = this._myParams.myObjectNamesToInclude;\r\n        let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n        if (isClass) {\r\n            includePathList = this._myParams.myClassPathsToInclude;\r\n            excludePathList = this._myParams.myClassPathsToExclude;\r\n            includeNameList = this._myParams.myClassNamesToInclude;\r\n            excludeNameList = this._myParams.myClassNamesToExclude;\r\n        }\r\n\r\n        let validReferencePath = this._filterName(referencePath, includePathList, excludePathList);\r\n        let validReferenceName = this._filterName(referenceNameForFilter, includeNameList, excludeNameList);\r\n        if (validReferencePath && validReferenceName) {\r\n            let propertyNames = JSUtils.getObjectPropertyNames(reference);\r\n            if (propertyNames.pp_hasEqual(\"constructor\")) {\r\n                propertyNames.unshift(\"constructor\"); // Be sure it's added first to spot bugs, not important that it appears twice in the list\r\n            }\r\n\r\n            for (let propertyName of propertyNames) {\r\n                let overwriteTargetReference = null;\r\n\r\n                let referenceParentForConstructor = null;\r\n                let referenceNameForConstructor = null;\r\n\r\n                if (isClass) {\r\n                    let fixedReference = reference;\r\n\r\n                    if (referenceParent != null) {\r\n                        let ownReferenceDescriptor = Object.getOwnPropertyDescriptor(referenceParent, referenceName);\r\n                        if (ownReferenceDescriptor != null && ownReferenceDescriptor.value != null) {\r\n                            fixedReference = ownReferenceDescriptor.value;\r\n                        }\r\n                    }\r\n\r\n                    overwriteTargetReference = fixedReference.prototype;\r\n                    if (overwriteTargetReference == null) {\r\n                        overwriteTargetReference = fixedReference;\r\n                    } else {\r\n                        try {\r\n                            let referenceProperty = JSUtils.getObjectProperty(overwriteTargetReference, propertyName);\r\n                            if (referenceProperty == null) {\r\n                                overwriteTargetReference = fixedReference;\r\n                            }\r\n                        } catch (error) {\r\n                            overwriteTargetReference = fixedReference;\r\n                        }\r\n                    }\r\n\r\n                    referenceParentForConstructor = referenceParent;\r\n                    referenceNameForConstructor = referenceName;\r\n                } else {\r\n                    overwriteTargetReference = reference;\r\n                }\r\n\r\n                this._overwriteFunction(overwriteTargetReference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, false);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    _overwriteFunction(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction) {\r\n        try {\r\n            let propertyCountedAlready = this._myPropertiesAlreadyOverwritten.get(propertyName) != null && this._myPropertiesAlreadyOverwritten.get(propertyName).pp_hasEqual(reference);\r\n            if (!propertyCountedAlready) {\r\n                if (JSUtils.isFunctionByName(reference, propertyName)) {\r\n                    if (!this._myParams.myExcludeJSObjectFunctions || !this._isJSObjectFunction(propertyName)) {\r\n                        let validFunctionName = this._filterName(propertyName, this._myParams.myFunctionNamesToInclude, this._myParams.myFunctionNamesToExclude);\r\n                        let validFunctionPath = this._filterName((referencePath != null ? referencePath + \".\" : \"\") + propertyName, this._myParams.myFunctionPathsToInclude, this._myParams.myFunctionPathsToExclude);\r\n                        if (validFunctionName && validFunctionPath) {\r\n                            if (!this._myPropertiesAlreadyOverwritten.has(propertyName)) {\r\n                                this._myPropertiesAlreadyOverwritten.set(propertyName, []);\r\n                            }\r\n\r\n                            let overwriteSuccess = false;\r\n                            let isConstructor = false;\r\n                            if (propertyName != \"constructor\") {\r\n                                try {\r\n                                    let newFunction = this._getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction);\r\n                                    if (newFunction != JSUtils.getObjectProperty(reference, propertyName)) {\r\n                                        overwriteSuccess = JSUtils.overwriteObjectProperty(newFunction, reference, propertyName, false, true, this._myParams.myLogEnabled);\r\n                                    } else {\r\n                                        overwriteSuccess = true;\r\n                                    }\r\n                                } catch (error) {\r\n                                    overwriteSuccess = false;\r\n\r\n                                    if (this._myParams.myLogEnabled) {\r\n                                        console.error(error);\r\n                                    }\r\n                                }\r\n                            } else if (!this._myParams.myExcludeConstructors && isClass && referenceParentForConstructor != null) {\r\n                                let referenceForConstructor = JSUtils.getObjectProperty(referenceParentForConstructor, referenceNameForConstructor);\r\n                                if (referenceForConstructor != null && referenceForConstructor.prototype != null) {\r\n                                    isConstructor = true;\r\n\r\n                                    try {\r\n                                        let newConstructor = this._getOverwrittenConstructor(referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction);\r\n                                        if (newConstructor != referenceForConstructor) {\r\n                                            overwriteSuccess = JSUtils.overwriteObjectProperty(newConstructor, referenceParentForConstructor, referenceNameForConstructor, false, true, this._myParams.myLogEnabled);\r\n                                            if (overwriteSuccess) {\r\n                                                overwriteSuccess = JSUtils.overwriteObjectProperty(newConstructor, referenceForConstructor.prototype, propertyName, false, true, this._myParams.myLogEnabled);\r\n                                            }\r\n                                        } else {\r\n                                            overwriteSuccess = true;\r\n                                        }\r\n                                    } catch (error) {\r\n                                        overwriteSuccess = false;\r\n\r\n                                        if (this._myParams.myLogEnabled) {\r\n                                            console.error(error);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (overwriteSuccess) {\r\n                                this._myPropertiesAlreadyOverwritten.get(propertyName).push(reference);\r\n                                this._onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            } else {\r\n                                this._onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (this._myParams.myLogEnabled) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getReferencesAndParents(byReferenceList, byPathList, isClass) {\r\n        let referenceAndParents = [];\r\n\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        for (let pathPair of byPathList) {\r\n            let path = pathPair;\r\n            let referenceName = \"\";\r\n            let referencePath = pathPair;\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (pathPair != null && Array.isArray(pathPair) && pathPair.length != null && pathPair.length == 2 && typeof pathPair[1] == \"string\") {\r\n                path = pathPair[0];\r\n                referencePath = pathPair[1];\r\n            }\r\n\r\n            referenceName = JSUtils.getObjectNameFromPath(path);\r\n            referenceNameForFilter = JSUtils.getObjectNameFromPath(referencePath);\r\n\r\n            let reference = JSUtils.getObjectFromPath(path, Globals.getWindow(this._myParams.myEngine));\r\n            let referenceParent = JSUtils.getObjectParentFromPath(path, Globals.getWindow(this._myParams.myEngine));\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, referenceParent, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        for (let referencePair of byReferenceList) {\r\n            let reference = referencePair;\r\n            let referenceName = \"\";\r\n            let referencePath = \"\";\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (referencePair != null && referencePair.length != null && referencePair.length == 2 && typeof referencePair[1] == \"string\") {\r\n                reference = referencePair[0];\r\n                referencePath = referencePair[1];\r\n                referenceNameForFilter = JSUtils.getObjectNameFromPath(referencePath);\r\n            } else {\r\n                referencePath = isClass ? reference.name : null;\r\n                referenceNameForFilter = isClass ? reference.name : null;\r\n            }\r\n\r\n            if (isClass) {\r\n                referenceName = reference.name;\r\n            } else {\r\n                referenceName = JSUtils.getObjectNameFromPath(referencePath);\r\n            }\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, null, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        return referenceAndParents;\r\n    }\r\n\r\n    _objectAddDescendants(objectsAndParents, classesAndParents) {\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        let objectsToVisit = [];\r\n        for (let objectAndParent of objectsAndParents) {\r\n            objectsToVisit.pp_pushUnique([objectAndParent[0], 0, objectAndParent[3]], equalCallback);\r\n        }\r\n\r\n        while (objectsToVisit.length > 0) {\r\n            let objectToVisit = objectsToVisit.shift();\r\n\r\n            let object = objectToVisit[0];\r\n            let objectLevel = objectToVisit[1];\r\n            let objectPath = objectToVisit[2];\r\n\r\n            if ((\r\n                objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1) ||\r\n                objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1) {\r\n\r\n                let propertyNames = null;\r\n                try {\r\n                    propertyNames = JSUtils.getObjectPropertyNames(object);\r\n                } catch (error) {\r\n                    continue;\r\n                }\r\n\r\n                for (let propertyName of propertyNames) {\r\n                    let objectProperty = null;\r\n\r\n                    try {\r\n                        objectProperty = JSUtils.getObjectProperty(object, propertyName);\r\n                        if (objectProperty == null) {\r\n                            continue;\r\n                        }\r\n                    } catch (error) {\r\n                        continue;\r\n                    }\r\n\r\n                    let currentPath = \"\";\r\n                    let currentName = \"\";\r\n                    if (objectPath != null) {\r\n                        currentName = propertyName;\r\n                        currentPath = objectPath + \".\" + currentName;\r\n                    } else {\r\n                        currentName = propertyName;\r\n                        currentPath = currentName;\r\n                    }\r\n\r\n                    let isClass = JSUtils.isClassByName(object, propertyName);\r\n                    let isObject = JSUtils.isObjectByName(object, propertyName);\r\n\r\n                    let includePathList = this._myParams.myObjectPathsToInclude;\r\n                    let excludePathList = this._myParams.myObjectPathsToExclude;\r\n                    let includeNameList = this._myParams.myObjectNamesToInclude;\r\n                    let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n                    if (isClass) {\r\n                        includePathList = this._myParams.myClassPathsToInclude;\r\n                        excludePathList = this._myParams.myClassPathsToExclude;\r\n                        includeNameList = this._myParams.myClassNamesToInclude;\r\n                        excludeNameList = this._myParams.myClassNamesToExclude;\r\n                    }\r\n\r\n                    let validReferencePath = this._filterName(currentPath, includePathList, excludePathList);\r\n                    let validReferenceName = this._filterName(propertyName, includeNameList, excludeNameList);\r\n                    if (validReferencePath && validReferenceName) {\r\n                        if (isObject && (objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1)) {\r\n                            objectsAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isClass && (objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1)) {\r\n                            classesAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isObject) {\r\n                            objectsToVisit.pp_pushUnique([objectProperty, objectLevel + 1, currentPath], equalCallback);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _filterName(name, includeList, excludeList) {\r\n        let validName = includeList.length == 0;\r\n        for (let includeName of includeList) {\r\n            if (name.match(new RegExp(includeName)) != null) {\r\n                validName = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (validName) {\r\n            for (let excludeName of excludeList) {\r\n                if (name.match(new RegExp(excludeName)) != null) {\r\n                    validName = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return validName;\r\n    }\r\n\r\n    _isJSObjectFunction(propertyName) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nDebugFunctionsOverwriter.prototype._isJSObjectFunction = function () {\r\n    let jsObjectFunctions = [\r\n        \"__defineGetter__\", \"__defineSetter__\", \"hasOwnProperty\", \"__lookupGetter__\", \"__lookupSetter__\", \"isPrototypeOf\",\r\n        \"propertyIsEnumerable\", \"toString\", \"valueOf\", \"__proto__\", \"toLocaleString\", \"arguments\", \"caller\", \"apply\", \"bind\", \"call\", \"callee\"];\r\n    return function _isJSObjectFunction(propertyName) {\r\n        return jsObjectFunctions.pp_hasEqual(propertyName);\r\n    };\r\n}();", "import { JSUtils } from \"../../../cauldron/js/utils/js_utils\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { DebugFunctionsOverwriter, DebugFunctionsOverwriterParams } from \"../debug_functions_overwriter\";\r\n\r\nexport class DebugFunctionsPerformanceAnalyzerParams extends DebugFunctionsOverwriterParams {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.myExecutionTimeAnalysisEnabled = true;\r\n\r\n        this.myAddPathPrefixToFunctionID = true;\r\n        // This works at best when the object/class is specified as path\r\n        // since with reference it's not possible to get the full path or get the variable name of the reference\r\n\r\n        this.myFilterDebugFunctionsPerformanceAnalyzerClasses = true;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionPerformanceAnalysisResults {\r\n\r\n    constructor() {\r\n        this.myReference = null;\r\n        this.myName = \"\";\r\n        this.myPath = \"\";\r\n        this.myID = \"\";\r\n\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    reset() {\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    max(other) {\r\n        this.myCallsCount = Math.max(this.myCallsCount, other.myCallsCount);\r\n        this.myTotalExecutionTime = Math.max(this.myTotalExecutionTime, other.myTotalExecutionTime);\r\n        this.myTotalExecutionTimePercentage = Math.max(this.myTotalExecutionTimePercentage, other.myTotalExecutionTimePercentage);\r\n        this.myAverageExecutionTime = Math.max(this.myAverageExecutionTime, other.myAverageExecutionTime);\r\n    }\r\n\r\n    copy(other) {\r\n        this.myReference = other.myReference;\r\n        this.myName = other.myName;\r\n        this.myPath = other.myPath;\r\n        this.myID = other.myID;\r\n\r\n        this.myCallsCount = other.myCallsCount;\r\n        this.myTotalExecutionTime = other.myTotalExecutionTime;\r\n        this.myTotalExecutionTimePercentage = other.myTotalExecutionTimePercentage;\r\n        this.myAverageExecutionTime = other.myAverageExecutionTime;\r\n        this.myTimeElapsedSinceLastReset = other.myTimeElapsedSinceLastReset;\r\n\r\n        this._myTotalExecutionTimeInternal = other._myTotalExecutionTimeInternal;\r\n    }\r\n}\r\n\r\nexport let DebugFunctionsPerformanceAnalyzerSortOrder = {\r\n    NONE: 0,\r\n    CALLS_COUNT: 1,\r\n    TOTAL_EXECUTION_TIME: 2,\r\n    AVERAGE_EXECUTION_TIME: 3\r\n};\r\n\r\nexport class DebugFunctionsPerformanceAnalyzer extends DebugFunctionsOverwriter {\r\n\r\n    constructor(params = new DebugFunctionsPerformanceAnalyzerParams()) {\r\n        super(params);\r\n\r\n        this._myFunctionPerformanceAnalysisResults = new Map();\r\n        this._myFunctionPerformanceAnalysisMaxResults = new Map();\r\n\r\n        this._myResultsAlreadyAdded = false;\r\n\r\n        this._myExecutionTimes = {\r\n            myOverheadExecutionTimeSinceLastReset: 0,\r\n            myLastFunctionExecutionTime: 0,\r\n            myOriginalFunctionOverheadExecutionTimes: []\r\n        };\r\n        this._myTimeOfLastReset = Globals.getWindow(this._myParams.myEngine).performance.now();\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n\r\n        let originalPush = Array.prototype[\"push\"];\r\n        let originalPop = Array.prototype[\"pop\"];\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.push = function () { return originalPush.bind(this)(...arguments); }\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.pop = function () { return originalPop.bind(this)(...arguments); }\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        super.overwriteFunctions();\r\n\r\n        this.resetResults();\r\n        this.resetMaxResults();\r\n    }\r\n\r\n    getTimeElapsedSinceLastReset() {\r\n        return Globals.getWindow(this._myParams.myEngine).performance.now() - this._myTimeOfLastReset - this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset;\r\n    }\r\n\r\n    getMaxTimeElapsedSinceLastReset() {\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n        return this._myMaxTimeElapsedSinceLastReset;\r\n    }\r\n\r\n    resetResults() {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisResults.get(property).reset();\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset = 0;\r\n\r\n        this._myTimeOfLastReset = Globals.getWindow(this._myParams.myEngine).performance.now();\r\n    }\r\n\r\n    resetMaxResults() {\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n        for (let property of this._myFunctionPerformanceAnalysisMaxResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisMaxResults.get(property).reset();\r\n        }\r\n    }\r\n\r\n    getResults(sortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    getMaxResults(sortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisMaxResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, false);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, true);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        this._myResultsAlreadyAdded = false;\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        if (this._myResultsAlreadyAdded) {\r\n            let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n            this._myFunctionPerformanceAnalysisResults.delete(propertyID);\r\n        }\r\n    }\r\n\r\n    _sortResults(results, sortOrder) {\r\n        let sortedResults = results;\r\n\r\n        if (sortOrder != DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n            sortedResults = new Map([...results.entries()].sort(function (first, second) {\r\n                let sortResult = 0;\r\n\r\n                if (sortOrder == DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT) {\r\n                    sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        }\r\n                    }\r\n                } else if (sortOrder == DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME) {\r\n                    sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                } else {\r\n                    sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return sortResult;\r\n            }));\r\n        }\r\n\r\n        return sortedResults;\r\n    }\r\n\r\n    _getPropertyID(propertyName, referencePath, isFunction, isConstructor) {\r\n        let id = isConstructor ? \"constructor\" : propertyName;\r\n\r\n        if (referencePath != null && this._myParams.myAddPathPrefixToFunctionID) {\r\n            if (!isFunction) {\r\n                id = referencePath + \".\" + id;\r\n            } else {\r\n                id = referencePath;\r\n            }\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    _updateDerivatesResults() {\r\n        let timeElapsedSinceLastReset = this.getTimeElapsedSinceLastReset();\r\n        let beforeTime = Globals.getWindow(this._myParams.myEngine).performance.now();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            let results = this._myFunctionPerformanceAnalysisResults.get(property);\r\n\r\n            if (timeElapsedSinceLastReset != 0) {\r\n                results.myTotalExecutionTimePercentage = results.myTotalExecutionTime / timeElapsedSinceLastReset;\r\n            } else {\r\n                if (results.myCallsCount != 0) {\r\n                    results.myTotalExecutionTimePercentage = 1;\r\n                } else {\r\n                    results.myTotalExecutionTimePercentage = 0;\r\n                }\r\n            }\r\n\r\n            if (results.myCallsCount != 0) {\r\n                results.myAverageExecutionTime = results.myTotalExecutionTime / results.myCallsCount;\r\n            } else {\r\n                results.myAverageExecutionTime = 0;\r\n            }\r\n\r\n            results.myTimeElapsedSinceLastReset = timeElapsedSinceLastReset;\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += Globals.getWindow(this._myParams.myEngine).performance.now() - beforeTime;\r\n    }\r\n\r\n    _updateMaxResults() {\r\n        let beforeTime = Globals.getWindow(this._myParams.myEngine).performance.now();\r\n\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            if (this._myFunctionPerformanceAnalysisMaxResults.has(property)) {\r\n                this._myFunctionPerformanceAnalysisMaxResults.get(property).max(this._myFunctionPerformanceAnalysisResults.get(property));\r\n            } else {\r\n                let maxResults = new DebugFunctionPerformanceAnalysisResults();\r\n                maxResults.copy(this._myFunctionPerformanceAnalysisResults.get(property));\r\n                this._myFunctionPerformanceAnalysisMaxResults.set(property, maxResults)\r\n            }\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += Globals.getWindow(this._myParams.myEngine).performance.now() - beforeTime;\r\n    }\r\n\r\n    _getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, isConstructor) {\r\n        let newFunction = JSUtils.getObjectProperty(reference, propertyName);\r\n\r\n        if (!this._myParams.myFilterDebugFunctionsPerformanceAnalyzerClasses || !this._isPerformanceAnalyzer(reference, propertyName, isClass)) {\r\n            if (propertyName != \"_myPerformanceAnalyzerOriginalFunction\") {\r\n                let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n\r\n                this._myResultsAlreadyAdded = this._myFunctionPerformanceAnalysisResults.has(propertyID);\r\n                let analysisResults = new DebugFunctionPerformanceAnalysisResults();\r\n\r\n                analysisResults.myReference = reference;\r\n                analysisResults.myName = propertyName;\r\n                analysisResults.myPath = referencePath;\r\n                analysisResults.myID = referencePath;\r\n\r\n                this._myFunctionPerformanceAnalysisResults.set(propertyID, analysisResults);\r\n\r\n                try {\r\n                    let window = Globals.getWindow(this._myParams.myEngine);\r\n\r\n                    let functionPerformanceAnalysisResults = this._myFunctionPerformanceAnalysisResults.get(propertyID);\r\n                    let executionTimes = this._myExecutionTimes;\r\n\r\n                    let originalFunction = reference[propertyName];\r\n                    let functionCallOverhead = 0.000175;    // ms taken by an analyzed function that is empty\r\n                    let overheadError = 0.00035;            // ms to add to adjust a bit for window.performance.now() max precision which is 0.0005\r\n\r\n                    let executionTimeAnalysisEnabled = this._myParams.myExecutionTimeAnalysisEnabled;\r\n\r\n                    if (!isConstructor) {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = bindFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    returnValue = bindFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    } else {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    }\r\n\r\n                    if (newFunction != null) {\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerHasBeenOverwritten\", {\r\n                            value: true,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerOriginalFunction\", {\r\n                            value: originalFunction,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    if (this._myParams.myLogEnabled) {\r\n                        console.error(\"Function:\", propertyName, \"of:\", reference, \"can't be overwritten.\\nError:\", error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return newFunction;\r\n    }\r\n\r\n    _isPerformanceAnalyzer(reference, propertyName, isClass) {\r\n        let isPerformanceAnalyzer = false;\r\n\r\n        if (isClass) {\r\n            if (reference == DebugFunctionsPerformanceAnalyzer.prototype || reference == DebugFunctionPerformanceAnalysisResults.prototype) {\r\n                isPerformanceAnalyzer = true;\r\n            }\r\n        }\r\n\r\n        return isPerformanceAnalyzer;\r\n    }\r\n}", "import { Timer } from \"../../../cauldron/cauldron/timer\";\r\nimport { DebugFunctionsPerformanceAnalyzerSortOrder } from \"./debug_functions_performance_analyzer\";\r\n\r\nexport class DebugFunctionsPerformanceAnalysisResultsLoggerParams {\r\n\r\n    constructor() {\r\n        this.myPerformanceAnalyzer = null;\r\n\r\n        this.myLogTitle = \"Functions Performance Analysis Results\";\r\n        this.mySecondsBetweenLogs = 1;\r\n        this.myLogFunction = \"log\";\r\n\r\n        this.myFormatLog = true;\r\n        this.myFormatLogIndentationCharacter = \"-\";\r\n\r\n        this.myLogMaxResults = false;\r\n\r\n        this.myLogSortOrder = DebugFunctionsPerformanceAnalyzerSortOrder.NONE;\r\n\r\n        this.myLogMaxAmountOfFunctions = null;\r\n\r\n        this.myLogFunctionsWithCallsCountAbove = null;\r\n        this.myLogFunctionsWithTotalExecutionTimePercentageAbove = null;\r\n\r\n        this.myLogCallsCountResults = false;\r\n        this.myLogTotalExecutionTimeResults = false;\r\n        this.myLogTotalExecutionTimePercentageResults = false;\r\n        this.myLogAverageExecutionTimeResults = false;\r\n\r\n        this.myClearConsoleBeforeLog = false;\r\n    }\r\n}\r\n\r\nexport class DebugFunctionsPerformanceAnalysisResultsLogger {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myLogTimer = new Timer(this._myParams.mySecondsBetweenLogs);\r\n\r\n        this._myMaxNameLength = 0;\r\n        this._myMaxCallsCountLength = 0;\r\n        this._myMaxTotalExecutionTimeLength = 0;\r\n        this._myMaxTotalExecutionTimePercentageLength = 0;\r\n        this._myMaxAverageExecutionTimeLength = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myPerformanceAnalyzer == null) {\r\n            return;\r\n        }\r\n\r\n        this._myLogTimer.update(dt);\r\n        if (this._myLogTimer.isDone()) {\r\n            this._myLogTimer.start();\r\n\r\n            let timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getTimeElapsedSinceLastReset();\r\n            if (this._myParams.myLogMaxResults) {\r\n                timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getMaxTimeElapsedSinceLastReset();\r\n            }\r\n\r\n            let analysisResults = null;\r\n            if (!this._myParams.myLogMaxResults) {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getResults(this._myParams.myLogSortOrder);\r\n            } else {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getMaxResults(this._myParams.myLogSortOrder);\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithCallsCountAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myCallsCount > this._myParams.myLogFunctionsWithCallsCountAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myTotalExecutionTimePercentage * 100 > this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogMaxAmountOfFunctions != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < this._myParams.myLogMaxAmountOfFunctions && i < keys.length; i++) {\r\n                    let counter = analysisResultsClone.get(keys[i]);\r\n                    analysisResults.set(keys[i], counter);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myClearConsoleBeforeLog) {\r\n                console.clear();\r\n            }\r\n\r\n            let analysisResultsToLog = new Map();\r\n            for (let key of analysisResults.keys()) {\r\n                let currentResults = analysisResults.get(key);\r\n\r\n                let resultsToLog = {};\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    resultsToLog.myCallsCount = currentResults.myCallsCount;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    resultsToLog.myTotalExecutionTime = currentResults.myTotalExecutionTime;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    resultsToLog.myTotalExecutionTimePercentage = currentResults.myTotalExecutionTimePercentage;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    resultsToLog.myAverageExecutionTime = currentResults.myAverageExecutionTime;\r\n                }\r\n\r\n                analysisResultsToLog.set(key, resultsToLog);\r\n            }\r\n\r\n            let resultsText = \"\";\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                this._myMaxNameLength = Math.max(this._myMaxNameLength, name.length);\r\n\r\n                this._myMaxCallsCountLength = Math.max(this._myMaxCallsCountLength, results.myCallsCount.toFixed(0).length);\r\n                this._myMaxTotalExecutionTimeLength = Math.max(this._myMaxTotalExecutionTimeLength, results.myTotalExecutionTime.toFixed(5).length);\r\n                this._myMaxTotalExecutionTimePercentageLength = Math.max(this._myMaxTotalExecutionTimePercentageLength, (results.myTotalExecutionTimePercentage * 100).toFixed(2).length);\r\n                this._myMaxAverageExecutionTimeLength = Math.max(this._myMaxAverageExecutionTimeLength, results.myAverageExecutionTime.toFixed(5).length);\r\n            }\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                let parametersToLog = 0;\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                let textOrdered = [];\r\n\r\n                let callsCountText = ((parametersToLog > 1) ? \"Calls Count: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxCallsCountLength - results.myCallsCount.toFixed(0).length; i++) {\r\n                        callsCountText += \" \";\r\n                    }\r\n                }\r\n                callsCountText += results.myCallsCount.toFixed(0);\r\n\r\n                let totalExecutionTimeText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimeLength - results.myTotalExecutionTime.toFixed(5).length; i++) {\r\n                        totalExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimeText += results.myTotalExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                let totalExecutionTimePercentageText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimePercentageLength - (results.myTotalExecutionTimePercentage * 100).toFixed(2).length; i++) {\r\n                        totalExecutionTimePercentageText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimePercentageText += (results.myTotalExecutionTimePercentage * 100).toFixed(2) + \"%\";\r\n\r\n                let averageExecutionTimeText = ((parametersToLog > 1) ? \"Average Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxAverageExecutionTimeLength - results.myAverageExecutionTime.toFixed(5).length; i++) {\r\n                        averageExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                averageExecutionTimeText += results.myAverageExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                if (!this._myParams.myLogCallsCountResults) {\r\n                    callsCountText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimeResults) {\r\n                    totalExecutionTimeText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    totalExecutionTimePercentageText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogAverageExecutionTimeResults) {\r\n                    averageExecutionTimeText = null;\r\n                }\r\n\r\n                switch (this._myParams.myLogSortOrder) {\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        break;\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME:\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    case DebugFunctionsPerformanceAnalyzerSortOrder.AVERAGE_EXECUTION_TIME:\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    default:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                }\r\n\r\n                resultsText += \"\\n\";\r\n                if (this._myParams.myFormatLog) {\r\n                    let nameIndented = name + \" \";\r\n                    while (nameIndented.length < this._myMaxNameLength + 1) {\r\n                        nameIndented += this._myParams.myFormatLogIndentationCharacter;\r\n                    }\r\n                    nameIndented += this._myParams.myFormatLogIndentationCharacter + \" \";\r\n                    resultsText += nameIndented;\r\n                } else {\r\n                    resultsText += name + \" - \";\r\n                }\r\n\r\n                let avoidFirst = true;\r\n                for (let text of textOrdered) {\r\n                    if (text != null) {\r\n                        if (avoidFirst) {\r\n                            avoidFirst = false;\r\n                        } else {\r\n                            resultsText += \" - \";\r\n                        }\r\n\r\n                        resultsText += text;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((this._myParams.myLogTotalExecutionTimeResults || this._myParams.myLogTotalExecutionTimePercentageResults || this._myParams.myLogAverageExecutionTimeResults)) {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\\nTotal Time:\", timeSinceLastReset.toFixed(5), \"ms\\n\", resultsText);\r\n            } else {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\", resultsText);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\nimport { GamepadButtonID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { DebugFunctionsPerformanceAnalysisResultsLogger, DebugFunctionsPerformanceAnalysisResultsLoggerParams } from \"../debug_functions_performance_analysis_results_logger\";\r\nimport { DebugFunctionsPerformanceAnalyzer, DebugFunctionsPerformanceAnalyzerParams } from \"../debug_functions_performance_analyzer\";\r\n\r\nexport class DebugFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myObjectsByPath: Property.string(\"\"),\r\n        _myClassesByPath: Property.string(\"\"),\r\n        _myFunctionsByPath: Property.string(\"\"),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogTitle: Property.string(\"Functions Performance Analysis Results\"),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myExcludeJSObjectFunctions: Property.bool(true),\r\n        _myAddPathPrefixToFunctionID: Property.bool(true),\r\n        _myObjectAddObjectDescendantsDepthLevel: Property.int(0),\r\n        _myObjectAddClassDescendantsDepthLevel: Property.int(0),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false),\r\n        _myClassesByReference: Property.enum([\"Code Driven\"], \"Code Driven\"),\r\n        _myObjectsByReference: Property.enum([\"Code Driven\"], \"Code Driven\")\r\n    };\r\n\r\n    init() {\r\n        this._myActive = false;\r\n\r\n        if (Globals.isDebugEnabled(this.engine)) {\r\n            this._myActive = true;\r\n\r\n            this._myFunctionsPerformanceAnalyzer = null;\r\n            this._myFunctionsPerformanceAnalysisResultsLogger = null;\r\n\r\n            this._mySkipFirstUpdate = true;\r\n            this._myStartTimer = new Timer(this._myDelayStart);\r\n            if (this._myDelayStart == 0) {\r\n                this._myStartTimer.end();\r\n                this._mySkipFirstUpdate = false;\r\n                this._start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myActive) {\r\n            if (this._mySkipFirstUpdate) {\r\n                this._mySkipFirstUpdate = false;\r\n                return;\r\n            }\r\n\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._myFunctionsPerformanceAnalysisResultsLogger.update(dt);\r\n                this._myFunctionsPerformanceAnalyzer.resetResults();\r\n            }\r\n\r\n            if (this._myResetMaxResultsShortcutEnabled) {\r\n                if (Globals.getLeftGamepad(this.engine).getButtonInfo(GamepadButtonID.SELECT).isPressEnd(3)) {\r\n                    this._myFunctionsPerformanceAnalyzer.resetMaxResults();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n        let functionsPerformanceAnalyzerParams = new DebugFunctionsPerformanceAnalyzerParams(this.engine);\r\n\r\n        if (this._myObjectsByPath.length > 0) {\r\n            let toIncludeList = [...this._myObjectsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myObjectsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myClassesByPath.length > 0) {\r\n            let toIncludeList = [...this._myClassesByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myClassesByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionsByPath.length > 0) {\r\n            let toIncludeList = [...this._myFunctionsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myExcludeConstructors = this._myExcludeConstructors;\r\n        functionsPerformanceAnalyzerParams.myExcludeJSObjectFunctions = this._myExcludeJSObjectFunctions;\r\n        functionsPerformanceAnalyzerParams.myAddPathPrefixToFunctionID = this._myAddPathPrefixToFunctionID;\r\n\r\n        if (this._myFunctionPathsToInclude.length > 0) {\r\n            let toIncludeList = [...this._myFunctionPathsToInclude.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToInclude.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionPathsToExclude.length > 0) {\r\n            let toExcludeList = [...this._myFunctionPathsToExclude.split(\",\")];\r\n            for (let i = 0; i < toExcludeList.length; i++) {\r\n                toExcludeList[i] = toExcludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToExclude.push(...toExcludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myObjectAddObjectDescendantsDepthLevel = this._myObjectAddObjectDescendantsDepthLevel;\r\n        functionsPerformanceAnalyzerParams.myObjectAddClassDescendantsDepthLevel = this._myObjectAddClassDescendantsDepthLevel;\r\n\r\n        functionsPerformanceAnalyzerParams.myExecutionTimeAnalysisEnabled = this._myLogTotalExecutionTimeResults || this._myLogTotalExecutionTimePercentageResults || this._myLogAverageExecutionTimeResults;\r\n\r\n        functionsPerformanceAnalyzerParams.myClassesByReference = (this._myClassesByReference != 0) ? this._myClassesByReference : [];\r\n        functionsPerformanceAnalyzerParams.myObjectsByReference = (this._myObjectsByReference != 0) ? this._myObjectsByReference : [];\r\n\r\n        this._myFunctionsPerformanceAnalyzer = new DebugFunctionsPerformanceAnalyzer(functionsPerformanceAnalyzerParams);\r\n        this._myFunctionsPerformanceAnalyzer.overwriteFunctions();\r\n\r\n        let functionsPerformanceAnalysisResultsLoggerParams = new DebugFunctionsPerformanceAnalysisResultsLoggerParams();\r\n        functionsPerformanceAnalysisResultsLoggerParams.myPerformanceAnalyzer = this._myFunctionsPerformanceAnalyzer;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTitle = this._myLogTitle;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.mySecondsBetweenLogs = this._mySecondsBetweenLogs;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunction = [\"log\", \"error\", \"warn\", \"debug\"][this._myLogFunction];\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxAmountOfFunctions = (this._myLogMaxAmountOfFunctions >= 0) ? this._myLogMaxAmountOfFunctions : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithCallsCountAbove = (this._myLogFunctionsWithCallsCountAbove >= 0) ? this._myLogFunctionsWithCallsCountAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithTotalExecutionTimePercentageAbove = (this._myLogFunctionsWithTotalExecutionTimePercentageAbove >= 0) ? this._myLogFunctionsWithTotalExecutionTimePercentageAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxResults = this._myLogMaxResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myClearConsoleBeforeLog = this._myClearConsoleBeforeLog;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogSortOrder = this._myLogSortOrder;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogCallsCountResults = this._myLogCallsCountResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimeResults = this._myLogTotalExecutionTimeResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimePercentageResults = this._myLogTotalExecutionTimePercentageResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogAverageExecutionTimeResults = this._myLogAverageExecutionTimeResults;\r\n\r\n        this._myFunctionsPerformanceAnalysisResultsLogger = new DebugFunctionsPerformanceAnalysisResultsLogger(functionsPerformanceAnalysisResultsLoggerParams);\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugPPFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-pp-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: 1,\r\n            _myObjectAddClassDescendantsDepthLevel: 1,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "\r\nimport { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugArrayFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-array-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myIncludeOnlyMainArrayTypes: Property.bool(true),\r\n        _myIncludeOnlyArrayExtensionFunctions: Property.bool(false),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        let classesByPath = \"Array, Uint8ClampedArray, Uint8Array, Uint16Array, Uint32Array, Int8Array, Int16Array, Int32Array, Float32Array, Float64Array\";\r\n        if (this._myIncludeOnlyMainArrayTypes) {\r\n            classesByPath = \"Array, Uint8Array, Uint16Array, Float32Array\";\r\n        }\r\n\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myClassesByPath: classesByPath,\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"Array Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude + (this._myFunctionPathsToInclude.length > 0 && this._myIncludeOnlyArrayExtensionFunctions ? \", \" : \"\") + (this._myIncludeOnlyArrayExtensionFunctions ? \"pp_, vec_, vec2_, vec3_, vec4_, quat_, quat2_, mat3_, mat4_, _pp_, _vec_, _quat_\" : \"\"),\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nclass DebugPPArrayCreationPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-pp-array-creation-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Array Creation Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: \"vec2_create, vec3_create, vec4_create, quat_create, quat2_create, mat3_create, mat4_create\",\r\n            _myExcludeConstructors: true,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugWLFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-wl-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByPath: \"WL\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"WL Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: 1,\r\n            _myObjectAddClassDescendantsDepthLevel: 1,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n}", "import { AnimationComponent, CollisionComponent, Component, InputComponent, LightComponent, MeshComponent, PhysXComponent, Property, TextComponent, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\nimport { ComponentUtils } from \"../../../../cauldron/wl/utils/component_utils\";\r\nimport { DebugFunctionsPerformanceAnalyzerComponent } from \"./debug_functions_performance_analyzer_component\";\r\n\r\nexport class DebugWLComponentsFunctionsPerformanceAnalyzerComponent extends Component {\r\n    static TypeName = \"pp-debug-wl-components-functions-performance-analyzer\";\r\n    static Properties = {\r\n        _myAnalyzeComponentTypes: Property.bool(true),\r\n        _myAnalyzeComponentInstances: Property.bool(false),\r\n        _myComponentInstanceID: Property.enum([\"Object ID\", \"Object Name\", \"Object ID - Object Name\"], \"Object ID - Object Name\"),\r\n        _myDelayStart: Property.float(0.0),\r\n        _myLogFunction: Property.enum([\"Log\", \"Error\", \"Warn\", \"Debug\"], \"Log\"),\r\n        _mySecondsBetweenLogs: Property.float(1.0),\r\n        _myLogMaxResults: Property.bool(false),\r\n        _myLogSortOrder: Property.enum([\"None\", \"Calls Count\", \"Total Execution Time\", \"Average Execution Time\"], \"None\"),\r\n        _myLogCallsCountResults: Property.bool(true),\r\n        _myLogTotalExecutionTimeResults: Property.bool(true),\r\n        _myLogTotalExecutionTimePercentageResults: Property.bool(true),\r\n        _myLogAverageExecutionTimeResults: Property.bool(true),\r\n        _myLogMaxAmountOfFunctions: Property.int(-1),\r\n        _myLogFunctionsWithCallsCountAbove: Property.int(-1),\r\n        _myLogFunctionsWithTotalExecutionTimePercentageAbove: Property.float(-1),\r\n        _myFunctionPathsToInclude: Property.string(\"\"),\r\n        _myFunctionPathsToExclude: Property.string(\"\"),\r\n        _myExcludeConstructors: Property.bool(false),\r\n        _myClearConsoleBeforeLog: Property.bool(false),\r\n        _myResetMaxResultsShortcutEnabled: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myStartTimer = new Timer(this._myDelayStart);\r\n        if (this._myDelayStart == 0) {\r\n            this._myStartTimer.end();\r\n            this._start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myStartTimer.isRunning()) {\r\n            this._myStartTimer.update(dt);\r\n            if (this._myStartTimer.isDone()) {\r\n                this._start();\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n\r\n        let objectsByReference = [];\r\n        let classesByReference = [];\r\n\r\n        if (this._myAnalyzeComponentInstances) {\r\n            this._addComponentInstanceReferences(objectsByReference);\r\n        }\r\n\r\n        if (this._myAnalyzeComponentTypes) {\r\n            this._addComponentTypeReferences(classesByReference);\r\n        }\r\n\r\n        this._myAnalyzerComponent = this.object.pp_addComponent(DebugFunctionsPerformanceAnalyzerComponent, {\r\n            _myObjectsByReference: objectsByReference,\r\n            _myClassesByReference: classesByReference,\r\n            _myDelayStart: 0,\r\n            _myLogTitle: \"WL Components Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJSObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddClassDescendantsDepthLevel: 0,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n\r\n    _addComponentTypeReferences(classesByReference) {\r\n        let nativeComponentTypes = [\r\n            AnimationComponent,\r\n            CollisionComponent,\r\n            InputComponent,\r\n            LightComponent,\r\n            MeshComponent,\r\n            PhysXComponent,\r\n            TextComponent,\r\n            ViewComponent\r\n        ];\r\n\r\n        for (let nativeComponentType of nativeComponentTypes) {\r\n            classesByReference.push([nativeComponentType.prototype, \"{\\\"\" + nativeComponentType.TypeName + \"\\\"}\"]);\r\n        }\r\n\r\n        for (let componentClass of ComponentUtils.getJavascriptComponentClassesByIndex(this.engine)) {\r\n            classesByReference.push([componentClass.prototype, \"{\\\"\" + componentClass.TypeName + \"\\\"}\"]);\r\n        }\r\n    }\r\n\r\n    _addComponentInstanceReferences(objectsByReference) {\r\n        // #TODO add native components\r\n\r\n        for (let componentInstance of ComponentUtils.getJavascriptComponentInstances(this.engine)) {\r\n            let id = \"\";\r\n\r\n            switch (this._myComponentInstanceID) {\r\n                case 0:\r\n                    id = componentInstance.object.pp_getID();\r\n                    break;\r\n                case 1:\r\n                    id = componentInstance.object.pp_getName();\r\n                    break;\r\n                case 2:\r\n                    id = componentInstance.object.pp_getID();\r\n                    if (componentInstance.object.pp_getName().length > 0) {\r\n                        id = id + \" - \" + componentInstance.object.pp_getName();\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            objectsByReference.push([componentInstance,\r\n                \"{\\\"\" + componentInstance.type + \"\\\"}[\" + id + \"]\"]);\r\n        }\r\n    }\r\n}", "import { quat_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class Direction2DTo3DConverterParams {\r\n\r\n    constructor() {\r\n        this.myStartFlyingForward = false;\r\n        this.myStartFlyingRight = false;\r\n\r\n        this.myAutoUpdateFlyForward = false;\r\n        this.myAutoUpdateFlyRight = false;\r\n\r\n        this.myResetFlyForwardWhenZero = false;\r\n        this.myResetFlyRightWhenZero = false;\r\n\r\n        this.myMinAngleToFlyForwardUp = 90;\r\n        this.myMinAngleToFlyForwardDown = 90;\r\n        this.myMinAngleToFlyRightUp = 90;\r\n        this.myMinAngleToFlyRightDown = 90;\r\n\r\n        // Settings when flying is not active, used to adjust the directions and flat them\r\n        this.myAdjustForwardWhenCloseToUp = true;\r\n        this.myAdjustRightWhenCloseToUp = true;\r\n        this.myAdjustForwardWhenCloseToUpAngleThreshold = 10;\r\n        this.myAdjustRightWhenCloseToUpAngleThreshold = 10;\r\n\r\n        this.myInvertForwardWhenUpsideDown = false;\r\n        this.myInvertRightWhenUpsideDown = false;\r\n\r\n        this.myAdjustLastValidFlatForwardOverConversionReferenceRotation = true;\r\n        this.myAdjustLastValidFlatRightOverConversionReferenceRotation = true;\r\n    }\r\n}\r\n\r\nexport class Direction2DTo3DConverter {\r\n\r\n    constructor(params = new Direction2DTo3DConverterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myFlyingForward = this._myParams.myStartFlyingForward;\r\n        this._myFlyingRight = this._myParams.myStartFlyingRight;\r\n\r\n        this._myLastConvertRotationQuat = quat_create();\r\n        this._myLastConvertRotationQuatValid = false;\r\n\r\n        this._myLastValidFlatForward = vec3_create();\r\n        this._myLastValidFlatRight = vec3_create();\r\n    }\r\n\r\n    // @direction3DUp can be used to flat the direction if the @conversionTransform is not aligned with it\r\n    // It's also needed to specify the fly axis, if different from the @conversionTransform up\r\n    // If @direction3DUp is null, @conversionTransform up is used\r\n    convert(direction2D, conversionTransform, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        return this.convertTransform(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    isFlying() {\r\n        return this._myFlyingForward || this._myFlyingRight;\r\n    }\r\n\r\n    isFlyingForward() {\r\n        return this._myFlyingForward;\r\n    }\r\n\r\n    isFlyingRight() {\r\n        return this._myFlyingRight;\r\n    }\r\n\r\n    startFlying() {\r\n        this._myFlyingForward = true;\r\n        this._myFlyingRight = true;\r\n    }\r\n\r\n    startFlyingForward() {\r\n        this._myFlyingForward = true;\r\n    }\r\n\r\n    startFlyingRight() {\r\n        this._myFlyingRight = true;\r\n    }\r\n\r\n    stopFlying() {\r\n        this._myFlyingForward = false;\r\n        this._myFlyingRight = false;\r\n    }\r\n\r\n    stopFlyingForward() {\r\n        this._myFlyingForward = false;\r\n    }\r\n\r\n    stopFlyingRight() {\r\n        this._myFlyingRight = false;\r\n    }\r\n\r\n    resetFly() {\r\n        this.resetFlyForward();\r\n        this.resetFlyRight();\r\n    }\r\n\r\n    resetFlyForward() {\r\n        if (this._myParams.myStartFlyingForward) {\r\n            this.startFlyingForward();\r\n        } else {\r\n            this.stopFlyingForward();\r\n        }\r\n    }\r\n\r\n    resetFlyRight() {\r\n        if (this._myParams.myStartFlyingRight) {\r\n            this.startFlyingRight();\r\n        } else {\r\n            this.stopFlyingRight();\r\n        }\r\n    }\r\n\r\n    resetLastValidFlatDirections() {\r\n        this._myLastValidFlatForward.vec3_zero();\r\n        this._myLastValidFlatRight.vec3_zero();\r\n    }\r\n\r\n    resetLastValidFlatForward() {\r\n        this._myLastValidFlatForward.vec3_zero();\r\n    }\r\n\r\n    resetLastValidFlatRight() {\r\n        this._myLastValidFlatRight.vec3_zero();\r\n    }\r\n\r\n    resetLastConvertTransform() {\r\n        this._myLastConvertRotationQuatValid = false;\r\n        this._myLastConvertRotationQuat.quat_identity();\r\n    }\r\n\r\n    // Convert Alternatives\r\n\r\n    // If @direction3DUp is null, vec3_create(0, 1, 0) is used\r\n    // Does not work properly if @conversionForward is aligned with @direction3DUp\r\n    convertForward(direction2D, conversionForward, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    // @direction3DUp can be used to flat the direction if the @conversionTransform is not aligned with it\r\n    // It's also needed to specify the fly axis, if different from the @conversionTransform up\r\n    // If @direction3DUp is null, conversionTransform up is used\r\n    convertTransform(direction2D, conversionTransform, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        return this.convertTransformMatrix(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nDirection2DTo3DConverter.prototype.convertForward = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertForward(direction2D, conversionForward, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat.quat_identity();\r\n        rotationQuat.quat_setForward(conversionForward, direction3DUp);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertTransformMatrix = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat = conversionTransformMatrix.mat4_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertTransformQuat = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        rotationQuat = conversionTransformQuat.quat2_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nDirection2DTo3DConverter.prototype.convertRotationQuat = function () {\r\n    let forward = vec3_create();\r\n    let right = vec3_create();\r\n    let up = vec3_create();\r\n    let direction3DUpNegate = vec3_create();\r\n    let forwardScaled = vec3_create();\r\n    let rightScaled = vec3_create();\r\n    let rotationToNewConvertPivoted = quat_create();\r\n    return function convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = vec3_create()) {\r\n        outDirection3D.vec3_zero();\r\n\r\n        if (this._myParams.myAdjustLastValidFlatForwardOverConversionReferenceRotation || this._myParams.myAdjustLastValidFlatRightOverConversionReferenceRotation) {\r\n            if (direction3DUp != null) {\r\n                if (this._myLastConvertRotationQuatValid) {\r\n                    rotationToNewConvertPivoted = this._myLastConvertRotationQuat.quat_rotationToQuat(conversionRotationQuat, rotationToNewConvertPivoted).\r\n                        quat_rotationAroundAxisQuat(direction3DUp, rotationToNewConvertPivoted);\r\n                    if (Math.pp_angleClamp(rotationToNewConvertPivoted.quat_getAngle(), true) > Math.PP_EPSILON_DEGREES) {\r\n                        if (this._myParams.myAdjustLastValidFlatForwardOverConversionReferenceRotation) {\r\n                            this._myLastValidFlatForward.vec3_rotateQuat(rotationToNewConvertPivoted, this._myLastValidFlatForward);\r\n                        }\r\n\r\n                        if (this._myParams.myAdjustLastValidFlatRightOverConversionReferenceRotation) {\r\n                            this._myLastValidFlatRight.vec3_rotateQuat(rotationToNewConvertPivoted, this._myLastValidFlatRight);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (direction2D.vec2_isZero()) {\r\n            let resetFlyForward = this._myParams.myAutoUpdateFlyForward && this._myParams.myResetFlyForwardWhenZero;\r\n            if (resetFlyForward) {\r\n                this.resetFlyForward();\r\n            }\r\n\r\n            let resetFlyRight = this._myParams.myAutoUpdateFlyRight && this._myParams.myResetFlyRightWhenZero;\r\n            if (resetFlyRight) {\r\n                this.resetFlyRight();\r\n            }\r\n        } else {\r\n\r\n            forward = conversionRotationQuat.quat_getForward(forward);\r\n            right = conversionRotationQuat.quat_getRight(right);\r\n            up = conversionRotationQuat.quat_getUp(up);\r\n\r\n            if (direction3DUp != null) {\r\n                let upsideDown = !direction3DUp.vec3_isConcordant(up);\r\n\r\n                direction3DUpNegate = direction3DUp.vec3_negate(direction3DUpNegate);\r\n\r\n                // Check if it is flying based on the convert transform orientation \r\n                if (this._myParams.myAutoUpdateFlyForward) {\r\n                    let angleForwardWithDirectionUp = forward.vec3_angle(direction3DUp);\r\n                    this._myFlyingForward = this._myFlyingForward ||\r\n                        (angleForwardWithDirectionUp < 90 - this._myParams.myMinAngleToFlyForwardUp || angleForwardWithDirectionUp > 90 + this._myParams.myMinAngleToFlyForwardDown);\r\n                }\r\n\r\n                if (this._myParams.myAutoUpdateFlyRight) {\r\n                    let angleRightWithDirectionUp = right.vec3_angle(direction3DUp);\r\n                    this._myFlyingRight = this._myFlyingRight ||\r\n                        (angleRightWithDirectionUp < 90 - this._myParams.myMinAngleToFlyRightUp || angleRightWithDirectionUp > 90 + this._myParams.myMinAngleToFlyRightDown);\r\n                }\r\n\r\n                // Remove the component to prevent flying, if needed\r\n                if (!this._myFlyingForward) {\r\n                    // If the forward is too similar to the up (or down) take the last valid forward\r\n                    if (this._myParams.myAdjustForwardWhenCloseToUp && !this._myLastValidFlatForward.vec3_isZero(Math.PP_EPSILON) &&\r\n                        (forward.vec3_angle(direction3DUp) < this._myParams.myAdjustForwardWhenCloseToUpAngleThreshold ||\r\n                            forward.vec3_angle(direction3DUpNegate) < this._myParams.myAdjustForwardWhenCloseToUpAngleThreshold)) {\r\n                        forward.pp_copy(this._myLastValidFlatForward);\r\n                    } else if (upsideDown && this._myParams.myInvertForwardWhenUpsideDown) {\r\n                        forward.vec3_negate(forward);\r\n                    }\r\n\r\n                    forward = forward.vec3_removeComponentAlongAxis(direction3DUp, forward);\r\n                    forward.vec3_normalize(forward);\r\n\r\n\r\n                    if (forward.vec3_isZero(Math.PP_EPSILON)) {\r\n                        if (!this._myLastValidFlatForward.vec3_isZero(Math.PP_EPSILON)) {\r\n                            forward.pp_copy(this._myLastValidFlatForward);\r\n                        } else {\r\n                            forward.vec3_set(0, 0, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myFlyingRight) {\r\n                    // If the right is too similar to the up (or down) take the last valid right\r\n                    if (this._myParams.myAdjustRightWhenCloseToUp && !this._myLastValidFlatRight.vec3_isZero(Math.PP_EPSILON) &&\r\n                        (right.vec3_angle(direction3DUp) < this._myParams.myAdjustRightWhenCloseToUpAngleThreshold ||\r\n                            right.vec3_angle(direction3DUpNegate) < this._myParams.myAdjustRightWhenCloseToUpAngleThreshold)) {\r\n                        right.pp_copy(this._myLastValidFlatRight);\r\n                    } else if (upsideDown && this._myParams.myInvertRightWhenUpsideDown) {\r\n                        right.vec3_negate(right);\r\n                    }\r\n\r\n                    right = right.vec3_removeComponentAlongAxis(direction3DUp, right);\r\n                    right.vec3_normalize(right);\r\n\r\n                    if (right.vec3_isZero(Math.PP_EPSILON)) {\r\n                        if (!this._myLastValidFlatRight.vec3_isZero(Math.PP_EPSILON)) {\r\n                            right.pp_copy(this._myLastValidFlatRight);\r\n                        } else {\r\n                            right.vec3_set(-1, 0, 0);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update last valid\r\n                if ((forward.vec3_angle(direction3DUp) >= this._myParams.myAdjustForwardWhenCloseToUpAngleThreshold && forward.vec3_angle(direction3DUpNegate) >= this._myParams.myAdjustForwardWhenCloseToUpAngleThreshold) ||\r\n                    (direction2D[1] != 0 && this._myLastValidFlatForward.vec3_isZero(Math.PP_EPSILON))) {\r\n                    this._myLastValidFlatForward = forward.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatForward);\r\n                    this._myLastValidFlatForward.vec3_normalize(this._myLastValidFlatForward);\r\n                }\r\n\r\n                if ((right.vec3_angle(direction3DUp) >= this._myParams.myAdjustRightWhenCloseToUpAngleThreshold && right.vec3_angle(direction3DUpNegate) >= this._myParams.myAdjustRightWhenCloseToUpAngleThreshold) ||\r\n                    (direction2D[0] != 0 && this._myLastValidFlatRight.vec3_isZero(Math.PP_EPSILON))) {\r\n                    this._myLastValidFlatRight = right.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatRight);\r\n                    this._myLastValidFlatRight.vec3_normalize(this._myLastValidFlatRight);\r\n                }\r\n            }\r\n\r\n            // Compute direction 3D\r\n            outDirection3D = right.vec3_scale(direction2D[0], rightScaled).vec3_add(forward.vec3_scale(direction2D[1], forwardScaled), outDirection3D);\r\n\r\n            if (direction3DUp != null && !this._myFlyingForward && !this._myFlyingRight) {\r\n                outDirection3D = outDirection3D.vec3_removeComponentAlongAxis(direction3DUp, outDirection3D);\r\n            }\r\n\r\n            outDirection3D.vec3_normalize(outDirection3D);\r\n        }\r\n\r\n        this._myLastConvertRotationQuat.quat_copy(conversionRotationQuat);\r\n        this._myLastConvertRotationQuatValid = true;\r\n\r\n        return outDirection3D;\r\n    };\r\n}();", "import { EasingFunction } from \"../../../cauldron/js/utils/math_utils\";\r\n\r\n// You can just put fromNumberOverFactor if u want a number that doesn't actually change -> new NumberOverFactor(0)\r\nexport class NumberOverFactor {\r\n\r\n    constructor(fromNumberOverFactor, toNumberOverFactor = null, fromFactor = 0, toFactor = 0, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (toNumberOverFactor == null) {\r\n            toNumberOverFactor = fromNumberOverFactor;\r\n        }\r\n\r\n        this._myFromNumber = fromNumberOverFactor;\r\n        this._myToNumber = toNumberOverFactor;\r\n\r\n        this._myFromFactor = fromFactor;\r\n        this._myToFactor = toFactor;\r\n\r\n        this._myEasingFunction = easingFunction;\r\n        this._myRoundingFunction = roundingFunction;    // Signature: function(numberToRound, fromNumberOverFactor = null, toNumberOverFactor = null) -> int, Math.round/floor/ceil can be used\r\n    }\r\n\r\n    get(factor) {\r\n        let interpolationFactor = this._myEasingFunction(Math.pp_mapToRange(factor, this._myFromFactor, this._myToFactor, 0, 1));\r\n        let numberOverFactor = Math.pp_lerp(this._myFromNumber, this._myToNumber, interpolationFactor);\r\n\r\n        if (this._myRoundingFunction) {\r\n            numberOverFactor = this._myRoundingFunction(numberOverFactor, this._myFromNumber, this._myToNumber);\r\n        }\r\n\r\n        return numberOverFactor;\r\n    }\r\n\r\n    getAverage(factor) {\r\n        return this.get(factor);\r\n    }\r\n\r\n    getRange(factor) {\r\n        let numberOverFactor = this.get(factor);\r\n        return [numberOverFactor, numberOverFactor];\r\n    }\r\n\r\n    getMax(factor) {\r\n        return this.get(factor);\r\n    }\r\n\r\n    getMin(factor) {\r\n        return this.get(factor);\r\n    }\r\n\r\n    isInside(number, factor) {\r\n        let numberOverFactor = this.get(factor);\r\n\r\n        return numberOverFactor == number;\r\n    }\r\n\r\n    isInsideAngleRange(number, factor) {\r\n        return this.isInsideAngleRangeDegrees(number, factor);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, factor) {\r\n        let numberOverFactor = this.get(factor);\r\n\r\n        let clampedNumber = Math.pp_angleClampDegrees(number);\r\n        let clampedNumberOverFactor = Math.pp_angleClampDegrees(numberOverFactor);\r\n\r\n        return clampedNumber == clampedNumberOverFactor;\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, factor) {\r\n        let numberOverFactor = this.get(factor);\r\n\r\n        let clampedNumber = Math.pp_angleClampRadians(number);\r\n        let clampedNumberOverFactor = Math.pp_angleClampRadians(numberOverFactor);\r\n\r\n        return clampedNumber == clampedNumberOverFactor;\r\n    }\r\n}\r\n\r\nexport class IntOverFactor extends NumberOverFactor {\r\n\r\n    constructor(fromNumberOverFactor, toNumberOverFactor, fromFactor, toFactor, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, fromNumberOverFactor, toNumberOverFactor) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = fromNumberOverFactor <= toNumberOverFactor;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(fromNumberOverFactor, toNumberOverFactor, fromFactor, toFactor, easingFunction, roundingFunction);\r\n    }\r\n}\r\n\r\n// You can just put fromRange if u want a range that doesn't actually change -> new NumberOverFactor([1,25])\r\nexport class NumberRangeOverFactor {\r\n\r\n    constructor(fromRange, toRange = null, fromFactor = 0, toFactor = 0, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (toRange == null) {\r\n            toRange = fromRange;\r\n        }\r\n\r\n        this._myFromNumberOverFactor = new NumberOverFactor(fromRange[0], toRange[0], fromFactor, toFactor, easingFunction, roundingFunction);\r\n        this._myToNumberOverFactor = new NumberOverFactor(fromRange[1], toRange[1], fromFactor, toFactor, easingFunction, roundingFunction);\r\n\r\n        this._myRoundingFunction = roundingFunction;    // Signature: function(numberToRound, fromNumberOverFactor = null, toNumberOverFactor = null) -> int, Math.round/floor/ceil can be used\r\n    }\r\n\r\n    get(factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        let randomNumberOverFactor = null;\r\n\r\n        if (this._myRoundingFunction) {\r\n            randomNumberOverFactor = Math.pp_randomInt(fromNumberOverFactor, toNumberOverFactor);\r\n        } else {\r\n            randomNumberOverFactor = Math.pp_random(fromNumberOverFactor, toNumberOverFactor);\r\n        }\r\n\r\n        return randomNumberOverFactor;\r\n    }\r\n\r\n    getAverage(factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        let averageNumberOverFactor = (fromNumberOverFactor + toNumberOverFactor) / 2;\r\n        if (this._myRoundingFunction) {\r\n            averageNumberOverFactor = this._myRoundingFunction(averageNumberOverFactor, fromNumberOverFactor, toNumberOverFactor);\r\n        }\r\n\r\n        return averageNumberOverFactor;\r\n    }\r\n\r\n    getRange(factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        return [fromNumberOverFactor, toNumberOverFactor];\r\n    }\r\n\r\n    getMax(factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        return Math.max(fromNumberOverFactor, toNumberOverFactor);\r\n    }\r\n\r\n    getMin(factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        return Math.min(fromNumberOverFactor, toNumberOverFactor);\r\n    }\r\n\r\n    isInside(number, factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        let min = Math.min(fromNumberOverFactor, toNumberOverFactor);\r\n        let max = Math.max(fromNumberOverFactor, toNumberOverFactor);\r\n\r\n        return number >= min && number <= max;\r\n    }\r\n\r\n    isInsideAngleRange(number, factor) {\r\n        return this.isInsideAngleRangeDegrees(number, factor);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        return Math.pp_isInsideAngleRangeDegrees(number, fromNumberOverFactor, toNumberOverFactor);\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, factor) {\r\n        let fromNumberOverFactor = this._myFromNumberOverFactor.get(factor);\r\n        let toNumberOverFactor = this._myToNumberOverFactor.get(factor);\r\n\r\n        return Math.pp_isInsideAngleRangeRadians(number, fromNumberOverFactor, toNumberOverFactor);\r\n    }\r\n}\r\n\r\nexport class IntRangeOverFactor extends NumberRangeOverFactor {\r\n\r\n    constructor(fromRange, toRange, fromFactor, toFactor, easingFunction = EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, fromNumberOverFactor, toNumberOverFactor) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = fromNumberOverFactor <= toNumberOverFactor;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(fromRange, toRange, fromFactor, toFactor, easingFunction, roundingFunction);\r\n    }\r\n}", "import { Component, Emitter, PhysXComponent, Property } from \"@wonderlandengine/api\";\r\nimport { ComponentUtils } from \"../../cauldron/wl/utils/component_utils\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\n\r\nexport class GrabbableComponent extends Component {\r\n    static TypeName = \"pp-grabbable\";\r\n    static Properties = {\r\n        _myThrowLinearVelocityMultiplier: Property.float(1),\r\n        _myThrowAngularVelocityMultiplier: Property.float(1),\r\n        _myKinematicValueOnRelease: Property.enum([\"True\", \"False\", \"Own\"], \"False\"),\r\n        _myParentOnRelease: Property.enum([\"Scene\", \"Own\"], \"Own\")\r\n    };\r\n\r\n    init() {\r\n        this._myGrabbed = false;\r\n\r\n        this._myGrabber = null;\r\n\r\n        this._myOldParent = null;\r\n        this._myPhysX = null;\r\n        this._myOldKinematicValue = null;\r\n\r\n        this._myGrabEmitter = new Emitter();      // Signature: listener(grabber, grabbable)\r\n        this._myThrowEmitter = new Emitter();     // Signature: listener(grabber, grabbable)\r\n        this._myReleaseEmitter = new Emitter();   // Signature: listener(grabber, grabbable, isThrow)\r\n    }\r\n\r\n    start() {\r\n        this._myOldParent = this.object.pp_getParent();\r\n        this._myPhysX = this.object.pp_getComponent(PhysXComponent);\r\n    }\r\n\r\n    onDeactivate() {\r\n        this.release();\r\n    }\r\n\r\n    grab(grabber) {\r\n        if (!this.isGrabbed()) {\r\n            this._myOldKinematicValue = this._myPhysX.kinematic;\r\n        }\r\n\r\n        this.release();\r\n\r\n        this._myPhysX.kinematic = true;\r\n\r\n        this._myOldParent = this.object.pp_getParent();\r\n        this.object.pp_setParent(grabber);\r\n\r\n        this._myGrabbed = true;\r\n\r\n        this._myGrabEmitter.notify(grabber, this);\r\n    }\r\n\r\n    throw(linearVelocity, angularVelocity) {\r\n        if (this._myGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            // #TODO For now kinematic is not updated instantly, add the if as soon as it is\r\n            //if (!this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = linearVelocity.vec3_scale(this._myThrowLinearVelocityMultiplier);\r\n            this._myPhysX.angularVelocity = angularVelocity.vec3_scale(this._myThrowAngularVelocityMultiplier);\r\n            //}\r\n\r\n            this._myThrowEmitter.notify(grabber, this);\r\n            this._myReleaseEmitter.notify(grabber, this, true);\r\n        }\r\n    }\r\n\r\n    release() {\r\n        if (this._myGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            this._myReleaseEmitter.notify(grabber, this, false);\r\n        }\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        let linearVelocity = vec3_create();\r\n\r\n        this._myPhysX.linearVelocity.vec3_clone(linearVelocity);\r\n\r\n        return linearVelocity;\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        let angularVelocityDegrees = vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_toDegrees(angularVelocityDegrees);\r\n\r\n        return angularVelocityDegrees;\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        let angularVelocityRadians = vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_clone(angularVelocityRadians);\r\n\r\n        return angularVelocityRadians;\r\n    }\r\n\r\n    isGrabbed() {\r\n        return this._myGrabbed;\r\n    }\r\n\r\n    getGrabber() {\r\n        return this._myGrabber;\r\n    }\r\n\r\n    registerGrabEventListener(id, listener) {\r\n        this._myGrabEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabEmitter.remove(id);\r\n    }\r\n\r\n    registerThrowEventListener(id, listener) {\r\n        this._myThrowEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowEmitter.remove(id);\r\n    }\r\n\r\n    registerReleaseEventListener(id, listener) {\r\n        this._myReleaseEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterReleaseEventListener(id) {\r\n        this._myReleaseEmitter.remove(id);\r\n    }\r\n\r\n    _release() {\r\n        if (this._myParentOnRelease == 0) {\r\n            this.object.pp_setParent(Globals.getSceneObjects(this.engine).myDynamics);\r\n        } else {\r\n            this.object.pp_setParent(this._myOldParent);\r\n        }\r\n\r\n        this._myGrabbed = false;\r\n        this._myGrabber = null;\r\n\r\n        if (this._myKinematicValueOnRelease == 0) {\r\n            this._myPhysX.kinematic = true;\r\n        } else if (this._myKinematicValueOnRelease == 1) {\r\n            this._myPhysX.kinematic = false;\r\n        } else if (this._myOldKinematicValue != null) {\r\n            this._myPhysX.kinematic = this._myOldKinematicValue;\r\n        }\r\n\r\n        if (this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = vec3_create();\r\n            this._myPhysX.angularVelocity = vec3_create();\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = ComponentUtils.cloneDefault(this, targetObject);\r\n\r\n        return clonedComponent;\r\n    }\r\n\r\n    pp_clonePostProcess(clonedComponent) {\r\n        clonedComponent.start();\r\n    }\r\n}", "import { Component, Emitter, PhysXComponent, Property } from \"@wonderlandengine/api\";\r\nimport { EasingFunction } from \"../../cauldron/js/utils/math_utils\";\r\nimport { PhysicsCollisionCollector } from \"../../cauldron/physics/physics_collision_collector\";\r\nimport { HandednessIndex } from \"../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../input/cauldron/input_utils\";\r\nimport { GamepadButtonEvent, GamepadButtonID } from \"../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { GrabbableComponent } from \"./grabbable_component\";\r\n\r\nexport class GrabberHandComponent extends Component {\r\n    static TypeName = \"pp-grabber-hand\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myGrabButton: Property.enum([\"Select\", \"Squeeze\", \"Both\", \"Both Exclusive\"], \"Squeeze\"), // @\"Both Exclusive\" means u can use both buttons but you have to use the same button you grabbed with to throw\r\n        _mySnapOnPivot: Property.bool(false),\r\n        _myMaxNumberOfObjects: Property.int(1), // How many objects you can grab at the same time\r\n\r\n        // ADVANCED SETTINGS\r\n        _myThrowVelocitySource: Property.enum([\"Hand\", \"Grabbable\"], \"Hand\"),\r\n        _myThrowLinearVelocityMultiplier: Property.float(1), // Multiply the overall throw speed, so slow throws will be multiplied too\r\n        _myThrowMaxLinearSpeed: Property.float(15),\r\n        _myThrowAngularVelocityMultiplier: Property.float(0.5),\r\n        _myThrowMaxAngularSpeed: Property.float(1080), // @Degrees\r\n        _myThrowLinearVelocityBoost: Property.float(1.75),   // This boost is applied from 0% to 100% based on how fast you throw, so slow throws are not affected\r\n        _myThrowLinearVelocityBoostMinSpeedThreshold: Property.float(0.6),   // 0% boost is applied if plain throw speed is under this value\r\n        _myThrowLinearVelocityBoostMaxSpeedThreshold: Property.float(2.5),   // 100% boost is applied if plain throw speed is over this value\r\n    };\r\n\r\n    init() {\r\n        this._myGrabbables = [];\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myActiveGrabButton = null;\r\n\r\n        this._myLinearVelocityHistorySize = 5;\r\n        this._myLinearVelocityHistorySpeedAverageSamplesFromStart = 1;\r\n        this._myLinearVelocityHistoryDirectionAverageSamplesFromStart = 3;\r\n        this._myLinearVelocityHistoryDirectionAverageSkipFromStart = 0;\r\n\r\n        this._myHandLinearVelocityHistory = new Array(this._myLinearVelocityHistorySize);\r\n        this._myHandLinearVelocityHistory.fill(vec3_create());\r\n\r\n        this._myAngularVelocityHistorySize = 1;\r\n        this._myHandAngularVelocityHistory = new Array(this._myAngularVelocityHistorySize);\r\n        this._myHandAngularVelocityHistory.fill(vec3_create());\r\n\r\n        this._myThrowMaxAngularSpeedRadians = Math.pp_toRadians(this._myThrowMaxAngularSpeed);\r\n\r\n        this._myGrabEmitter = new Emitter();      // Signature: listener(grabber, grabbable)\r\n        this._myThrowEmitter = new Emitter();     // Signature: listener(grabber, grabbable)\r\n\r\n        this._myDebugEnabled = false;\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandedness == HandednessIndex.LEFT) {\r\n            this._myGamepad = Globals.getLeftGamepad(this.engine);\r\n        } else {\r\n            this._myGamepad = Globals.getRightGamepad(this.engine);\r\n        }\r\n\r\n        this._myPhysX = this.object.pp_getComponent(PhysXComponent);\r\n        this._myCollisionsCollector = new PhysicsCollisionCollector(this._myPhysX, true);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        if (this._myGrabbables.length > 0) {\r\n            this._updateLinearVelocityHistory();\r\n            this._updateAngularVelocityHistory();\r\n        }\r\n    }\r\n\r\n    grab(grabButton = null) {\r\n        this._grab(grabButton);\r\n    }\r\n\r\n    throw(throwButton = null) {\r\n        this._throw(throwButton);\r\n    }\r\n\r\n    getGamepad() {\r\n        return this._myGamepad;\r\n    }\r\n\r\n    getHandedness() {\r\n        return InputUtils.getHandednessByIndex(this._myHandedness);\r\n    }\r\n\r\n    registerGrabEventListener(id, listener) {\r\n        this._myGrabEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabEmitter.remove(id);\r\n    }\r\n\r\n    registerThrowEventListener(id, listener) {\r\n        this._myThrowEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowEmitter.remove(id);\r\n    }\r\n\r\n    onActivate() {\r\n        if (this._myGamepad != null) {\r\n            if (this._myGrabButton == 0) {\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SELECT));\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SELECT));\r\n            } else if (this._myGrabButton == 1) {\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SQUEEZE));\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SQUEEZE));\r\n            } else {\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SQUEEZE));\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SQUEEZE));\r\n\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, GamepadButtonID.SELECT));\r\n                this._myGamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, GamepadButtonID.SELECT));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        this.throw();\r\n\r\n        if (this._myGamepad != null) {\r\n            if (this._myGrabButton == 0) {\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this);\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this);\r\n            } else if (this._myGrabButton == 1) {\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this);\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this);\r\n            } else {\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_START, this);\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.PRESS_END, this);\r\n\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_START, this);\r\n                this._myGamepad.unregisterButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.PRESS_END, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    _grab(grabButton) {\r\n        if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == grabButton || grabButton == null) {\r\n            let grabbablesToGrab = [];\r\n\r\n            let collisions = this._myCollisionsCollector.getCollisions();\r\n            for (let i = 0; i < collisions.length; i++) {\r\n                let grabbable = collisions[i].pp_getComponent(GrabbableComponent);\r\n                if (grabbable && grabbable.active) {\r\n                    grabbablesToGrab.push(grabbable);\r\n                }\r\n            }\r\n\r\n            let grabberPosition = this.object.pp_getPosition();\r\n            grabbablesToGrab.sort(function (first, second) {\r\n                let firstPosition = first.object.pp_getPosition();\r\n                let secondPosition = second.object.pp_getPosition();\r\n\r\n                let firstDistance = firstPosition.vec3_distance(grabberPosition);\r\n                let secondDistance = secondPosition.vec3_distance(grabberPosition);\r\n\r\n                return Math.pp_sign(firstDistance - secondDistance, 0);\r\n            });\r\n\r\n            for (let grabbableToGrab of grabbablesToGrab) {\r\n                if (!this._isAlreadyGrabbed(grabbableToGrab)) {\r\n                    let grabbableData = new _GrabberHandComponentGrabbableData(grabbableToGrab, this._myThrowVelocitySource == 1, this._myLinearVelocityHistorySize, this._myAngularVelocityHistorySize);\r\n                    this._myGrabbables.push(grabbableData);\r\n                    grabbableToGrab.grab(this.object);\r\n                    grabbableToGrab.registerReleaseEventListener(this, this._onRelease.bind(this));\r\n\r\n                    if (this._mySnapOnPivot) {\r\n                        grabbableToGrab.object.pp_resetPositionLocal();\r\n                    }\r\n\r\n                    this._myGrabEmitter.notify(this, grabbableToGrab);\r\n                }\r\n\r\n                if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._myGrabbables.length > 0) {\r\n                if (this._myActiveGrabButton == null) {\r\n                    this._myActiveGrabButton = grabButton;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _throw(throwButton) {\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == throwButton || throwButton == null) {\r\n            if (this._myGrabbables.length > 0) {\r\n                let linearVelocity = null;\r\n                let angularVelocity = null;\r\n\r\n                if (this._myThrowVelocitySource == 0) {\r\n                    linearVelocity = this._computeReleaseLinearVelocity(this._myHandLinearVelocityHistory);\r\n                    angularVelocity = this._computeReleaseAngularVelocity(this._myHandAngularVelocityHistory);\r\n                }\r\n\r\n                for (let grabbableData of this._myGrabbables) {\r\n                    let grabbable = grabbableData.getGrabbable();\r\n\r\n                    grabbable.unregisterReleaseEventListener(this);\r\n\r\n                    if (this._myThrowVelocitySource == 1) {\r\n                        linearVelocity = this._computeReleaseLinearVelocity(grabbableData.getLinearVelocityHistory());\r\n                        angularVelocity = this._computeReleaseAngularVelocity(grabbableData.getAngularVelocityHistory());\r\n                    }\r\n\r\n                    grabbable.throw(linearVelocity, angularVelocity);\r\n\r\n                    this._myThrowEmitter.notify(this, grabbable);\r\n                }\r\n\r\n                this._myGrabbables = [];\r\n            }\r\n\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    }\r\n\r\n    _onRelease(grabber, grabbable) {\r\n        grabbable.unregisterReleaseEventListener(this);\r\n        this._myGrabbables.pp_remove(element => element.getGrabbable() == grabbable);\r\n\r\n        if (this._myGrabbables.length <= 0) {\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    }\r\n\r\n    _updateLinearVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandLinearVelocityHistory.unshift(handPose.getLinearVelocity());\r\n        this._myHandLinearVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateLinearVelocityHistory();\r\n        }\r\n    }\r\n\r\n    _updateAngularVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandAngularVelocityHistory.unshift(handPose.getAngularVelocityRadians());\r\n        this._myHandAngularVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateAngularVelocityHistory();\r\n        }\r\n    }\r\n\r\n    _computeReleaseLinearVelocity(linearVelocityHistory) {\r\n        // Speed\r\n        let speed = linearVelocityHistory[0].vec3_length();\r\n        for (let i = 1; i < this._myLinearVelocityHistorySpeedAverageSamplesFromStart; i++) {\r\n            speed += linearVelocityHistory[i].vec3_length();\r\n        }\r\n        speed /= this._myLinearVelocityHistorySpeedAverageSamplesFromStart;\r\n\r\n        // This way I give an increasing and smooth boost to the throw so that when u want to perform a weak throw, the value is not changed, but if u put more speed\r\n        // it will be boosted to make it easier and still feel good and natural (value does not increase suddenly)\r\n        let speedEaseMultiplier = Math.pp_mapToRange(speed, this._myThrowLinearVelocityBoostMinSpeedThreshold, this._myThrowLinearVelocityBoostMaxSpeedThreshold, 0, 1);\r\n        speedEaseMultiplier = EasingFunction.easeIn(speedEaseMultiplier);\r\n\r\n        // Add the boost to the speed\r\n        let extraSpeed = speed * (speedEaseMultiplier * this._myThrowLinearVelocityBoost);\r\n        speed += extraSpeed;\r\n        speed *= this._myThrowLinearVelocityMultiplier;\r\n        speed = Math.pp_clamp(speed, 0, this._myThrowMaxLinearSpeed);\r\n\r\n        if (this._myDebugEnabled && Globals.isDebugEnabled(this.engine)) {\r\n            this._debugDirectionLines(linearVelocityHistory);\r\n        }\r\n\r\n        // Direction\r\n        let directionCurrentWeight = this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let lastDirectionIndex = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let direction = vec3_create();\r\n        for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n            let currentDirection = linearVelocityHistory[i];\r\n            currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n            direction.vec3_add(currentDirection, direction);\r\n\r\n            directionCurrentWeight--;\r\n        }\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    }\r\n\r\n    _computeReleaseAngularVelocity(angularVelocityHistory) {\r\n        let angularVelocity = angularVelocityHistory[0];\r\n\r\n        // Speed\r\n        let speed = angularVelocity.vec3_length();\r\n\r\n        speed = Math.pp_clamp(speed * this._myThrowAngularVelocityMultiplier, 0, this._myThrowMaxAngularSpeedRadians);\r\n\r\n        // Direction\r\n        let direction = angularVelocity;\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    }\r\n\r\n    _debugDirectionLines(linearVelocityHistory) {\r\n        for (let j = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart; j > this._myLinearVelocityHistoryDirectionAverageSkipFromStart; j--) {\r\n\r\n            let directionCurrentWeight = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let lastDirectionIndex = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let direction = vec3_create();\r\n            for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n                let currentDirection = linearVelocityHistory[i].pp_clone();\r\n                currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n                direction.vec3_add(currentDirection, direction);\r\n\r\n                directionCurrentWeight--;\r\n            }\r\n            direction.vec3_normalize(direction);\r\n\r\n            let color = 1 / j;\r\n\r\n            Globals.getDebugVisualManager(this.engine).drawLine(5, this.object.pp_getPosition(), direction, 0.2, vec4_create(olor, color, color, 1));\r\n        }\r\n    }\r\n\r\n    _isAlreadyGrabbed(grabbable) {\r\n        let found = this._myGrabbables.pp_find(element => element.getGrabbable() == grabbable);\r\n        return found != null;\r\n    }\r\n}\r\n\r\nclass _GrabberHandComponentGrabbableData {\r\n\r\n    constructor(grabbable, useGrabbableAsVelocitySource, linearVelocityHistorySize, angularVelocityHistorySize) {\r\n        this._myGrabbable = grabbable;\r\n        this._myUseGrabbableAsVelocitySource = useGrabbableAsVelocitySource;\r\n\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory = new Array(linearVelocityHistorySize);\r\n            this._myLinearVelocityHistory.fill(vec3_create());\r\n\r\n            this._myAngularVelocityHistory = new Array(angularVelocityHistorySize);\r\n            this._myAngularVelocityHistory.fill(vec3_create());\r\n        }\r\n    }\r\n\r\n    getGrabbable() {\r\n        return this._myGrabbable;\r\n    }\r\n\r\n    getLinearVelocityHistory() {\r\n        return this._myLinearVelocityHistory;\r\n    }\r\n\r\n    getAngularVelocityHistory() {\r\n        return this._myAngularVelocityHistory;\r\n    }\r\n\r\n    updateLinearVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory.unshift(this._myGrabbable.getLinearVelocity());\r\n            this._myLinearVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    updateAngularVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myAngularVelocityHistory.unshift(this._myGrabbable.getAngularVelocityRadians());\r\n            this._myAngularVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myCollisionsCollector.destroy();\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\n\r\nlet _myDummyServer = null;\r\nlet _myUseDummyServerOnSDKMissing = false;\r\nlet _myUseDummyServerOnError = false;\r\n\r\nexport let CAError = {\r\n    DUMMY_NOT_INITIALIZED: 0,\r\n    CA_SDK_MISSING: 1,\r\n    SUBMIT_SCORE_FAILED: 2,\r\n    GET_LEADERBOARD_FAILED: 3,\r\n    GET_USER_FAILED: 4,\r\n    USER_HAS_NO_SCORE: 5\r\n};\r\n\r\nexport function setUseDummyServerOnSDKMissing(useDummyServer) {\r\n    _myUseDummyServerOnSDKMissing = useDummyServer;\r\n}\r\n\r\nexport function setUseDummyServerOnError(useDummyServer) {\r\n    _myUseDummyServerOnError = useDummyServer;\r\n}\r\n\r\nexport function setDummyServer(dummyServer) {\r\n    _myDummyServer = dummyServer;\r\n}\r\n\r\nexport function isUseDummyServerOnSDKMissing() {\r\n    return _myUseDummyServerOnSDKMissing;\r\n}\r\n\r\nexport function isUseDummyServerOnError() {\r\n    return _myUseDummyServerOnError;\r\n}\r\n\r\nexport function getDummyServer() {\r\n    return _myDummyServer;\r\n}\r\n\r\nexport function isSDKAvailable(engine = Globals.getMainEngine()) {\r\n    return \"casdk\" in Globals.getWindow(engine);\r\n}\r\n\r\nexport function getSDK(engine = Globals.getMainEngine()) {\r\n    return Globals.getWindow(engine).casdk;\r\n}\r\n\r\nexport function getLeaderboard(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback, useDummyServerOverride = null, engine = Globals.getMainEngine()) {\r\n    if (CAUtils.isSDKAvailable(engine)) {\r\n        let casdk = CAUtils.getSDK(engine);\r\n        if (!aroundPlayer) {\r\n            casdk.getLeaderboard(leaderboardID, ascending, aroundPlayer, scoresAmount).then(function (result) {\r\n                if (result.leaderboard) {\r\n                    if (onDoneCallback) {\r\n                        onDoneCallback(result.leaderboard);\r\n                    }\r\n                } else {\r\n                    if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                        (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                        CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                    } else if (onErrorCallback) {\r\n                        let error = {};\r\n                        error.reason = \"Get leaderboard failed\";\r\n                        error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                        onErrorCallback(error, result);\r\n                    }\r\n                }\r\n            }).catch(function (result) {\r\n                if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                    (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                    CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                } else if (onErrorCallback) {\r\n                    let error = {};\r\n                    error.reason = \"Get leaderboard failed\";\r\n                    error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                    onErrorCallback(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            CAUtils.getUser(\r\n                function (user) {\r\n                    let userName = user.displayName;\r\n                    casdk.getLeaderboard(leaderboardID, ascending, aroundPlayer, scoresAmount).then(function (result) {\r\n                        if (result.leaderboard) {\r\n                            let userValid = false;\r\n                            for (let value of result.leaderboard) {\r\n                                if (value.displayName == userName && value.score != 0) {\r\n                                    userValid = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (userValid) {\r\n                                if (onDoneCallback) {\r\n                                    onDoneCallback(result.leaderboard);\r\n                                }\r\n                            } else {\r\n                                if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                                    (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                                    CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                                } else if (onErrorCallback) {\r\n                                    let error = {};\r\n                                    error.reason = \"Searching for around player but the user has not submitted a score yet\";\r\n                                    error.type = CAError.USER_HAS_NO_SCORE;\r\n                                    onErrorCallback(error, result);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                                (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                                CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                            } else if (onErrorCallback) {\r\n                                let error = {};\r\n                                error.reason = \"Get leaderboard failed\";\r\n                                error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                                onErrorCallback(error, result);\r\n                            }\r\n                        }\r\n                    }).catch(function (result) {\r\n                        if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                            (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                            CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                        } else if (onErrorCallback) {\r\n                            let error = {};\r\n                            error.reason = \"Get leaderboard failed\";\r\n                            error.type = CAError.GET_LEADERBOARD_FAILED;\r\n                            onErrorCallback(error, result);\r\n                        }\r\n                    });\r\n\r\n                },\r\n                function () {\r\n                    if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n                        (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                        CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n                    } else if (onErrorCallback) {\r\n                        let error = {};\r\n                        error.reason = \"Searching for around player but the user can't be retrieved\";\r\n                        error.type = CAError.GET_USER_FAILED;\r\n                        onErrorCallback(error, result);\r\n                    }\r\n                },\r\n                false,\r\n                engine);\r\n        }\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.getLeaderboard != null &&\r\n            (_myUseDummyServerOnSDKMissing && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n            CAUtils.getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n        } else if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            onErrorCallback(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getLeaderboardDummy(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.getLeaderboard(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback);\r\n    } else {\r\n        if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            onErrorCallback(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function submitScore(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback, useDummyServerOverride = null, engine = Globals.getMainEngine()) {\r\n    if (CAUtils.isSDKAvailable(engine)) {\r\n        let casdk = CAUtils.getSDK(engine);\r\n\r\n        casdk.submitScore(leaderboardID, scoreToSubmit).then(function (result) {\r\n            if (result.error) {\r\n                if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n                    (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                    CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback);\r\n                } else if (onErrorCallback) {\r\n                    let error = {};\r\n                    error.reason = \"Submit score failed\";\r\n                    error.type = CAError.SUBMIT_SCORE_FAILED;\r\n                    onErrorCallback(error, result);\r\n                }\r\n            } else {\r\n                onDoneCallback();\r\n            }\r\n        }).catch(function (result) {\r\n            if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n                (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback);\r\n            } else if (onErrorCallback) {\r\n                let error = {};\r\n                error.reason = \"Submit score failed\";\r\n                error.type = CAError.SUBMIT_SCORE_FAILED;\r\n                onErrorCallback(error, result);\r\n            }\r\n        });\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.submitScore != null &&\r\n            (_myUseDummyServerOnSDKMissing && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n            CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback);\r\n        } else if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            onErrorCallback(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function submitScoreDummy(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.submitScore(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback);\r\n    } else {\r\n        if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            onErrorCallback(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUser(onDoneCallback, onErrorCallback, useDummyServerOverride = null, engine = Globals.getMainEngine()) {\r\n    if (CAUtils.isSDKAvailable(engine)) {\r\n        let casdk = CAUtils.getSDK(engine);\r\n\r\n        casdk.getUser().then(function (result) {\r\n            if (result.user) {\r\n                if (onDoneCallback) {\r\n                    onDoneCallback(result.user);\r\n                }\r\n            } else {\r\n                if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n                    (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                    CAUtils.getUserDummy(onDoneCallback, onErrorCallback);\r\n                } else if (onErrorCallback) {\r\n                    let error = {};\r\n                    error.reason = \"Get user failed\";\r\n                    error.type = CAError.GET_USER_FAILED;\r\n                    onErrorCallback(error, result);\r\n                }\r\n            }\r\n        }).catch(function (result) {\r\n            if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n                (_myUseDummyServerOnError && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n                CAUtils.getUserDummy(onDoneCallback, onErrorCallback);\r\n            } else if (onErrorCallback) {\r\n                let error = {};\r\n                error.reason = \"Get user failed\";\r\n                error.type = CAError.GET_USER_FAILED;\r\n                onErrorCallback(error, result);\r\n            }\r\n        });\r\n    } else {\r\n        if (_myDummyServer != null && _myDummyServer.getUser != null &&\r\n            (_myUseDummyServerOnSDKMissing && useDummyServerOverride == null) || (useDummyServerOverride != null && useDummyServerOverride)) {\r\n            CAUtils.getUserDummy(onDoneCallback, onErrorCallback);\r\n        } else if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Construct Arcade SDK missing\";\r\n            error.type = CAError.CA_SDK_MISSING;\r\n            onErrorCallback(error, null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getUserDummy(onDoneCallback, onErrorCallback) {\r\n    if (_myDummyServer) {\r\n        _myDummyServer.getUser(onDoneCallback, onErrorCallback);\r\n    } else {\r\n        if (onErrorCallback) {\r\n            let error = {};\r\n            error.reason = \"Dummy server not initialized\";\r\n            error.type = CAError.DUMMY_NOT_INITIALIZED;\r\n            onErrorCallback(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport let CAUtils = {\r\n    setUseDummyServerOnSDKMissing,\r\n    setUseDummyServerOnError,\r\n    setDummyServer,\r\n    isUseDummyServerOnSDKMissing,\r\n    isUseDummyServerOnError,\r\n    getDummyServer,\r\n    isSDKAvailable,\r\n    getSDK,\r\n    getLeaderboard,\r\n    getLeaderboardDummy,\r\n    submitScore,\r\n    submitScoreDummy,\r\n    getUser,\r\n    getUserDummy\r\n};", "import { Globals } from \"../../../pp/globals\";\r\nimport { CAUtils } from \"./ca_utils\";\r\n\r\nexport class CADummyServer {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, ascending, aroundPlayer, scoresAmount, onDoneCallback, onErrorCallback) {\r\n        let leaderboard = null;\r\n\r\n        if (CAUtils.isSDKAvailable(this._myEngine)) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (aroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (onDoneCallback) {\r\n            onDoneCallback(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, onDoneCallback, onErrorCallback) {\r\n        if (onDoneCallback) {\r\n            onDoneCallback();\r\n        }\r\n    }\r\n\r\n    getUser(onDoneCallback, onErrorCallback) {\r\n        let user = {};\r\n        user.displayName = \"J\";\r\n\r\n        if (onDoneCallback) {\r\n            onDoneCallback(user);\r\n        }\r\n    }\r\n}", "import { Component, Property, TextComponent } from \"@wonderlandengine/api\";\r\nimport { ComponentUtils } from \"../../../cauldron/wl/utils/component_utils\";\r\nimport { CADummyServer } from \"./ca_dummy_server\";\r\nimport { CAUtils } from \"./ca_utils\";\r\n\r\nexport class CADisplayLeaderboardComponent extends Component {\r\n    static TypeName = \"pp-ca-display-leaderboard\";\r\n    static Properties = {\r\n        _myLeaderboardID: Property.string(\"\"),\r\n        _myLocal: Property.bool(false),\r\n        _myAscending: Property.bool(false),\r\n        _myScoresAmount: Property.int(10),\r\n        _myScoreFormat: Property.enum([\"Value\", \"Hours:Minutes:Seconds\", \"Minutes:Seconds\", \"Seconds\", \"Hours:Minutes\", \"Minutes\"], \"Value\"),\r\n        _myPositionAndUsernameSeparator: Property.string(\" - \"),\r\n        _myNumberOfLinesBetweenScores: Property.int(1),\r\n        _myAddDefaultCADummyServer: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myNamesTextComponent = null;\r\n        this._myScoresTextComponent = null;\r\n\r\n        this._myStarted = false;\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        if (this._myAddDefaultCADummyServer) {\r\n            CAUtils.setDummyServer(new CADummyServer());\r\n            CAUtils.setUseDummyServerOnSDKMissing(true);\r\n            CAUtils.setUseDummyServerOnError(true);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._myStarted) {\r\n            this._myStarted = true;\r\n\r\n            let namesObject = this.object.pp_getObjectByName(\"Names\");\r\n            let scoresObject = this.object.pp_getObjectByName(\"Scores\");\r\n\r\n            if (namesObject != null && scoresObject != null) {\r\n                this._myNamesTextComponent = namesObject.pp_getComponent(TextComponent);\r\n                this._myScoresTextComponent = scoresObject.pp_getComponent(TextComponent);\r\n            }\r\n\r\n            this.updateLeaderboard();\r\n        }\r\n    }\r\n\r\n    updateLeaderboard() {\r\n        CAUtils.getLeaderboard(this._myLeaderboardID, this._myAscending, this._myLocal, this._myScoresAmount, this._onLeaderboardRetrieved.bind(this), undefined, undefined, this.engine);\r\n    }\r\n\r\n    _onLeaderboardRetrieved(leaderboard) {\r\n        if (this._myDestroyed) return;\r\n\r\n        let namesText = \"\";\r\n        let scoresText = \"\";\r\n\r\n        let maxRankDigit = 0;\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            if (rank.toFixed(0).length > maxRankDigit) {\r\n                maxRankDigit = rank.toFixed(0).length;\r\n            }\r\n        }\r\n\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            let fixedRank = rank.toFixed(0);\r\n            while (fixedRank.length < maxRankDigit) {\r\n                fixedRank = \"0\".concat(fixedRank);\r\n            }\r\n\r\n            let newlines = \"\\n\";\r\n            for (let i = 0; i < this._myNumberOfLinesBetweenScores; i++) {\r\n                newlines = newlines + \"\\n\";\r\n            }\r\n\r\n            namesText = namesText.concat(fixedRank, this._myPositionAndUsernameSeparator, value.displayName, newlines);\r\n\r\n            let convertedScore = this._formatScore(value.score);\r\n            scoresText = scoresText.concat(convertedScore, newlines);\r\n        }\r\n\r\n        if (this._myNamesTextComponent != null && this._myScoresTextComponent != null) {\r\n            this._myNamesTextComponent.text = namesText;\r\n            this._myScoresTextComponent.text = scoresText;\r\n        }\r\n    }\r\n\r\n    _formatScore(score) {\r\n        let convertedScore = score.toString();\r\n\r\n        if (this._myScoreFormat == 1) {\r\n            convertedScore = this._formatTime(score, true, true, true);\r\n        } else if (this._myScoreFormat == 2) {\r\n            convertedScore = this._formatTime(score, false, true, true);\r\n        } else if (this._myScoreFormat == 3) {\r\n            convertedScore = this._formatTime(score, false, false, true);\r\n        } else if (this._myScoreFormat == 4) {\r\n            convertedScore = this._formatTime(score, true, true, false);\r\n        } else if (this._myScoreFormat == 5) {\r\n            convertedScore = this._formatTime(score, false, true, false);\r\n        }\r\n\r\n        return convertedScore;\r\n    }\r\n\r\n    _formatTime(score, displayHours, displayMinutes, displaySeconds) {\r\n        let time = Math.floor(score / 1000);\r\n\r\n        let hours = 0;\r\n        if (displayHours) {\r\n            hours = Math.floor(time / 3600);\r\n            time -= hours * 3600;\r\n        }\r\n\r\n        let minutes = 0;\r\n        if (displayMinutes) {\r\n            minutes = Math.floor(time / 60);\r\n            time -= minutes * 60;\r\n        }\r\n\r\n        let seconds = 0;\r\n        if (displaySeconds) {\r\n            seconds = Math.floor(time);\r\n        }\r\n\r\n        let convertedTime = \"\";\r\n\r\n        if (displaySeconds) {\r\n            convertedTime = (seconds.toFixed(0).length < 2 && (displayMinutes || displayHours)) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        }\r\n\r\n        if (displayMinutes) {\r\n            convertedTime = ((minutes.toFixed(0).length < 2 && (displaySeconds || displayHours)) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0)) + (displaySeconds ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        if (displayHours) {\r\n            convertedTime = ((hours.toFixed(0).length < 2 && (displaySeconds || displayMinutes)) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0)) + (displayMinutes ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        return convertedTime;\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = ComponentUtils.cloneDefault(this, targetObject);\r\n\r\n        return clonedComponent;\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myDestroyed = true;\r\n    }\r\n}", "import { PhysicsLayerFlags } from \"../../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { RaycastHit } from \"../../../../../../cauldron/physics/physics_raycast_params\";\r\nimport { quat_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CollisionCheckParams {\r\n\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n        this.mySplitMovementMaxLength = 0;\r\n        this.mySplitMovementMaxStepsEnabled = false;\r\n        this.mySplitMovementMaxSteps = 0;\r\n        this.mySplitMovementStepEqualLength = false;\r\n        this.mySplitMovementStepEqualLengthMinLength = 0;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = false;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = false;\r\n        this.mySplitMovementStopCallback = null;                        // Signature: callback(collisionRuntimeParams)\r\n        this.mySplitMovementStopReturnPrevious = false;\r\n\r\n        this.myRadius = 0;\r\n        this.myDistanceFromFeetToIgnore = 0;\r\n        this.myDistanceFromHeadToIgnore = 0;\r\n\r\n        this.myPositionOffsetLocal = vec3_create();\r\n        this.myRotationOffsetLocalQuat = quat_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        // Usually the horizontal movement is very small and it could be simply skipped has a check, the horizontal position check will be enough\r\n        // With small I mean that it's very unlikely that in 10 cm of movement in a frame u are going to hit something in between but not in the final position\r\n        // If u feel like the movement is bigger or want to be sure u can always enabled this\r\n        // If the movement is really that big it's probably better to use the mySplitMovementEnabled flag and split the movement check into smaller movements\r\n        this.myHorizontalMovementStepEnabled = false;\r\n        this.myHorizontalMovementStepMaxLength = 0;\r\n\r\n        this.myHorizontalMovementRadialStepAmount = 0;\r\n        this.myHorizontalMovementCheckDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckDiagonalInward = false;\r\n        this.myHorizontalMovementCheckStraight = false;\r\n        this.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this.myHorizontalMovementCheckVerticalStraight = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n\r\n        this.myHalfConeAngle = 0;\r\n        this.myHalfConeSliceAmount = 0;\r\n        this.myCheckConeBorder = false;\r\n        this.myCheckConeRay = false;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = true; // True gives less issues(tm), but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionCheckVerticalDirectionType = 0; // Somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n        // 0: check upward, gives less issues(tm) (hitting a very small step at the end of a slope /-) with a grounded movement (not fly or snapped to ceiling), but may also collide a bit more, resulting in less sliding\r\n        // 1: check downard, gives less issues(tm) with a ceiling-ed movement (not fly or snapped to ground), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n        // 2: check both directions, more expensive and better prevent collision, sliding more, but is more expensive and gives more issues            \r\n        //                                                                                                                                                      ___\r\n        // The issues(tm) means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n        // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n        // 0 avoid this issue for a grounded movement, 2 instead do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n        // The better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope\r\n        // The step that is created \"on the other side\" in fact can easily be ignored thanks to the myDistanceFromFeetToIgnore field\r\n        // If the level is properly created the best solution should be myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false and myHorizontalPositionCheckVerticalDirectionType = 0\r\n\r\n        this.myCheckHorizontalFixedForwardEnabled = false; // This is basically only useful if the cone angle is 180 degrees\r\n        this.myCheckHorizontalFixedForward = vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalPositionCheckEnabled = false;\r\n        this.myFeetRadius = 0;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = null;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = null;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = null;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = false;\r\n        this.myCheckVerticalFixedForward = vec3_create();\r\n        this.myCheckVerticalBothDirection = false;\r\n\r\n        this.mySnapOnGroundEnabled = false;\r\n        this.mySnapOnGroundExtraDistance = 0;\r\n        this.mySnapOnCeilingEnabled = false;\r\n        this.mySnapOnCeilingExtraDistance = 0;\r\n\r\n        this.myGroundPopOutEnabled = false;\r\n        this.myGroundPopOutExtraDistance = 0;\r\n        this.myCeilingPopOutEnabled = false;\r\n        this.myCeilingPopOutExtraDistance = 0;\r\n\r\n        this.myVerticalMovementReduceEnabled = false;\r\n\r\n        this.myGroundCircumferenceAddCenter = false;\r\n        this.myGroundCircumferenceSliceAmount = 0;\r\n        this.myGroundCircumferenceStepAmount = 0;\r\n        this.myGroundCircumferenceRotationPerStep = 0;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = false;\r\n\r\n        this.myCheckHeight = false;\r\n        this.myCheckHeightVerticalMovement = false;\r\n        this.myCheckHeightVerticalPosition = false;\r\n        this.myCheckHeightTopMovement = false;\r\n        this.myCheckHeightTopPosition = false;\r\n        this.myCheckHeightConeOnCollision = false;\r\n        this.myCheckHeightConeOnCollisionKeepHit = false;\r\n        // If true and myCheckHeightConeOnCollision is true, if the cone does not hit the height hit will be restored\r\n        // The fact that the cone does not hit could be due to the fact that it thinks that the collision can be ignored though, sop restoring can be a bit safer but also collide more\r\n\r\n        this.myHeightCheckStepAmountMovement = 0;\r\n        this.myHeightCheckStepAmountPosition = 0;\r\n        this.myCheckVerticalStraight = false;\r\n        this.myCheckVerticalDiagonalRayOutward = false;\r\n        this.myCheckVerticalDiagonalRayInward = false;\r\n        this.myCheckVerticalDiagonalBorderOutward = false;\r\n        this.myCheckVerticalDiagonalBorderInward = false;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this.myCheckVerticalSearchFartherVerticalHit = false; // Somewhat expensive, but can help fix sime sliding issues\r\n\r\n        this.myGroundAngleToIgnore = 0;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = null;\r\n        this.myCeilingAngleToIgnore = 0;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = null;\r\n\r\n        this.myHeight = 0;\r\n\r\n        this.myComputeGroundInfoEnabled = false;\r\n        this.myComputeCeilingInfoEnabled = false;\r\n        this.myDistanceToBeOnGround = 0;\r\n        this.myDistanceToComputeGroundInfo = 0;\r\n        this.myDistanceToBeOnCeiling = 0;\r\n        this.myDistanceToComputeCeilingInfo = 0;\r\n        this.myVerticalFixToBeOnGround = 0;\r\n        this.myVerticalFixToComputeGroundInfo = 0;\r\n        this.myVerticalFixToBeOnCeiling = 0;\r\n        this.myVerticalFixToComputeCeilingInfo = 0;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnGroundIfInsideHit = false;\r\n        this.myIsOnCeilingIfInsideHit = false;\r\n        this.myIsOnGroundMaxSurfaceAngle = null;\r\n        this.myIsOnCeilingMaxSurfaceAngle = null;\r\n        this.myFindGroundDistanceMaxOutsideDistance = 0;\r\n        this.myFindGroundDistanceMaxInsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxInsideDistance = 0;\r\n\r\n        this.myAllowGroundSteepFix = false;\r\n        this.myAllowCeilingSteepFix = false;\r\n        this.myMustStayOnGround = false;\r\n        this.myMustStayOnCeiling = false;\r\n        this.myMustStayOnValidGroundAngleDownhill = false;\r\n        this.myMustStayOnValidCeilingAngleDownhill = false;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = false;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = false;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = false;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = false;\r\n        this.myMustStayBelowGroundAngleDownhill = null;\r\n        this.myMustStayBelowCeilingAngleDownhill = null;\r\n        this.myMovementMustStayOnGroundHitAngle = null;\r\n        this.myMovementMustStayOnCeilingHitAngle = null;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = false;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = false;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = null;\r\n        this.myCheckTransformMustBeOnGroundAngle = null;\r\n        this.myTeleportMustBeOnCeilingAngle = null;\r\n        this.myCheckTransformMustBeOnCeilingAngle = null;\r\n\r\n        this.myTeleportMustBeOnGround = false;\r\n        this.myCheckTransformMustBeOnGround = false;\r\n        this.myTeleportMustBeOnCeiling = false;\r\n        this.myCheckTransformMustBeOnCeiling = false;\r\n\r\n        this.mySlidingEnabled = false;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = false;\r\n        this.mySlidingMaxAttempts = 0;\r\n        this.mySlidingCheckBothDirections = false;       // Expensive, 2 times the check for the whole horizontal movement!\r\n        // This can fix some edge cases in which u can get stuck instead of sliding\r\n        // It basically require that u also add flicker prevention\r\n\r\n        this.mySlidingFlickeringPreventionType = 0;      // Expensive, 2 times the check for the whole horizontal movement!\r\n        // 0: no prevention\r\n        // 1: use previous frame data to understand if the sliding could flicker, this avoid stopping the movement when the flicker would just last some frames, \r\n        //    but also allows a bit of flicker that stabilize after 2-3 frames\r\n        // 2: check when sliding collision angle is more then 90 degrees, prevents most flicker apart those on almost flat surfaces\r\n        // 3: check 2 + check when sliding movement angle is more then 85 degrees, prevents almost all flicker, even on almost flat surfaces\r\n        // 4: check every time\r\n        //\r\n        // From 3 and above you could have that the flicker prevents the movement when u expect it, because it's a more aggressive prevention\r\n        // In case a fluid movement is more important than a bit of flicker from time to time, 1 is a better choice (which is also less expensive than 3 and above)\r\n        // 2 is just a less expensive version of 3 (check less times) but also less precise, allowing more flickering\r\n\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = false;\r\n        // This flag make it so the prevention is done only if it was already sliding, this can lead to a few frames of flicker if u go toward a corner directly\r\n        // but allow the movement to be more fluid, avoiding getting stuck\r\n\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        // If the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // This help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // It's especially useful if combo-ed with mySlidingFlickeringPreventionType == 1, making it a bit less fluid but also less flickering\r\n\r\n        this.mySlidingAdjustSign90Degrees = false;\r\n\r\n        this.myHorizontalBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalObjectsToIgnore = [];\r\n\r\n        this.myVerticalBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalObjectsToIgnore = [];\r\n\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(startMovement, endMovement, currentPosition, currentTransformUp, currentTransformForward, currentHeight, collisionCheckParams, prevCollisionRuntimeParams, outCollisionRuntimeParams, outFixedMovement) -> outFixedMovement\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(collisionRuntimeParams) -> bool\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(collisionRuntimeParams) -> bool\r\n\r\n        this.myDebugEnabled = false;\r\n\r\n        this.myDebugHorizontalMovementEnabled = false;\r\n        this.myDebugHorizontalPositionEnabled = false;\r\n        this.myDebugVerticalMovementEnabled = false;\r\n        this.myDebugVerticalPositionEnabled = false;\r\n        this.myDebugSlidingEnabled = false;\r\n        this.myDebugGroundInfoEnabled = false;\r\n        this.myDebugCeilingInfoEnabled = false;\r\n        this.myDebugRuntimeParamsEnabled = false;\r\n        this.myDebugMovementEnabled = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n        this.mySplitMovementMaxLength = other.mySplitMovementMaxLength;\r\n        this.mySplitMovementMaxStepsEnabled = other.mySplitMovementMaxStepsEnabled;\r\n        this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n        this.mySplitMovementStepEqualLength = other.mySplitMovementStepEqualLength;\r\n        this.mySplitMovementStepEqualLengthMinLength = other.mySplitMovementStepEqualLengthMinLength;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = other.mySplitMovementStopWhenHorizontalMovementCanceled;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = other.mySplitMovementStopWhenVerticalMovementCanceled;\r\n        this.mySplitMovementStopCallback = other.mySplitMovementStopCallback;\r\n        this.mySplitMovementStopReturnPrevious = other.mySplitMovementStopReturnPrevious;\r\n\r\n        this.myRadius = other.myRadius;\r\n        this.myDistanceFromFeetToIgnore = other.myDistanceFromFeetToIgnore;\r\n        this.myDistanceFromHeadToIgnore = other.myDistanceFromHeadToIgnore;\r\n\r\n        this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n        this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n        this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n        this.myHorizontalMovementStepEnabled = other.myHorizontalMovementStepEnabled;\r\n        this.myHorizontalMovementStepMaxLength = other.myHorizontalMovementStepMaxLength;\r\n        this.myHorizontalMovementRadialStepAmount = other.myHorizontalMovementRadialStepAmount;\r\n        this.myHorizontalMovementCheckDiagonalOutward = other.myHorizontalMovementCheckDiagonalOutward;\r\n        this.myHorizontalMovementCheckDiagonalInward = other.myHorizontalMovementCheckDiagonalInward;\r\n        this.myHorizontalMovementCheckStraight = other.myHorizontalMovementCheckStraight;\r\n        this.myHorizontalMovementCheckHorizontalBorder = other.myHorizontalMovementCheckHorizontalBorder;\r\n        this.myHorizontalMovementCheckVerticalStraight = other.myHorizontalMovementCheckVerticalStraight;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = other.myHorizontalMovementCheckVerticalDiagonalUpwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = other.myHorizontalMovementCheckVerticalDiagonalUpwardInward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = other.myHorizontalMovementCheckVerticalDiagonalDownwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = other.myHorizontalMovementCheckVerticalDiagonalDownwardInward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = other.myHorizontalMovementCheckVerticalStraightDiagonalUpward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = other.myHorizontalMovementCheckVerticalStraightDiagonalDownward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n        this.myHalfConeAngle = other.myHalfConeAngle;\r\n        this.myHalfConeSliceAmount = other.myHalfConeSliceAmount;\r\n        this.myCheckConeBorder = other.myCheckConeBorder;\r\n        this.myCheckConeRay = other.myCheckConeRay;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = other.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision;\r\n        this.myHorizontalPositionCheckVerticalDirectionType = other.myHorizontalPositionCheckVerticalDirectionType;\r\n\r\n        this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n        this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n        this.myFeetRadius = other.myFeetRadius;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = other.myAdjustVerticalMovementWithGroundAngleDownhill;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = other.myAdjustVerticalMovementWithGroundAngleUphill;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = other.myAdjustHorizontalMovementWithGroundAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = other.myAdjustVerticalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = other.myAdjustVerticalMovementWithCeilingAngleUphill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = other.myAdjustHorizontalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = other.myCheckVerticalFixedForwardEnabled;\r\n        this.myCheckVerticalFixedForward.vec3_copy(other.myCheckVerticalFixedForward);\r\n        this.myCheckVerticalBothDirection = other.myCheckVerticalBothDirection;\r\n\r\n        this.mySnapOnGroundEnabled = other.mySnapOnGroundEnabled;\r\n        this.mySnapOnGroundExtraDistance = other.mySnapOnGroundExtraDistance;\r\n        this.mySnapOnCeilingEnabled = other.mySnapOnCeilingEnabled;\r\n        this.mySnapOnCeilingExtraDistance = other.mySnapOnCeilingExtraDistance;\r\n\r\n        this.myGroundPopOutEnabled = other.myGroundPopOutEnabled;\r\n        this.myGroundPopOutExtraDistance = other.myGroundPopOutExtraDistance;\r\n        this.myCeilingPopOutEnabled = other.myCeilingPopOutEnabled;\r\n        this.myCeilingPopOutExtraDistance = other.myCeilingPopOutExtraDistance;\r\n\r\n        this.myVerticalMovementReduceEnabled = other.myVerticalMovementReduceEnabled;\r\n\r\n        this.myGroundCircumferenceAddCenter = other.myGroundCircumferenceAddCenter;\r\n        this.myGroundCircumferenceSliceAmount = other.myGroundCircumferenceSliceAmount;\r\n        this.myGroundCircumferenceStepAmount = other.myGroundCircumferenceStepAmount;\r\n        this.myGroundCircumferenceRotationPerStep = other.myGroundCircumferenceRotationPerStep;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = other.myVerticalAllowHitInsideCollisionIfOneOk;\r\n\r\n        this.myCheckHeight = other.myCheckHeight;\r\n        this.myCheckHeightVerticalMovement = other.myCheckHeightVerticalMovement;\r\n        this.myCheckHeightVerticalPosition = other.myCheckHeightVerticalPosition;\r\n        this.myCheckHeightTopMovement = other.myCheckHeightTopMovement;\r\n        this.myCheckHeightTopPosition = other.myCheckHeightTopPosition;\r\n        this.myCheckHeightConeOnCollision = other.myCheckHeightConeOnCollision;\r\n        this.myCheckHeightConeOnCollisionKeepHit = other.myCheckHeightConeOnCollisionKeepHit;\r\n        this.myHeightCheckStepAmountMovement = other.myHeightCheckStepAmountMovement;\r\n        this.myHeightCheckStepAmountPosition = other.myHeightCheckStepAmountPosition;\r\n        this.myCheckVerticalStraight = other.myCheckVerticalStraight;\r\n        this.myCheckVerticalDiagonalRayOutward = other.myCheckVerticalDiagonalRayOutward;\r\n        this.myCheckVerticalDiagonalRayInward = other.myCheckVerticalDiagonalRayInward;\r\n        this.myCheckVerticalDiagonalBorderOutward = other.myCheckVerticalDiagonalBorderOutward;\r\n        this.myCheckVerticalDiagonalBorderInward = other.myCheckVerticalDiagonalBorderInward;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = other.myCheckVerticalDiagonalBorderRayOutward;\r\n        this.myCheckVerticalDiagonalBorderRayInward = other.myCheckVerticalDiagonalBorderRayInward;\r\n        this.myCheckVerticalSearchFartherVerticalHit = other.myCheckVerticalSearchFartherVerticalHit;\r\n\r\n        this.myGroundAngleToIgnore = other.myGroundAngleToIgnore;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = other.myGroundAngleToIgnoreWithPerceivedAngle;\r\n        this.myCeilingAngleToIgnore = other.myCeilingAngleToIgnore;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = other.myCeilingAngleToIgnoreWithPerceivedAngle;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = other.myHorizontalMovementGroundAngleIgnoreHeight;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = other.myHorizontalMovementCeilingAngleIgnoreHeight;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = other.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = other.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = other.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = other.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n\r\n        this.myHeight = other.myHeight;\r\n\r\n        this.myComputeGroundInfoEnabled = other.myComputeGroundInfoEnabled;\r\n        this.myComputeCeilingInfoEnabled = other.myComputeCeilingInfoEnabled;\r\n        this.myDistanceToBeOnGround = other.myDistanceToBeOnGround;\r\n        this.myDistanceToComputeGroundInfo = other.myDistanceToComputeGroundInfo;\r\n        this.myDistanceToBeOnCeiling = other.myDistanceToBeOnCeiling;\r\n        this.myDistanceToComputeCeilingInfo = other.myDistanceToComputeCeilingInfo;\r\n        this.myVerticalFixToBeOnGround = other.myVerticalFixToBeOnGround;\r\n        this.myVerticalFixToComputeGroundInfo = other.myVerticalFixToComputeGroundInfo;\r\n        this.myVerticalFixToBeOnCeiling = other.myVerticalFixToBeOnCeiling;\r\n        this.myVerticalFixToComputeCeilingInfo = other.myVerticalFixToComputeCeilingInfo;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = other.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = other.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        this.myIsOnGroundIfInsideHit = other.myIsOnGroundIfInsideHit;\r\n        this.myIsOnCeilingIfInsideHit = other.myIsOnCeilingIfInsideHit;\r\n        this.myIsOnGroundMaxSurfaceAngle = other.myIsOnGroundMaxSurfaceAngle;\r\n        this.myIsOnCeilingMaxSurfaceAngle = other.myIsOnCeilingMaxSurfaceAngle;\r\n        this.myFindGroundDistanceMaxOutsideDistance = other.myFindGroundDistanceMaxOutsideDistance;\r\n        this.myFindGroundDistanceMaxInsideDistance = other.myFindGroundDistanceMaxInsideDistance;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = other.myFindCeilingDistanceMaxOutsideDistance;\r\n        this.myFindCeilingDistanceMaxInsideDistance = other.myFindCeilingDistanceMaxInsideDistance;\r\n\r\n        this.myAllowGroundSteepFix = other.myAllowGroundSteepFix;\r\n        this.myAllowCeilingSteepFix = other.myAllowCeilingSteepFix;\r\n        this.myMustStayOnGround = other.myMustStayOnGround;\r\n        this.myMustStayOnCeiling = other.myMustStayOnCeiling;\r\n        this.myMustStayOnValidGroundAngleDownhill = other.myMustStayOnValidGroundAngleDownhill;\r\n        this.myMustStayOnValidCeilingAngleDownhill = other.myMustStayOnValidCeilingAngleDownhill;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = other.myRegatherGroundInfoOnSurfaceCheckFail;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = other.myRegatherCeilingInfoOnSurfaceCheckFail;\r\n        this.myMustStayBelowGroundAngleDownhill = other.myMustStayBelowGroundAngleDownhill;\r\n        this.myMustStayBelowCeilingAngleDownhill = other.myMustStayBelowCeilingAngleDownhill;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = other.myMustStayBelowIgnorableGroundAngleDownhill;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = other.myMustStayBelowIgnorableCeilingAngleDownhill;\r\n        this.myMovementMustStayOnGroundHitAngle = other.myMovementMustStayOnGroundHitAngle;\r\n        this.myMovementMustStayOnCeilingHitAngle = other.myMovementMustStayOnCeilingHitAngle;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = other.myTeleportMustBeOnIgnorableGroundAngle;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = other.myCheckTransformMustBeOnIgnorableGroundAngle;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = other.myTeleportMustBeOnIgnorableCeilingAngle;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = other.myCheckTransformMustBeOnIgnorableCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = other.myTeleportMustBeOnGroundAngle;\r\n        this.myCheckTransformMustBeOnGroundAngle = other.myCheckTransformMustBeOnGroundAngle;\r\n        this.myTeleportMustBeOnCeilingAngle = other.myTeleportMustBeOnCeilingAngle;\r\n        this.myCheckTransformMustBeOnCeilingAngle = other.myCheckTransformMustBeOnCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGround = other.myTeleportMustBeOnGround;\r\n        this.myCheckTransformMustBeOnGround = other.myCheckTransformMustBeOnGround;\r\n        this.myTeleportMustBeOnCeiling = other.myTeleportMustBeOnCeiling;\r\n        this.myCheckTransformMustBeOnCeiling = other.myCheckTransformMustBeOnCeiling;\r\n\r\n        this.mySlidingEnabled = other.mySlidingEnabled;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = other.mySlidingHorizontalMovementCheckBetterNormal;\r\n        this.mySlidingMaxAttempts = other.mySlidingMaxAttempts;\r\n        this.mySlidingCheckBothDirections = other.mySlidingCheckBothDirections;\r\n        this.mySlidingFlickeringPreventionType = other.mySlidingFlickeringPreventionType;\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = other.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n\r\n        this.mySlidingAdjustSign90Degrees = other.mySlidingAdjustSign90Degrees;\r\n\r\n        this.myHorizontalBlockLayerFlags.copy(other.myHorizontalBlockLayerFlags);\r\n        this.myHorizontalObjectsToIgnore.pp_copy(other.myHorizontalObjectsToIgnore);\r\n\r\n        this.myVerticalBlockLayerFlags.copy(other.myVerticalBlockLayerFlags);\r\n        this.myVerticalObjectsToIgnore.pp_copy(other.myVerticalObjectsToIgnore);\r\n\r\n        this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n        this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n        this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n\r\n        this.myDebugEnabled = other.myDebugEnabled;\r\n\r\n        this.myDebugHorizontalMovementEnabled = other.myDebugHorizontalMovementEnabled;\r\n        this.myDebugHorizontalPositionEnabled = other.myDebugHorizontalPositionEnabled;\r\n        this.myDebugVerticalMovementEnabled = other.myDebugVerticalMovementEnabled;\r\n        this.myDebugVerticalPositionEnabled = other.myDebugVerticalPositionEnabled;\r\n        this.myDebugSlidingEnabled = other.myDebugSlidingEnabled;\r\n        this.myDebugGroundInfoEnabled = other.myDebugGroundInfoEnabled;\r\n        this.myDebugCeilingInfoEnabled = other.myDebugCeilingInfoEnabled;\r\n        this.myDebugRuntimeParamsEnabled = other.myDebugRuntimeParamsEnabled;\r\n        this.myDebugMovementEnabled = other.myDebugMovementEnabled;\r\n    }\r\n}\r\n\r\nexport class CollisionRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myOriginalPosition = vec3_create();\r\n        this.myNewPosition = vec3_create();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward = vec3_create();\r\n        this.myOriginalUp = vec3_create();\r\n\r\n        this.myOriginalMovement = vec3_create();\r\n        this.myFixedMovement = vec3_create();\r\n\r\n        this.myLastValidOriginalHorizontalMovement = vec3_create();\r\n        this.myLastValidOriginalVerticalMovement = vec3_create();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement = vec3_create();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement = vec3_create();\r\n        this.myLastValidEndHorizontalMovement = vec3_create();\r\n        this.myLastValidEndVerticalMovement = vec3_create();\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal = vec3_create();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal = vec3_create();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal = vec3_create();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal = vec3_create();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false; // Could add HorizontalMovementCanceledReason\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit = new RaycastHit();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit = new RaycastHit();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit = new RaycastHit();\r\n        this.mySlidingWallNormal = new vec3_create();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement = vec3_create();\r\n\r\n        this.myOriginalTeleportPosition = vec3_create();\r\n        this.myFixedTeleportPosition = vec3_create();\r\n\r\n        this.myOriginalPositionCheckPosition = vec3_create();\r\n        this.myFixedPositionCheckPosition = vec3_create();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false; // Could be a single bool but not sure if there should be an option and don't want to create an enum for now\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked = vec3_create();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    reset() {\r\n        this.myOriginalPosition.vec3_zero();\r\n        this.myNewPosition.vec3_zero();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward.vec3_zero();\r\n        this.myOriginalUp.vec3_zero();\r\n\r\n        this.myOriginalMovement.vec3_zero();\r\n        this.myFixedMovement.vec3_zero();\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_zero();\r\n        this.myLastValidOriginalVerticalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_zero();\r\n        this.myLastValidEndHorizontalMovement.vec3_zero();\r\n        this.myLastValidEndVerticalMovement.vec3_zero();\r\n\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal.vec3_zero();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal.vec3_zero();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal.vec3_zero();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal.vec3_zero();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false;\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit.reset();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit.reset();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit.reset();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_zero();\r\n        this.mySlidingWallNormal.vec3_zero();\r\n\r\n        this.myOriginalTeleportPosition.vec3_zero();\r\n        this.myFixedTeleportPosition.vec3_zero();\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_zero();\r\n        this.myFixedPositionCheckPosition.vec3_zero();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false;\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked.vec3_zero();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myOriginalPosition.vec3_copy(other.myOriginalPosition);\r\n        this.myNewPosition.vec3_copy(other.myNewPosition);\r\n\r\n        this.myOriginalHeight = other.myOriginalHeight;\r\n\r\n        this.myOriginalForward.vec3_copy(other.myOriginalForward);\r\n        this.myOriginalUp.vec3_copy(other.myOriginalUp);\r\n\r\n        this.myOriginalMovement.vec3_copy(other.myOriginalMovement);\r\n        this.myFixedMovement.vec3_copy(other.myFixedMovement);\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_copy(other.myLastValidOriginalHorizontalMovement);\r\n        this.myLastValidOriginalVerticalMovement.vec3_copy(other.myLastValidOriginalVerticalMovement);\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(other.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(other.myLastValidSurfaceAdjustedVerticalMovement);\r\n        this.myLastValidEndHorizontalMovement.vec3_copy(other.myLastValidEndHorizontalMovement);\r\n        this.myLastValidEndVerticalMovement.vec3_copy(other.myLastValidEndVerticalMovement);\r\n\r\n        this.myIsOnGround = other.myIsOnGround;\r\n        this.myGroundAngle = other.myGroundAngle;\r\n        this.myGroundPerceivedAngle = other.myGroundPerceivedAngle;\r\n        this.myGroundNormal.vec3_copy(other.myGroundNormal);\r\n        this.myGroundHitMaxAngle = other.myGroundHitMaxAngle;\r\n        this.myGroundHitMaxNormal.vec3_copy(other.myGroundHitMaxNormal);\r\n        this.myGroundDistance = other.myGroundDistance;\r\n        this.myGroundIsBaseInsideCollision = other.myGroundIsBaseInsideCollision;\r\n\r\n        this.myIsOnCeiling = other.myIsOnCeiling;\r\n        this.myCeilingAngle = other.myCeilingAngle;\r\n        this.myCeilingPerceivedAngle = other.myCeilingPerceivedAngle;\r\n        this.myCeilingNormal.vec3_copy(other.myCeilingNormal);\r\n        this.myCeilingHitMaxAngle = other.myCeilingHitMaxAngle;\r\n        this.myCeilingHitMaxNormal.vec3_copy(other.myCeilingHitMaxNormal);\r\n        this.myCeilingDistance = other.myCeilingDistance;\r\n        this.myCeilingIsBaseInsideCollision = other.myCeilingIsBaseInsideCollision;\r\n\r\n        this.myHorizontalMovementCanceled = other.myHorizontalMovementCanceled;\r\n        this.myIsCollidingHorizontally = other.myIsCollidingHorizontally;\r\n        this.myHorizontalCollisionHit.copy(other.myHorizontalCollisionHit);\r\n\r\n        this.myVerticalMovementCanceled = other.myVerticalMovementCanceled;\r\n        this.myIsCollidingVertically = other.myIsCollidingVertically;\r\n        this.myVerticalCollisionHit.copy(other.myVerticalCollisionHit);\r\n\r\n        this.myHasSnappedOnGround = other.myHasSnappedOnGround;\r\n        this.myHasSnappedOnCeiling = other.myHasSnappedOnCeiling;\r\n        this.myHasPoppedOutGround = other.myHasPoppedOutGround;\r\n        this.myHasPoppedOutCeiling = other.myHasPoppedOutCeiling;\r\n        this.myHasReducedVerticalMovement = other.myHasReducedVerticalMovement;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill;\r\n\r\n        this.myIsSliding = other.myIsSliding;\r\n        this.myIsSlidingIntoOppositeDirection = other.myIsSlidingIntoOppositeDirection;\r\n        this.myIsSlidingFlickerPrevented = other.myIsSlidingFlickerPrevented;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        this.mySlidingMovementAngle = other.mySlidingMovementAngle;\r\n        this.mySlidingCollisionAngle = other.mySlidingCollisionAngle;\r\n        this.mySlidingCollisionHit.copy(other.mySlidingCollisionHit);\r\n        this.mySliding90DegreesSign = other.mySliding90DegreesSign;\r\n        this.mySlidingRecompute90DegreesSign = other.mySlidingRecompute90DegreesSign;\r\n        this.myLastValidIsSliding = other.myLastValidIsSliding;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_copy(other.mySlidingPreviousHorizontalMovement);\r\n        this.mySlidingWallNormal.vec3_copy(other.mySlidingWallNormal);\r\n\r\n        this.myOriginalTeleportPosition.vec3_copy(other.myOriginalTeleportPosition);\r\n        this.myFixedTeleportPosition.vec3_copy(other.myFixedTeleportPosition);\r\n        this.myTeleportCanceled = other.myTeleportCanceled;\r\n\r\n        this.myIsPositionOk = other.myIsPositionOk;\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_copy(other.myOriginalPositionCheckPosition);\r\n        this.myFixedPositionCheckPosition.vec3_copy(other.myFixedPositionCheckPosition);\r\n\r\n        this.myIsTeleport = other.myIsTeleport;\r\n        this.myIsMove = other.myIsMove;\r\n        this.myIsPositionCheck = other.myIsPositionCheck;\r\n        this.myIsPositionCheckAllowAdjustments = other.myIsPositionCheckAllowAdjustments;\r\n\r\n        this.mySplitMovementSteps = other.mySplitMovementSteps;\r\n        this.mySplitMovementStepsPerformed = other.mySplitMovementStepsPerformed;\r\n        this.mySplitMovementStop = other.mySplitMovementStop;\r\n        this.mySplitMovementMovementChecked.vec3_copy(other.mySplitMovementMovementChecked);\r\n\r\n        this.myRealIsOnGround = other.myRealIsOnGround;\r\n        this.myRealIsOnCeiling = other.myRealIsOnCeiling;\r\n    }\r\n}", "import { RaycastHit, RaycastParams, RaycastResults } from \"../../../../../../cauldron/physics/physics_raycast_params\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"./collision_params\";\r\n\r\nexport function generate360TeleportParamsFromMovementParams(movementParams, outTeleportParams = new CollisionCheckParams()) {\r\n    outTeleportParams.copy(movementParams);\r\n\r\n    outTeleportParams.myHalfConeAngle = 180;\r\n    outTeleportParams.myHalfConeSliceAmount = Math.round((outTeleportParams.myHalfConeAngle / movementParams.myHalfConeAngle) * movementParams.myHalfConeSliceAmount);\r\n\r\n    outTeleportParams.myCheckHorizontalFixedForwardEnabled = true;\r\n    outTeleportParams.myCheckHorizontalFixedForward = vec3_create(0, 0, 1);\r\n\r\n    return outTeleportParams;\r\n}\r\n\r\nexport let CollisionCheckUtils = {\r\n    generate360TeleportParamsFromMovementParams\r\n};\r\n\r\nexport class CollisionCheck {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myRaycastParams = new RaycastParams(Globals.getPhysics(this._myEngine));\r\n        this._myRaycastResult = new RaycastResults();\r\n        this._myFixRaycastResult = new RaycastResults();\r\n\r\n        this._myBackupRaycastHit = new RaycastHit();\r\n\r\n        this._myPrevCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._mySlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myInternalSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixSlidingCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._mySlidingOnVerticalCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        this._myDebugEnabled = false;\r\n\r\n        this._myTotalRaycasts = 0;\r\n        this._myTotalRaycastsMax = 0;\r\n    }\r\n\r\n    move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    // #TODO Add teleport position/transform and return originalteleportransform\r\n    // instead of position old transform / new transform\r\n    teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    _debugMovement(movement, fixedMovement, feetPosition, up, collisionCheckParams) {\r\n        let originalHorizontalMovement = movement.vec3_removeComponentAlongAxis(up);\r\n\r\n        let horizontalMovement = fixedMovement.vec3_removeComponentAlongAxis(up);\r\n        let verticalMovement = fixedMovement.vec3_componentAlongAxis(up);\r\n\r\n        let feetPositionPlusOffset = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.001));\r\n\r\n        if (!originalHorizontalMovement.vec3_isZero()) {\r\n            originalHorizontalMovement.vec3_normalize(originalHorizontalMovement);\r\n\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0, feetPositionPlusOffset, originalHorizontalMovement, 0.2, vec4_create(0.5, 0.5, 1, 1));\r\n        }\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            horizontalMovement.vec3_normalize(horizontalMovement);\r\n\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0, feetPositionPlusOffset, horizontalMovement, 0.2, vec4_create(0, 0, 1, 1));\r\n        }\r\n\r\n        if (!verticalMovement.vec3_isZero()) {\r\n            verticalMovement.vec3_normalize(verticalMovement);\r\n\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0, feetPosition, verticalMovement, 0.2, vec4_create(0, 0, 1, 1));\r\n        }\r\n    }\r\n\r\n    _debugRuntimeParams(collisionRuntimeParams) {\r\n        if (collisionRuntimeParams.myHorizontalCollisionHit.isValid()) {\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.mySlidingCollisionHit.isValid()) {\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myPosition,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.myVerticalCollisionHit.isValid()) {\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myNormal, 0.2, vec4_create(1, 0, 0, 1));\r\n        }\r\n    }\r\n\r\n    _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        // Implemented outside class definition\r\n    }\r\n};\r\n\r\nCollisionCheck.prototype._raycastAndDebug = function () {\r\n    let tempRaycastResult = new RaycastResults();\r\n    return function _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myRaycastParams.myOrigin.vec3_copy(origin);\r\n        this._myRaycastParams.myDirection.vec3_copy(direction);\r\n        this._myRaycastParams.myDistance = distance;\r\n\r\n        if (isHorizontal) {\r\n            this._myRaycastParams.myBlockLayerFlags.copy(collisionCheckParams.myHorizontalBlockLayerFlags);\r\n            this._myRaycastParams.myObjectsToIgnore = collisionCheckParams.myHorizontalObjectsToIgnore;\r\n        } else {\r\n            this._myRaycastParams.myBlockLayerFlags.copy(collisionCheckParams.myVerticalBlockLayerFlags);\r\n            this._myRaycastParams.myObjectsToIgnore = collisionCheckParams.myVerticalObjectsToIgnore;\r\n        }\r\n\r\n        this._myRaycastParams.myIgnoreHitsInsideCollision = ignoreHitsInsideCollision;\r\n\r\n        let raycastResult = null;\r\n        if (true) {\r\n            raycastResult = PhysicsUtils.raycast(this._myRaycastParams, this._myRaycastResult);\r\n        } else {\r\n            // Quick debug to remove raycasts and/or let all raycasts fail\r\n\r\n            let raycastAlways = false;\r\n            if (raycastAlways || !this._myRaycastResult.isColliding()) {\r\n                raycastResult = PhysicsUtils.raycast(this._myRaycastParams, tempRaycastResult);\r\n            }\r\n\r\n            if (!this._myRaycastResult.isColliding() && tempRaycastResult.isColliding()) {\r\n                this._myRaycastResult.copy(tempRaycastResult);\r\n            }\r\n\r\n            raycastResult = this._myRaycastResult;\r\n        }\r\n\r\n\r\n        this._myTotalRaycasts++;\r\n        //raycastResult.myHits = [];\r\n\r\n        if (this._myDebugEnabled && Globals.isDebugEnabled(this._myEngine)) {\r\n            Globals.getDebugVisualManager(this._myEngine).drawRaycast(0, raycastResult);\r\n        }\r\n\r\n        return raycastResult;\r\n    };\r\n}();", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\nimport { CollisionRuntimeParams } from \"./collision_params\";\r\n\r\nCollisionCheck.prototype._move = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let horizontalMovement = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n\r\n    let movementStep = vec3_create();\r\n    let currentMovementStep = vec3_create();\r\n    let movementChecked = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let fixedMovementStep = vec3_create();\r\n\r\n    let previousCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let previousFixedMovement = vec3_create();\r\n    let previousMovementChecked = vec3_create();\r\n    return function _move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        //return vec3_create();\r\n        //movement = vec3_create(0, 0, -1);\r\n\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        //feetPosition = feetPosition.vec3_add(horizontalMovement.vec3_normalize().vec3_scale(0.5));\r\n        //height = height / 2;\r\n        //horizontalMovement.vec3_normalize(horizontalMovement).vec3_scale(0.3, horizontalMovement); movement = horizontalMovement.vec3_add(verticalMovement);\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (!movement.vec3_isZero(0.00001) && collisionCheckParams.mySplitMovementEnabled) {\r\n            let equalStepLength = movement.vec3_length() / collisionCheckParams.mySplitMovementMaxSteps;\r\n            if (!collisionCheckParams.mySplitMovementStepEqualLength || equalStepLength < collisionCheckParams.mySplitMovementStepEqualLengthMinLength) {\r\n                let maxLength = collisionCheckParams.mySplitMovementStepEqualLength ? collisionCheckParams.mySplitMovementStepEqualLengthMinLength : collisionCheckParams.mySplitMovementMaxLength;\r\n                movementStepAmount = Math.ceil(movement.vec3_length() / maxLength);\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                    movementStepAmount = (collisionCheckParams.mySplitMovementMaxStepsEnabled) ? Math.min(movementStepAmount, collisionCheckParams.mySplitMovementMaxSteps) : movementStepAmount;\r\n                }\r\n\r\n                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                if (movementStepAmount == 1) {\r\n                    movementStep.vec3_copy(movement);\r\n                }\r\n            } else {\r\n                movementStepAmount = collisionCheckParams.mySplitMovementMaxSteps;\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                }\r\n            }\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        movementChecked.vec3_zero();\r\n\r\n        previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        previousFixedMovement.vec3_copy(fixedMovement);\r\n        previousMovementChecked.vec3_copy(movementChecked);\r\n\r\n        let stepsPerformed = 0;\r\n        let splitMovementStop = false;\r\n        for (let i = 0; i < movementStepAmount; i++) {\r\n            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                currentMovementStep.vec3_copy(movementStep);\r\n            } else {\r\n                currentMovementStep = movement.vec3_sub(movementChecked, currentMovementStep);\r\n            }\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n            fixedMovementStep.vec3_zero();\r\n            fixedMovementStep = this._moveStep(currentMovementStep, newFeetPosition, transformUp, transformForward, height, true, collisionCheckParams, collisionRuntimeParams, fixedMovementStep);\r\n            fixedMovement.vec3_add(fixedMovementStep, fixedMovement);\r\n\r\n            movementChecked = movementChecked.vec3_add(movementStep, movementChecked);\r\n\r\n            stepsPerformed = i + 1;\r\n\r\n            if ((collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled) ||\r\n                (collisionRuntimeParams.myHorizontalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled) ||\r\n                (collisionRuntimeParams.myVerticalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled) ||\r\n                (collisionCheckParams.mySplitMovementStopCallback != null && collisionCheckParams.mySplitMovementStopCallback(collisionRuntimeParams))) {\r\n                if (collisionCheckParams.mySplitMovementStopReturnPrevious) {\r\n                    collisionRuntimeParams.copy(previousCollisionRuntimeParams);\r\n                    fixedMovement.vec3_copy(previousFixedMovement);\r\n                    movementChecked.vec3_copy(previousMovementChecked);\r\n                    stepsPerformed -= 1;\r\n                }\r\n\r\n                splitMovementStop = true;\r\n                break;\r\n            }\r\n\r\n            previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            previousFixedMovement.vec3_copy(fixedMovement);\r\n            previousMovementChecked.vec3_copy(movementChecked);\r\n        }\r\n\r\n        //fixedMovement.vec3_zero();\r\n\r\n        collisionRuntimeParams.mySplitMovementSteps = movementStepAmount;\r\n        collisionRuntimeParams.mySplitMovementStepsPerformed = stepsPerformed;\r\n        collisionRuntimeParams.mySplitMovementStop = splitMovementStop;\r\n        collisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(movementChecked);\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        //console.error(collisionRuntimeParams.myOriginalPosition.vec3_sub(feetPosition)[1].toFixed(3));\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalMovement.vec3_copy(movement);\r\n        collisionRuntimeParams.myFixedMovement.vec3_copy(fixedMovement);\r\n\r\n        collisionRuntimeParams.myNewPosition = collisionRuntimeParams.myOriginalPosition.vec3_add(collisionRuntimeParams.myFixedMovement, collisionRuntimeParams.myNewPosition);\r\n\r\n        collisionRuntimeParams.myIsMove = true;\r\n\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n\r\n        //this._myTotalRaycastsMax = Math.max(this._myTotalRaycasts, this._myTotalRaycastsMax);\r\n        //console.error(this._myTotalRaycastsMax);\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._moveStep = function () {\r\n    let horizontalMovement = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let fixedHorizontalMovement = vec3_create();\r\n    let fixedVerticalMovement = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    let forwardForHorizontal = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let surfaceAdjustedVerticalMovement = vec3_create();\r\n    let surfaceAdjustedHorizontalMovement = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _moveStep(movement, feetPosition, transformUp, transformForward, height, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        // #TODO Refactor and split horizontal check and vertical check into: hMovement + vMovement + hPosition + vPosition?\r\n        // Will make the sliding heavier, if I slide repeating all the 4 steps instead of 2 as now, but would be more correct\r\n\r\n        // #TODO When on high slopes where u are not allowed to move the check does not manage to slide\r\n\r\n        // #TODO When moving upward on the edge of a slope, the edge can be detected as a wall and prevent movement, while it should just keep moving\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        if (horizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalMovement.vec3_zero();\r\n        }\r\n\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        if (verticalMovement.vec3_isZero(0.000001)) {\r\n            verticalMovement.vec3_zero();\r\n        }\r\n\r\n        if (horizontalMovement.vec3_isZero()) {\r\n            //return vec3_create();\r\n        }\r\n\r\n        //this._myTotalRaycasts = 0;\r\n        //collisionCheckParams.myDebugEnabled = true;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        surfaceAdjustedHorizontalMovement = this._adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedHorizontalMovement);\r\n        if (surfaceAdjustedHorizontalMovement.vec3_isZero(0.00001)) {\r\n            surfaceAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        this._syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n        {\r\n            forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = horizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(transformForward);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForHorizontal.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForHorizontal.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n                forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n                if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                    forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n                }\r\n            }\r\n\r\n            fixedHorizontalMovement.vec3_zero();\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                fixedHorizontalMovement = this._horizontalCheck(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n                //console.error(this._myTotalRaycasts );\r\n                //collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                //collisionRuntimeParams.myHorizontalCollisionHit.myNormal = vec3_create(0, 0, 1);\r\n                if (collisionCheckParams.mySlidingEnabled && collisionRuntimeParams.myIsCollidingHorizontally && this._isSlidingNormalValid(surfaceAdjustedHorizontalMovement, transformUp, collisionRuntimeParams)) {\r\n                    fixedHorizontalMovement = this._horizontalSlide(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, fixedHorizontalMovement);\r\n                } else {\r\n                    //console.error(\"no slide\");\r\n                }\r\n            }\r\n\r\n            if (fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                fixedHorizontalMovement.vec3_zero();\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && fixedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            }\r\n        }\r\n\r\n        {\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (fixedHorizontalMovement.vec3_isZero()) {\r\n                    if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else if (!horizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(transformForward);\r\n                    }\r\n                } else {\r\n                    forwardForVertical = fixedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            //console.error(this._myTotalRaycasts );\r\n            //collisionCheckParams.myDebugEnabled = false;\r\n\r\n            surfaceAdjustedVerticalMovement = this._adjustVerticalMovementWithSurface(fixedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedVerticalMovement);\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n            let originalMovementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(transformUp), 0);\r\n\r\n            fixedVerticalMovement.vec3_zero();\r\n            fixedVerticalMovement = this._verticalCheck(surfaceAdjustedVerticalMovement, originalMovementSign, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n\r\n            if (fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                fixedVerticalMovement.vec3_zero();\r\n            }\r\n        }\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n        outFixedMovement.vec3_zero();\r\n        if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n            outFixedMovement = fixedHorizontalMovement.vec3_add(fixedVerticalMovement, outFixedMovement);\r\n        } else {\r\n            collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n            fixedHorizontalMovement.vec3_zero();\r\n            fixedVerticalMovement.vec3_zero();\r\n\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(transformForward);\r\n                }\r\n            }\r\n        }\r\n\r\n        newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        if (!fixedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = fixedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!horizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && !collisionRuntimeParams.myHorizontalMovementCanceled) {\r\n            let surfaceCheckOk = this._postSurfaceCheck(fixedHorizontalMovement, fixedVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n            if (!surfaceCheckOk) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n                collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n                fixedHorizontalMovement.vec3_zero();\r\n                fixedVerticalMovement.vec3_zero();\r\n                outFixedMovement.vec3_zero();\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else {\r\n                    forwardForPerceivedAngle.vec3_copy(transformForward);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                    collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                    collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                    collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                    collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                    collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                    collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                }\r\n            }\r\n        }\r\n\r\n        //return outFixedMovement.vec3_zero();        \r\n\r\n        if (collisionCheckParams.myExtraMovementCheckCallback != null) {\r\n            fixedMovement.vec3_copy(outFixedMovement);\r\n            outFixedMovement = collisionCheckParams.myExtraMovementCheckCallback(\r\n                movement, fixedMovement, feetPosition, transformUp, transformForward, height,\r\n                collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            fixedHorizontalMovement = outFixedMovement.vec3_removeComponentAlongAxis(transformUp, fixedHorizontalMovement);\r\n            fixedVerticalMovement = outFixedMovement.vec3_componentAlongAxis(transformUp, fixedVerticalMovement);\r\n        }\r\n\r\n        {\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myIsSliding && !fixedHorizontalMovement.vec3_isZero()) {\r\n                    /* let angleWithPreviousThreshold = 0.5;\r\n                    check use surfaceAdjustedHorizontalMovement instead of horizontalMovement if re-enable this\r\n                    \r\n                    if (!this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_isZero() && !horizontalMovement.vec3_isZero() &&\r\n                        horizontalMovement.vec3_angle(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement) > angleWithPreviousThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = horizontalMovement.vec3_signTo(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement, transformUp);\r\n                        console.error(\"sp\", collisionRuntimeParams.mySliding90DegreesSign, collisionRuntimeParams.myIsSliding);\r\n                    } */\r\n                    collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                    //console.error(\"empty renew\");\r\n                }\r\n            }\r\n\r\n            if (!horizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(horizontalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(surfaceAdjustedHorizontalMovement);\r\n            }\r\n\r\n            if (!verticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(verticalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedVerticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(surfaceAdjustedVerticalMovement);\r\n            }\r\n\r\n            if (!fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidIsSliding = collisionRuntimeParams.myIsSliding;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = false;\r\n                collisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(fixedHorizontalMovement);\r\n                //fixedHorizontalMovement.vec_error();\r\n\r\n                if (!collisionRuntimeParams.myIsSliding) {\r\n                    //console.error(\"not sliding\");\r\n                } else {\r\n                    //console.error(\"sliding\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n                }\r\n            } else {\r\n                //console.error(\"still\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            if (!fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(fixedVerticalMovement);\r\n            }\r\n        }\r\n\r\n        let moveStepFixed = false;\r\n        if (!collisionRuntimeParams.myHorizontalMovementCanceled && !fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n            let surfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, this._myPrevCollisionRuntimeParams);\r\n            if (surfaceTooSteepResults[0] || surfaceTooSteepResults[1]) {\r\n                horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n                let newSurfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if ((surfaceTooSteepResults[0] && newSurfaceTooSteepResults[0]) ||\r\n                    (surfaceTooSteepResults[1] && newSurfaceTooSteepResults[1]) ||\r\n                    !allowSurfaceSteepFix ||\r\n                    (surfaceTooSteepResults[0] && !collisionCheckParams.myAllowGroundSteepFix) ||\r\n                    (surfaceTooSteepResults[1] && !collisionCheckParams.myAllowCeilingSteepFix)) {\r\n                    outFixedMovement.vec3_zero();\r\n                    collisionRuntimeParams.copy(this._myPrevCollisionRuntimeParams);\r\n                    this._moveStep(movement, feetPosition, transformUp, transformForward, height, false, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n                    moveStepFixed = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!moveStepFixed) {\r\n            if (collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugMovementEnabled && Globals.isDebugEnabled(this._myEngine)) {\r\n                this._debugMovement(movement, outFixedMovement, newFeetPosition, transformUp, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugRuntimeParamsEnabled && Globals.isDebugEnabled(this._myEngine)) {\r\n                this._debugRuntimeParams(collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._syncCollisionRuntimeParamsWithPrevious = function () {\r\n    let previousFixedHorizontalMovement = vec3_create();\r\n    return function _syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        collisionRuntimeParams.myIsSlidingFlickerPrevented = previousCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        //console.error(\"prevented\", collisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n\r\n        collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n        collisionRuntimeParams.myLastValidIsSliding = previousCollisionRuntimeParams.myLastValidIsSliding;\r\n\r\n        collisionRuntimeParams.mySliding90DegreesSign = previousCollisionRuntimeParams.mySliding90DegreesSign;\r\n        collisionRuntimeParams.mySlidingRecompute90DegreesSign = previousCollisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n        if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n            let angleWithPreviousThreshold = 0.5;\r\n            if (!previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_isZero() && !surfaceAdjustedHorizontalMovement.vec3_isZero() &&\r\n                surfaceAdjustedHorizontalMovement.vec3_angle(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement) > angleWithPreviousThreshold) {\r\n                //previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n                if (!previousCollisionRuntimeParams.myLastValidIsSliding) {\r\n                    let angleSigned = surfaceAdjustedHorizontalMovement.vec3_angleSigned(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement, up);\r\n                    let angleSignedThreshold = 10;\r\n                    if (Math.abs(angleSigned) < 180 - angleSignedThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = Math.pp_sign(angleSigned);\r\n                        //console.error(\"special sign\");\r\n                    }\r\n                }\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                //console.error(\"direction new\");\r\n            }\r\n        }\r\n\r\n        previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n        if (previousFixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        } else {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousFixedHorizontalMovement);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_move\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_moveStep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_syncCollisionRuntimeParamsWithPrevious\", { enumerable: false });", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._teleport = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n    let originalFeetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let feetPositionOffsetToOriginal = vec3_create();\r\n    let offsetTeleportPosition = vec3_create();\r\n\r\n    let zero = vec3_create();\r\n    let forwardForHorizontal = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let fixedHorizontalMovement = vec3_create();\r\n    let fixedVerticalMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _teleport(teleportPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, isPositionCheck = false) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        offsetTeleportPosition.vec3_copy(teleportPosition);\r\n        originalFeetPosition = transformQuat.quat2_getPosition(originalFeetPosition);\r\n        feetPositionOffsetToOriginal = originalFeetPosition.vec3_sub(feetPosition, feetPositionOffsetToOriginal);\r\n        if (feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n            feetPositionOffsetToOriginal.vec3_zero();\r\n        } else {\r\n            offsetTeleportPosition = offsetTeleportPosition.vec3_sub(feetPositionOffsetToOriginal, offsetTeleportPosition);\r\n        }\r\n\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n        if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n            forwardForHorizontal.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForHorizontal.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n            forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n            if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            }\r\n        }\r\n\r\n        fixedHorizontalMovement = this._horizontalCheck(zero, offsetTeleportPosition, height, transformUp, forwardForHorizontal, false, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            newFeetPosition = offsetTeleportPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                forwardForVertical.vec3_copy(transformForward);\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            let downward = -1;\r\n            fixedVerticalMovement = this._verticalCheck(zero, downward, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n            if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n                newFeetPosition = newFeetPosition.vec3_add(fixedVerticalMovement, newFeetPosition);\r\n\r\n                forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnGround) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnGround && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnGround && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnCeiling) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnCeiling && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnCeiling && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnGroundAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnGroundAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnCeiling) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnCeilingAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnCeilingAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myTeleportCanceled) {\r\n                    if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                        collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                        collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                        collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                    }\r\n\r\n                    if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                        collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                        collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                        collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                    }\r\n                }\r\n\r\n                // Regather surface if invalid else use before\r\n            } else {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myTeleportCanceled = true;\r\n        }\r\n\r\n        if (!isPositionCheck) {\r\n            if (collisionCheckParams.myExtraTeleportCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraTeleportCheckCallback(\r\n                    offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        } else {\r\n            if (collisionCheckParams.myExtraCheckTransformCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraCheckTransformCheckCallback(\r\n                    endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(teleportPosition);\r\n\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            collisionRuntimeParams.myFixedTeleportPosition.vec3_copy(newFeetPosition);\r\n            if (!feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n                collisionRuntimeParams.myFixedTeleportPosition = collisionRuntimeParams.myFixedTeleportPosition.vec3_add(feetPositionOffsetToOriginal, collisionRuntimeParams.myFixedTeleportPosition);\r\n            }\r\n\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        } else {\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myOriginalPosition);\r\n        }\r\n\r\n        collisionRuntimeParams.myIsTeleport = true;\r\n\r\n        if (collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugRuntimeParamsEnabled && Globals.isDebugEnabled(this._myEngine)) {\r\n            this._debugRuntimeParams(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_teleport\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._positionCheck = function () {\r\n    let feetPosition = vec3_create();\r\n    return function _positionCheck(allowAdjustments, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        feetPosition = transformQuat.quat2_getPosition(feetPosition);\r\n\r\n        this._teleport(feetPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, true);\r\n\r\n        collisionRuntimeParams.myIsPositionOk = !collisionRuntimeParams.myTeleportCanceled;\r\n        collisionRuntimeParams.myIsPositionCheck = true;\r\n        collisionRuntimeParams.myOriginalPositionCheckPosition.vec3_copy(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        collisionRuntimeParams.myFixedPositionCheckPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        collisionRuntimeParams.myIsPositionCheckAllowAdjustments = allowAdjustments;\r\n\r\n        if (!allowAdjustments) {\r\n            collisionRuntimeParams.myIsPositionOk = collisionRuntimeParams.myIsPositionOk &&\r\n                collisionRuntimeParams.myOriginalPositionCheckPosition.vec_equals(collisionRuntimeParams.myFixedPositionCheckPosition, 0.00001);\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myFixedTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myTeleportCanceled = false;\r\n        collisionRuntimeParams.myIsTeleport = false;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_positionCheck\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalCheck = function () {\r\n    let fixedFeetPosition = vec3_create();\r\n    let newFixedFeetPosition = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    return function _horizontalCheck(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, avoidSlidingExtraCheck, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n        outFixedMovement.vec3_zero();\r\n\r\n        horizontalDirection = movement.vec3_normalize(horizontalDirection);\r\n        let surfaceTooSteepResults = this._surfaceTooSteep(up, horizontalDirection, collisionCheckParams, previousCollisionRuntimeParams);\r\n        if (movement.vec3_isZero(0.000001) ||\r\n            ((!surfaceTooSteepResults[0] || (allowSurfaceSteepFix && collisionCheckParams.myAllowGroundSteepFix)) &&\r\n                (!surfaceTooSteepResults[1] || (allowSurfaceSteepFix && collisionCheckParams.myAllowCeilingSteepFix)))) {\r\n            fixedFeetPosition = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.0001, fixedFeetPosition), fixedFeetPosition);\r\n            let fixedHeight = Math.max(0, height - collisionCheckParams.myDistanceFromFeetToIgnore - collisionCheckParams.myDistanceFromHeadToIgnore - 0.0001 * 2);\r\n\r\n            let canMove = true;\r\n            if (collisionCheckParams.myHorizontalMovementCheckEnabled && !movement.vec3_isZero(0.000001)) {\r\n                canMove = this._horizontalMovementCheck(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n\r\n            if (canMove) {\r\n                if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n                    newFixedFeetPosition = fixedFeetPosition.vec3_add(movement, newFixedFeetPosition);\r\n                    newFeetPosition = feetPosition.vec3_add(movement, newFeetPosition);\r\n                    let canStay = this._horizontalPositionCheck(newFeetPosition, height, newFixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n                    if (canStay) {\r\n                        outFixedMovement.vec3_copy(movement);\r\n                    }\r\n\r\n                    if (outFixedMovement.vec3_isZero(0.000001)) {\r\n                        outFixedMovement.vec3_zero();\r\n                    }\r\n                } else {\r\n                    outFixedMovement.vec3_copy(movement);\r\n                }\r\n            } else if (!avoidSlidingExtraCheck && collisionCheckParams.mySlidingEnabled && collisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal) {\r\n                this._horizontalCheckBetterSlideNormal(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckRaycast = function () {\r\n    let direction = vec3_create();\r\n    let fixedFeetPosition = vec3_create();\r\n    let fixedHitPosition = vec3_create();\r\n    return function _horizontalCheckRaycast(startPosition, endPosition, movementDirection, up,\r\n        ignoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n        feetPosition, fixHitOnCollision,\r\n        collisionCheckParams, collisionRuntimeParams, checkAllHits = false, ignoreHitsInsideCollisionIfObjectToIgnore = false) {\r\n\r\n        let origin = startPosition;\r\n        direction = endPosition.vec3_sub(origin, direction);\r\n\r\n        if (movementDirection != null && !direction.vec3_isConcordant(movementDirection)) {\r\n            direction.vec3_negate(direction);\r\n            origin = endPosition;\r\n        }\r\n\r\n        let distance = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        let raycastResult = this._raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, true, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isOk = true;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hitsToControl = checkAllHits ? raycastResult.myHits.length : 1;\r\n            let validHitIndex = 0;\r\n            for (let i = 0; i < hitsToControl; i++) {\r\n                let hit = raycastResult.myHits[i];\r\n                if ((ignoreGroundAngleCallback == null || !ignoreGroundAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore)) &&\r\n                    (ignoreCeilingAngleCallback == null || !ignoreCeilingAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore))) {\r\n                    isOk = false;\r\n                    validHitIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!isOk && validHitIndex > 0) {\r\n                for (let i = 0; i < validHitIndex; i++) {\r\n                    raycastResult.removeHit(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isOk && fixHitOnCollision) {\r\n            let hitPosition = raycastResult.myHits[0].myPosition;\r\n\r\n            fixedFeetPosition = feetPosition.vec3_copyComponentAlongAxis(hitPosition, up, fixedFeetPosition);\r\n            fixedHitPosition.vec3_copy(hitPosition);\r\n\r\n            let directionOffsetEpsilonValue = 0.0001;\r\n            direction = direction.vec3_componentAlongAxis(up, direction);\r\n            if (!direction.vec3_isZero(0.000001)) {\r\n                // If the check has an up part move the hit a bit on the that direction\r\n                direction.vec3_normalize(direction);\r\n                direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n\r\n                // This offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                fixedFeetPosition.vec3_add(direction, fixedFeetPosition);\r\n                fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n            }\r\n\r\n            // Move the hit a bit further to prevent miss\r\n            direction = fixedHitPosition.vec3_sub(fixedFeetPosition, direction);\r\n            direction.vec3_normalize(direction);\r\n            direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n            fixedHitPosition = fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n\r\n            let swapRaycastResult = this._myRaycastResult;\r\n            this._myRaycastResult = this._myFixRaycastResult;\r\n\r\n            isOk = this._horizontalCheckRaycast(fixedFeetPosition, fixedHitPosition, null, up,\r\n                false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                feetPosition, false,\r\n                collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (this._myRaycastResult.isColliding()) {\r\n                this._myFixRaycastResult = swapRaycastResult;\r\n            } else {\r\n                isOk = false;\r\n                this._myRaycastResult = swapRaycastResult;\r\n            }\r\n        }\r\n\r\n        return isOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._ignoreSurfaceAngle = function () {\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = vec3_create();\r\n    let hitDirection = vec3_create();\r\n    let hitMovement = vec3_create();\r\n    let projectAlongAxis = vec3_create();\r\n    return function _ignoreSurfaceAngle(feetPosition, height, movementOrForward, objectsToIgnore, outIgnoredObjects, isGround, isMovementCheck, up, collisionCheckParams, hit, ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n        let isIgnorable = false;\r\n\r\n        let surfaceIgnoreHeight = null;\r\n        let groundIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        let ceilingIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n        if (isGround && groundIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(groundIgnoreHeight + 0.0002, 0, height);\r\n        } else if (!isGround && ceilingIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(height - ceilingIgnoreHeight - 0.0002, 0, height);\r\n        }\r\n\r\n        let surfaceIgnoreMaxMovementLeft = null;\r\n        if (isMovementCheck) {\r\n            if (isGround && collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n            } else if (!isGround && collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n            }\r\n        }\r\n\r\n        if (!hit.myInsideCollision) {\r\n            movementDirection = movementOrForward.vec3_normalize(movementDirection);\r\n\r\n            let surfaceAngle = hit.myNormal.vec3_angle(up);\r\n            if (!isGround) {\r\n                surfaceAngle = 180 - surfaceAngle;\r\n            }\r\n\r\n            if (isGround && collisionCheckParams.myGroundAngleToIgnore > 0 && (surfaceAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001)) {\r\n                if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, true);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            } else if (!isGround && collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, false);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            }\r\n\r\n            if ((isGround && (collisionCheckParams.myGroundAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001)) ||\r\n                (!isGround && (collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001))) {\r\n                if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                    let surfaceHeightCheckOk = true;\r\n                    let maxMovementLeftCheckOk = true;\r\n\r\n                    if (surfaceIgnoreHeight != null) {\r\n                        surfaceHeightCheckOk = false;\r\n\r\n                        let feetPositionUp = feetPosition.vec3_valueAlongAxis(up);\r\n                        let hitUp = hit.myPosition.vec3_valueAlongAxis(up);\r\n                        let hitHeight = hitUp - feetPositionUp;\r\n                        if ((isGround && hitHeight <= surfaceIgnoreHeight) || (!isGround && hitHeight >= surfaceIgnoreHeight)) {\r\n                            surfaceHeightCheckOk = true;\r\n                        } else {\r\n                            //console.error(hitHeight.toFixed(6));\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && isMovementCheck) {\r\n                        if (surfaceIgnoreMaxMovementLeft != null) {\r\n                            let movementLength = movementOrForward.vec3_length();\r\n                            if (movementLength > surfaceIgnoreMaxMovementLeft) {\r\n                                maxMovementLeftCheckOk = false;\r\n\r\n                                let hitPosition = hit.myPosition;\r\n                                let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n                                hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n\r\n                                if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n                                } else {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n                                }\r\n\r\n                                hitMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, hitMovement);\r\n\r\n                                let hitMovementLength = hitMovement.vec3_length();\r\n                                let movementLeft = movementLength - hitMovementLength;\r\n\r\n                                if (movementLeft <= surfaceIgnoreMaxMovementLeft) {\r\n                                    maxMovementLeftCheckOk = true;\r\n                                } else {\r\n                                    //console.error(movementLeft.toFixed(3));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && maxMovementLeftCheckOk) {\r\n                        isIgnorable = true;\r\n                    }\r\n                }\r\n            }\r\n        } else if (ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n            // #TODO When raycast pierce will work, if it gives the normal even when inside check if the angle is ok and only ignore if that's the case\r\n            if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                isIgnorable = true;\r\n            }\r\n        }\r\n\r\n        if (isIgnorable) {\r\n            if (outIgnoredObjects != null) {\r\n                outIgnoredObjects.pp_pushUnique(hit.myObject, objectsEqualCallback);\r\n            }\r\n        }\r\n\r\n\r\n        return isIgnorable;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckRaycast\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_ignoreSurfaceAngle\", { enumerable: false });", "import { vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalSlide = function () {\r\n    let previousHorizontalMovement = vec3_create();\r\n    return function _horizontalSlide(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        this._mySlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        outSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, outSlideMovement);\r\n\r\n        if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n            this._horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, this._myPrevCollisionRuntimeParams.myIsSliding, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement);\r\n\r\n            //console.error(\"post oppo:\", outSlideMovement.vec_toString());\r\n        }\r\n\r\n        //console.error(\" \");\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding && collisionCheckParams.mySlidingFlickeringPreventionType > 0) {\r\n            let isFlickering = this._horizontalSlideFlickerCheck(movement, outSlideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams);\r\n            this._mySlidingCollisionRuntimeParams.myIsSliding = !isFlickering;\r\n        }\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding) {\r\n            let backupFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            collisionRuntimeParams.copy(this._mySlidingCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = backupFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        } else {\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            //console.error(\"slide cancel\");\r\n            outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideCheckOpposite = function () {\r\n    let horizontalCollisionNormal = vec3_create();\r\n    let oppositeSlideMovement = vec3_create();\r\n    let hitNormal = vec3_create();\r\n    return function _horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, previousIsSliding, allowSurfaceSteepFix, collisionCheckParams, preSlideCollisionRuntimeParams, postSlideCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        horizontalCollisionNormal = preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, horizontalCollisionNormal);\r\n        horizontalCollisionNormal.vec3_normalize(horizontalCollisionNormal);\r\n\r\n        //console.error(\"oppo\", outSlideMovement.vec_toString(), movement.vec_toString(15));\r\n        let angleNormalWithMovementThreshold = 20;\r\n        if (horizontalCollisionNormal.vec3_angle(movement) > 180 - angleNormalWithMovementThreshold) {\r\n            //console.error(\"opposite normal ok\");\r\n            return;\r\n        } else if (previousIsSliding && postSlideCollisionRuntimeParams.myIsSliding && outSlideMovement.vec3_isConcordant(previousHorizontalMovement)) {\r\n            //console.error(\"previous direction ok\");\r\n            //console.error(postSlideCollisionRuntimeParams.myIsSliding, outSlideMovement.vec3_isConcordant(previousHorizontalMovement), outSlideMovement.vec_toString(), previousHorizontalMovement.vec_toString());\r\n            return;\r\n        } else {\r\n            //console.error(\"no fast exit\");\r\n        }\r\n\r\n        //console.error(horizontalCollisionNormal.vec3_angle(movement));\r\n\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams.copy(preSlideCollisionRuntimeParams);\r\n\r\n        oppositeSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingOppositeDirectionCollisionRuntimeParams, previousCollisionRuntimeParams, true, oppositeSlideMovement);\r\n\r\n        //console.error(previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n        if (this._mySlidingOppositeDirectionCollisionRuntimeParams.myIsSliding) {\r\n\r\n            let isOppositeBetter = false;\r\n            if (postSlideCollisionRuntimeParams.myIsSliding) {\r\n                if (movement.vec3_angle(oppositeSlideMovement) < movement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                    //console.error(\"oppo minor\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    if (Math.abs(movement.vec3_angle(oppositeSlideMovement) - movement.vec3_angle(outSlideMovement)) <= 0.0001) {\r\n                        if (previousHorizontalMovement.vec3_angle(oppositeSlideMovement) < previousHorizontalMovement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                            let angleNormalWithMovementThreshold = 5;\r\n                            if (horizontalCollisionNormal.vec3_angle(movement) < 90 + angleNormalWithMovementThreshold) {\r\n                                //console.error(\"oppo equal\");\r\n                                isOppositeBetter = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //console.error(movement.vec3_angle(outSlideMovement), movement.vec3_angle(oppositeSlideMovement));\r\n\r\n            } else {\r\n                let angleEpsilon = 0.001;\r\n                if (movement.vec3_isConcordant(oppositeSlideMovement) && movement.vec3_angle(oppositeSlideMovement) < 90 - angleEpsilon) {\r\n                    //console.error(\"oppo not\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    //console.error(\"oppo not prevention\");\r\n                }\r\n            }\r\n\r\n            if (isOppositeBetter) {\r\n                /* {\r\n                    hitNormal.vec3_copy(preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n \r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = slideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(0, 0, 1, 1);\r\n                    Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = oppositeSlideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(1, 0, 1, 1);\r\n                    Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = hitNormal.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  vec4_create(1, 1, 1, 1);\r\n                    Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 1);\r\n                } */\r\n\r\n                outSlideMovement.vec3_copy(oppositeSlideMovement);\r\n                postSlideCollisionRuntimeParams.copy(this._mySlidingOppositeDirectionCollisionRuntimeParams);\r\n            } else {\r\n                //console.error(\"normal\", previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n            }\r\n        } else {\r\n            //console.error(\"oppo not sliding\");\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalSlideFlickerCheck = function () {\r\n    let previousHorizontalMovement = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let flickerFixSlideMovement = vec3_create();\r\n    return function _horizontalSlideFlickerCheck(movement, slideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        let isFlickering = false;\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        let shouldCheckFlicker =\r\n            this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented ||\r\n            previousHorizontalMovement.vec3_isZero(0.00001);\r\n\r\n        if (!shouldCheckFlicker) {\r\n            if (this._myPrevCollisionRuntimeParams.myIsSliding || !collisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding) {\r\n                let flickerCollisionAngle = 90;\r\n                let flickerMovementAngle = 85;\r\n                switch (collisionCheckParams.mySlidingFlickeringPreventionType) {\r\n                    case 1:\r\n                        shouldCheckFlicker = previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0);\r\n                        break;\r\n                    case 2:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n                        break;\r\n                    case 3:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n\r\n                        shouldCheckFlicker = shouldCheckFlicker || (\r\n                            Math.abs(Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) - flickerCollisionAngle) < 0.00001 &&\r\n                            Math.abs(collisionRuntimeParams.mySlidingMovementAngle) > flickerMovementAngle + 0.00001);\r\n                        break;\r\n                    case 4:\r\n                        shouldCheckFlicker = true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n        if (shouldCheckFlicker || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) {\r\n            if (shouldCheckFlicker) {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = collisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            } else {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = Math.max(0, this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter - 1);\r\n                //console.error(collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            //console.error(previousHorizontalMovement.vec3_signTo(movement, up, 0), slideMovement.vec3_signTo(movement, up, 0));\r\n            if ((collisionCheckParams.mySlidingFlickeringPreventionType != 1 || collisionRuntimeParams.myIsSlidingFlickerPrevented || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) &&\r\n                (this._myPrevCollisionRuntimeParams.myIsSliding && previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0))) {\r\n                isFlickering = true;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                //console.error(\"quick flicker fix\");\r\n            } else {\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.reset();\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySliding90DegreesSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n\r\n                //console.error(\"slide movement\", slideMovement.vec_toString(), feetPosition.vec_toString());\r\n                newFeetPosition = feetPosition.vec3_add(slideMovement, newFeetPosition);\r\n\r\n                let backupDebugEnabled = collisionCheckParams.myDebugEnabled;\r\n                collisionCheckParams.myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugSlidingEnabled;\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(movement, newFeetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, previousCollisionRuntimeParams, false, fixedMovement);\r\n                collisionCheckParams.myDebugEnabled = backupDebugEnabled;\r\n\r\n                if (fixedMovement.vec3_isZero(0.00001)) {\r\n                    this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.copy(this._mySlidingFlickeringFixCollisionRuntimeParams);\r\n\r\n                    flickerFixSlideMovement = this._internalHorizontalSlide(movement, newFeetPosition, height, up, forward, slideMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, flickerFixSlideMovement);\r\n\r\n                    if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n                        this._horizontalSlideCheckOpposite(movement, newFeetPosition, height, up, forward, slideMovement, true, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, flickerFixSlideMovement);\r\n                    }\r\n\r\n                    if (this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.myIsSliding) {\r\n                        if (slideMovement.vec3_signTo(movement, up, 0) != flickerFixSlideMovement.vec3_signTo(movement, up, 0)) {\r\n\r\n                            /* {\r\n                                hitNormal.vec3_copy(collisionRuntimeParams.mySlidingCollisionHit.myNormal);\r\n    \r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = slideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(0.5, 0.5, 0.5, 1);\r\n                                Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = flickerFixSlideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(1, 1, 1, 1);\r\n                                Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = hitNormal.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = Globals.getDefaultMaterials(this._myEngine).myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = vec4_create(1, 0, 0.5, 1);\r\n                                Globals.getDebugVisualManager(this._myEngine).draw(visualParams, 2);\r\n                            } */\r\n\r\n                            isFlickering = true;\r\n                            collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                            //console.error(\"expensive flicker fix\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            //console.error(\"no flicker check\");\r\n        }\r\n\r\n        if (isFlickering) {\r\n            //console.error(\"flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        } else {\r\n            //console.error(\"no flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        }\r\n\r\n        return isFlickering;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._internalHorizontalSlide = function () {\r\n    let invertedNormal = vec3_create();\r\n    let slidingMovement = vec3_create();\r\n    let movement90 = vec3_create();\r\n    let currentMovement = vec3_create();\r\n    let slideMovementForward = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    return function _internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, checkOppositeDirection, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        //let copiedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.pp_clone();\r\n        invertedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_negate(invertedNormal);\r\n        invertedNormal.vec3_removeComponentAlongAxis(up, invertedNormal);\r\n        invertedNormal[0] = Math.abs(invertedNormal[0]) < 0.01 ? 0 : invertedNormal[0];\r\n        invertedNormal[2] = Math.abs(invertedNormal[2]) < 0.01 ? 0 : invertedNormal[2];\r\n        invertedNormal.vec3_normalize(invertedNormal);\r\n\r\n        collisionRuntimeParams.mySlidingCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        collisionRuntimeParams.mySlidingWallNormal.vec3_copy(collisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n\r\n        outSlideMovement.vec3_zero();\r\n\r\n        slidingMovement.vec3_copy(invertedNormal);\r\n        if (checkOppositeDirection) {\r\n            slidingMovement.vec3_copy(movement);\r\n            slidingMovement.vec3_normalize(slidingMovement);\r\n        }\r\n\r\n        if (!slidingMovement.vec3_isZero(0.00001)) {\r\n\r\n            slidingMovement.vec3_scale(movement.vec3_length(), slidingMovement);\r\n\r\n            let slidingSign = invertedNormal.vec3_signTo(movement, up);\r\n\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                let angleThreshold = 0.1;\r\n                if (invertedNormal.vec3_angle(movement) < angleThreshold && collisionRuntimeParams.mySliding90DegreesSign != 0) {\r\n                    //console.error(slidingSign, collisionRuntimeParams.mySliding90DegreesSign);\r\n                    slidingSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                } else if (collisionRuntimeParams.mySliding90DegreesSign == 0 || collisionRuntimeParams.mySlidingRecompute90DegreesSign) {\r\n                    collisionRuntimeParams.mySliding90DegreesSign = slidingSign;\r\n                } else {\r\n                    //console.error(\"no fix\");\r\n                }\r\n\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n            }\r\n\r\n            if (checkOppositeDirection) {\r\n                slidingSign *= -1;\r\n            }\r\n\r\n            let currentAngle = 90 * slidingSign;\r\n            let maxAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement.vec3_rotateAxis(90 * slidingSign, up, movement90), up) * slidingSign, true) * slidingSign;\r\n            let minAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement, up) * slidingSign, true) * slidingSign;\r\n\r\n            if (checkOppositeDirection) {\r\n                maxAngle = currentAngle;\r\n                minAngle = 0;\r\n            } else {\r\n                if (Math.abs(maxAngle) < Math.abs(minAngle)) {\r\n                    // This should only happens because of the 90 degrees adjustment\r\n                    //console.error(\"90 adjust\");\r\n                    minAngle = 0;\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    minAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(maxAngle) < Math.abs(currentAngle) || Math.abs(Math.abs(maxAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"max\", currentAngle.toFixed(15), maxAngle.toFixed(15));\r\n                    currentAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(currentAngle) < Math.abs(minAngle) || Math.abs(Math.abs(minAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"min\", currentAngle.toFixed(3), minAngle.toFixed(3));\r\n                    currentAngle = minAngle;\r\n                }\r\n\r\n                //console.error(maxAngle.toFixed(3), minAngle.toFixed(3));\r\n            }\r\n\r\n            if (checkOppositeDirection && !previousHorizontalMovement.vec3_isZero(0.000001)) {\r\n                let angleWithPrevious = movement.vec3_angleSigned(previousHorizontalMovement, up);\r\n                if (Math.pp_sign(angleWithPrevious) == Math.pp_sign(maxAngle) && Math.abs(maxAngle) > Math.abs(angleWithPrevious)) {\r\n                    currentAngle = angleWithPrevious;\r\n                    //console.error(\"better angle\", currentAngle, previousHorizontalMovement.vec_toString(10), movement.vec_toString(10));\r\n                }\r\n            }\r\n\r\n            currentMovement.vec3_zero();\r\n\r\n            let backupDebugEnabled = collisionCheckParams.myDebugEnabled;\r\n            collisionCheckParams.myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugSlidingEnabled;\r\n\r\n            let originalCurrentAngle = currentAngle;\r\n            for (let i = 0; i < collisionCheckParams.mySlidingMaxAttempts; i++) {\r\n                this._myInternalSlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n                currentMovement = slidingMovement.vec3_rotateAxis(currentAngle, up, currentMovement);\r\n\r\n                slideMovementForward.vec3_copy(forward);\r\n                if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                    if (!currentMovement.vec3_isZero()) {\r\n                        slideMovementForward = currentMovement.vec3_normalize(slideMovementForward);\r\n                    }\r\n                }\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(currentMovement, feetPosition, height, up, slideMovementForward, allowSurfaceSteepFix, collisionCheckParams, this._myInternalSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, true, fixedMovement);\r\n                if (!fixedMovement.vec3_isZero(0.00001)) {\r\n                    outSlideMovement.vec3_copy(currentMovement);\r\n                    collisionRuntimeParams.copy(this._myInternalSlidingCollisionRuntimeParams);\r\n                    collisionRuntimeParams.myIsSliding = true;\r\n                    collisionRuntimeParams.myIsSlidingIntoOppositeDirection = checkOppositeDirection;\r\n                    collisionRuntimeParams.mySlidingMovementAngle = movement.vec3_angleSigned(currentMovement, up);\r\n                    collisionRuntimeParams.mySlidingCollisionAngle = invertedNormal.vec3_angleSigned(currentMovement, up);\r\n\r\n                    maxAngle = currentAngle;\r\n                    currentAngle = (maxAngle + minAngle) / 2;\r\n                } else {\r\n                    if (currentAngle != maxAngle) {\r\n                        minAngle = currentAngle;\r\n                    }\r\n\r\n                    if (i == 0 && currentAngle != maxAngle) {\r\n                        currentAngle = maxAngle;\r\n                    } else {\r\n                        currentAngle = (minAngle + maxAngle) / 2;\r\n                    }\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    //console.error(\"fast slide exit\", maxAngle, minAngle, originalCurrentAngle, collisionRuntimeParams.myIsSliding, checkOppositeDirection);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            collisionCheckParams.myDebugEnabled = backupDebugEnabled;\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsSliding) {\r\n            collisionRuntimeParams.mySlidingCollisionHit.reset();\r\n        } else {\r\n            //console.error(\"slide angle\", movement.vec3_angleSigned(invertedNormal, up), invertedNormal.vec_toString(), copiedNormal.vec_toString());\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalCheckBetterSlideNormal = function () {\r\n    let movementDirection = vec3_create();\r\n    let hitDirection = vec3_create();\r\n    let projectAlongAxis = vec3_create();\r\n    let fixedMovement = vec3_create();\r\n    let newFixedFeetPosition = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    return function _horizontalCheckBetterSlideNormal(movement, originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        // Check for a better slide hit position and normal\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        let hitPosition = collisionRuntimeParams.myHorizontalCollisionHit.myPosition;\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n        if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n        } else {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n        }\r\n\r\n        fixedMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, fixedMovement);\r\n        /* if (fixedMovement.vec3_angle(movementDirection) >= 0.00001 || fixedMovement.vec3_length() > movement.vec3_length() + 0.00001) {\r\n            console.error(\"ERROR, project function should return a smaller movement in the same direction\",\r\n                fixedMovement.vec3_angle(movementDirection), fixedMovement.vec3_length(), movement.vec3_length());\r\n            // Maybe epsilon could be 0.0001? is higher but still 10 times less then a millimiter\r\n        } */\r\n\r\n        if (fixedMovement.vec3_isConcordant(movementDirection)) {\r\n            fixedMovement = movementDirection.vec3_scale(Math.min(fixedMovement.vec3_length(), movement.vec3_length()), fixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_zero();\r\n        }\r\n\r\n        if (collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugHorizontalMovementEnabled && Globals.isDebugEnabled(this._myEngine)) {\r\n            Globals.getDebugVisualManager(this._myEngine).drawArrow(0, feetPosition, movementDirection, fixedMovement.vec3_length(), vec4_create(1, 0, 1, 1));\r\n        }\r\n\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n\r\n        newFixedFeetPosition = feetPosition.vec3_add(fixedMovement, newFixedFeetPosition);\r\n        newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n\r\n        let backupDebugEnabled = collisionCheckParams.myDebugEnabled;\r\n        collisionCheckParams.myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugSlidingEnabled;\r\n\r\n        if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n            this._horizontalPositionCheck(originalFeetPosition, originalHeight, newFixedFeetPosition, height, up, forward, collisionCheckParams, this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n\r\n        collisionCheckParams.myDebugEnabled = backupDebugEnabled;\r\n\r\n        if (this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally &&\r\n            !this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.myInsideCollision) {\r\n            collisionRuntimeParams.copy(this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._isSlidingNormalValid = function () {\r\n    let flatNormal = vec3_create();\r\n    return function _isSlidingNormalValid(movement, up, collisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        flatNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatNormal);\r\n        flatNormal.vec3_normalize(flatNormal);\r\n\r\n        if (!flatNormal.vec3_isZero(0.000001)) {\r\n            isValid = true;\r\n        }\r\n\r\n        // I wanted to check if the normal angle was not concordant and thought that in that case it shouldn't slide but it turns out it makes sense\r\n        // even for back hits which either can't resolve or at least makes me slide out of collision\r\n        // At least a check for the normal to be not up is ok\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideCheckOpposite\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalSlideFlickerCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_internalHorizontalSlide\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalCheckBetterSlideNormal\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_isSlidingNormalValid\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalMovementCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let heightStep = vec3_create();\r\n    let currentHeightOffset = vec3_create();\r\n    let leftRadialDirection = vec3_create();\r\n    let rightRadialDirection = vec3_create();\r\n    return function _horizontalMovementCheck(movement, originalFeetPosition, originalHeight, feetPosition, height, up, collisionCheckParams, collisionRuntimeParams) {\r\n        // #TODO Add a flag in the params to specify if u want to allow movement inside collision (to hope that it will end up in a non collision position)\r\n        // Also vertical check should check all hits like the position check\r\n        // For now is ok as it is, the movement check is not as important and could also be disabled it the movement per frame is very small\r\n\r\n        this._myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugHorizontalMovementEnabled;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let steplength = collisionCheckParams.myRadius / collisionCheckParams.myHorizontalMovementRadialStepAmount;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        {\r\n            leftRadialDirection = movementDirection.vec3_rotateAxis(halfConeAngle, up, leftRadialDirection);\r\n            rightRadialDirection = movementDirection.vec3_rotateAxis(-halfConeAngle, up, rightRadialDirection);\r\n            for (let i = 1; i <= collisionCheckParams.myHorizontalMovementRadialStepAmount; i++) {\r\n                // Left\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = leftRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n\r\n                // Right\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = rightRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n            }\r\n        }\r\n\r\n        // If result is inside a collision it's ignored, so that at least you can exit it before seeing if the new position works now\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // Gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundObjectsToIgnore, true, true, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundCeilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // Gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, ceilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // Check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, ceilingObjectsToIgnore, null, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountMovement > 0 && height > 0.000001) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountMovement;\r\n                heightStep = up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // We can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // The ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopMovement || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, currentHeightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalMovement) {\r\n                        this._horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, currentHeightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                    }\r\n\r\n                    if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementVerticalCheck = function () {\r\n    let movementStep = vec3_create();\r\n    let movementDirection = vec3_create();\r\n    let firstPosition = vec3_create();\r\n    let secondPosition = vec3_create();\r\n    let firstMovementPosition = vec3_create();\r\n    let secondMovementPosition = vec3_create();\r\n    let firstHeightPosition = vec3_create();\r\n    let secondHeightPosition = vec3_create();\r\n    let firstHeightMovementPosition = vec3_create();\r\n    let secondHeightMovementPosition = vec3_create();\r\n    return function _horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, heightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward) {\r\n                        firstHeightMovementPosition = firstPosition.vec3_add(movementStep, firstHeightMovementPosition);\r\n                        firstHeightMovementPosition = firstHeightMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward) {\r\n                        secondHeightMovementPosition = secondPosition.vec3_add(movementStep, secondHeightMovementPosition);\r\n                        secondHeightMovementPosition = secondHeightMovementPosition.vec3_sub(heightStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (m == 0) {\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                            secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                            let firstHeightPosition = firstPosition.vec3_sub(heightStep);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightMovementPosition = secondPosition.vec3_sub(heightStep, secondHeightMovementPosition).vec3_add(movementStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled && j == 0)) {\r\n                    if (m == 0) {\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        firstHeightMovementPosition = firstMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                    firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled && j == 0)) {\r\n                    firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstHeightMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                    collisionRuntimeParams.myHorizontalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalMovementHorizontalCheck = function () {\r\n    let movementStep = vec3_create();\r\n    let movementDirection = vec3_create();\r\n    let firstPosition = vec3_create();\r\n    let secondPosition = vec3_create();\r\n    let firstMovementPosition = vec3_create();\r\n    let secondMovementPosition = vec3_create();\r\n    return function _horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                        // #TODO Ignore hits if inside could be a paramter, so you can specify if u want to be able to exit from a collision\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckHorizontalBorder) {\r\n                        if (m == 0) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        {\r\n                            firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                            secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondMovementPosition, firstMovementPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstMovementPosition, null, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementVerticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalMovementHorizontalCheck\", { enumerable: false });", "import { RaycastHit } from \"../../../../../../cauldron/physics/physics_raycast_params\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._horizontalPositionCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let heightOffset = vec3_create();\r\n    let heightStep = vec3_create();\r\n    let currentHeightOffset = vec3_create();\r\n    let hitHeightOffset = vec3_create();\r\n    let hitHeightOffsetEpsilon = vec3_create();\r\n    let downwardHeightOffset = vec3_create();\r\n    let downwardHeightStep = vec3_create();\r\n\r\n    let verticalDirection = vec3_create();\r\n\r\n    let vertilCheckHit = new RaycastHit();\r\n\r\n    return function _horizontalPositionCheck(originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugHorizontalPositionEnabled;\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 180);\r\n        let sliceAngle = halfConeAngle / collisionCheckParams.myHalfConeSliceAmount;\r\n        let tempCheckPosition = _localGetCachedCheckPosition();\r\n        checkPositions.push(feetPosition.vec3_add(forward.vec3_scale(collisionCheckParams.myRadius, tempCheckPosition), tempCheckPosition));\r\n        for (let i = 1; i <= collisionCheckParams.myHalfConeSliceAmount; i++) {\r\n            let currentAngle = i * sliceAngle;\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            let radialDirection = forward.vec3_rotateAxis(-currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            radialDirection = forward.vec3_rotateAxis(currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n        }\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // Gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundObjectsToIgnore, true, false, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundCeilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // Gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, ceilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // Check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, ceilingObjectsToIgnore, null, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountPosition > 0 && height > 0) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountPosition;\r\n                up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // We can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // The ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopPosition || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i != 0 && i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, currentHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalPosition) {\r\n                        // This offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                        // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                        let hitHeightOffsetEpsilonValue = 0.0001;\r\n\r\n                        if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 0 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                            verticalDirection.vec3_copy(up);\r\n                            this._horizontalPositionVerticalCheck(feetPosition, checkPositions, currentHeightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 1 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                                verticalDirection = up.vec3_negate(verticalDirection);\r\n                                downwardHeightOffset = currentHeightOffset.vec3_sub(heightStep, downwardHeightOffset);\r\n                                downwardHeightStep = heightStep.vec3_negate(downwardHeightStep);\r\n                                this._horizontalPositionVerticalCheck(feetPosition, checkPositions, downwardHeightOffset, downwardHeightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                            }\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionHorizontalCheck = function () {\r\n    let basePosition = vec3_create();\r\n    let forwardNegate = vec3_create();\r\n    let currentRadialPosition = vec3_create();\r\n    let previousRadialPosition = vec3_create();\r\n    return function _horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n\r\n        let halfRadialPositions = Math.floor(checkPositions.length / 2) + 1;\r\n        for (let j = 0; j < halfRadialPositions; j++) {\r\n            if (j > 0) {\r\n                let leftIndex = Math.max(0, j * 2);\r\n                let rightIndex = Math.max(0, (j * 2 - 1));\r\n                let leftAndRightEqual = checkPositions[leftIndex].vec_equals(checkPositions[rightIndex], 0.000001);\r\n\r\n                if (collisionCheckParams.myCheckConeBorder) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        let previousIndex = Math.max(0, currentIndex - 2);\r\n                        previousRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, forward.vec3_negate(forwardNegate), up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myCheckConeRay && isHorizontalCheckOk) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        if (r == 1 && leftAndRightEqual) {\r\n                            break;\r\n                        }\r\n\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                            false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, false,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckConeRay) {\r\n                    currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                        false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, false,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHorizontalCheckOk) {\r\n            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._horizontalPositionVerticalCheck = function () {\r\n    let basePosition = vec3_create();\r\n    let previousBasePosition = vec3_create();\r\n    let currentRadialPosition = vec3_create();\r\n    let previousRadialPosition = vec3_create();\r\n    let previousCurrentRadialPosition = vec3_create();\r\n    let previousPreviousRadialPosition = vec3_create();\r\n    return function _horizontalPositionVerticalCheck(feetPosition, checkPositions, heightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n        previousBasePosition = basePosition.vec3_sub(heightStep, previousBasePosition);\r\n\r\n        for (let j = 0; j <= checkPositions.length; j++) {\r\n            let previousCheckPositionIsEqual = false;\r\n\r\n            if (j == checkPositions.length) {\r\n                currentRadialPosition.vec3_copy(basePosition);\r\n                previousRadialPosition.vec3_copy(previousBasePosition);\r\n            } else {\r\n                currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n                previousRadialPosition = currentRadialPosition.vec3_sub(heightStep, previousRadialPosition);\r\n\r\n                if (j > 0) {\r\n                    previousCheckPositionIsEqual = checkPositions[j].vec_equals(checkPositions[j - 1], 0.000001);\r\n                }\r\n            }\r\n\r\n            if (collisionCheckParams.myCheckVerticalStraight && !previousCheckPositionIsEqual) {\r\n                isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, null, up,\r\n                    collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                    feetPosition, true,\r\n                    collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    }\r\n\r\n                    if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (j < checkPositions.length) {\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayOutward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayOutward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousBasePosition, currentRadialPosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayInward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayInward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, basePosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (j > 0) {\r\n                    if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward || collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                        let previousIndex = Math.max(0, j - 2);\r\n                        previousCurrentRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousCurrentRadialPosition);\r\n                        previousPreviousRadialPosition = previousCurrentRadialPosition.vec3_sub(heightStep, previousPreviousRadialPosition);\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousPreviousRadialPosition, currentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, previousCurrentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionHorizontalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_horizontalPositionVerticalCheck\", { enumerable: false });", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._verticalCheck = function () {\r\n    let newFeetPosition = vec3_create();\r\n    let additionalFixedMovement = vec3_create();\r\n    let zero = vec3_create(0, 0, 0);\r\n    return function _verticalCheck(verticalMovement, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingVertically = false;\r\n        collisionRuntimeParams.myVerticalCollisionHit.reset();\r\n\r\n        let movementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(up), -1);\r\n        let isMovementDownward = movementSign < 0;\r\n\r\n        outFixedMovement.vec3_copy(verticalMovement);\r\n        if (collisionCheckParams.myVerticalMovementCheckEnabled) {\r\n            outFixedMovement = this._verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            if (collisionCheckParams.myCheckVerticalBothDirection &&\r\n                (outFixedMovement.vec_equals(verticalMovement, 0.00001) || originalMovementSign == 0 || (movementSign != originalMovementSign))) {\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n                let isOppositeMovementDownward = !isMovementDownward;\r\n                additionalFixedMovement = this._verticalMovementAdjustment(zero, isOppositeMovementDownward, originalMovementSign, newFeetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, additionalFixedMovement);\r\n\r\n                outFixedMovement.vec3_add(additionalFixedMovement, outFixedMovement);\r\n                isMovementDownward = !isMovementDownward;\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myVerticalPositionCheckEnabled) {\r\n            newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n            let canStay = this._verticalPositionCheck(newFeetPosition, isMovementDownward, height, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            if (!canStay) {\r\n                outFixedMovement.vec3_zero();\r\n\r\n                // #TODO Probably this should not be reset, you should be required to check if the movement was ok to be sure this values have a meaning\r\n                collisionRuntimeParams.myHasSnappedOnGround = false;\r\n                collisionRuntimeParams.myHasSnappedOnCeiling = false;\r\n                collisionRuntimeParams.myHasPoppedOutGround = false;\r\n                collisionRuntimeParams.myHasPoppedOutCeiling = false;\r\n                collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalMovementAdjustment = function () {\r\n    let startOffset = vec3_create();\r\n    let endOffset = vec3_create();\r\n    let tempVector = vec3_create();\r\n    let furtherDirection = vec3_create();\r\n    let furtherDirectionPosition = vec3_create();\r\n    let upNegate = vec3_create();\r\n    let origin = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        this._myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugVerticalMovementEnabled;\r\n\r\n        startOffset.vec3_zero();\r\n        endOffset.vec3_zero();\r\n\r\n        let popOutEnabled = false;\r\n        let snapEnabled = false;\r\n\r\n        if (isMovementDownward) {\r\n            startOffset.vec3_zero();\r\n            endOffset.vec3_copy(verticalMovement);\r\n\r\n            if (collisionCheckParams.myGroundPopOutExtraDistance > 0 && collisionCheckParams.myGroundPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(collisionCheckParams.myGroundPopOutExtraDistance + 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        } else {\r\n            startOffset = up.vec3_scale(height, startOffset);\r\n            endOffset = up.vec3_scale(height, endOffset).vec3_add(verticalMovement, endOffset);\r\n\r\n            if (collisionCheckParams.myCeilingPopOutExtraDistance > 0 && collisionCheckParams.myCeilingPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(-collisionCheckParams.myCeilingPopOutExtraDistance - 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        }\r\n\r\n        if (isMovementDownward && originalMovementSign <= 0 && this._myPrevCollisionRuntimeParams.myIsOnGround && collisionCheckParams.mySnapOnGroundEnabled && collisionCheckParams.mySnapOnGroundExtraDistance > 0) {\r\n            endOffset.vec3_add(up.vec3_scale(-collisionCheckParams.mySnapOnGroundExtraDistance - 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        } else if (!isMovementDownward && this._myPrevCollisionRuntimeParams.myIsOnCeiling && collisionCheckParams.mySnapOnCeilingEnabled && collisionCheckParams.mySnapOnCeilingExtraDistance > 0 &&\r\n            (originalMovementSign > 0 || (originalMovementSign == 0 && (!this._myPrevCollisionRuntimeParams.myIsOnGround || !collisionCheckParams.mySnapOnGroundEnabled)))) {\r\n            endOffset.vec3_add(up.vec3_scale(collisionCheckParams.mySnapOnCeilingExtraDistance + 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        }\r\n\r\n        outFixedMovement.vec3_zero();\r\n        if (startOffset.vec3_distance(endOffset) > 0.00001) {\r\n            let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            furtherDirection.vec3_copy(up);\r\n            if (!isMovementDownward) {\r\n                furtherDirection.vec3_negate(furtherDirection);\r\n            }\r\n\r\n            let furtherDirectionPositionSet = false;\r\n\r\n            for (let i = 0; i < checkPositions.length; i++) {\r\n                let currentPosition = checkPositions[i];\r\n\r\n                origin = currentPosition.vec3_add(startOffset, origin);\r\n                direction = currentPosition.vec3_add(endOffset, direction).vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.myHits.length > 0) {\r\n                    if (furtherDirectionPositionSet) {\r\n                        if (raycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(furtherDirectionPosition, furtherDirection)) {\r\n                            furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                        }\r\n                    } else {\r\n                        furtherDirectionPositionSet = true;\r\n                        furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (furtherDirectionPositionSet) {\r\n                upNegate = up.vec3_negate(upNegate);\r\n                if (isMovementDownward) {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition, outFixedMovement).vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        collisionRuntimeParams.myHasSnappedOnGround = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutGround = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                } else {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition.vec3_add(up.vec3_scale(height, outFixedMovement), outFixedMovement), outFixedMovement).\r\n                        vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        collisionRuntimeParams.myHasSnappedOnCeiling = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutCeiling = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                }\r\n\r\n                if (!popOutEnabled && !outFixedMovement.vec3_isConcordant(verticalMovement)) {\r\n                    outFixedMovement.vec3_zero();\r\n                }\r\n\r\n                if (!collisionCheckParams.myVerticalMovementReduceEnabled && collisionRuntimeParams.myHasReducedVerticalMovement) {\r\n                    outFixedMovement.vec3_copy(verticalMovement);\r\n                    collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n                }\r\n            } else {\r\n                outFixedMovement.vec3_copy(verticalMovement);\r\n            }\r\n        } else {\r\n            outFixedMovement.vec3_copy(verticalMovement);\r\n        }\r\n\r\n        if (outFixedMovement.vec3_length() < 0.00001) {\r\n            outFixedMovement.vec3_zero();\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._verticalPositionCheck = function () {\r\n    let smallHeightFixOffset = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let startPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _verticalPositionCheck(feetPosition, checkUpward, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        if (height < 0.00001) {\r\n            return true;\r\n        }\r\n\r\n        this._myDebugEnabled = collisionCheckParams.myDebugEnabled && collisionCheckParams.myDebugVerticalPositionEnabled;\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isVerticalPositionOk = true;\r\n        let atLeastOneIsOk = false;\r\n\r\n        let adjustmentEpsilon = 0.00001;\r\n        smallHeightFixOffset = up.vec3_scale(adjustmentEpsilon, smallHeightFixOffset);\r\n        heightOffset = up.vec3_scale(height - adjustmentEpsilon, heightOffset);\r\n        if (height - adjustmentEpsilon < adjustmentEpsilon * 10) {\r\n            heightOffset = up.vec3_scale(adjustmentEpsilon * 10, heightOffset);\r\n        }\r\n\r\n        let insideHitSet = false;\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n\r\n            if (checkUpward) {\r\n                startPosition = currentPosition.vec3_add(smallHeightFixOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(heightOffset, endPosition);\r\n            } else {\r\n                startPosition = currentPosition.vec3_add(heightOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(smallHeightFixOffset, endPosition);\r\n            }\r\n\r\n            let origin = startPosition;\r\n            direction = endPosition.vec3_sub(origin, direction);\r\n            let distance = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n\r\n            let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let firstHitOutsideCollision = raycastResult.getFirstHitOutsideCollision();\r\n                if (firstHitOutsideCollision != null) {\r\n                    isVerticalPositionOk = false;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(firstHitOutsideCollision);\r\n                    break;\r\n                } else if (!insideHitSet) {\r\n                    insideHitSet = true;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    if (!collisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk) {\r\n                        isVerticalPositionOk = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                atLeastOneIsOk = true;\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myIsCollidingVertically = !isVerticalPositionOk || !atLeastOneIsOk;\r\n\r\n        return !collisionRuntimeParams.myIsCollidingVertically;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._getVerticalCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = vec3_create();\r\n    return function _getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        if (collisionCheckParams.myGroundCircumferenceAddCenter) {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = collisionCheckParams.myFeetRadius / collisionCheckParams.myGroundCircumferenceStepAmount;\r\n        let sliceAngle = 360 / collisionCheckParams.myGroundCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < collisionCheckParams.myGroundCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = forward.vec3_rotateAxis(currentStepRotation, up, currentDirection);\r\n            for (let j = 0; j < collisionCheckParams.myGroundCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, up, tempCheckPosition);\r\n                checkPositions.push(feetPosition.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += collisionCheckParams.myGroundCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalMovementAdjustment\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_verticalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_getVerticalCheckPositions\", { enumerable: false });", "import { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { CollisionCheck } from \"./collision_check\";\r\n\r\nCollisionCheck.prototype._updateSurfaceInfo = function () {\r\n    let transformUp = vec3_create();\r\n    let transformForward = vec3_create();\r\n    let feetPosition = vec3_create();\r\n\r\n    let transformOffsetLocalQuat = quat2_create();\r\n    let offsetTransformQuat = quat2_create();\r\n\r\n    let forwardForPerceivedAngle = vec3_create();\r\n    let forwardForVertical = vec3_create();\r\n\r\n    let zAxis = vec3_create(0, 0, 1);\r\n    let xAxis = vec3_create(1, 0, 0);\r\n    return function _updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // This makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n        if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n            forwardForVertical.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForVertical.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n            forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n            if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._postSurfaceCheck = function () {\r\n    let horizontalDirection = vec3_create();\r\n    return function _postSurfaceCheck(fixedHorizontalMovement, originalVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n\r\n        let isVerticalMovementZero = originalVerticalMovement.vec3_isZero(0.00001);\r\n        let isVerticalMovemenDownward = Math.pp_sign(originalVerticalMovement.vec3_lengthSigned(transformUp), -1) < 0;\r\n\r\n        let horizontalMovementIsZero = fixedHorizontalMovement.vec3_isZero(0.00001);\r\n        horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n\r\n        let groundPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myGroundNormal, horizontalDirection, transformUp, true);\r\n        let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myCeilingNormal, horizontalDirection, transformUp, false);\r\n\r\n        let mustRemainOnGroundOk = true;\r\n        if (collisionCheckParams.myMustStayOnGround) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !collisionRuntimeParams.myIsOnGround && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnGroundOk = false;\r\n            }\r\n        }\r\n\r\n        let mustRemainOnCeilingOk = true;\r\n        if (collisionCheckParams.myMustStayOnCeiling) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !collisionRuntimeParams.myIsOnCeiling && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnCeilingOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowGroundAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowGroundAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowGroundAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowGroundAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowGroundAngleDownhill, collisionCheckParams.myGroundAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                mustStayBelowGroundAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowCeilingAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowCeilingAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowCeilingAngleDownhill, collisionCheckParams.myCeilingAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                mustStayBelowCeilingAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnGroundHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnGroundHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundHitMaxAngle <= collisionCheckParams.myMovementMustStayOnGroundHitAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundHitMaxAngle > collisionCheckParams.myMovementMustStayOnGroundHitAngle + 0.0001) {\r\n                mustStayOnGroundHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnCeilingHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnCeilingHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingHitMaxAngle <= collisionCheckParams.myMovementMustStayOnCeilingHitAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingHitMaxAngle > collisionCheckParams.myMovementMustStayOnCeilingHitAngle + 0.0001) {\r\n                mustStayOnCeilingHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let isOnValidGroundAngleUphill = true;\r\n        let isOnValidGroundAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !horizontalMovementIsZero) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    isOnValidGroundAngleUphill = false;\r\n                    if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidGroundAngleUphill = Math.abs(groundPerceivedAngle) <= collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidGroundAngleDownhill) {\r\n                            isOnValidGroundAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnValidCeilingAngleUphill = true;\r\n        let isOnValidCeilingAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !horizontalMovementIsZero) {\r\n                if (ceilingPerceivedAngle > 0) {\r\n                    isOnValidCeilingAngleUphill = false;\r\n                    if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidCeilingAngleUphill = Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (ceilingPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidCeilingAngleDownhill) {\r\n                            isOnValidCeilingAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return mustRemainOnGroundOk && mustRemainOnCeilingOk && mustStayBelowGroundAngleOk && mustStayBelowCeilingAngleOk && mustStayOnGroundHitAngleOk && mustStayOnCeilingHitAngleOk && isOnValidGroundAngleUphill && isOnValidGroundAngleDownhill && isOnValidCeilingAngleUphill && isOnValidCeilingAngleDownhill;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._surfaceTooSteep = function () {\r\n    let surfaceSteepResults = [false, false];\r\n    return function _surfaceTooSteep(up, direction, collisionCheckParams, collisionRuntimeParams) {\r\n        let groundTooSteep = false;\r\n        let ceilingTooSteep = false;\r\n\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                collisionRuntimeParams.myGroundNormal,\r\n                direction, up, true);\r\n\r\n            groundTooSteep = groundPerceivedAngle > 0;\r\n            if (groundTooSteep &&\r\n                collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                groundTooSteep = Math.abs(groundPerceivedAngle) > collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n            }\r\n        }\r\n\r\n        if (!groundTooSteep) {\r\n            if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                ceilingTooSteep = ceilingPerceivedAngle > 0;\r\n                if (ceilingTooSteep &&\r\n                    collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    ceilingTooSteep = Math.abs(ceilingPerceivedAngle) > collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                }\r\n            }\r\n        }\r\n\r\n        surfaceSteepResults[0] = groundTooSteep;\r\n        surfaceSteepResults[1] = ceilingTooSteep;\r\n        return surfaceSteepResults;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._adjustVerticalMovementWithSurface = function () {\r\n    let horizontalDirection = vec3_create();\r\n    let extraVerticalMovement = vec3_create();\r\n    return function _adjustVerticalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedVerticalMovement) {\r\n        outAdjustedVerticalMovement.vec3_copy(verticalMovement);\r\n\r\n        if (horizontalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedVerticalMovement;\r\n        }\r\n\r\n        let extraVerticalLength = 0;\r\n        horizontalDirection = horizontalMovement.vec3_normalize(horizontalDirection);\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myGroundNormal,\r\n                horizontalDirection, up, true);\r\n\r\n            let groundExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n            groundExtraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n            if (Math.abs(groundExtraVerticalLength) > 0.00001) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = true;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myCeilingNormal,\r\n                horizontalDirection, up, false);\r\n\r\n            let ceilingExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n            ceilingExtraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n\r\n            if (Math.abs(ceilingExtraVerticalLength) > 0.00001) {\r\n                let sameSignThanGround = Math.pp_sign(extraVerticalLength) == Math.pp_sign(ceilingExtraVerticalLength);\r\n                if (extraVerticalLength == 0 || (sameSignThanGround && Math.abs(ceilingExtraVerticalLength) > Math.abs(extraVerticalLength))) {\r\n                    if (ceilingPerceivedAngle > 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = false;\r\n                        }\r\n                    } else if (ceilingPerceivedAngle < 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Math.abs(extraVerticalLength) > 0.00001) {\r\n            let verticalMovementLength = verticalMovement.vec3_lengthSigned(up);\r\n            let sameSignThanExtra = Math.pp_sign(extraVerticalLength) == Math.pp_sign(verticalMovementLength);\r\n            extraVerticalMovement = up.vec3_scale(extraVerticalLength, extraVerticalMovement);\r\n            if (verticalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedVerticalMovement.vec3_copy(extraVerticalMovement);\r\n            } else if (sameSignThanExtra) {\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else if (!sameSignThanExtra && (\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill ||\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill)) {\r\n                // Do not add for downhill, since it means the vertical movement was about to go away from surface and u should not cancel that\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else {\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = false;\r\n            }\r\n        }\r\n\r\n        if (outAdjustedVerticalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedVerticalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedVerticalMovement;\r\n    }\r\n}();\r\n\r\nCollisionCheck.prototype._adjustHorizontalMovementWithSurface = function () {\r\n    let extraHorizontalMovement = vec3_create();\r\n    let groundHorizontalDirection = vec3_create();\r\n    let ceilingHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = vec3_create();\r\n    let scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = vec3_create();\r\n    return function _adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedHorizontalMovement) {\r\n        outAdjustedHorizontalMovement.vec3_copy(horizontalMovement);\r\n\r\n        if (verticalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedHorizontalMovement;\r\n        }\r\n\r\n        let isMovementDownward = !verticalMovement.vec3_isConcordant(up);\r\n\r\n        extraHorizontalMovement.vec3_zero();\r\n        groundHorizontalDirection.vec3_zero();\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            groundHorizontalDirection = previousCollisionRuntimeParams.myGroundNormal.vec3_removeComponentAlongAxis(up, groundHorizontalDirection);\r\n            if (!groundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                groundHorizontalDirection.vec3_normalize(groundHorizontalDirection);\r\n\r\n                let groundExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myGroundAngle));\r\n                groundExtraHorizontalLength *= (isMovementDownward) ? 1 : -1;\r\n\r\n                if (Math.abs(groundExtraHorizontalLength) > 0.00001) {\r\n                    if (isMovementDownward) {\r\n                        if (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myGroundAngle >= collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle)) {\r\n                            extraHorizontalMovement = groundHorizontalDirection.vec3_scale(groundExtraHorizontalLength, extraHorizontalMovement);\r\n                            collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            ceilingHorizontalDirection = previousCollisionRuntimeParams.myCeilingNormal.vec3_removeComponentAlongAxis(up, ceilingHorizontalDirection);\r\n            if (!ceilingHorizontalDirection.vec3_isZero(0.00001)) {\r\n                ceilingHorizontalDirection.vec3_normalize(ceilingHorizontalDirection);\r\n\r\n                let ceilingExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myCeilingAngle));\r\n                ceilingExtraHorizontalLength *= (isMovementDownward) ? -1 : 1;\r\n\r\n                if (Math.abs(ceilingExtraHorizontalLength) > 0.00001) {\r\n                    let sameDirectionAsGround = ceilingHorizontalDirection.vec3_isConcordant(groundHorizontalDirection);\r\n                    if (extraHorizontalMovement.vec3_isZero() || sameDirectionAsGround) {\r\n                        if (!isMovementDownward) {\r\n                            if (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill &&\r\n                                (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myCeilingAngle >= collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle)) {\r\n                                scaledCeilingHorizontalDirection = ceilingHorizontalDirection.vec3_scale(ceilingExtraHorizontalLength, scaledCeilingHorizontalDirection);\r\n                                if (!groundHorizontalDirection.vec3_isZero()) {\r\n                                    scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_removeComponentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n                                    scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_componentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n\r\n                                    if (scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection.vec3_isFartherAlongAxis(extraHorizontalMovement, groundHorizontalDirection)) {\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = false;\r\n                                        extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = true;\r\n                                    } else if (!scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                                        extraHorizontalMovement = extraHorizontalMovement.vec3_add(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection, extraHorizontalMovement);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = true;\r\n                                    }\r\n                                } else {\r\n                                    extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                    collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!extraHorizontalMovement.vec3_isZero()) {\r\n            if (horizontalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedHorizontalMovement.vec3_copy(extraHorizontalMovement);\r\n            } else if (extraHorizontalMovement.vec3_isConcordant(horizontalMovement)) {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            } else {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            }\r\n        }\r\n\r\n        if (outAdjustedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedHorizontalMovement;\r\n    }\r\n}();\r\n\r\n// Useless now\r\nCollisionCheck.prototype._computeExtraSurfaceVerticalMovement = function () {\r\n    let direction = vec3_create();\r\n    let tempVector = vec3_create();\r\n    return function _computeExtraSurfaceVerticalMovement(horizontalMovement, up, collisionCheckParams, collisionRuntimeParams, outExtraSurfaceVerticalMovement) {\r\n        outExtraSurfaceVerticalMovement.vec3_zero();\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myGroundNormal,\r\n                    direction, up, true);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnGroundEnabled || extraVerticalLength > 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            } else if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n                extraVerticalLength *= -1;\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnCeilingEnabled || extraVerticalLength < 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            }\r\n        }\r\n\r\n        return outExtraSurfaceVerticalMovement;\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype._gatherSurfaceInfo = function () {\r\n    let verticalDirection = vec3_create();\r\n    let startOffset = vec3_create();\r\n    let endOffset = vec3_create();\r\n    let heightOffset = vec3_create();\r\n    let smallOffset = vec3_create();\r\n    let smallStartPosition = vec3_create();\r\n    let smallEndPosition = vec3_create();\r\n    let surfaceNormal = vec3_create();\r\n    let surfaceHitMaxNormal = vec3_create();\r\n    let hitFromCurrentPosition = vec3_create();\r\n    let startPosition = vec3_create();\r\n    let endPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    return function _gatherSurfaceInfo(feetPosition, height, up, forwardForPerceivedAngle, forwardForVertical, isGround, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugEnabled = collisionCheckParams.myDebugEnabled && ((isGround && collisionCheckParams.myDebugGroundInfoEnabled) || (!isGround && collisionCheckParams.myDebugCeilingInfoEnabled));\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forwardForVertical, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        let distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnGround;\r\n        let distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeGroundInfo;\r\n        let distanceToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxOutsideDistance;\r\n        let verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnGround;\r\n        let verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeGroundInfo;\r\n        let verticalFixToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxInsideDistance;\r\n        let isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnGroundIfInsideHit;\r\n        let isBaseInsideCollisionCheckEnabled = collisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n            distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnCeiling;\r\n            distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeCeilingInfo;\r\n            distanceToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxOutsideDistance;\r\n            verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnCeiling;\r\n            verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeCeilingInfo;\r\n            verticalFixToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxInsideDistance;\r\n            isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnCeilingIfInsideHit;\r\n            isBaseInsideCollisionCheckEnabled = collisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        }\r\n\r\n        startOffset = verticalDirection.vec3_scale(Math.max(verticalFixToBeOnSurface, verticalFixToComputeSurfaceInfo, verticalFixToFindSurfaceDistance, 0.00001), startOffset);\r\n        endOffset = verticalDirection.vec3_negate(endOffset).vec3_scale(Math.max(distanceToBeOnSurface, distanceToComputeSurfaceInfo, distanceToFindSurfaceDistance, 0.00001), endOffset);\r\n\r\n        heightOffset.vec3_zero();\r\n        if (!isGround) {\r\n            heightOffset = up.vec3_scale(height, heightOffset);\r\n        }\r\n\r\n        smallOffset = verticalDirection.vec3_scale(0.0001, smallOffset);\r\n\r\n        let isOnSurface = false;\r\n        let surfaceAngle = 0;\r\n        let surfacePerceivedAngle = 0;\r\n        surfaceNormal.vec3_zero();\r\n\r\n        let surfaceHitMaxAngle = 0;\r\n        surfaceHitMaxNormal.vec3_zero();\r\n\r\n        let surfaceDistance = null;\r\n        let isBaseInsideCollision = checkPositions.length > 0;\r\n\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n            currentPosition.vec3_add(heightOffset, currentPosition);\r\n\r\n            let baseHitIsInsideCollision = false;\r\n            if (isBaseInsideCollisionCheckEnabled) {\r\n                smallStartPosition = currentPosition.vec3_add(smallOffset, smallStartPosition);\r\n                smallEndPosition = currentPosition.vec3_sub(smallOffset, smallEndPosition);\r\n\r\n                let origin = smallStartPosition;\r\n                direction = smallEndPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    baseHitIsInsideCollision = raycastResult.myHits[0].myInsideCollision;\r\n                }\r\n            }\r\n\r\n            isBaseInsideCollision &&= baseHitIsInsideCollision;\r\n\r\n            if (!baseHitIsInsideCollision) {\r\n                startPosition = currentPosition.vec3_add(startOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(endOffset, endPosition);\r\n\r\n                let origin = startPosition;\r\n                direction = endPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    hitFromCurrentPosition = raycastResult.myHits[0].myPosition.vec3_sub(currentPosition, hitFromCurrentPosition);\r\n                    let hitFromCurrentPositionLength = hitFromCurrentPosition.vec3_lengthSigned(verticalDirection);\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToBeOnSurface + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToBeOnSurface + 0.00001)) {\r\n                        isOnSurface = true;\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToComputeSurfaceInfo + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToComputeSurfaceInfo + 0.00001)) {\r\n                        let currentSurfaceNormal = raycastResult.myHits[0].myNormal;\r\n                        surfaceNormal.vec3_add(currentSurfaceNormal, surfaceNormal);\r\n\r\n                        let surfaceHitAngle = currentSurfaceNormal.vec3_angle(verticalDirection);\r\n                        if (surfaceHitAngle > surfaceHitMaxAngle) {\r\n                            surfaceHitMaxAngle = surfaceHitAngle;\r\n                            surfaceHitMaxNormal.vec3_copy(currentSurfaceNormal);\r\n                        }\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToFindSurfaceDistance + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToFindSurfaceDistance + 0.00001)) {\r\n                        if (surfaceDistance == null) {\r\n                            surfaceDistance = -hitFromCurrentPositionLength;\r\n                        } else {\r\n                            if (Math.abs(hitFromCurrentPositionLength) < Math.abs(surfaceDistance)) {\r\n                                surfaceDistance = -hitFromCurrentPositionLength;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isOnSurfaceIfInsideHit) {\r\n                isOnSurface = true;\r\n            }\r\n        }\r\n\r\n        if (!surfaceNormal.vec3_isZero()) {\r\n            surfaceNormal.vec3_normalize(surfaceNormal);\r\n            surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n\r\n            if (surfaceAngle <= 0.0001) {\r\n                surfaceAngle = 0;\r\n                surfaceNormal.vec3_copy(verticalDirection);\r\n            } else if (surfaceAngle >= 180 - 0.0001) {\r\n                surfaceAngle = 180;\r\n                surfaceNormal = verticalDirection.vec3_negate(surfaceNormal);\r\n            }\r\n\r\n            surfacePerceivedAngle = this.computeSurfacePerceivedAngle(surfaceNormal, forwardForPerceivedAngle, up, isGround);\r\n        }\r\n\r\n        if (isGround) {\r\n            collisionRuntimeParams.myRealIsOnGround = isOnSurface;\r\n\r\n            collisionRuntimeParams.myGroundAngle = surfaceAngle;\r\n            collisionRuntimeParams.myGroundPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myGroundNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myGroundHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myGroundDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myGroundIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnGroundMaxSurfaceAngle == null || collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myIsOnGroundMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnGround = isOnSurface;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myRealIsOnCeiling = isOnSurface;\r\n\r\n            collisionRuntimeParams.myCeilingAngle = surfaceAngle;\r\n            collisionRuntimeParams.myCeilingPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myCeilingNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myCeilingHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myCeilingDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myCeilingIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnCeilingMaxSurfaceAngle == null || collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myIsOnCeilingMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnCeiling = isOnSurface;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nCollisionCheck.prototype.computeSurfacePerceivedAngle = function () {\r\n    let forwardOnSurface = vec3_create();\r\n    let verticalDirection = vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n        surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n        let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}();\r\n\r\n\r\nObject.defineProperty(CollisionCheck.prototype, \"_surfaceTooSteep\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_computeExtraSurfaceVerticalMovement\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_gatherSurfaceInfo\", { enumerable: false });\r\nObject.defineProperty(CollisionCheck.prototype, \"_updateSurfaceInfo\", { enumerable: false });", "import { RaycastHit } from \"../../../../cauldron/physics/physics_raycast_params\";\r\nimport { quat2_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CharacterCollisionResults {\r\n\r\n    constructor() {\r\n        this.myCheckType = null;\r\n\r\n        this.myTransformResults = new CharacterCollisionTransformResults();\r\n\r\n        this.myMovementResults = new CharacterCollisionMovementResults();\r\n        this.myHorizontalMovementResults = new CharacterCollisionMovementResults();\r\n        this.myVerticalMovementResults = new CharacterCollisionMovementResults();\r\n\r\n        this.myTeleportResults = new CharacterCollisionTeleportResults();\r\n\r\n        this.myCheckTransformResults = new CharacterCollisionCheckTransformResults();\r\n\r\n        this.myWallSlideResults = new CharacterCollisionWallSlideResults();\r\n\r\n        this.myGroundInfo = new CharacterCollisionSurfaceInfo();\r\n        this.myCeilingInfo = new CharacterCollisionSurfaceInfo();\r\n\r\n        this.myGroundResults = new CharacterCollisionSurfaceResults();\r\n        this.myCeilingResults = new CharacterCollisionSurfaceResults();\r\n\r\n        this.mySplitMovementResults = new CharacterCollisionSplitMovementResults();\r\n\r\n        this.myDebugResults = new CharacterCollisionDebugResults();\r\n\r\n        this.myInternalResults = new CharacterCollisionInternalResults();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterCollisionCheckType = {\r\n    CHECK_MOVEMENT: 0,\r\n    CHECK_TELEPORT: 1,\r\n    CHECK_TRANSFORM: 2,\r\n    UPDATE_SURFACE_INFO: 3,\r\n    UPDATE_GROUND_INFO: 4,\r\n    UPDATE_CEILING_INFO: 5\r\n};\r\n\r\nexport class CharacterCollisionSurfaceInfo {\r\n\r\n    constructor() {\r\n        this.myOnSurface = false;\r\n\r\n        this.mySurfaceAngle = 0;\r\n        this.mySurfacePerceivedAngle = 0;\r\n        this.mySurfaceNormal = vec3_create();\r\n\r\n        this.mySurfaceHitMaxAngle = 0;\r\n        this.mySurfaceHitMaxNormal = vec3_create();\r\n\r\n        this.mySurfaceDistance = null;\r\n\r\n        this.myBaseInsideCollision = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionWallSlideResults {\r\n\r\n    constructor() {\r\n        this.myHasSlid = false;\r\n        this.mySlideMovementAngle = 0;          // Signed angle between the start movement and the wall slide movement, basically telling you how much u had to change direction to slide\r\n        this.mySlideMovementWallAngle = 0;      // Signed angle between the inverted surface normal and the wall slide movement\r\n        this.myWallNormal = vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionTransformResults {\r\n\r\n    constructor() {\r\n        this.myInitialTransformQuat = quat2_create();\r\n        this.myFinalTransformQuat = quat2_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionMovementResults {\r\n\r\n    constructor() {\r\n        this.myInitialMovement = vec3_create();\r\n        this.myFinalMovement = vec3_create();\r\n        this.myMovementFailed = false;\r\n        this.myMovementCollided = false;\r\n        this.myReferenceCollisionHit = new RaycastHit();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionTeleportResults {\r\n\r\n    constructor() {\r\n        this.myInitialTeleportTransformQuat = quat2_create();\r\n        this.myFinalTeleportTransformQuat = quat2_create();\r\n        this.myTeleportFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionCheckTransformResults {\r\n\r\n    constructor() {\r\n        this.myInitialCheckTransformQuat = quat2_create();\r\n        this.myFinalCheckTransformQuat = quat2_create();\r\n        this.myCheckTransformFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionSurfaceResults {\r\n\r\n    constructor() {\r\n        this.myHasSnappedOnSurface = false;\r\n        this.myHasPoppedOutSurface = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill = false;\r\n        this.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill = false;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionSplitMovementResults {\r\n\r\n    constructor() {\r\n        this.myStepsToPerform = 0;\r\n        this.myStepsPerformed = 0;\r\n        this.myMovementInterrupted = false;\r\n        this.myMovementChecked = vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionDebugResults {\r\n\r\n    constructor() {\r\n        this._myRaycastsPerformed = 0;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterCollisionInternalResults {\r\n\r\n    constructor() {\r\n        this.myLastRelevantInitialHorizontalMovement = vec3_create();\r\n        this.myLastRelevantAdjustedInitialHorizontalMovement = vec3_create();\r\n        this.myLastRelevantFinalHorizontalMovement = vec3_create();\r\n\r\n        this.myLastRelevantInitialVerticalMovement = vec3_create();\r\n        this.myLastRelevantAdjustedInitialVerticalMovement = vec3_create();\r\n        this.myLastRelevantFinalVerticalMovement = vec3_create();\r\n\r\n        this.myLastRelevantHasWallSlid = false;\r\n        this.myHasWallSlidTowardOppositeDirection = false;\r\n        this.myLastRelevantWallSlideFlickerPrevented = false;\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        this.myWallSlide90DegreesDirectionSign = 0;\r\n        this.myWallSlide90DegreesRecomputeDirectionSign = true;\r\n    }\r\n\r\n    reset() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterCollisionResults.prototype.reset = function reset() {\r\n    this.myCheckType = null;\r\n\r\n    this.myTransformResults.reset();\r\n\r\n    this.myMovementResults.reset();\r\n    this.myHorizontalMovementResults.reset();\r\n    this.myVerticalMovementResults.reset();\r\n\r\n    this.myTeleportResults.reset();\r\n\r\n    this.myCheckTransformResults.reset();\r\n\r\n    this.myWallSlideResults.reset();\r\n\r\n    this.myGroundInfo.reset();\r\n    this.myCeilingInfo.reset();\r\n\r\n    this.myGroundResults.reset();\r\n    this.myCeilingResults.reset();\r\n\r\n    this.mySplitMovementResults.reset();\r\n\r\n    this.myInternalResults.reset();\r\n};\r\n\r\nCharacterCollisionResults.prototype.copy = function copy(other) {\r\n    this.myCheckType = other.myCheckType;\r\n\r\n    this.myTransformResults.copy(other.myTransformResults);\r\n\r\n    this.myMovementResults.copy(other.myMovementResults);\r\n    this.myHorizontalMovementResults.copy(other.myHorizontalMovementResults);\r\n    this.myVerticalMovementResults.copy(other.myVerticalMovementResults);\r\n\r\n    this.myTeleportResults.copy(other.myTeleportResults);\r\n\r\n    this.myCheckTransformResults.copy(other.myCheckTransformResults);\r\n\r\n    this.myWallSlideResults.copy(other.myWallSlideResults);\r\n\r\n    this.myGroundInfo.copy(other.myGroundInfo);\r\n    this.myCeilingInfo.copy(other.myCeilingInfo);\r\n\r\n    this.myGroundResults.copy(other.myGroundResults);\r\n    this.myCeilingResults.copy(other.myCeilingResults);\r\n\r\n    this.mySplitMovementResults.copy(other.mySplitMovementResults);\r\n\r\n    this.myInternalResults.copy(other.myInternalResults);\r\n};\r\n\r\nCharacterCollisionSurfaceInfo.prototype.reset = function reset() {\r\n    this.myOnSurface = false;\r\n\r\n    this.mySurfaceAngle = 0;\r\n    this.mySurfacePerceivedAngle = 0;\r\n    this.mySurfaceNormal.vec3_zero();\r\n\r\n    this.mySurfaceHitMaxAngle = 0;\r\n    this.mySurfaceHitMaxNormal.vec3_zero();\r\n\r\n    this.mySurfaceDistance = null;\r\n\r\n    this.myBaseInsideCollision = false;\r\n};\r\n\r\nCharacterCollisionSurfaceInfo.prototype.copy = function copy(other) {\r\n    this.myOnSurface = other.myOnSurface;\r\n\r\n    this.mySurfaceAngle = other.mySurfaceAngle;\r\n    this.mySurfacePerceivedAngle = other.mySurfacePerceivedAngle;\r\n    this.mySurfaceNormal.vec3_copy(other.mySurfaceNormal);\r\n\r\n    this.mySurfaceHitMaxAngle = other.mySurfaceHitMaxAngle;\r\n    this.mySurfaceHitMaxNormal.vec3_copy(other.mySurfaceHitMaxNormal);\r\n\r\n    this.mySurfaceDistance = other.mySurfaceDistance;\r\n\r\n    this.myBaseInsideCollision = other.myBaseInsideCollision;\r\n};\r\n\r\nCharacterCollisionWallSlideResults.prototype.reset = function reset() {\r\n    this.myHasSlid = false;\r\n    this.mySlideMovementAngle = 0;\r\n    this.mySlideMovementWallAngle = 0;\r\n    this.myWallNormal.vec3_zero();\r\n};\r\n\r\nCharacterCollisionWallSlideResults.prototype.copy = function copy(other) {\r\n    this.myHasSlid = other.myHasSlid;\r\n    this.mySlideMovementAngle = other.mySlideMovementAngle;\r\n    this.mySlideMovementWallAngle = other.mySlideMovementWallAngle;\r\n    this.myWallNormal.vec3_copy(other.myWallNormal);\r\n};\r\n\r\nCharacterCollisionTransformResults.prototype.reset = function reset() {\r\n    this.myInitialTransformQuat.quat2_identity();\r\n    this.myFinalTransformQuat.quat2_identity();\r\n};\r\n\r\nCharacterCollisionTransformResults.prototype.copy = function copy(other) {\r\n    this.myInitialTransformQuat.quat2_copy(other.myInitialTransformQuat);\r\n    this.myFinalTransformQuat.quat2_copy(other.myFinalTransformQuat);\r\n};\r\n\r\nCharacterCollisionMovementResults.prototype.reset = function reset() {\r\n    this.myInitialMovement.vec3_zero();\r\n    this.myFinalMovement.vec3_zero();\r\n    this.myMovementFailed = false;\r\n    this.myMovementCollided = false;\r\n    this.myReferenceCollisionHit.reset();\r\n};\r\n\r\nCharacterCollisionMovementResults.prototype.copy = function copy(other) {\r\n    this.myInitialMovement.vec3_copy(other.myInitialMovement);\r\n    this.myFinalMovement.vec3_copy(other.myFinalMovement);\r\n    this.myMovementFailed = other.myMovementFailed;\r\n    this.myMovementCollided = other.myMovementCollided;\r\n    this.myReferenceCollisionHit.copy(other.myReferenceCollisionHit);\r\n};\r\n\r\nCharacterCollisionTeleportResults.prototype.reset = function reset() {\r\n    this.myInitialTeleportTransformQuat.quat2_identity();\r\n    this.myFinalTeleportTransformQuat.quat2_identity();\r\n    this.myTeleportFailed = false;\r\n};\r\n\r\nCharacterCollisionTeleportResults.prototype.copy = function copy(other) {\r\n    this.myInitialTeleportTransformQuat.quat2_copy(other.myInitialTeleportTransformQuat);\r\n    this.myFinalTeleportTransformQuat.quat2_copy(other.myFinalTeleportTransformQuat);\r\n    this.myTeleportFailed = other.myTeleportFailed;\r\n};\r\n\r\nCharacterCollisionCheckTransformResults.prototype.reset = function reset() {\r\n    this.myInitialCheckTransformQuat.quat2_identity();\r\n    this.myFinalCheckTransformQuat.quat2_identity();\r\n    this.myCheckTransformFailed = false;\r\n};\r\n\r\nCharacterCollisionCheckTransformResults.prototype.copy = function copy(other) {\r\n    this.myInitialCheckTransformQuat.quat2_copy(other.myInitialCheckTransformQuat);\r\n    this.myFinalCheckTransformQuat.quat2_copy(other.myFinalCheckTransformQuat);\r\n    this.myCheckTransformFailed = other.myCheckTransformFailed;\r\n};\r\n\r\nCharacterCollisionSurfaceResults.prototype.reset = function reset() {\r\n    this.myHasSnappedOnSurface = false;\r\n    this.myHasPoppedOutSurface = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill = false;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill = false;\r\n};\r\n\r\nCharacterCollisionSurfaceResults.prototype.copy = function copy(other) {\r\n    this.myHasSnappedOnSurface = other.myHasSnappedOnSurface;\r\n    this.myHasPoppedOutSurface = other.myHasPoppedOutSurface;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill = other.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill = other.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill = other.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill;\r\n};\r\n\r\nCharacterCollisionSplitMovementResults.prototype.reset = function reset() {\r\n    this.myStepsToPerform = 0;\r\n    this.myStepsPerformed = 0;\r\n    this.myMovementInterrupted = false;\r\n    this.myMovementChecked.vec3_zero();\r\n};\r\n\r\nCharacterCollisionSplitMovementResults.prototype.copy = function copy(other) {\r\n    this.myStepsToPerform = other.myStepsToPerform;\r\n    this.myStepsPerformed = other.myStepsPerformed;\r\n    this.myMovementInterrupted = other.myMovementInterrupted;\r\n    this.myMovementChecked.vec3_copy(other.myMovementChecked);\r\n};\r\n\r\nCharacterCollisionDebugResults.prototype.reset = function reset() {\r\n    this._myRaycastsPerformed = 0;\r\n};\r\n\r\nCharacterCollisionDebugResults.prototype.copy = function copy(other) {\r\n    this._myRaycastsPerformed = other._myRaycastsPerformed;\r\n};\r\n\r\nCharacterCollisionInternalResults.prototype.reset = function reset() {\r\n};\r\n\r\nCharacterCollisionInternalResults.prototype.copy = function copy(other) {\r\n    this.myLastRelevantInitialHorizontalMovement.vec3_copy(other.myLastRelevantInitialHorizontalMovement);\r\n    this.myLastRelevantAdjustedInitialHorizontalMovement.vec3_copy(other.myLastRelevantAdjustedInitialHorizontalMovement);\r\n    this.myLastRelevantFinalHorizontalMovement.vec3_copy(other.myLastRelevantFinalHorizontalMovement);\r\n\r\n    this.myLastRelevantInitialVerticalMovement.vec3_copy(other.myLastRelevantInitialVerticalMovement);\r\n    this.myLastRelevantAdjustedInitialVerticalMovement.vec3_copy(other.myLastRelevantAdjustedInitialVerticalMovement);\r\n    this.myLastRelevantFinalVerticalMovement.vec3_copy(other.myLastRelevantFinalVerticalMovement);\r\n\r\n    this.myLastRelevantHasWallSlid = other.myLastRelevantHasWallSlid;\r\n    this.myHasWallSlidTowardOppositeDirection = other.myHasWallSlidTowardOppositeDirection;\r\n    this.myLastRelevantWallSlideFlickerPrevented = other.myLastRelevantWallSlideFlickerPrevented;\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n    this.myWallSlide90DegreesDirectionSign = other.myWallSlide90DegreesDirectionSign;\r\n    this.myWallSlide90DegreesRecomputeDirectionSign = other.myWallSlide90DegreesRecomputeDirectionSign;\r\n};", "import { quat_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { CharacterCollisionCheckType, CharacterCollisionResults } from \"./character_collision_results\";\r\nimport { CollisionCheck } from \"./legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"./legacy/collision_check/collision_params\";\r\n\r\nlet _myCollisionChecks = new WeakMap();\r\n\r\nexport function getCollisionCheck(engine = Globals.getMainEngine()) {\r\n    return _myCollisionChecks.get(engine);\r\n}\r\n\r\nexport function setCollisionCheck(collisionCheck, engine = Globals.getMainEngine()) {\r\n    _myCollisionChecks.set(engine, collisionCheck);\r\n}\r\n\r\nexport function initBridge(engine = Globals.getMainEngine()) {\r\n    CollisionCheckBridge.setCollisionCheck(new CollisionCheck(engine), engine);\r\n}\r\n\r\nexport let checkMovement = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = Globals.getMainEngine()) {\r\n        CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        CollisionCheckBridge.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        CollisionCheckBridge.getCollisionCheck(engine).move(movement, currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        CollisionCheckBridge.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let checkTeleportToTransform = function () {\r\n    let teleportPosition = vec3_create();\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = Globals.getMainEngine()) {\r\n        CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        CollisionCheckBridge.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        teleportPosition = teleportTransformQuat.quat2_getPosition(teleportPosition);\r\n        CollisionCheckBridge.getCollisionCheck(engine).teleport(teleportPosition, teleportTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        CollisionCheckBridge.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let checkTransform = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = Globals.getMainEngine()) {\r\n        CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        CollisionCheckBridge.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        CollisionCheckBridge.getCollisionCheck(engine).positionCheck(true, checkTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        CollisionCheckBridge.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, checkTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let updateGroundInfo = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = Globals.getMainEngine()) {\r\n        CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        CollisionCheckBridge.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        collisionCheckParams.myComputeCeilingInfoEnabled = false;\r\n        CollisionCheckBridge.getCollisionCheck(engine).updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        CollisionCheckBridge.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport let updateCeilingInfo = function () {\r\n    let collisionCheckParams = new CollisionCheckParams();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults(), engine = Globals.getMainEngine()) {\r\n        CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n        CollisionCheckBridge.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n        collisionCheckParams.myComputeGroundInfoEnabled = false;\r\n        CollisionCheckBridge.getCollisionCheck(engine).updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n        CollisionCheckBridge.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n    }\r\n}();\r\n\r\nexport function convertCharacterCollisionResultsToCollisionRuntimeParams(characterCollisionResults, outCollisionRuntimeParams) {\r\n    outCollisionRuntimeParams.reset();\r\n\r\n    characterCollisionResults.myTransformResults.myInitialTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPosition);\r\n    characterCollisionResults.myTransformResults.myFinalTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myNewPosition);\r\n\r\n    characterCollisionResults.myTransformResults.myInitialTransformQuat.quat2_getForward(outCollisionRuntimeParams.myOriginalForward);\r\n    characterCollisionResults.myTransformResults.myInitialTransformQuat.quat2_getUp(outCollisionRuntimeParams.myOriginalUp);\r\n\r\n    // Ok: outCollisionRuntimeParams.myOriginalHeight = characterCollisionResults.myOriginalHeight;\r\n\r\n    outCollisionRuntimeParams.myOriginalMovement.vec3_copy(characterCollisionResults.myMovementResults.myInitialMovement);\r\n    outCollisionRuntimeParams.myFixedMovement.vec3_copy(characterCollisionResults.myMovementResults.myFinalMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantInitialHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantInitialVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantFinalHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantFinalVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedInitialHorizontalMovement);\r\n    outCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedInitialVerticalMovement);\r\n\r\n    outCollisionRuntimeParams.myIsOnGround = characterCollisionResults.myGroundInfo.myOnSurface;\r\n    outCollisionRuntimeParams.myGroundAngle = characterCollisionResults.myGroundInfo.mySurfaceAngle;\r\n    outCollisionRuntimeParams.myGroundPerceivedAngle = characterCollisionResults.myGroundInfo.mySurfacePerceivedAngle;\r\n    outCollisionRuntimeParams.myGroundNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceNormal);\r\n    outCollisionRuntimeParams.myGroundHitMaxAngle = characterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle;\r\n    outCollisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal);\r\n    outCollisionRuntimeParams.myGroundDistance = characterCollisionResults.myGroundInfo.mySurfaceDistance;\r\n    outCollisionRuntimeParams.myGroundIsBaseInsideCollision = characterCollisionResults.myGroundInfo.myBaseInsideCollision;\r\n\r\n    outCollisionRuntimeParams.myIsOnCeiling = characterCollisionResults.myCeilingInfo.myOnSurface;\r\n    outCollisionRuntimeParams.myCeilingAngle = characterCollisionResults.myCeilingInfo.mySurfaceAngle;\r\n    outCollisionRuntimeParams.myCeilingPerceivedAngle = characterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle;\r\n    outCollisionRuntimeParams.myCeilingNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceNormal);\r\n    outCollisionRuntimeParams.myCeilingHitMaxAngle = characterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle;\r\n    outCollisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal);\r\n    outCollisionRuntimeParams.myCeilingDistance = characterCollisionResults.myCeilingInfo.mySurfaceDistance;\r\n    outCollisionRuntimeParams.myCeilingIsBaseInsideCollision = characterCollisionResults.myCeilingInfo.myBaseInsideCollision;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementCanceled = characterCollisionResults.myHorizontalMovementResults.myMovementFailed;\r\n    outCollisionRuntimeParams.myIsCollidingHorizontally = characterCollisionResults.myHorizontalMovementResults.myMovementCollided;\r\n    outCollisionRuntimeParams.myHorizontalCollisionHit.copy(characterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit);\r\n\r\n    outCollisionRuntimeParams.myVerticalMovementCanceled = characterCollisionResults.myVerticalMovementResults.myMovementFailed;\r\n    outCollisionRuntimeParams.myIsCollidingVertically = characterCollisionResults.myVerticalMovementResults.myMovementCollided;\r\n    outCollisionRuntimeParams.myVerticalCollisionHit.copy(characterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit);\r\n\r\n    outCollisionRuntimeParams.myHasSnappedOnGround = characterCollisionResults.myGroundResults.myHasSnappedOnSurface;\r\n    outCollisionRuntimeParams.myHasSnappedOnCeiling = characterCollisionResults.myCeilingResults.myHasSnappedOnSurface;\r\n    outCollisionRuntimeParams.myHasPoppedOutGround = characterCollisionResults.myGroundResults.myHasPoppedOutSurface;\r\n    outCollisionRuntimeParams.myHasPoppedOutCeiling = characterCollisionResults.myCeilingResults.myHasPoppedOutSurface;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill;\r\n    outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill = characterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill;\r\n\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n    outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill;\r\n    outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill = characterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill;\r\n\r\n    // Ok: outCollisionRuntimeParams.myHasReducedVerticalMovement = characterCollisionResults.myVerticalMovementResults.myHasMovementBeenReduced;\r\n\r\n    outCollisionRuntimeParams.myIsSliding = characterCollisionResults.myWallSlideResults.myHasSlid;\r\n    outCollisionRuntimeParams.mySlidingMovementAngle = characterCollisionResults.myWallSlideResults.mySlideMovementAngle;\r\n    outCollisionRuntimeParams.mySlidingCollisionAngle = characterCollisionResults.myWallSlideResults.mySlideMovementWallAngle;\r\n    outCollisionRuntimeParams.mySlidingWallNormal.vec3_copy(characterCollisionResults.myWallSlideResults.myWallNormal);\r\n\r\n    outCollisionRuntimeParams.myIsSlidingIntoOppositeDirection = characterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection;\r\n    outCollisionRuntimeParams.myIsSlidingFlickerPrevented = characterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented;\r\n    outCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = characterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter;\r\n    outCollisionRuntimeParams.mySliding90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign;\r\n    outCollisionRuntimeParams.mySlidingRecompute90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign;\r\n    outCollisionRuntimeParams.myLastValidIsSliding = characterCollisionResults.myInternalResults.myLastRelevantHasWallSlid;\r\n    outCollisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantFinalHorizontalMovement);\r\n\r\n    outCollisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myInitialTeleportTransformQuat);\r\n    outCollisionRuntimeParams.myFixedTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myFinalTeleportTransformQuat);\r\n    outCollisionRuntimeParams.myTeleportCanceled = characterCollisionResults.myTeleportResults.myTeleportFailed;\r\n\r\n    outCollisionRuntimeParams.myIsPositionOk = characterCollisionResults.myCheckTransformResults.myCheckTransformFailed;\r\n    characterCollisionResults.myCheckTransformResults.myInitialCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPositionCheckPosition);\r\n    characterCollisionResults.myCheckTransformResults.myFinalCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myFixedPositionCheckPosition);\r\n\r\n    outCollisionRuntimeParams.myIsTeleport = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_TELEPORT;\r\n    outCollisionRuntimeParams.myIsMove = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n    outCollisionRuntimeParams.myIsPositionCheck = characterCollisionResults.myCheckType == CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n\r\n    outCollisionRuntimeParams.mySplitMovementSteps = characterCollisionResults.mySplitMovementResults.myStepsToPerform;\r\n    outCollisionRuntimeParams.mySplitMovementStepsPerformed = characterCollisionResults.mySplitMovementResults.myStepsPerformed;\r\n    outCollisionRuntimeParams.mySplitMovementStop = characterCollisionResults.mySplitMovementResults.myMovementInterrupted;\r\n    outCollisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(characterCollisionResults.mySplitMovementResults.myMovementChecked);\r\n\r\n    return outCollisionRuntimeParams;\r\n}\r\n\r\nexport let convertCollisionRuntimeParamsToCharacterCollisionResults = function () {\r\n    let rotationQuat = quat_create();\r\n    return function convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults) {\r\n        outCharacterCollisionResults.reset();\r\n\r\n        if (collisionRuntimeParams.myIsMove) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n        } else if (collisionRuntimeParams.myIsTeleport) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_TELEPORT;\r\n        } else if (collisionRuntimeParams.myIsPositionCheck) {\r\n            outCharacterCollisionResults.myCheckType = CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n        }\r\n\r\n        rotationQuat.quat_setForward(collisionRuntimeParams.myOriginalForward, collisionRuntimeParams.myOriginalUp);\r\n        outCharacterCollisionResults.myTransformResults.myInitialTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myOriginalPosition, rotationQuat);\r\n        outCharacterCollisionResults.myTransformResults.myFinalTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myNewPosition, rotationQuat);\r\n\r\n        outCharacterCollisionResults.myMovementResults.myInitialMovement.vec3_copy(collisionRuntimeParams.myOriginalMovement);\r\n        outCharacterCollisionResults.myMovementResults.myFinalMovement.vec3_copy(collisionRuntimeParams.myFixedMovement);\r\n        outCharacterCollisionResults.myMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled;\r\n        outCharacterCollisionResults.myMovementResults.myMovementCollided = collisionRuntimeParams.myIsCollidingHorizontally || collisionRuntimeParams.myIsCollidingVertically;\r\n        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        } else if (collisionRuntimeParams.myIsCollidingVertically) {\r\n            outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n        }\r\n\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled;\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myMovementCollided = collisionRuntimeParams.myIsCollidingHorizontally;\r\n        outCharacterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n\r\n        outCharacterCollisionResults.myVerticalMovementResults.myMovementFailed = collisionRuntimeParams.myVerticalMovementCanceled;\r\n        outCharacterCollisionResults.myVerticalMovementResults.myMovementCollided = collisionRuntimeParams.myIsCollidingVertically;\r\n        outCharacterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n\r\n        outCharacterCollisionResults.myTeleportResults.myInitialTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myInitialTransformQuat);\r\n        outCharacterCollisionResults.myTeleportResults.myInitialTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        outCharacterCollisionResults.myTeleportResults.myFinalTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myFinalTransformQuat);\r\n        outCharacterCollisionResults.myTeleportResults.myFinalTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedTeleportPosition);\r\n        outCharacterCollisionResults.myTeleportResults.myTeleportFailed = collisionRuntimeParams.myTeleportCanceled;\r\n\r\n        outCharacterCollisionResults.myCheckTransformResults.myInitialCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myInitialTransformQuat);\r\n        outCharacterCollisionResults.myCheckTransformResults.myInitialCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalPositionCheckPosition);\r\n        outCharacterCollisionResults.myCheckTransformResults.myFinalCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myFinalTransformQuat);\r\n        outCharacterCollisionResults.myCheckTransformResults.myFinalCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedPositionCheckPosition);\r\n        outCharacterCollisionResults.myCheckTransformResults.myCheckTransformFailed = !collisionRuntimeParams.myIsPositionOk;\r\n\r\n        outCharacterCollisionResults.myWallSlideResults.myHasSlid = collisionRuntimeParams.myIsSliding;\r\n        outCharacterCollisionResults.myWallSlideResults.mySlideMovementAngle = collisionRuntimeParams.mySlidingMovementAngle;\r\n        outCharacterCollisionResults.myWallSlideResults.mySlideMovementWallAngle = collisionRuntimeParams.mySlidingCollisionAngle;\r\n        outCharacterCollisionResults.myWallSlideResults.myWallNormal.vec3_copy(collisionRuntimeParams.mySlidingWallNormal);\r\n\r\n        outCharacterCollisionResults.myGroundInfo.myOnSurface = collisionRuntimeParams.myIsOnGround;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceAngle = collisionRuntimeParams.myGroundAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myGroundPerceivedAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myGroundNormal);\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myGroundHitMaxAngle;\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myGroundHitMaxNormal);\r\n        outCharacterCollisionResults.myGroundInfo.mySurfaceDistance = collisionRuntimeParams.myGroundDistance;\r\n        outCharacterCollisionResults.myGroundInfo.myBaseInsideCollision = collisionRuntimeParams.myGroundIsBaseInsideCollision;\r\n\r\n        outCharacterCollisionResults.myCeilingInfo.myOnSurface = collisionRuntimeParams.myIsOnCeiling;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceAngle = collisionRuntimeParams.myCeilingAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myCeilingPerceivedAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myCeilingNormal);\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myCeilingHitMaxAngle;\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myCeilingHitMaxNormal);\r\n        outCharacterCollisionResults.myCeilingInfo.mySurfaceDistance = collisionRuntimeParams.myCeilingDistance;\r\n        outCharacterCollisionResults.myCeilingInfo.myBaseInsideCollision = collisionRuntimeParams.myCeilingIsBaseInsideCollision;\r\n\r\n        outCharacterCollisionResults.myGroundResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnGround;\r\n        outCharacterCollisionResults.myGroundResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutGround;\r\n        outCharacterCollisionResults.myCeilingResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnCeiling;\r\n        outCharacterCollisionResults.myCeilingResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutCeiling;\r\n\r\n        outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleDownhill;\r\n        outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverGroundPerceivedAngleUphill;\r\n        outCharacterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverGroundAngleDownhill;\r\n\r\n        outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleDownhill;\r\n        outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementOverSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementOverCeilingPerceivedAngleUphill;\r\n        outCharacterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementOverSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementOverCeilingAngleDownhill;\r\n\r\n        outCharacterCollisionResults.mySplitMovementResults.myStepsToPerform = collisionRuntimeParams.mySplitMovementSteps;\r\n        outCharacterCollisionResults.mySplitMovementResults.myStepsPerformed = collisionRuntimeParams.mySplitMovementStepsPerformed;\r\n        outCharacterCollisionResults.mySplitMovementResults.myMovementInterrupted = collisionRuntimeParams.mySplitMovementStop;\r\n        outCharacterCollisionResults.mySplitMovementResults.myMovementChecked.vec3_copy(collisionRuntimeParams.mySplitMovementMovementChecked);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantInitialHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantFinalHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantInitialVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantFinalVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndVerticalMovement);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedInitialHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedInitialVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantHasWallSlid = collisionRuntimeParams.myLastValidIsSliding;\r\n        outCharacterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection = collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n        outCharacterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter = collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n        outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign = collisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n\r\n        outCharacterCollisionResults.myTransformResults.myInitialTransformQuat.quat2_copy(currentTransformQuat);\r\n\r\n        return outCharacterCollisionResults;\r\n    }\r\n}();\r\n\r\nexport let convertCharacterColliderSetupToCollisionCheckParams = function () {\r\n    return function convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, outCollisionCheckParams) {\r\n        outCollisionCheckParams.myHeight = characterColliderSetup.myHeight;\r\n\r\n        outCollisionCheckParams.myRadius = characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeRadius;\r\n        outCollisionCheckParams.myDistanceFromFeetToIgnore = characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFeetDistanceToIgnore;\r\n        outCollisionCheckParams.myDistanceFromHeadToIgnore = characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementStepEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckSplitMovementEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementStepMaxLength = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementRadialStepAmount = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckRadialSteps;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementCheckDiagonalOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckDiagonalInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckStraight = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckHorizontalBorder = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraight = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHorizontalPositionCheckEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckEnabled;\r\n\r\n        outCollisionCheckParams.myHalfConeAngle = characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeHalfAngle;\r\n        outCollisionCheckParams.myHalfConeSliceAmount = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckConeHalfSlices;\r\n        outCollisionCheckParams.myCheckConeBorder = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n        outCollisionCheckParams.myCheckConeRay = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n        outCollisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n        outCollisionCheckParams.myHorizontalPositionCheckVerticalDirectionType = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckDirection;\r\n\r\n        outCollisionCheckParams.myCheckHeight = characterColliderSetup.myHorizontalCheckParams.myHorizontalHeightCheckEnabled;\r\n\r\n        outCollisionCheckParams.myCheckHeightVerticalMovement = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightVerticalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightVerticalPosition = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightVerticalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightTopMovement = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightTopPosition = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n        outCollisionCheckParams.myCheckHeightConeOnCollision = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n        outCollisionCheckParams.myCheckHeightConeOnCollisionKeepHit = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n        outCollisionCheckParams.myHeightCheckStepAmountMovement = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightCheckSteps;\r\n        outCollisionCheckParams.myHeightCheckStepAmountPosition = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightCheckSteps;\r\n        outCollisionCheckParams.myCheckVerticalStraight = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalStraightCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalRayOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalRayInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderRayOutward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalDiagonalBorderRayInward = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n        outCollisionCheckParams.myCheckVerticalSearchFartherVerticalHit = characterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n        outCollisionCheckParams.myCheckHorizontalFixedForwardEnabled = characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFixedForwardEnabled;\r\n        outCollisionCheckParams.myCheckHorizontalFixedForward.vec3_copy(characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFixedForward);\r\n\r\n        outCollisionCheckParams.myVerticalMovementCheckEnabled = characterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckEnabled;\r\n        outCollisionCheckParams.myVerticalPositionCheckEnabled = characterColliderSetup.myVerticalCheckParams.myVerticalPositionCheckEnabled;\r\n        outCollisionCheckParams.myFeetRadius = characterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadius;\r\n\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = characterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundParams.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = characterColliderSetup.myGroundParams.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle = characterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingParams.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = characterColliderSetup.myCeilingParams.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myCheckVerticalFixedForwardEnabled = characterColliderSetup.myVerticalCheckParams.myVerticalCheckFixedForwardEnabled;\r\n        outCollisionCheckParams.myCheckVerticalFixedForward.vec3_copy(characterColliderSetup.myVerticalCheckParams.myVerticalCheckFixedForward);\r\n        outCollisionCheckParams.myCheckVerticalBothDirection = characterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n        outCollisionCheckParams.myVerticalMovementReduceEnabled = characterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckReductionEnabled;\r\n\r\n        outCollisionCheckParams.myGroundCircumferenceAddCenter = characterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n        outCollisionCheckParams.myGroundCircumferenceSliceAmount = characterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices;\r\n        outCollisionCheckParams.myGroundCircumferenceStepAmount = characterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadialSteps;\r\n        outCollisionCheckParams.myGroundCircumferenceRotationPerStep = characterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n        outCollisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk = characterColliderSetup.myVerticalCheckParams.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n        outCollisionCheckParams.myHorizontalBlockLayerFlags.copy(characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckBlockLayerFlags);\r\n        outCollisionCheckParams.myVerticalBlockLayerFlags.copy(characterColliderSetup.myVerticalCheckParams.myVerticalCheckBlockLayerFlags);\r\n        outCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(characterColliderSetup.myHorizontalCheckParams.myHorizontalCheckObjectsToIgnore);\r\n        outCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(characterColliderSetup.myVerticalCheckParams.myVerticalCheckObjectsToIgnore);\r\n\r\n        outCollisionCheckParams.mySnapOnGroundEnabled = characterColliderSetup.myGroundParams.mySurfaceSnapEnabled;\r\n        outCollisionCheckParams.mySnapOnGroundExtraDistance = characterColliderSetup.myGroundParams.mySurfaceSnapMaxDistance;\r\n        outCollisionCheckParams.mySnapOnCeilingEnabled = characterColliderSetup.myCeilingParams.mySurfaceSnapEnabled;\r\n        outCollisionCheckParams.mySnapOnCeilingExtraDistance = characterColliderSetup.myCeilingParams.mySurfaceSnapMaxDistance;\r\n\r\n        outCollisionCheckParams.myGroundPopOutEnabled = characterColliderSetup.myGroundParams.mySurfacePopOutEnabled;\r\n        outCollisionCheckParams.myGroundPopOutExtraDistance = characterColliderSetup.myGroundParams.mySurfacePopOutMaxDistance;\r\n        outCollisionCheckParams.myCeilingPopOutEnabled = characterColliderSetup.myCeilingParams.mySurfacePopOutEnabled;\r\n        outCollisionCheckParams.myCeilingPopOutExtraDistance = characterColliderSetup.myCeilingParams.mySurfacePopOutMaxDistance;\r\n\r\n        outCollisionCheckParams.myGroundAngleToIgnore = characterColliderSetup.myGroundParams.mySurfaceAngleToIgnore;\r\n        outCollisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myGroundParams.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myCeilingAngleToIgnore = characterColliderSetup.myCeilingParams.mySurfaceAngleToIgnore;\r\n        outCollisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myCeilingParams.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight = characterColliderSetup.myGroundParams.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingParams.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight = characterColliderSetup.myGroundParams.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n        outCollisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingParams.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n        outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = characterColliderSetup.myGroundParams.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = characterColliderSetup.myCeilingParams.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n        outCollisionCheckParams.myComputeGroundInfoEnabled = characterColliderSetup.myGroundParams.myCollectSurfaceInfo;\r\n        outCollisionCheckParams.myComputeCeilingInfoEnabled = characterColliderSetup.myCeilingParams.myCollectSurfaceInfo;\r\n        outCollisionCheckParams.myDistanceToBeOnGround = characterColliderSetup.myGroundParams.myOnSurfaceMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToComputeGroundInfo = characterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToBeOnCeiling = characterColliderSetup.myCeilingParams.myOnSurfaceMaxOutsideDistance;\r\n        outCollisionCheckParams.myDistanceToComputeCeilingInfo = characterColliderSetup.myCeilingParams.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToBeOnGround = characterColliderSetup.myGroundParams.myOnSurfaceMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToComputeGroundInfo = characterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToBeOnCeiling = characterColliderSetup.myCeilingParams.myOnSurfaceMaxInsideDistance;\r\n        outCollisionCheckParams.myVerticalFixToComputeCeilingInfo = characterColliderSetup.myCeilingParams.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n        outCollisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myGroundParams.myBaseInsideCollisionCheckEnabled;\r\n        outCollisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myCeilingParams.myBaseInsideCollisionCheckEnabled;\r\n        outCollisionCheckParams.myIsOnGroundIfInsideHit = characterColliderSetup.myGroundParams.myOnSurfaceIfBaseInsideCollision;\r\n        outCollisionCheckParams.myIsOnCeilingIfInsideHit = characterColliderSetup.myCeilingParams.myOnSurfaceIfBaseInsideCollision;\r\n\r\n        outCollisionCheckParams.myFindGroundDistanceMaxOutsideDistance = characterColliderSetup.myGroundParams.myFindSurfaceDistanceMaxOutsideDistance;\r\n        outCollisionCheckParams.myFindGroundDistanceMaxInsideDistance = characterColliderSetup.myGroundParams.myFindSurfaceDistanceMaxInsideDistance;\r\n        outCollisionCheckParams.myFindCeilingDistanceMaxOutsideDistance = characterColliderSetup.myCeilingParams.myFindSurfaceDistanceMaxOutsideDistance;\r\n        outCollisionCheckParams.myFindCeilingDistanceMaxInsideDistance = characterColliderSetup.myCeilingParams.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n        outCollisionCheckParams.myAllowGroundSteepFix = characterColliderSetup.myGroundParams.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n        outCollisionCheckParams.myAllowCeilingSteepFix = characterColliderSetup.myCeilingParams.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n\r\n        outCollisionCheckParams.myMustStayOnGround = characterColliderSetup.myGroundParams.myMovementMustStayOnSurface;\r\n        outCollisionCheckParams.myMustStayOnCeiling = characterColliderSetup.myCeilingParams.myMovementMustStayOnSurface;\r\n        outCollisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail = characterColliderSetup.myGroundParams.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n        outCollisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail = characterColliderSetup.myCeilingParams.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n        outCollisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill = characterColliderSetup.myGroundParams.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill = characterColliderSetup.myCeilingParams.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowGroundAngleDownhill = characterColliderSetup.myGroundParams.myMovementMustStayOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMustStayBelowCeilingAngleDownhill = characterColliderSetup.myCeilingParams.myMovementMustStayOnSurfaceAngleDownhill;\r\n        outCollisionCheckParams.myMovementMustStayOnGroundHitAngle = characterColliderSetup.myGroundParams.myMovementMustStayOnSurfaceHitMaxAngle;\r\n        outCollisionCheckParams.myMovementMustStayOnCeilingHitAngle = characterColliderSetup.myCeilingParams.myMovementMustStayOnSurfaceHitMaxAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundParams.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundParams.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingParams.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingParams.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnGroundAngle = characterColliderSetup.myGroundParams.myTeleportMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnGroundAngle = characterColliderSetup.myGroundParams.myCheckTransformMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myTeleportMustBeOnCeilingAngle = characterColliderSetup.myCeilingParams.myTeleportMustBeOnSurfaceAngle;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnCeilingAngle = characterColliderSetup.myCeilingParams.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n        outCollisionCheckParams.myTeleportMustBeOnGround = characterColliderSetup.myGroundParams.myTeleportMustBeOnSurface;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnGround = characterColliderSetup.myGroundParams.myCheckTransformMustBeOnSurface;\r\n        outCollisionCheckParams.myTeleportMustBeOnCeiling = characterColliderSetup.myCeilingParams.myTeleportMustBeOnSurface;\r\n        outCollisionCheckParams.myCheckTransformMustBeOnCeiling = characterColliderSetup.myCeilingParams.myCheckTransformMustBeOnSurface;\r\n\r\n        outCollisionCheckParams.mySlidingEnabled = characterColliderSetup.myWallSlideParams.myWallSlideEnabled;\r\n        outCollisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal = characterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckGetBetterReferenceHit;\r\n        outCollisionCheckParams.mySlidingMaxAttempts = characterColliderSetup.myWallSlideParams.myWallSlideMaxAttempts;\r\n        outCollisionCheckParams.mySlidingCheckBothDirections = characterColliderSetup.myWallSlideParams.myCheckBothWallSlideDirections;\r\n        outCollisionCheckParams.mySlidingFlickeringPreventionType = characterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionMode;\r\n        outCollisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = characterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n        outCollisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter = characterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionForceCheckCounter;\r\n        outCollisionCheckParams.mySlidingAdjustSign90Degrees = characterColliderSetup.myWallSlideParams.my90DegreesWallSlideAdjustDirectionSign;\r\n\r\n        outCollisionCheckParams.mySplitMovementEnabled = characterColliderSetup.mySplitMovementParams.mySplitMovementEnabled;\r\n        outCollisionCheckParams.mySplitMovementMaxLength = characterColliderSetup.mySplitMovementParams.mySplitMovementMaxStepLength;\r\n        outCollisionCheckParams.mySplitMovementMaxStepsEnabled = characterColliderSetup.mySplitMovementParams.mySplitMovementMaxSteps != null;\r\n        outCollisionCheckParams.mySplitMovementMaxSteps = characterColliderSetup.mySplitMovementParams.mySplitMovementMaxSteps;\r\n        outCollisionCheckParams.mySplitMovementStepEqualLength = characterColliderSetup.mySplitMovementParams.mySplitMovementMaxStepLength == null;\r\n        outCollisionCheckParams.mySplitMovementStepEqualLengthMinLength = characterColliderSetup.mySplitMovementParams.mySplitMovementMinStepLength;\r\n        outCollisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled = characterColliderSetup.mySplitMovementParams.mySplitMovementStopOnHorizontalMovementFailed;\r\n        outCollisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled = characterColliderSetup.mySplitMovementParams.mySplitMovementStopOnVerticalMovementFailed;\r\n        outCollisionCheckParams.mySplitMovementStopCallback = characterColliderSetup.mySplitMovementParams.mySplitMovementStopOnCallback;\r\n        outCollisionCheckParams.mySplitMovementStopReturnPrevious = characterColliderSetup.mySplitMovementParams.mySplitMovementStopReturnPreviousResults;\r\n\r\n        outCollisionCheckParams.myPositionOffsetLocal.vec3_copy(characterColliderSetup.myAdditionalParams.myPositionOffsetLocal);\r\n        outCollisionCheckParams.myRotationOffsetLocalQuat.quat_copy(characterColliderSetup.myAdditionalParams.myRotationOffsetLocalQuat);\r\n\r\n        outCollisionCheckParams.myDebugEnabled = characterColliderSetup.myDebugParams.myVisualDebugEnabled;\r\n\r\n        outCollisionCheckParams.myDebugHorizontalMovementEnabled = characterColliderSetup.myDebugParams.myVisualDebugHorizontalMovementCheckEnabled;\r\n        outCollisionCheckParams.myDebugHorizontalPositionEnabled = characterColliderSetup.myDebugParams.myVisualDebugHorizontalPositionCheckEnabled;\r\n        outCollisionCheckParams.myDebugVerticalMovementEnabled = characterColliderSetup.myDebugParams.myVisualDebugVerticalMovementCheckEnabled;\r\n        outCollisionCheckParams.myDebugVerticalPositionEnabled = characterColliderSetup.myDebugParams.myVisualDebugVerticalPositionCheckEnabled;\r\n        outCollisionCheckParams.myDebugSlidingEnabled = characterColliderSetup.myDebugParams.myVisualDebugSlideEnabled;\r\n\r\n        outCollisionCheckParams.myDebugGroundInfoEnabled = characterColliderSetup.myDebugParams.myVisualDebugGroundInfoEnabled;\r\n        outCollisionCheckParams.myDebugCeilingInfoEnabled = characterColliderSetup.myDebugParams.myVisualDebugGroundInfoEnabled;\r\n        outCollisionCheckParams.myDebugRuntimeParamsEnabled = characterColliderSetup.myDebugParams.myVisualDebugResultsEnabled;\r\n        outCollisionCheckParams.myDebugMovementEnabled = characterColliderSetup.myDebugParams.myVisualDebugMovementEnabled;\r\n\r\n        return outCollisionCheckParams;\r\n    }\r\n}()\r\n\r\nexport let CollisionCheckBridge = {\r\n    getCollisionCheck,\r\n    setCollisionCheck,\r\n    initBridge,\r\n    checkMovement,\r\n    checkTeleportToTransform,\r\n    checkTransform,\r\n    updateGroundInfo,\r\n    updateCeilingInfo,\r\n    convertCharacterCollisionResultsToCollisionRuntimeParams,\r\n    convertCollisionRuntimeParamsToCharacterCollisionResults,\r\n    convertCharacterColliderSetupToCollisionCheckParams\r\n};", "import { PhysicsLayerFlags } from \"../../../../cauldron/physics/physics_layer_flags\";\r\nimport { quat_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class CharacterColliderSetup {\r\n\r\n    constructor() {\r\n        this.myHeight = 0;\r\n\r\n        this.myHorizontalCheckParams = new CharacterColliderHorizontalCheckParams();\r\n        this.myVerticalCheckParams = new CharacterColliderVerticalCheckParams();\r\n\r\n        this.myWallSlideParams = new CharacterColliderWallSlideParams();\r\n\r\n        this.myGroundParams = new CharacterColliderSurfaceParams();\r\n        this.myCeilingParams = new CharacterColliderSurfaceParams();\r\n\r\n        this.mySplitMovementParams = new CharacterColliderSplitMovementParams();\r\n\r\n        this.myAdditionalParams = new CharacterColliderAdditionalParams();\r\n\r\n        this.myDebugParams = new CharacterColliderDebugParams();\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterColliderHorizontalPositionVerticalCheckDirection = {\r\n    UPWARD: 0,      // Gives less issues with a ground based movement, but may also collide a bit more, resulting in less sliding\r\n    DOWNWARD: 1,    // Gives less issues with a ceiling based movement (unusual), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n    BOTH: 2         // Check both directions, more expensive (2x checks) and better prevent collisions, sliding more, but is more expensive and gives more issues           \r\n\r\n    //                                                                                                                                                  _\r\n    // The issues means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n    // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n    // BOTH do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n    // The better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope (like this -> /-)\r\n    // The step that is created \"on the other side\" in fact can easily be ignored thanks to the myHorizontalCheckFeetDistanceToIgnore param\r\n    // If the level is properly created the best solution should be UPWARD\r\n    // and also myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false\r\n};\r\n\r\nexport class CharacterColliderHorizontalCheckParams {\r\n\r\n    constructor() {\r\n        this.myHorizontalCheckConeRadius = 0;\r\n        this.myHorizontalCheckConeHalfAngle = 0;\r\n\r\n        this.myHorizontalHeightCheckEnabled = false;\r\n\r\n        this.myHorizontalCheckFeetDistanceToIgnore = 0;\r\n        this.myHorizontalCheckHeadDistanceToIgnore = 0;\r\n        // These distances can be used to make the character ignore small steps (like a stair step) so they can move on it\r\n        // It also needs the surface pop out to be enabeld to then snap on the step\r\n\r\n        this.myHorizontalCheckFixedForwardEnabled = false; // This is basically only useful if the cone angle is 180 degrees\r\n        this.myHorizontalCheckFixedForward = vec3_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementCheckRadialSteps = 0;\r\n\r\n        this.myHorizontalMovementCheckSplitMovementEnabled = false;\r\n        this.myHorizontalMovementCheckSplitMovementMaxSteps = null;\r\n        this.myHorizontalMovementCheckSplitMovementMaxStepLength = null;\r\n        this.myHorizontalMovementCheckSplitMovementMinStepLength = null;\r\n\r\n        this.myHorizontalMovementCheckGetBetterReferenceHit = false;\r\n        // If the horizontal movement finds a hit it stops looking, but could end up having a bad reference collision hit\r\n        // This makes it so it will check a better hit to use later for the slide\r\n\r\n        this.myHorizontalMovementHorizontalRadialCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementHeightCheckSteps = 0;\r\n        this.myHorizontalMovementHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalMovementHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n        this.myHorizontalPositionCheckConeHalfSlices = 0;\r\n        this.myHorizontalPositionHorizontalBorderCheckEnabled = false;\r\n        this.myHorizontalPositionHorizontalRadialCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionHeightCheckSteps = 0;\r\n        this.myHorizontalPositionHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalPositionHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalCheckGetFarthestHit = false; // Not very useful but already implemented so\r\n\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = false;\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = false;\r\n        // If the horizontal check does not hit the vertical hit will be restored\r\n        // The fact that the horizontal does not hit could be due to the fact that it thinks that the collision can be ignored\r\n        // so restoring the vertical hit can be a bit safer (since u are actually colliding) but also can lead to false positive\r\n\r\n        this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false; // true gives less issues, but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionVerticalCheckDirection = CharacterColliderHorizontalPositionVerticalCheckDirection.UPWARD;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderVerticalCheckParams {\r\n\r\n    constructor() {\r\n        this.myVerticalCheckCircumferenceRadius = 0;\r\n\r\n        this.myVerticalCheckCircumferenceSlices = 0;\r\n        this.myVerticalCheckCircumferenceCentralCheckEnabled = false;\r\n        this.myVerticalCheckCircumferenceRadialSteps = 0;\r\n        this.myVerticalCheckCircumferenceRotationPerRadialStep = 0;\r\n\r\n        this.myVerticalCheckFixedForwardEnabled = false;\r\n        this.myVerticalCheckFixedForward = vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalMovementCheckReductionEnabled = false;\r\n        this.myVerticalMovementCheckPerformCheckOnBothSides = false;\r\n\r\n        this.myVerticalPositionCheckEnabled = false;\r\n\r\n        this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = false;\r\n        // If at least one vertical raycast is valid (no hit, outside collision) is it ok if the other checks are completely inside a collision\r\n        // let you keep moving vertically if only partially inside a wall\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport let CharacterColliderSlideFlickerPreventionMode = {\r\n    NONE: 0,\r\n    USE_PREVIOUS_RESULTS: 1,                // Allow some flicker before stabilizing but avoid stopping for a 1 frame flicker only (false positive), is also less expensive\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES: 2,    // Prevents most flicker apart those on almost flat surface, can have some false positive, always check when sliding into opposite direction\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES: 3, // Less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES but more false positive, always check when sliding into opposite direction\r\n    ALWAYS: 4                               // Less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES but more false positive\r\n};\r\n\r\nexport class CharacterColliderWallSlideParams {\r\n\r\n    constructor() {\r\n        this.myWallSlideEnabled = false;\r\n\r\n        this.myWallSlideMaxAttempts = 0;\r\n\r\n        this.myCheckBothWallSlideDirections = false;\r\n        // Expensive, 2 times the checks since it basically check again on the other slide direction\r\n        // This can fix some edge cases in which u can get stuck instead of sliding\r\n        // It basically require that u also add flicker prevention\r\n\r\n        this.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.NONE;\r\n\r\n        this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        // This flag make it so the prevention is done only if it was already sliding\r\n        // This can lead to a few frames of flicker if u go toward a corner directly, but allow the movement to be more fluid, avoiding getting stuck and false positive\r\n\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        // If the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // This help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // It's especially useful if combo-ed with CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS, making it a bit less fluid but also less flickering\r\n\r\n        this.my90DegreesWallSlideAdjustDirectionSign = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderSurfaceParams {\r\n\r\n    constructor() {\r\n        this.mySurfaceSnapEnabled = false;\r\n        this.mySurfaceSnapMaxDistance = 0;\r\n\r\n        this.mySurfacePopOutEnabled = false;\r\n        this.mySurfacePopOutMaxDistance = 0;\r\n\r\n        this.mySurfaceAngleToIgnore = 0;\r\n\r\n        this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = null;\r\n        // Between this value and mySurfaceAngleToIgnore, use the perceived angle to see if u can actually ignore the surface\r\n        // This basically means that on steep surface u could still go up by moving diagonally\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        // If the collision with the surface is above this max value, even if the surface angle is ignorable do not ignore it\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = null;\r\n        // If the collision with the surface happens during the horizontal movement check, if the horizontal movement left (total movement to perform minus hit distance)\r\n        // is above this value do not ignore it otherwise you would ignore a surface but are actually going too much inside it\r\n\r\n        this.myCollectSurfaceInfo = false;\r\n\r\n        this.myOnSurfaceMaxOutsideDistance = 0;\r\n        this.myOnSurfaceMaxInsideDistance = 0;\r\n\r\n        this.myBaseInsideCollisionCheckEnabled = false;\r\n        this.myOnSurfaceIfBaseInsideCollision = false;\r\n\r\n        this.myCollectSurfaceNormalMaxOutsideDistance = 0;\r\n        this.myCollectSurfaceNormalMaxInsideDistance = 0;\r\n\r\n        this.myFindSurfaceDistanceMaxOutsideDistance = 0;\r\n        this.myFindSurfaceDistanceMaxInsideDistance = 0;\r\n\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill = false;\r\n        // This make it so when a character moves horizontally on a slope it also add a vertical movement so that the movement is actually on the slope plane\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = null;\r\n        // This can be used to limit the adjustment so that on steep slopes u can bounce off, or anyway don't add a huge vertical movement due to a very steep slope\r\n\r\n        this.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhill = false;\r\n        // This make it so when a character moves vertically on a slope (sort of sliding down the slope) it also add a horizontal movement so that the movement is actually on the slope plane\r\n        this.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhillMinSurfaceAngle = null;\r\n        // This can be used to make it so the movement (and therefore the slide) only happens above a certain angle, like u want to slide down only on steep surfaces\r\n\r\n        this.myMovementMustStayOnSurface = false;\r\n        this.myMovementMustStayOnSurfaceHitMaxAngle = null;\r\n        this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = false;\r\n        this.myMovementMustStayOnSurfaceAngleDownhill = null;\r\n\r\n        this.myTeleportMustBeOnSurface = false;\r\n        this.myTeleportMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myTeleportMustBeOnSurfaceAngle = null;\r\n\r\n        this.myCheckTransformMustBeOnSurface = false;\r\n        this.myCheckTransformMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myCheckTransformMustBeOnSurfaceAngle = null;\r\n\r\n        this.myRecollectSurfaceInfoOnSurfaceCheckFailed = false;\r\n        // Instead of copying the previous surface info on fail, regather them\r\n\r\n        this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = false;\r\n        // If u start on a not ignorable perceived angle (above angle to ignore) u normally can't even try to move uphill, this will let you try and see if with that movement\r\n        // you could end up in a ignorable perceived angle position\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderSplitMovementParams {\r\n\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n\r\n        this.mySplitMovementMaxSteps = null;\r\n        this.mySplitMovementMaxStepLength = null;\r\n        this.mySplitMovementMinStepLength = null;\r\n\r\n        this.mySplitMovementStopOnHorizontalMovementFailed = false;\r\n        this.mySplitMovementStopOnVerticalMovementFailed = false;\r\n\r\n        /*\r\n        this will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        \r\n        this.mySplitMovementStopOnCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        */\r\n\r\n        this.mySplitMovementStopReturnPreviousResults = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderAdditionalParams {\r\n\r\n    constructor() {\r\n        this.myPositionOffsetLocal = vec3_create();\r\n        this.myRotationOffsetLocalQuat = quat_create();\r\n\r\n        /*\r\n        these will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(paramsToBeDefined)\r\n        */\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\nexport class CharacterColliderDebugParams {\r\n\r\n    constructor() {\r\n        this.myVisualDebugEnabled = false;\r\n\r\n        this.myVisualDebugMovementEnabled = false;\r\n\r\n        this.myVisualDebugHorizontalMovementCheckEnabled = false;\r\n        this.myVisualDebugHorizontalPositionCheckEnabled = false;\r\n\r\n        this.myVisualDebugVerticalMovementCheckEnabled = false;\r\n        this.myVisualDebugVerticalPositionCheckEnabled = false;\r\n\r\n        this.myVisualDebugSlideEnabled = false;\r\n\r\n        this.myVisualDebugGroundInfoEnabled = false;\r\n        this.myVisualDebugCeilingInfoEnabled = false;\r\n\r\n        this.myVisualDebugResultsEnabled = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterColliderSetup.prototype.copy = function copy(other) {\r\n    this.myHeight = other.myHeight;\r\n\r\n    this.myHorizontalCheckParams.copy(other.myHorizontalCheckParams);\r\n    this.myVerticalCheckParams.copy(other.myVerticalCheckParams);\r\n\r\n    this.myWallSlideParams.copy(other.myWallSlideParams);\r\n\r\n    this.myGroundParams.copy(other.myGroundParams);\r\n    this.myCeilingParams.copy(other.myCeilingParams);\r\n\r\n    this.mySplitMovementParams.copy(other.mySplitMovementParams);\r\n\r\n    this.myAdditionalParams.copy(other.myAdditionalParams);\r\n\r\n    this.myDebugParams.copy(other.myDebugParams);\r\n};\r\n\r\nCharacterColliderHorizontalCheckParams.prototype.copy = function copy(other) {\r\n    this.myHorizontalCheckConeRadius = other.myHorizontalCheckConeRadius;\r\n    this.myHorizontalCheckConeHalfAngle = other.myHorizontalCheckConeHalfAngle;\r\n\r\n    this.myHorizontalHeightCheckEnabled = other.myHorizontalHeightCheckEnabled;\r\n\r\n    this.myHorizontalCheckFeetDistanceToIgnore = other.myHorizontalCheckFeetDistanceToIgnore;\r\n    this.myHorizontalCheckHeadDistanceToIgnore = other.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n    this.myHorizontalCheckFixedForwardEnabled = other.myHorizontalCheckFixedForwardEnabled;\r\n    this.myHorizontalCheckFixedForward.vec3_copy(other.myHorizontalCheckFixedForward);\r\n\r\n    this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n\r\n    this.myHorizontalMovementCheckRadialSteps = other.myHorizontalMovementCheckRadialSteps;\r\n\r\n    this.myHorizontalMovementCheckSplitMovementEnabled = other.myHorizontalMovementCheckSplitMovementEnabled;\r\n    this.myHorizontalMovementCheckSplitMovementMaxSteps = other.myHorizontalMovementCheckSplitMovementMaxSteps;\r\n    this.myHorizontalMovementCheckSplitMovementMaxStepLength = other.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n    this.myHorizontalMovementCheckSplitMovementMinStepLength = other.myHorizontalMovementCheckSplitMovementMinStepLength;\r\n\r\n    this.myHorizontalMovementCheckGetBetterReferenceHit = other.myHorizontalMovementCheckGetBetterReferenceHit;\r\n\r\n    this.myHorizontalMovementHorizontalRadialCheckEnabled = other.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCheckEnabled = other.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n\r\n    this.myHorizontalMovementHeightCheckSteps = other.myHorizontalMovementHeightCheckSteps;\r\n    this.myHorizontalMovementHeightVerticalCheckEnabled = other.myHorizontalMovementHeightVerticalCheckEnabled;\r\n    this.myHorizontalMovementHeightHorizontalCheckEnabled = other.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalStraightCheckEnabled = other.myHorizontalMovementVerticalStraightCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n    this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n    this.myHorizontalPositionCheckConeHalfSlices = other.myHorizontalPositionCheckConeHalfSlices;\r\n    this.myHorizontalPositionHorizontalBorderCheckEnabled = other.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n    this.myHorizontalPositionHorizontalRadialCheckEnabled = other.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n\r\n    this.myHorizontalPositionHeightCheckSteps = other.myHorizontalPositionHeightCheckSteps;\r\n    this.myHorizontalPositionHeightHorizontalCheckEnabled = other.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n    this.myHorizontalPositionHeightVerticalCheckEnabled = other.myHorizontalPositionHeightVerticalCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalStraightCheckEnabled = other.myHorizontalPositionVerticalStraightCheckEnabled;\r\n    this.myHorizontalPositionVerticalStraightCentralCheckEnabled = other.myHorizontalPositionVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalCheckGetFarthestHit = other.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = other.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n    this.myHorizontalPositionVerticalCheckDirection = other.myHorizontalPositionVerticalCheckDirection;\r\n\r\n    this.myHorizontalCheckBlockLayerFlags.setMask(other.myHorizontalCheckBlockLayerFlags.getMask());\r\n    this.myHorizontalCheckObjectsToIgnore.pp_copy(other.myHorizontalCheckObjectsToIgnore);\r\n};\r\n\r\nCharacterColliderVerticalCheckParams.prototype.copy = function copy(other) {\r\n    this.myVerticalCheckCircumferenceRadius = other.myVerticalCheckCircumferenceRadius;\r\n\r\n    this.myVerticalCheckCircumferenceSlices = other.myVerticalCheckCircumferenceSlices;\r\n    this.myVerticalCheckCircumferenceCentralCheckEnabled = other.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n    this.myVerticalCheckCircumferenceRadialSteps = other.myVerticalCheckCircumferenceRadialSteps;\r\n    this.myVerticalCheckCircumferenceRotationPerRadialStep = other.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n\r\n    this.myVerticalCheckFixedForwardEnabled = other.myVerticalCheckFixedForwardEnabled;\r\n    this.myVerticalCheckFixedForward.vec3_copy(other.myVerticalCheckFixedForward);\r\n\r\n    this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n    this.myVerticalMovementCheckReductionEnabled = other.myVerticalMovementCheckReductionEnabled;\r\n    this.myVerticalMovementCheckPerformCheckOnBothSides = other.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n    this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n\r\n    this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = other.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n    this.myVerticalCheckBlockLayerFlags.setMask(other.myVerticalCheckBlockLayerFlags.getMask());\r\n    this.myVerticalCheckObjectsToIgnore.pp_copy(other.myVerticalCheckObjectsToIgnore);\r\n};\r\n\r\nCharacterColliderWallSlideParams.prototype.copy = function copy(other) {\r\n    this.myWallSlideEnabled = other.myWallSlideEnabled;\r\n\r\n    this.myWallSlideMaxAttempts = other.myWallSlideMaxAttempts;\r\n\r\n    this.myCheckBothWallSlideDirections = other.myCheckBothWallSlideDirections;\r\n\r\n    this.myWallSlideFlickerPreventionMode = other.myWallSlideFlickerPreventionMode;\r\n\r\n    this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = other.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n\r\n    this.my90DegreesWallSlideAdjustDirectionSign = other.my90DegreesWallSlideAdjustDirectionSign;\r\n};\r\n\r\nCharacterColliderSurfaceParams.prototype.copy = function copy(other) {\r\n    this.mySurfaceSnapEnabled = other.mySurfaceSnapEnabled;\r\n    this.mySurfaceSnapMaxDistance = other.mySurfaceSnapMaxDistance;\r\n\r\n    this.mySurfacePopOutEnabled = other.mySurfacePopOutEnabled;\r\n    this.mySurfacePopOutMaxDistance = other.mySurfacePopOutMaxDistance;\r\n\r\n    this.mySurfaceAngleToIgnore = other.mySurfaceAngleToIgnore;\r\n    this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = other.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n    this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = other.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n    this.myCollectSurfaceInfo = other.myCollectSurfaceInfo;\r\n\r\n    this.myOnSurfaceMaxOutsideDistance = other.myOnSurfaceMaxOutsideDistance;\r\n    this.myOnSurfaceMaxInsideDistance = other.myOnSurfaceMaxInsideDistance;\r\n\r\n    this.myBaseInsideCollisionCheckEnabled = other.myBaseInsideCollisionCheckEnabled;\r\n    this.myOnSurfaceIfBaseInsideCollision = other.myOnSurfaceIfBaseInsideCollision;\r\n\r\n    this.myCollectSurfaceNormalMaxOutsideDistance = other.myCollectSurfaceNormalMaxOutsideDistance;\r\n    this.myCollectSurfaceNormalMaxInsideDistance = other.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    this.myFindSurfaceDistanceMaxOutsideDistance = other.myFindSurfaceDistanceMaxOutsideDistance;\r\n    this.myFindSurfaceDistanceMaxInsideDistance = other.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill;\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n\r\n    this.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhill = other.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhill;\r\n    this.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhillMinSurfaceAngle = other.myVerticalMovementAdjustHorizontalMovementOverSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n    this.myMovementMustStayOnSurface = other.myMovementMustStayOnSurface;\r\n    this.myMovementMustStayOnSurfaceHitMaxAngle = other.myMovementMustStayOnSurfaceHitMaxAngle;\r\n    this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = other.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n    this.myMovementMustStayOnSurfaceAngleDownhill = other.myMovementMustStayOnSurfaceAngleDownhill;\r\n\r\n    this.myTeleportMustBeOnSurface = other.myTeleportMustBeOnSurface;\r\n    this.myTeleportMustBeOnIgnorableSurfaceAngle = other.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n    this.myTeleportMustBeOnSurfaceAngle = other.myTeleportMustBeOnSurfaceAngle;\r\n\r\n    this.myCheckTransformMustBeOnSurface = other.myCheckTransformMustBeOnSurface;\r\n    this.myCheckTransformMustBeOnIgnorableSurfaceAngle = other.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n    this.myCheckTransformMustBeOnSurfaceAngle = other.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n    this.myRecollectSurfaceInfoOnSurfaceCheckFailed = other.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n\r\n    this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = other.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n};\r\n\r\nCharacterColliderSplitMovementParams.prototype.copy = function copy(other) {\r\n    this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n    this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n    this.mySplitMovementMaxStepLength = other.mySplitMovementMaxStepLength;\r\n    this.mySplitMovementMinStepLength = other.mySplitMovementMinStepLength;\r\n\r\n    this.mySplitMovementStopOnHorizontalMovementFailed = other.mySplitMovementStopOnHorizontalMovementFailed;\r\n    this.mySplitMovementStopOnVerticalMovementFailed = other.mySplitMovementStopOnVerticalMovementFailed;\r\n\r\n    /*\r\n    this.mySplitMovementStopOnCallback = other.mySplitMovementStopOnCallback;\r\n    */\r\n\r\n    this.mySplitMovementStopReturnPreviousResults = other.mySplitMovementStopReturnPreviousResults;\r\n};\r\n\r\nCharacterColliderAdditionalParams.prototype.copy = function copy(other) {\r\n    this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n    this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n    /*\r\n    this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n    this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n    this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n    */\r\n};\r\n\r\nCharacterColliderDebugParams.prototype.copy = function copy(other) {\r\n    this.myVisualDebugEnabled = other.myVisualDebugEnabled;\r\n\r\n    this.myVisualDebugMovementEnabled = other.myVisualDebugMovementEnabled;\r\n\r\n    this.myVisualDebugHorizontalMovementCheckEnabled = other.myVisualDebugHorizontalMovementCheckEnabled;\r\n    this.myVisualDebugHorizontalPositionCheckEnabled = other.myVisualDebugHorizontalPositionCheckEnabled;\r\n\r\n    this.myVisualDebugVerticalMovementCheckEnabled = other.myVisualDebugVerticalMovementCheckEnabled;\r\n    this.myVisualDebugVerticalPositionCheckEnabled = other.myVisualDebugVerticalPositionCheckEnabled;\r\n\r\n    this.myVisualDebugSlideEnabled = other.myVisualDebugSlideEnabled;\r\n\r\n    this.myVisualDebugGroundInfoEnabled = other.myVisualDebugGroundInfoEnabled;\r\n    this.myVisualDebugCeilingInfoEnabled = other.myVisualDebugCeilingInfoEnabled;\r\n\r\n    this.myVisualDebugResultsEnabled = other.myVisualDebugResultsEnabled;\r\n};", "import { PhysicsLayerFlags } from \"../../../../cauldron/physics/physics_layer_flags\";\r\nimport { CharacterColliderSetup, CharacterColliderSlideFlickerPreventionMode } from \"./character_collider_setup\";\r\n\r\nexport let CharacterColliderSetupSimplifiedCreationAccuracyLevel = {\r\n    VERY_LOW: 0,\r\n    LOW: 1,\r\n    MEDIUM: 2,\r\n    HIGH: 3,\r\n    VERY_HIGH: 4\r\n};\r\n\r\nexport class CharacterColliderSetupSimplifiedCreationParams {\r\n\r\n    constructor() {\r\n        this.myHeight = 0;\r\n        this.myRadius = 0;\r\n\r\n        this.myAccuracyLevel = CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW;\r\n\r\n        this.myIsPlayer = false;\r\n\r\n        this.myCheckOnlyFeet = false;\r\n\r\n        this.myMaxSpeed = 0;\r\n        this.myAverageFPS = 72;\r\n\r\n        this.myCanFly = false;\r\n\r\n        this.myShouldSlideAlongWall = false;\r\n\r\n        this.myCollectGroundInfo = false;\r\n        this.myShouldSnapOnGround = false;\r\n        this.myMaxDistanceToSnapOnGround = 0;\r\n        this.myMaxWalkableGroundAngle = 0;\r\n        this.myMaxWalkableGroundStepHeight = 0;\r\n        this.myShouldNotFallFromEdges = false;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n\r\n        this.myHorizontalCheckDebugEnabled = false;\r\n        this.myVerticalCheckDebugEnabled = false;\r\n    }\r\n}\r\n\r\nexport function createSimplified(simplifiedCreationParams, outCharacterColliderSetup = new CharacterColliderSetup()) {\r\n    outCharacterColliderSetup.myHeight = simplifiedCreationParams.myHeight;\r\n    outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeRadius = simplifiedCreationParams.myRadius;\r\n    outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadius = simplifiedCreationParams.myRadius / 2;\r\n\r\n    outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckFixedForwardEnabled = true;\r\n    outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    if (!simplifiedCreationParams.myCheckOnlyFeet || simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalHeightCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalPositionCheckEnabled = true;\r\n    }\r\n\r\n    outCharacterColliderSetup.myWallSlideParams.myWallSlideEnabled = simplifiedCreationParams.myShouldSlideAlongWall;\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFeetDistanceToIgnore = simplifiedCreationParams.myMaxWalkableGroundStepHeight;\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myGroundParams.mySurfaceSnapMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround;\r\n    outCharacterColliderSetup.myGroundParams.mySurfacePopOutMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround > 0 ?\r\n        simplifiedCreationParams.myMaxDistanceToSnapOnGround : (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundParams.mySurfacePopOutMaxDistance = Math.max(outCharacterColliderSetup.myGroundParams.mySurfacePopOutMaxDistance, outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFeetDistanceToIgnore);\r\n    outCharacterColliderSetup.myGroundParams.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = simplifiedCreationParams.myRadius * 0.75;\r\n\r\n    outCharacterColliderSetup.myGroundParams.myCollectSurfaceInfo = simplifiedCreationParams.myCollectGroundInfo || simplifiedCreationParams.myMaxWalkableGroundAngle > 0;\r\n    outCharacterColliderSetup.myGroundParams.mySurfaceSnapEnabled = simplifiedCreationParams.myShouldSnapOnGround;\r\n    outCharacterColliderSetup.myGroundParams.mySurfacePopOutEnabled = true;\r\n    outCharacterColliderSetup.myGroundParams.mySurfaceAngleToIgnore = simplifiedCreationParams.myMaxWalkableGroundAngle;\r\n    outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngle = true;\r\n\r\n    outCharacterColliderSetup.myGroundParams.myOnSurfaceMaxOutsideDistance = 0.001;\r\n    outCharacterColliderSetup.myGroundParams.myOnSurfaceMaxInsideDistance = 0.001;\r\n\r\n    outCharacterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxOutsideDistance = (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxOutsideDistance;\r\n\r\n    outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill = true;\r\n    outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill = true;\r\n\r\n    if (simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckHeadDistanceToIgnore = outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckFeetDistanceToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingParams.myCollectSurfaceInfo = outCharacterColliderSetup.myGroundParams.myCollectSurfaceInfo;\r\n        outCharacterColliderSetup.myCeilingParams.mySurfacePopOutEnabled = outCharacterColliderSetup.myGroundParams.mySurfacePopOutEnabled;\r\n        outCharacterColliderSetup.myCeilingParams.mySurfaceAngleToIgnore = outCharacterColliderSetup.myGroundParams.mySurfaceAngleToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingParams.mySurfaceSnapMaxDistance = outCharacterColliderSetup.myGroundParams.mySurfaceSnapMaxDistance;\r\n        outCharacterColliderSetup.myCeilingParams.mySurfacePopOutMaxDistance = outCharacterColliderSetup.myGroundParams.mySurfacePopOutMaxDistance;\r\n        outCharacterColliderSetup.myCeilingParams.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = outCharacterColliderSetup.myGroundParams.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCharacterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngle = outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngle;\r\n\r\n        outCharacterColliderSetup.myCeilingParams.myOnSurfaceMaxOutsideDistance = outCharacterColliderSetup.myGroundParams.myOnSurfaceMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingParams.myOnSurfaceMaxInsideDistance = outCharacterColliderSetup.myGroundParams.myOnSurfaceMaxInsideDistance;\r\n\r\n        outCharacterColliderSetup.myCeilingParams.myCollectSurfaceNormalMaxOutsideDistance = outCharacterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingParams.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundParams.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n        outCharacterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill = outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleDownhill;\r\n        outCharacterColliderSetup.myCeilingParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill = outCharacterColliderSetup.myGroundParams.myHorizontalMovementAdjustVerticalMovementOverSurfacePerceivedAngleUphill;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myShouldNotFallFromEdges) {\r\n        outCharacterColliderSetup.myGroundParams.myMovementMustStayOnSurface = true;\r\n        outCharacterColliderSetup.myGroundParams.myMovementMustStayOnSurfaceAngleDownhill = Math.max(60, outCharacterColliderSetup.myGroundParams.mySurfaceAngleToIgnore);\r\n    }\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckBlockLayerFlags.copy(simplifiedCreationParams.myHorizontalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n    outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckBlockLayerFlags.copy(simplifiedCreationParams.myVerticalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myVerticalCheckObjectsToIgnore);\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myHorizontalCheckDebugEnabled) {\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugEnabled = true;\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugHorizontalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugHorizontalPositionCheckEnabled = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myVerticalCheckDebugEnabled) {\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugEnabled = true;\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugVerticalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myDebugParams.myVisualDebugVerticalPositionCheckEnabled = true;\r\n    }\r\n\r\n\r\n\r\n    // ACCURACY\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeHalfAngle = 60;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightVerticalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightVerticalCheckEnabled = true;\r\n\r\n        // Enable based on speed?\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckConeHalfSlices = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalStraightCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices = 4;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadialSteps = 1;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckReductionEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckAllowHitsInsideCollisionIfOneValid = true;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideParams.myWallSlideMaxAttempts = 2;\r\n            outCharacterColliderSetup.myWallSlideParams.my90DegreesWallSlideAdjustDirectionSign = true;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckRadialSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideMaxAttempts = 2;\r\n        outCharacterColliderSetup.myWallSlideParams.myCheckBothWallSlideDirections = false;\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.NONE;\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        outCharacterColliderSetup.myWallSlideParams.my90DegreesWallSlideAdjustDirectionSign = false;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.MEDIUM) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckConeHalfSlices = 2;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHorizontalBorderCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalMovementCheckPerformCheckOnBothSides = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices = 6;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideMaxAttempts = 3;\r\n        outCharacterColliderSetup.myWallSlideParams.my90DegreesWallSlideAdjustDirectionSign = true;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionMode = CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS;\r\n            outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = true;\r\n            outCharacterColliderSetup.myWallSlideParams.myWallSlideFlickerPreventionForceCheckCounter = 4;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH) {\r\n        if (outCharacterColliderSetup.myWallSlideParams.myWallSlideEnabled) {\r\n            outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementCheckGetBetterReferenceHit = true;\r\n\r\n            outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n            outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n        }\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices = 8;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckParams.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideParams.myWallSlideMaxAttempts = 4;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideParams.myCheckBothWallSlideDirections = true;\r\n        }\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundParams.myBaseInsideCollisionCheckEnabled = true;\r\n        outCharacterColliderSetup.myCeilingParams.myBaseInsideCollisionCheckEnabled = true;\r\n\r\n\r\n\r\n        if (simplifiedCreationParams.myMaxSpeed / simplifiedCreationParams.myAverageFPS > simplifiedCreationParams.myRadius) {\r\n            outCharacterColliderSetup.mySplitMovementParams.mySplitMovementEnabled = true;\r\n\r\n            outCharacterColliderSetup.mySplitMovementParams.mySplitMovementMaxSteps = Math.ceil((simplifiedCreationParams.myMaxSpeed / fps) / simplifiedCreationParams.myRadius);\r\n            outCharacterColliderSetup.mySplitMovementParams.mySplitMovementMinStepLength = simplifiedCreationParams.myRadius * 0.75;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_HIGH) {\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n        outCharacterColliderSetup.myHorizontalCheckParams.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundParams.myRecollectSurfaceInfoOnSurfaceCheckFailed = true;\r\n        outCharacterColliderSetup.myCeilingParams.myRecollectSurfaceInfoOnSurfaceCheckFailed = outCharacterColliderSetup.myGroundParams.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n    }\r\n\r\n    return outCharacterColliderSetup;\r\n}\r\n\r\nexport function createTeleportColliderSetupFromMovementColliderSetup(movementColliderSetup, outTeleportColliderSetup = new CharacterColliderSetup()) {\r\n    outTeleportColliderSetup.copy(movementColliderSetup);\r\n\r\n    outTeleportColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeHalfAngle = 180;\r\n    outTeleportColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckConeHalfSlices =\r\n        Math.round((outTeleportColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeHalfAngle / movementColliderSetup.myHorizontalCheckParams.myHorizontalCheckConeHalfAngle)\r\n            * movementColliderSetup.myHorizontalCheckParams.myHorizontalPositionCheckConeHalfSlices);\r\n\r\n    outTeleportColliderSetup.myHorizontalCheckParams.myHorizontalCheckFixedForwardEnabled = true;\r\n    outTeleportColliderSetup.myHorizontalCheckParams.myHorizontalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    return outTeleportColliderSetup;\r\n}\r\n\r\nexport let CharacterColliderSetupUtils = {\r\n    createSimplified,\r\n    createTeleportColliderSetupFromMovementColliderSetup\r\n}", "import { quat2_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { CharacterCollisionResults } from \"./character_collision_results\";\r\nimport { CollisionCheckBridge } from \"./collision_check_bridge\";\r\n\r\nexport class CharacterCollisionSystem {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myLastCheckRaycastsPerformed = 0;\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        this._myMaxFrameRaycastsPerformed = 0;\r\n\r\n        this.myEngine = engine;\r\n\r\n        CollisionCheckBridge.initBridge(this.myEngine);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts = 0;\r\n    }\r\n\r\n    checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateSurfaceInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        let currentFramePerformedRaycasts = this._myCurrentFrameRaycastsPerformed;\r\n\r\n        this.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n        this.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - currentFramePerformedRaycasts;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new CharacterCollisionResults()) {\r\n        CollisionCheckBridge.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults, this.myEngine);\r\n\r\n        this._myLastCheckRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = CollisionCheckBridge.getCollisionCheck(this.myEngine)._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nCharacterCollisionSystem.prototype.checkTeleportToPosition = function () {\r\n    let teleportTransformQuat = quat2_create();\r\n    return function checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults) {\r\n        teleportTransformQuat.quat2_copy(currentTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n    };\r\n}();", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\nimport { CharacterCollisionSystem } from \"../character_collision_system\";\r\n\r\nexport class CharacterCollisionSystemComponent extends Component {\r\n    static TypeName = \"pp-character-collision-system\";\r\n    static Properties = {};\r\n\r\n    init() {\r\n        this._myCharacterCollisionSystem = null;\r\n\r\n        // Prevents double global from same engine\r\n        if (!Globals.hasCharacterCollisionSystem(this.engine)) {\r\n            this._myCharacterCollisionSystem = new CharacterCollisionSystem(this.engine);\r\n\r\n            Globals.setCharacterCollisionSystem(this._myCharacterCollisionSystem, this.engine);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCharacterCollisionSystem != null) {\r\n            this._myCharacterCollisionSystem.update(dt);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myCharacterCollisionSystem != null && Globals.getCharacterCollisionSystem(this.engine) == this._myCharacterCollisionSystem) {\r\n            Globals.removeCharacterCollisionSystem(this.engine);\r\n        }\r\n    }\r\n}", "import { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\n\r\nexport class PlayerHeadManagerParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.mySessionChangeResyncEnabled = false;\r\n\r\n        this.myBlurEndResyncEnabled = false;\r\n        this.myBlurEndResyncRotation = false;\r\n\r\n        this.myResetTransformOnViewResetEnabled = true;\r\n\r\n        this.myNextEnterSessionResyncHeight = false;\r\n        this.myEnterSessionResyncHeight = false;\r\n\r\n        this.myExitSessionResyncHeight = false;\r\n        this.myExitSessionResyncVerticalAngle = false;\r\n        this.myExitSessionRemoveRightTilt = false; // For now right tilt is removed even if this setting is false, if the vertical angle has to be adjusted\r\n        this.myExitSessionAdjustMaxVerticalAngle = false;\r\n        this.myExitSessionMaxVerticalAngle = 0;\r\n\r\n        this.myHeightOffsetVRWithFloor = null;\r\n        this.myHeightOffsetVRWithoutFloor = null;\r\n        this.myHeightOffsetNonVR = null;\r\n\r\n        this.myNextEnterSessionFloorHeight = null;\r\n        this.myEnterSessionFloorHeight = null;\r\n\r\n        this.myRotateFeetKeepUp = false;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n        // Can be used to always add a bit of height, for example to compensate the fact \r\n        // that the default height is actually the eye height and you may want to also add a forehead offset\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugEnabled = false;\r\n    }\r\n}\r\n\r\n// Could be intended as the generic player body manager (maybe with hands and stuff also)\r\nexport class PlayerHeadManager {\r\n\r\n    constructor(params = new PlayerHeadManagerParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myCurrentHead = Globals.getPlayerObjects(this._myParams.myEngine).myHead;\r\n\r\n        this._mySessionChangeResyncHeadTransform = null;\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myCurrentHeadTransformLocalQuat = quat2_create();\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0; // Needed because VR head takes some frames to get the tracked position\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer = new Timer(5, false);\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._myIsSyncedDelayCounter = 0;\r\n\r\n        this._myViewResetEventListener = null;\r\n\r\n        this._myActive = true;\r\n        this._myDestroyed = false;\r\n\r\n        // Config\r\n\r\n        this._myResyncCounterFrames = 3;\r\n        this._myIsSyncedDelayCounterFrames = 1;\r\n    }\r\n\r\n    start() {\r\n        this._updateHeightOffset();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, true, this._myParams.myEngine);\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    getPlayer() {\r\n        return Globals.getPlayerObjects(this._myParams.myEngine).myPlayer;\r\n    }\r\n\r\n    getHead() {\r\n        return this._myCurrentHead;\r\n    }\r\n\r\n    getHeightHead() {\r\n        return this.getHeightEyes() + this._myParams.myForeheadExtraHeight;\r\n    }\r\n\r\n    getHeightEyes() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformFeetQuat(outTransformFeetQuat = quat2_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformFeetQuat = quat2_create()) {\r\n        return this.getHead().pp_getTransformQuat(outTransformFeetQuat);\r\n    }\r\n\r\n    getPositionFeet(outPositionFeet = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionHead(outPositionHead = vec3_create()) {\r\n        return this._myCurrentHead.pp_getPosition(outPositionHead);\r\n    }\r\n\r\n    getRotationFeetQuat(outRotationFeetQuat = quat_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getRotationHeadQuat(outRotationHeadQuat = quat_create()) {\r\n        return this.getHead().pp_getRotationQuat(outRotationHeadQuat);\r\n    }\r\n\r\n    isSynced() {\r\n        return this._myIsSyncedDelayCounter == 0 && this._myDelaySessionChangeResyncCounter == 0 && this._myDelayBlurEndResyncCounter == 0 && !this._myDelayBlurEndResyncTimer.isRunning() && !this._mySessionBlurred;\r\n    }\r\n\r\n    setHeight(height, setOnlyForActiveOne = false) {\r\n        if (!setOnlyForActiveOne || !this._mySessionActive) {\r\n            this._myParams.myHeightOffsetNonVR = height;\r\n        }\r\n\r\n        if (!setOnlyForActiveOne || this._mySessionActive) {\r\n            this._myParams.myHeightOffsetVRWithoutFloor = height;\r\n\r\n            if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                this._myParams.myHeightOffsetVRWithFloor = 0;\r\n            }\r\n            let isFloor = XRUtils.isReferenceSpaceFloorBased(this._myParams.myEngine) || XRUtils.isDeviceEmulated(this._myParams.myEngine);\r\n            if (this._mySessionActive && isFloor) {\r\n                this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (height - this.getHeight());\r\n            } else if (!this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = height;\r\n            }\r\n        }\r\n\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    moveFeet(movement) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    moveHead(movement) {\r\n        this.moveFeet(movement);\r\n    }\r\n\r\n    teleportPositionHead(teleportPosition) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPositionFeet(teleportPosition) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    rotateHeadQuat(rotationQuat) {\r\n        // #TODO Rotate feet with this and then rotate head freely if possible\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    canRotateFeet() {\r\n        return true;\r\n    }\r\n\r\n    canRotateHead() {\r\n        return !this._mySessionActive;\r\n    }\r\n\r\n    setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    setRotationHeadQuat() {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        // Implemented outside class definition \r\n    }\r\n\r\n    lookAtHead(position, up = null) {\r\n    }\r\n\r\n    lookToHead(direction, up = null) {\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myIsSyncedDelayCounter != 0) {\r\n            this._myIsSyncedDelayCounter--;\r\n            this._myIsSyncedDelayCounter = Math.max(0, this._myIsSyncedDelayCounter);\r\n        }\r\n\r\n        if (this._myDelaySessionChangeResyncCounter > 0) {\r\n            this._myDelaySessionChangeResyncCounter--;\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                this._sessionChangeResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        if (this._myDelayBlurEndResyncCounter > 0 && !this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            this._myDelayBlurEndResyncCounter--;\r\n            if (this._myDelayBlurEndResyncCounter == 0) {\r\n                this._blurEndResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        // Not really used since visibility hidden end is not considered a special case anymore\r\n        if (this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            if (this._myDelayBlurEndResyncCounter > 0) {\r\n                this._myDelayBlurEndResyncCounter--;\r\n            } else {\r\n                this._myDelayBlurEndResyncTimer.update(dt);\r\n                if (this._myDelayBlurEndResyncTimer.isDone()) {\r\n                    this._blurEndResync();\r\n                    this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isSynced()) {\r\n            this._myCurrentHead.pp_getTransformLocalQuat(this._myCurrentHeadTransformLocalQuat);\r\n        }\r\n\r\n        if (this._myParams.myDebugEnabled && Globals.isDebugEnabled(this._myParams.myEngine)) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        Globals.getDebugVisualManager(this._myParams.myEngine).drawLineEnd(0, this.getPositionFeet(), this.getPositionHead(), vec4_create(1, 0, 0, 1), 0.01);\r\n\r\n        console.error(this.getHeightEyes());\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.getReferenceSpace(this._myParams.myEngine)?.removeEventListener?.(\"reset\", this._myViewResetEventListener);\r\n        XRUtils.getSession(this._myParams.myEngine)?.removeEventListener(\"visibilitychange\", this._myVisibilityChangeEventListener);\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myParams.myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerHeadManager.prototype.getHeightEyes = function () {\r\n    let headPosition = vec3_create();\r\n    return function getHeightEyes() {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let eyesHeight = this._getPositionHeight(headPosition);\r\n\r\n        return eyesHeight;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getTransformFeetQuat = function () {\r\n    let feetPosition = vec3_create();\r\n    let feetRotationQuat = quat_create();\r\n    return function getTransformFeetQuat(outTransformFeetQuat = quat2_create()) {\r\n        outTransformFeetQuat.quat2_setPositionRotationQuat(this.getPositionFeet(feetPosition), this.getRotationFeetQuat(feetRotationQuat));\r\n        return outTransformFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getRotationFeetQuat = function () {\r\n    let playerUp = vec3_create();\r\n    let headForward = vec3_create();\r\n    return function getRotationFeetQuat(outRotationFeetQuat = quat_create()) {\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        headForward = this._myCurrentHead.pp_getForward(headForward);\r\n\r\n        // Feet are considered to always be flat on the player up\r\n        let angleWithUp = headForward.vec3_angle(playerUp);\r\n        let mingAngle = 10;\r\n        if (angleWithUp < mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getDown(headForward);\r\n        } else if (angleWithUp > 180 - mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getUp(headForward);\r\n        }\r\n\r\n        headForward = headForward.vec3_removeComponentAlongAxis(playerUp, headForward);\r\n        headForward.vec3_normalize(headForward);\r\n\r\n        outRotationFeetQuat.quat_setUp(playerUp, headForward);\r\n        return outRotationFeetQuat;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.getPositionFeet = function () {\r\n    let headPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    return function getPositionFeet(outPositionFeet = vec3_create()) {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let headHeight = this._getPositionHeight(headPosition);\r\n\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        outPositionFeet = headPosition.vec3_sub(playerUp.vec3_scale(headHeight, outPositionFeet), outPositionFeet);\r\n\r\n        return outPositionFeet;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.moveFeet = function moveFeet(movement) {\r\n    Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_translate(movement);\r\n};\r\n\r\nPlayerHeadManager.prototype.rotateFeetQuat = function () {\r\n    let playerUp = vec3_create();\r\n    let rotationAxis = vec3_create();\r\n    let currentHeadPosition = vec3_create();\r\n    let currentFeetRotation = quat_create();\r\n    let newFeetRotation = quat_create();\r\n    let fixedNewFeetRotation = quat_create();\r\n    let newFeetForward = vec3_create();\r\n    let fixedRotation = quat_create();\r\n    let newHeadPosition = vec3_create();\r\n    let headAdjustmentMovement = vec3_create();\r\n    return function rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        let angle = rotationQuat.quat_getAngleRadians();\r\n        if (angle <= 0.00001) {\r\n            return;\r\n        }\r\n\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        rotationAxis = rotationQuat.quat_getAxis(rotationAxis);\r\n\r\n        if (!rotationAxis.vec3_isOnAxis(playerUp) &&\r\n            ((keepUpOverride == null && this._myParams.myFeetRotationKeepUp) || (keepUpOverride))) {\r\n            currentFeetRotation = this.getRotationFeetQuat(currentFeetRotation);\r\n\r\n            newFeetRotation = currentFeetRotation.quat_rotateQuat(rotationQuat, newFeetRotation);\r\n            newFeetForward = newFeetRotation.quat_getForward(newFeetForward);\r\n\r\n            fixedNewFeetRotation.quat_copy(newFeetRotation);\r\n            fixedNewFeetRotation.quat_setUp(playerUp, newFeetForward);\r\n\r\n            fixedRotation = currentFeetRotation.quat_rotationToQuat(fixedNewFeetRotation, fixedRotation);\r\n        } else {\r\n            fixedRotation.quat_copy(rotationQuat);\r\n        }\r\n\r\n        Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateAroundQuat(fixedRotation, currentHeadPosition);\r\n\r\n        newHeadPosition = this._myCurrentHead.pp_getPosition(newHeadPosition);\r\n\r\n        headAdjustmentMovement = currentHeadPosition.vec3_sub(newHeadPosition, headAdjustmentMovement);\r\n        if (headAdjustmentMovement.vec3_length() > 0.00001) {\r\n            this.moveFeet(headAdjustmentMovement);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.rotateHeadQuat = function () {\r\n    let newHeadRotation = quat_create();\r\n    let newHeadUp = vec3_create();\r\n    return function rotateHeadQuat(rotationQuat) {\r\n        if (this.canRotateHead()) {\r\n            this._myCurrentHead.pp_rotateQuat(rotationQuat);\r\n            newHeadRotation = this._myCurrentHead.pp_getRotationQuat(newHeadRotation);\r\n\r\n            Globals.getPlayerObjects(this._myParams.myEngine).myHead.pp_setRotationQuat(newHeadRotation);\r\n\r\n            newHeadRotation = newHeadRotation.quat_rotateAxisRadians(Math.PI, newHeadRotation.quat_getUp(newHeadUp), newHeadRotation);\r\n            Globals.getPlayerObjects(this._myParams.myEngine).myCameraNonXR.pp_setRotationQuat(newHeadRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationFeetQuat = function () {\r\n    let currentRotationQuat = quat_create();\r\n    let rotationQuatToRotate = quat_create();\r\n    return function setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        currentRotationQuat = this.getRotationFeetQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateFeetQuat(rotationQuatToRotate, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.setRotationHeadQuat = function () {\r\n    let currentRotationQuat = quat_create();\r\n    let rotationQuatToRotate = quat_create();\r\n    return function setRotationHeadQuat(rotationQuat) {\r\n        currentRotationQuat = this.getRotationHeadQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateHeadQuat(rotationQuatToRotate);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionHead = function () {\r\n    let currentHeadPosition = vec3_create();\r\n    let teleportMovementToPerform = vec3_create();\r\n    return function teleportPositionHead(teleportPosition) {\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentHeadPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPositionFeet = function () {\r\n    let currentFeetPosition = vec3_create();\r\n    let teleportMovementToPerform = vec3_create();\r\n    return function teleportPositionFeet(teleportPosition) {\r\n        currentFeetPosition = this.getPositionFeet(currentFeetPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentFeetPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.teleportPlayerToHeadTransformQuat = function () {\r\n    let headPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    let flatCurrentPlayerPosition = vec3_create();\r\n    let flatNewPlayerPosition = vec3_create();\r\n    let teleportMovement = vec3_create();\r\n    let playerForward = vec3_create();\r\n    let headForward = vec3_create();\r\n    let rotationToPerform = quat_create();\r\n    return function teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        headPosition = headTransformQuat.quat2_getPosition(headPosition);\r\n\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        flatCurrentPlayerPosition = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(flatCurrentPlayerPosition).vec3_removeComponentAlongAxis(playerUp, flatCurrentPlayerPosition);\r\n        flatNewPlayerPosition = headPosition.vec3_removeComponentAlongAxis(playerUp, flatNewPlayerPosition);\r\n\r\n        teleportMovement = flatNewPlayerPosition.vec3_sub(flatCurrentPlayerPosition, teleportMovement);\r\n        Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_translate(teleportMovement);\r\n\r\n        playerForward = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getForward(playerForward);\r\n        headForward = headTransformQuat.quat2_getForward(headForward);\r\n\r\n        rotationToPerform = playerForward.vec3_rotationToPivotedQuat(headForward, playerUp, rotationToPerform);\r\n\r\n        Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtFeet = function () {\r\n    let direction = vec3_create();\r\n    let feetPosition = vec3_create();\r\n    return function lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        feetPosition = this.getPositionFeet(feetPosition);\r\n        direction = position.vec3_sub(feetPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToFeet(direction, up, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToFeet = function () {\r\n    let feetRotation = quat_create();\r\n    return function lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        feetRotation = this.getRotationFeetQuat(feetRotation);\r\n        feetRotation.quat_setForward(direction, up);\r\n        this.setRotationFeetQuat(feetRotation, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookAtHead = function () {\r\n    let direction = vec3_create();\r\n    let headPosition = vec3_create();\r\n    return function lookAtHead(position, up = null) {\r\n        headPosition = this.getPositionHead(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToHead(direction, up);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype.lookToHead = function () {\r\n    let headRotation = quat_create();\r\n    return function lookToHead(direction, up = null) {\r\n        headRotation = this.getRotationHeadQuat(headRotation);\r\n        headRotation.quat_setForward(direction, up);\r\n        this.setRotationHeadQuat(headRotation);\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._getPositionHeight = function () {\r\n    let playerPosition = vec3_create();\r\n    let playerUp = vec3_create();\r\n    let heightVector = vec3_create();\r\n    return function _getPositionHeight(position) {\r\n        playerPosition = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(playerPosition);\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n        heightVector = position.vec3_sub(playerPosition, heightVector).vec3_componentAlongAxis(playerUp, heightVector);\r\n        let height = heightVector.vec3_length();\r\n        if (!playerUp.vec3_isConcordant(heightVector)) {\r\n            height = -height;\r\n        }\r\n\r\n        return height;\r\n    };\r\n}();\r\n\r\n// #TODO What happens if the player go in the blurred state before the scene has loaded?\r\nPlayerHeadManager.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(manualCall, session) {\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0;\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        let referenceSpace = XRUtils.getReferenceSpace(this._myParams.myEngine);\r\n\r\n        if (referenceSpace.addEventListener != null) {\r\n\r\n            this._myViewResetEventListener = this._onViewReset.bind(this);\r\n            referenceSpace.addEventListener(\"reset\", this._myViewResetEventListener);\r\n        }\r\n\r\n        this._myVisibilityChangeEventListener = function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                if (!this._mySessionBlurred) {\r\n                    this._onXRSessionBlurStart(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = session.visibilityState == \"hidden\";\r\n            } else {\r\n                if (this._mySessionBlurred) {\r\n                    this._onXRSessionBlurEnd(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = false;\r\n            }\r\n        }.bind(this);\r\n\r\n        session.addEventListener(\"visibilitychange\", this._myVisibilityChangeEventListener);\r\n\r\n        if (this._myParams.mySessionChangeResyncEnabled && !manualCall && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                this._mySessionChangeResyncHeadTransform = this._getHeadTransformFromLocal(this._myCurrentHeadTransformLocalQuat);\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._mySessionActive = true;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionEnd = function () {\r\n    return function _onXRSessionEnd(session) {\r\n        if (this._myParams.mySessionChangeResyncEnabled && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadTransform = this._getHeadTransformFromLocal(this._myCurrentHeadTransformLocalQuat);\r\n\r\n                if (this._myBlurRecoverHeadTransform != null) {\r\n                    previousHeadTransform = this._myBlurRecoverHeadTransform;\r\n                }\r\n\r\n                this._mySessionChangeResyncHeadTransform = previousHeadTransform;\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n\r\n        this._myVisibilityChangeEventListener = null;\r\n        this._myViewResetEventListener = null;\r\n\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurStart = function () {\r\n    return function _onXRSessionBlurStart(session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform == null && this._mySessionActive) {\r\n                if (this._myDelaySessionChangeResyncCounter > 0) {\r\n                    this._myBlurRecoverHeadTransform = this._mySessionChangeResyncHeadTransform;\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = this._getHeadTransformFromLocal(this._myCurrentHeadTransformLocalQuat);\r\n                }\r\n            } else if (!this._mySessionActive || !this._myParams.myBlurEndResyncEnabled) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n\r\n        this._mySessionBlurred = true;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onXRSessionBlurEnd = function () {\r\n    return function _onXRSessionBlurEnd(session) {\r\n        if (this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform != null && this._mySessionActive) {\r\n                    this._myDelayBlurEndResyncCounter = this._myResyncCounterFrames;\r\n                    if (this._myVisibilityHidden) {\r\n                        //this._myDelayBlurEndResyncTimer.start();\r\n\r\n                        // This was added because on the end of hidden u can have the resync delay cause of the guardian resync\r\n                        // but I just decided to skip this since it's not reliable and the guardian resync can happen in other cases\r\n                        // with no notification anyway\r\n                    }\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = null;\r\n                    this._myDelayBlurEndResyncCounter = 0;\r\n                }\r\n            } else {\r\n                this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._mySessionBlurred = false;\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._onViewReset = function () {\r\n    return function _onViewReset() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetTransformOnViewResetEnabled && this._mySessionActive && this.isSynced()) {\r\n                this.teleportPlayerToHeadTransformQuat(this._getHeadTransformFromLocal(this._myCurrentHeadTransformLocalQuat));\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._blurEndResync = function () {\r\n    let playerUp = vec3_create();\r\n    let currentHeadPosition = vec3_create();\r\n    let recoverHeadPosition = vec3_create();\r\n    let flatCurrentHeadPosition = vec3_create();\r\n    let flatRecoverHeadPosition = vec3_create();\r\n    let recoverMovement = vec3_create();\r\n    let recoverHeadForward = vec3_create();\r\n    let currentHeadForward = vec3_create();\r\n    let rotationToPerform = quat_create();\r\n    return function _blurEndResync() {\r\n        if (this._myBlurRecoverHeadTransform != null) {\r\n            if (this._mySessionChangeResyncHeadTransform != null) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n                this._sessionChangeResync();\r\n            } else {\r\n                playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                recoverHeadPosition = this._myBlurRecoverHeadTransform.quat2_getPosition(recoverHeadPosition);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatRecoverHeadPosition = recoverHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatRecoverHeadPosition);\r\n\r\n                recoverMovement = flatRecoverHeadPosition.vec3_sub(flatCurrentHeadPosition, recoverMovement);\r\n                this.moveFeet(recoverMovement);\r\n\r\n                recoverHeadForward = this._myBlurRecoverHeadTransform.quat2_getForward(recoverHeadForward);\r\n                currentHeadForward = this._myCurrentHead.pp_getForward(currentHeadForward);\r\n                rotationToPerform = currentHeadForward.vec3_rotationToPivotedQuat(recoverHeadForward, playerUp, rotationToPerform);\r\n\r\n                if (this._myParams.myBlurEndResyncRotation) {\r\n                    this.rotateFeetQuat(rotationToPerform);\r\n                }\r\n\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._sessionChangeResync = function () {\r\n    let currentHeadPosition = vec3_create();\r\n    let resyncHeadPosition = vec3_create();\r\n    let resyncHeadRotation = quat_create();\r\n    let playerUp = vec3_create();\r\n    let flatCurrentHeadPosition = vec3_create();\r\n    let flatResyncHeadPosition = vec3_create();\r\n    let resyncMovement = vec3_create();\r\n    let resyncHeadForward = vec3_create();\r\n    let resyncHeadUp = vec3_create();\r\n    let resyncHeadRight = vec3_create();\r\n    let playerPosition = vec3_create();\r\n    let newPlayerPosition = vec3_create();\r\n    let fixedHeadRight = vec3_create();\r\n    let fixedHeadLeft = vec3_create();\r\n    let fixedHeadUp = vec3_create();\r\n    let fixedHeadForward = vec3_create();\r\n    let fixedHeadRotation = quat_create();\r\n    return function _sessionChangeResync() {\r\n        if (this._myBlurRecoverHeadTransform == null && this._mySessionChangeResyncHeadTransform != null) {\r\n            if (this._mySessionActive) {\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                resyncMovement = flatResyncHeadPosition.vec3_sub(flatCurrentHeadPosition, resyncMovement);\r\n                this.moveFeet(resyncMovement);\r\n\r\n                let isFloor = XRUtils.isReferenceSpaceFloorBased(this._myParams.myEngine) || XRUtils.isDeviceEmulated(this._myParams.myEngine);\r\n                if (this._myParams.myEnterSessionResyncHeight || this._myParams.myNextEnterSessionResyncHeight) {\r\n                    this._myParams.myNextEnterSessionResyncHeight = false;\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    this._myParams.myHeightOffsetVRWithoutFloor = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (resyncHeadHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                } else if (isFloor && (this._myParams.myNextEnterSessionFloorHeight != null || this._myParams.myEnterSessionFloorHeight != null)) {\r\n                    let floorHeight = (this._myParams.myNextEnterSessionFloorHeight != null) ? this._myParams.myNextEnterSessionFloorHeight : this._myParams.myEnterSessionFloorHeight;\r\n                    floorHeight -= this._myParams.myForeheadExtraHeight;\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (floorHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                this._resyncHeadRotationForward(resyncHeadRotation);\r\n            } else {\r\n                playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                playerPosition = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getPosition(playerPosition);\r\n                newPlayerPosition = flatResyncHeadPosition.vec3_add(playerPosition.vec3_componentAlongAxis(playerUp, newPlayerPosition), newPlayerPosition);\r\n\r\n                Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_setPosition(newPlayerPosition);\r\n                Globals.getPlayerObjects(this._myParams.myEngine).myCameraNonXR.pp_resetPositionLocal();\r\n\r\n                if (this._myParams.myExitSessionResyncHeight) {\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    this._myParams.myHeightOffsetNonVR = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                if (this._myParams.myExitSessionRemoveRightTilt ||\r\n                    this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n\r\n                    fixedHeadRight = resyncHeadForward.vec3_cross(playerUp, fixedHeadRight);\r\n                    fixedHeadRight.vec3_normalize(fixedHeadRight);\r\n\r\n                    if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n                        let angleForwardUp = resyncHeadForward.vec3_angle(playerUp);\r\n                        let negateAngle = 45;\r\n                        if (angleForwardUp > (180 - negateAngle) || angleForwardUp < negateAngle) {\r\n                            // This way I get a good fixed result for both head upside down and head rotated on forward\r\n                            // When the head is looking down and a bit backward (more than 135 degrees), I want the forward to actually\r\n                            // be the opposite because it's like u rotate back the head up and look forward again\r\n                            fixedHeadRight.vec3_negate(fixedHeadRight);\r\n                        }\r\n                    }\r\n\r\n                    if (fixedHeadRight.vec3_isZero(0.000001)) {\r\n                        fixedHeadRight = resyncHeadRotation.quat_getRight(fixedHeadRight);\r\n                    }\r\n\r\n                    fixedHeadUp = fixedHeadRight.vec3_cross(resyncHeadForward, fixedHeadUp);\r\n                    fixedHeadUp.vec3_normalize(fixedHeadUp);\r\n                    fixedHeadForward = fixedHeadUp.vec3_cross(fixedHeadRight, fixedHeadForward);\r\n                    fixedHeadForward.vec3_normalize(fixedHeadForward);\r\n\r\n                    fixedHeadRotation.quat_fromAxes(fixedHeadRight.vec3_negate(fixedHeadLeft), fixedHeadUp, fixedHeadForward);\r\n                    resyncHeadRotation.quat_copy(fixedHeadRotation);\r\n                }\r\n\r\n                if (this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n                    resyncHeadRight = resyncHeadRotation.quat_getRight(resyncHeadRight);\r\n\r\n                    let maxVerticalAngle = Math.max(0, this._myParams.myExitSessionMaxVerticalAngle - 0.0001);\r\n                    if (!this._myParams.myExitSessionResyncVerticalAngle) {\r\n                        maxVerticalAngle = 0;\r\n                    }\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(resyncHeadUp.vec3_angleSigned(playerUp, resyncHeadRight));\r\n                    if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                        let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                        resyncHeadRotation = resyncHeadRotation.quat_rotateAxis(fixAngle, resyncHeadRight, resyncHeadRotation);\r\n                    }\r\n                }\r\n\r\n                this.setRotationHeadQuat(resyncHeadRotation);\r\n            }\r\n\r\n            if (this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = null;\r\n                this._myFirstEnterSessionResyncDone = true;\r\n            }\r\n\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerHeadManager.prototype._resyncHeadRotationForward = function () {\r\n    let playerUp = vec3_create();\r\n    let resyncHeadForward = vec3_create();\r\n    let resyncHeadUp = vec3_create();\r\n    let fixedResyncHeadRotation = quat_create();\r\n    return function _resyncHeadRotationForward(resyncHeadRotation) {\r\n        playerUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp(playerUp);\r\n        resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n        resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n        fixedResyncHeadRotation.quat_copy(resyncHeadRotation);\r\n        fixedResyncHeadRotation.quat_setUp(playerUp, resyncHeadForward);\r\n\r\n        if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n            // If it was upside down, it's like it has to rotate the neck back up,so the forward is actually on the opposite side\r\n            fixedResyncHeadRotation.quat_rotateAxis(180, playerUp, fixedResyncHeadRotation);\r\n        }\r\n\r\n        this.setRotationFeetQuat(fixedResyncHeadRotation);\r\n        return;\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._updateHeightOffset = function () {\r\n    return function _updateHeightOffset() {\r\n        if (this._mySessionActive) {\r\n            // #TODO As of now reference type is not properly updated for device emulated and is available the frame after the session started\r\n            // if this is fixed, then the emulator will behave like a normal headset for height and we can remove all these ifs\r\n            if (XRUtils.isDeviceEmulated(this._myParams.myEngine)) {\r\n                this._setReferenceSpaceHeightOffset(0, 0);\r\n            } else if (XRUtils.isReferenceSpaceFloorBased(this._myParams.myEngine)) {\r\n                this._setReferenceSpaceHeightOffset(this._myParams.myHeightOffsetVRWithFloor, 0);\r\n            } else {\r\n                this._setReferenceSpaceHeightOffset(this._myParams.myHeightOffsetVRWithoutFloor, this._myParams.myForeheadExtraHeight);\r\n            }\r\n        } else {\r\n            this._setReferenceSpaceHeightOffset(this._myParams.myHeightOffsetNonVR, this._myParams.myForeheadExtraHeight);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._setReferenceSpaceHeightOffset = function () {\r\n    let referenceSpacePosition = vec3_create();\r\n    return function _setReferenceSpaceHeightOffset(offset, amountToRemove) {\r\n        if (offset != null) {\r\n            referenceSpacePosition = Globals.getPlayerObjects(this._myParams.myEngine).myReferenceSpace.pp_getPositionLocal(referenceSpacePosition);\r\n            Globals.getPlayerObjects(this._myParams.myEngine).myReferenceSpace.pp_setPositionLocal([referenceSpacePosition[0], offset - amountToRemove, referenceSpacePosition[2]]);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerHeadManager.prototype._getHeadTransformFromLocal = function () {\r\n    return function _getHeadTransformFromLocal(transformLocal) {\r\n        return this._myCurrentHead.pp_convertTransformLocalToWorldQuat(transformLocal);\r\n    }\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_getPositionHeight\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurStart\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onXRSessionBlurEnd\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_onViewReset\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_blurEndResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_sessionChangeResync\", { enumerable: false });\r\nObject.defineProperty(PlayerHeadManager.prototype, \"_setReferenceSpaceHeightOffset\", { enumerable: false });", "import { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\nimport { CollisionCheckBridge } from \"../../../character_controller/collision/collision_check_bridge\";\r\nimport { CollisionCheckUtils } from \"../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../character_controller/collision/legacy/collision_check/collision_params\";\r\n\r\nexport let PlayerTransformManagerSyncFlag = {\r\n    BODY_COLLIDING: 0,\r\n    HEAD_COLLIDING: 1,\r\n    FAR: 2,\r\n    FLOATING: 3\r\n};\r\n\r\nexport class PlayerTransformManagerParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMovementCollisionCheckParams = null;\r\n        this.myTeleportCollisionCheckParams = null; // Can be left null and will be generated from the movement one\r\n        this.myTeleportCollisionCheckParamsCopyFromMovement = false;\r\n        this.myTeleportCollisionCheckParamsCheck360 = false;\r\n\r\n        this.myAlwaysSyncPositionWithReal = false;\r\n        this.myAlwaysSyncHeadPositionWithReal = false;\r\n\r\n        // Sync for VR and Non VR\r\n        this.mySyncEnabledFlagMap = new Map();\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionFlagMap = new Map();\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncPositionFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionHeadFlagMap = new Map();\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncPositionHeadFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncRotationFlagMap = new Map();\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncRotationFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncHeightFlagMap = new Map();\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncHeightFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.myIsLeaningValidAboveDistance = false;\r\n        this.myLeaningValidDistance = 0;\r\n\r\n        // Settings for both hop and lean\r\n        this.myIsFloatingValidIfVerticalMovement = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndRealOnGround = false; // #TODO This is more an override\r\n        this.myIsFloatingValidIfRealOnGround = false;\r\n        this.myIsFloatingValidIfSteepGround = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n\r\n        this.myFloatingSplitCheckEnabled = false;\r\n        this.myFloatingSplitCheckMaxLength = 0;\r\n        this.myFloatingSplitCheckMaxSteps = null;\r\n        this.myFloatingSplitCheckStepEqualLength = false;\r\n        this.myFloatingSplitCheckStepEqualLengthMinLength = 0;\r\n\r\n        this.myMaxDistanceFromRealToSyncEnabled = false;\r\n        this.myMaxDistanceFromRealToSync = 0;\r\n        // Max distance to resync valid with head, if you head is further do not resync\r\n\r\n        this.myHeadRadius = 0;\r\n        this.myHeadCollisionBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myHeadCollisionObjectsToIgnore = [];\r\n\r\n        this.myRotateOnlyIfSynced = false;\r\n        this.myResetRealResetRotationIfUpChanged = true;\r\n\r\n        //this.myDistanceToStartApplyGravityWhenFloating = 0; // This should be moved outisde, that is, if it is floating stop gravity\r\n\r\n        // Set valid if head synced (head manager)\r\n\r\n        this.myRealMovementAllowVerticalAdjustments = false;\r\n        // This true means that the real movement should also snap on ground or fix the vertical to pop from it\r\n        // You may want this if u want that while real moving u can also climb stairs\r\n\r\n        // Real movement apply vertical snap or not (other option to apply gravity) \r\n        // (gravity inside this class?) only when movement is applied not for head only)\r\n\r\n        this.myUpdateRealPositionValid = false;\r\n        this.myUpdatePositionValid = false;\r\n\r\n        this.myMinHeight = null;\r\n        this.myMaxHeight = null;\r\n\r\n        // These and the callbacks does not makes much sense\r\n        // The colliding things are made to not sync the real position, but if the height is below and the body is not colliding\r\n        // There is not reason not to resync, even if u put the real back on the valid the height will stay the same\r\n        // If someone puts the head in the ground, there is no way for me to resync and make the head pop out sadly\r\n        // In this case u either accept that u can move without seeing, or stop moving until the obscure is on\r\n        this.myIsBodyCollidingWhenHeightBelowValue = null; // Could be removed and added with the custom check callback if u want it\r\n        this.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n        this.myIsBodyCollidingExtraCheckCallback = null;      // Signature: callback(transformManager) -> bool\r\n        this.myIsLeaningExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsHoppingExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsFarExtraCheckCallback = null;                // Signature: callback(transformManager) -> bool\r\n\r\n        this.myResetToValidOnEnterSession = false;\r\n        this.myResetToValidOnExitSession = false;\r\n\r\n        this.myAlwaysResetRealPositionNonVR = false;\r\n        this.myAlwaysResetRealRotationNonVR = false;\r\n        this.myAlwaysResetRealHeightNonVR = false;\r\n\r\n        this.myAlwaysResetRealPositionVR = false;\r\n        this.myAlwaysResetRealRotationVR = false;\r\n        this.myAlwaysResetRealHeightVR = false;\r\n\r\n        this.myNeverResetRealPositionNonVR = false;\r\n        this.myNeverResetRealRotationNonVR = false;\r\n        this.myNeverResetRealHeightNonVR = false;\r\n\r\n        this.myNeverResetRealPositionVR = false;\r\n        this.myNeverResetRealRotationVR = false;\r\n        this.myNeverResetRealHeightVR = false;\r\n\r\n        this.myResetRealOnMove = false;\r\n        this.myResetRealOnTeleport = false;\r\n\r\n        this.mySyncPositionDisabled = false;\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugEnabled = false;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myParams.myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\nexport class PlayerTransformManager {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = vec3_create();\r\n        this._myValidRotationQuat = quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n\r\n        this._myActive = true;\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // For sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // In generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // Collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // Maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // Collision check and move\r\n\r\n        // Move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // Also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n        // Use current valid rotation\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // Collision check and teleport, if force teleport teleport in any case\r\n\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    teleportAndReset(position, rotationQuat) {\r\n        this.teleportPosition(position, null, true);\r\n        if (rotationQuat != null) {\r\n            this.setRotationQuat(rotationQuat);\r\n        }\r\n        this.resetReal(true, false, false, true);\r\n        this.resetHeadToReal();\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(this._myValidPosition), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getPosition(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(this._myValidPositionHead), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n\r\n        if (!this._myParams.myAlwaysSyncPositionWithReal) {\r\n            this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        }\r\n\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        if (!this._myParams.myAlwaysSyncPositionWithReal) {\r\n            this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        }\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // On purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugEnabled = false;\r\n\r\n        params.myDebugHorizontalMovementEnabled = true;\r\n        params.myDebugHorizontalPositionEnabled = false;\r\n        params.myDebugVerticalMovementEnabled = false;\r\n        params.myDebugVerticalPositionEnabled = false;\r\n        params.myDebugSlidingEnabled = false;\r\n        params.myDebugGroundInfoEnabled = false;\r\n        params.myDebugCeilingInfoEnabled = false;\r\n        params.myDebugRuntimeParamsEnabled = false;\r\n        params.myDebugMovementEnabled = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugEnabled = false;\r\n\r\n        params.myDebugHorizontalMovementEnabled = false;\r\n        params.myDebugHorizontalPositionEnabled = false;\r\n        params.myDebugVerticalMovementEnabled = false;\r\n        params.myDebugVerticalPositionEnabled = false;\r\n        params.myDebugSlidingEnabled = false;\r\n        params.myDebugGroundInfoEnabled = true;\r\n        params.myDebugCeilingInfoEnabled = true;\r\n        params.myDebugRuntimeParamsEnabled = false;\r\n        params.myDebugMovementEnabled = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualCall, session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnEnterSession && !manualCall) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnExitSession) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        Globals.getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPosition, vec4_create(1, 0, 0, 1), 0.05);\r\n        Globals.getDebugVisualManager(this._myParams.myEngine).drawLineEnd(0, this._myValidPosition, this.getPositionReal(), vec4_create(1, 0, 0, 1), 0.05);\r\n        Globals.getDebugVisualManager(this._myParams.myEngine).drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        Globals.getDebugVisualManager(this._myParams.myEngine).drawPoint(0, this._myValidPositionHead, vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myParams.myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = vec3_create();\r\n    let validUp = vec3_create();\r\n    let position = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n    let transformUp = vec3_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function update(dt) {\r\n        // #TODO This should update ground and ceiling info but not sliding info        \r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugEnabled;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugEnabled = false;\r\n            CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugEnabled = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugEnabled && Globals.isDebugEnabled(this._myParams.myEngine)) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = vec3_create();\r\n    let position = vec3_create();\r\n    let positionReal = vec3_create();\r\n    let transformQuat = quat2_create();\r\n    let collisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let newPosition = vec3_create();\r\n    let newPositionHead = vec3_create();\r\n    let movementStep = vec3_create();\r\n    let currentMovementStep = vec3_create();\r\n    let transformUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let movementChecked = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    let floatingTransformQuat = quat2_create();\r\n    let horizontalDirection = vec3_create();\r\n    let rotationQuat = quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // Check if new head is ok and update the data\r\n        // If head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection);\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; // #TODO Temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myAlwaysSyncPositionWithReal) {\r\n                newPosition.vec3_copy(positionReal);\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                // #TODO Utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // Get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myAlwaysSyncHeadPositionWithReal) {\r\n                newPositionHead.vec3_copy(positionReal);\r\n            }\r\n\r\n            if ((this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysSyncPositionWithReal) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                // Reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap) || this._myParams.myAlwaysSyncHeadPositionWithReal\r\n                || (this.isSynced(this._myParams.mySyncPositionFlagMap) && this._myParams.myAlwaysSyncPositionWithReal)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugEnabled;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugEnabled = false;\r\n                CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugEnabled = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // This make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add move callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = vec3_create();\r\n    let teleportPositionVec = vec3_create();\r\n    let teleportRotation = quat_create();\r\n    let rotatedTransformQuat = quat2_create();\r\n    let fixedMovement = vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (XRUtils.isSessionActive(this._myParams.myEngine)) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // #TODO Add teleport callback\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        CollisionCheckBridge.getCollisionCheck(this._myParams.myEngine).positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n// #TODO Sliding info, surface info, update", "import { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { GamepadAxesID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat_create, vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\n\r\nexport class PlayerLocomotionRotateParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMaxRotationSpeed = 0;\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n\r\n        this.mySmoothSnapEnabled = true;\r\n        this.mySmoothSnapSpeedDegrees = 240;\r\n\r\n        this.myRotationMinStickIntensityThreshold = 0;\r\n        this.mySnapTurnActivateThreshold = 0;\r\n        this.mySnapTurnResetThreshold = 0;\r\n\r\n        this.myClampVerticalAngle = true;\r\n        this.myMaxVerticalAngle = 0;\r\n\r\n        this.myHandedness = Handedness.RIGHT;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionRotate {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._mySnapCharge = false;\r\n\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n\r\n        //Globals.getEasyTuneVariables(this._myParams.myEngine).add(new EasyTuneNumber(\"Teleport Smooth Speed\", this._myParams.mySmoothSnapSpeedDegrees, 10, 3, 0, undefined, this._myParams.myEngine));\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    stop() {\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myParams.mySmoothSnapSpeedDegrees = Globals.getEasyTuneVariables(this._myParams.myEngine).get(\"Teleport Smooth Speed\");\r\n\r\n        this._rotateHeadHorizontally(dt);\r\n\r\n        if (this._myParams.myPlayerHeadManager.canRotateHead()) {\r\n            this._rotateHeadVertically(dt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadHorizontally = function () {\r\n    let playerUp = vec3_create();\r\n    let headRotation = quat_create();\r\n    return function _rotateHeadHorizontally(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headRotation.quat_identity();\r\n\r\n        let axes = Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !XRUtils.isSessionActive(this._myParams.myEngine))) {\r\n            if (Math.abs(axes[0]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = -axes[0];\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity);\r\n\r\n                headRotation.quat_fromAxis(speed * dt, playerUp);\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapHorizontalRunning) {\r\n                if (Math.abs(axes[0]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    let angleToRotate = -Math.pp_sign(axes[0]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    if (!this._myParams.mySmoothSnapEnabled) {\r\n                        headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n                    } else {\r\n                        this._mySmoothSnapHorizontalRunning = true;\r\n                        this._mySmoothSnapHorizontalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapHorizontalRunning) {\r\n            let angleToRotate = Math.pp_sign(this._mySmoothSnapHorizontalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapHorizontalAngleToPerform) - Math.PP_EPSILON) {\r\n                angleToRotate = this._mySmoothSnapHorizontalAngleToPerform;\r\n            }\r\n\r\n            headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n            this._mySmoothSnapHorizontalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapHorizontalAngleToPerform) < Math.PP_EPSILON) {\r\n                this._mySmoothSnapHorizontalRunning = false;\r\n                this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (headRotation.quat_getAngle() > Math.PP_EPSILON_DEGREES) {\r\n            this._myParams.myPlayerTransformManager.rotateQuat(headRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionRotate.prototype._rotateHeadVertically = function () {\r\n    let headForward = vec3_create();\r\n    let headUp = vec3_create();\r\n    let referenceUp = vec3_create();\r\n    let referenceUpNegate = vec3_create();\r\n    let referenceRight = vec3_create();\r\n    let newUp = vec3_create();\r\n    let headRotation = quat_create();\r\n    return function _rotateHeadVertically(dt) {\r\n        let head = this._myParams.myPlayerHeadManager.getHead();\r\n\r\n        headForward = head.pp_getForward(headForward);\r\n        headUp = head.pp_getUp(headUp);\r\n\r\n        referenceUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(referenceUp);\r\n        referenceUpNegate = referenceUp.vec3_negate(referenceUpNegate);\r\n        referenceRight = headForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n        let minAngle = 1;\r\n        if (headForward.vec3_angle(referenceUp) < minAngle) {\r\n            referenceRight = headUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n        } else if (headForward.vec3_angle(referenceUpNegate) < minAngle) {\r\n            referenceRight = headUp.vec3_cross(referenceUp, referenceRight);\r\n        } else if (!headUp.vec3_isConcordant(referenceUp)) {\r\n            referenceRight.vec3_negate(referenceRight);\r\n        }\r\n\r\n        referenceRight.vec3_normalize(referenceRight);\r\n\r\n        let axes = Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n        let angleToRotate = 0;\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !XRUtils.isSessionActive(this._myParams.myEngine))) {\r\n            if (Math.abs(axes[1]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = axes[1];\r\n                angleToRotate = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity) * dt;\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapVerticalRunning) {\r\n                if (Math.abs(axes[1]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    angleToRotate = Math.pp_sign(axes[1]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    // Adjust rotation to closest snap step\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(headUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                    let snapStep = Math.round(angleWithUp / this._myParams.mySnapTurnAngle);\r\n\r\n                    let snapAngle = Math.pp_angleClamp(snapStep * this._myParams.mySnapTurnAngle);\r\n                    let angleToAlign = -Math.pp_angleDistanceSigned(angleWithUp, snapAngle);\r\n\r\n                    if (Math.abs(angleToAlign) > 1) {\r\n                        if (Math.pp_sign(angleToRotate) == Math.pp_sign(angleToAlign)) {\r\n                            angleToRotate = angleToAlign;\r\n                        } else {\r\n                            angleToRotate = (-Math.pp_sign(angleToAlign) * this._myParams.mySnapTurnAngle) + angleToAlign;\r\n                        }\r\n                    } else if (Math.abs(angleToAlign) > Math.PP_EPSILON_DEGREES) {\r\n                        angleToRotate += angleToAlign;\r\n                    }\r\n\r\n                    if (this._myParams.mySmoothSnapEnabled) {\r\n                        this._mySmoothSnapVerticalRunning = true;\r\n                        this._mySmoothSnapVerticalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapVerticalRunning) {\r\n            angleToRotate = Math.pp_sign(this._mySmoothSnapVerticalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapVerticalAngleToPerform) - Math.PP_EPSILON) {\r\n                angleToRotate = this._mySmoothSnapVerticalAngleToPerform;\r\n            }\r\n\r\n            this._mySmoothSnapVerticalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapVerticalAngleToPerform) < Math.PP_EPSILON) {\r\n                this._mySmoothSnapVerticalRunning = false;\r\n                this._mySmoothSnapVerticalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (angleToRotate != 0) {\r\n            headRotation.quat_fromAxis(angleToRotate, referenceRight);\r\n            this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n\r\n            if (this._myParams.myClampVerticalAngle) {\r\n                let maxVerticalAngle = this._myParams.myMaxVerticalAngle - 0.0001;\r\n                newUp = head.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    headRotation.quat_fromAxis(fixAngle, referenceRight);\r\n                    this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadHorizontally\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionRotate.prototype, \"_rotateHeadVertically\", { enumerable: false });", "export class PlayerLocomotionMovementRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myIsFlying = false;\r\n        this.myGravitySpeed = 0;\r\n        this.myCollisionRuntimeParams = null;\r\n\r\n        this.myIsTeleportDetecting = false;\r\n        this.myIsTeleporting = false;\r\n        this.myTeleportJustPerformed = false;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionMovement {\r\n\r\n    constructor(locomotionRuntimeParams) {\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n    }\r\n\r\n    getRuntimeParams() {\r\n        return this._myLocomotionRuntimeParams;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    canStop() {\r\n        return true;\r\n    }\r\n}", "import { PhysXComponent } from \"@wonderlandengine/api\";\r\nimport { FSM } from \"../../../../../cauldron/fsm/fsm\";\r\nimport { EasingFunction } from \"../../../../../cauldron/js/utils/math_utils\";\r\nimport { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { GamepadButtonID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\nimport { CharacterColliderSetupSimplifiedCreationParams, CharacterColliderSetupUtils } from \"../../../character_controller/collision/character_collider_setup_utils\";\r\nimport { CollisionCheckBridge } from \"../../../character_controller/collision/collision_check_bridge\";\r\nimport { CollisionCheckUtils } from \"../../../character_controller/collision/legacy/collision_check/collision_check\";\r\nimport { CollisionCheckParams, CollisionRuntimeParams } from \"../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { PlayerHeadManager, PlayerHeadManagerParams } from \"./player_head_manager\";\r\nimport { PlayerLocomotionMovementRuntimeParams } from \"./player_locomotion_movement\";\r\nimport { PlayerLocomotionRotate, PlayerLocomotionRotateParams } from \"./player_locomotion_rotate\";\r\nimport { PlayerLocomotionSmooth, PlayerLocomotionSmoothParams } from \"./player_locomotion_smooth\";\r\nimport { PlayerObscureManager, PlayerObscureManagerParams } from \"./player_obscure_manager\";\r\nimport { PlayerTransformManager, PlayerTransformManagerParams, PlayerTransformManagerSyncFlag } from \"./player_transform_manager\";\r\nimport { PlayerLocomotionTeleport, PlayerLocomotionTeleportParams } from \"./teleport/player_locomotion_teleport\";\r\nimport { PlayerLocomotionTeleportTeleportType } from \"./teleport/player_locomotion_teleport_teleport_state\";\r\n\r\nexport let PlayerLocomotionDirectionReferenceType = {\r\n    HEAD: 0,\r\n    HAND: 1,\r\n    CUSTOM_OBJECT: 2,\r\n};\r\n\r\nexport let PlayerLocomotionType = {\r\n    SMOOTH: 0,\r\n    TELEPORT: 1\r\n};\r\n\r\nexport class PlayerLocomotionParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myDefaultLocomotionType = PlayerLocomotionType.SMOOTH;\r\n        this.mySwitchLocomotionTypeShortcutEnabled = true; // double press main hand (default left) thumbstick to switch\r\n\r\n        this.myDefaultHeight = 0;\r\n\r\n        this.myMaxSpeed = 0;\r\n        this.myMaxRotationSpeed = 0;\r\n\r\n        this.myGravityAcceleration = 0;\r\n        this.myMaxGravitySpeed = 0;\r\n\r\n        this.myCharacterRadius = 0;\r\n\r\n        this.mySpeedSlowDownPercentageOnWallSlid = 1;\r\n\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n        this.mySnapTurnAngle = 0;\r\n        this.mySnapTurnSpeedDegrees = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myStartFlying = false;\r\n\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myMainHand = Handedness.LEFT;\r\n\r\n        this.myDirectionInvertForwardWhenUpsideDown = true;\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n\r\n        this.myTeleportType = PlayerLocomotionTeleportTeleportType.INSTANT;\r\n        this.myTeleportMaxDistance = 0;\r\n        this.myTeleportMaxHeightDifference = 0;\r\n        this.myTeleportRotationOnUpEnabled = null;\r\n        this.myTeleportValidMaterial = null;\r\n        this.myTeleportInvalidMaterial = null;\r\n        this.myTeleportPositionObject = null;\r\n        this.myTeleportPositionObjectRotateWithHead = null;\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        this.mySyncWithRealWorldPositionOnlyIfValid = true;\r\n        this.myViewOcclusionInsideWallsEnabled = true;\r\n\r\n        this.myColliderAccuracy = null;\r\n        this.myColliderCheckOnlyFeet = false;\r\n        this.myColliderSlideAlongWall = false;\r\n        this.myColliderMaxWalkableGroundAngle = 0;\r\n        this.myColliderSnapOnGround = false;\r\n        this.myColliderMaxDistanceToSnapOnGround = 0;\r\n        this.myColliderMaxWalkableGroundStepHeight = 0;\r\n        this.myColliderPreventFallingFromEdges = false;\r\n\r\n        this.myDebugHorizontalEnabled = false;\r\n        this.myDebugVerticalEnabled = false;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false; // main hand (default left) thumbstick pressed while moving\r\n        this.myMoveHeadShortcutEnabled = false;             // non main hand (default right) thumbstick pressed while moving\r\n        this.myTripleSpeedShortcutEnabled = false;          // main hand (default left) select pressed while moving\r\n\r\n        this.myPhysicsBlockLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\n// #TODO Add lerped snap on vertical over like half a second to avoid the \"snap effect\"\r\n// This could be done by detatching the actual vertical position of the player from the collision real one when a snap is detected above a certain threshold\r\n// with a timer, after which the vertical position is just copied, while during the detatching is lerped toward the collision vertical one\r\nexport class PlayerLocomotion {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n        this._myCollisionRuntimeParams = new CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myIsFlying = this._myParams.myStartFlying;\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PlayerHeadManagerParams(this._myParams.myEngine);\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = this._myParams.myDefaultHeight;\r\n            params.myHeightOffsetNonVR = this._myParams.myDefaultHeight;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugEnabled = false;\r\n\r\n            this._myPlayerHeadManager = new PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerTransformManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myAlwaysSyncPositionWithReal = !this._myParams.mySyncWithRealWorldPositionOnlyIfValid;\r\n            params.myAlwaysSyncHeadPositionWithReal = false;\r\n\r\n            if (!this._myParams.myViewOcclusionInsideWallsEnabled && !this._myParams.mySyncWithRealWorldPositionOnlyIfValid) {\r\n                params.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n                params.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n                params.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FAR, false);\r\n                params.mySyncEnabledFlagMap.set(PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n                params.myAlwaysSyncHeadPositionWithReal = !this._myParams.mySyncWithRealWorldPositionOnlyIfValid;\r\n            }\r\n\r\n            params.myMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = false;\r\n\r\n            params.myDebugEnabled = false;\r\n\r\n            this._myPlayerTransformManager = new PlayerTransformManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerObscureManagerParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myEnabled = this._myParams.myViewOcclusionInsideWallsEnabled;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.75;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 0.75;\r\n            params.myDistanceToStartObscureWhenFar = 0.75;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 0.5;\r\n\r\n            this._myPlayerObscureManager = new PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PlayerLocomotionRotateParams(this._myParams.myEngine);\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > Math.PP_EPSILON) {\r\n                params.mySmoothSnapEnabled = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapEnabled = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PlayerLocomotionSmoothParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n                params.mySpeedSlowDownPercentageOnWallSlid = this._myParams.mySpeedSlowDownPercentageOnWallSlid;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = this._myParams.myGravityAcceleration;\r\n                params.myMaxGravitySpeed = this._myParams.myMaxGravitySpeed;\r\n\r\n                params.myDirectionInvertForwardWhenUpsideDown = this._myParams.myDirectionInvertForwardWhenUpsideDown;\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                params.myMoveThroughCollisionShortcutEnabled = this._myParams.myMoveThroughCollisionShortcutEnabled;\r\n                params.myMoveHeadShortcutEnabled = this._myParams.myMoveHeadShortcutEnabled;\r\n                params.myTripleSpeedShortcutEnabled = this._myParams.myTripleSpeedShortcutEnabled;\r\n\r\n                this._myPlayerLocomotionSmooth = new PlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PlayerLocomotionTeleportParams(this._myParams.myEngine);\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = this._myParams.myTeleportMaxDistance;\r\n                params.myDetectionParams.myMaxHeightDifference = this._myParams.myTeleportMaxHeightDifference;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myRotationOnUpEnabled = this._myParams.myTeleportRotationOnUpEnabled;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(params.myDetectionParams.myTeleportBlockLayerFlags);\r\n\r\n                params.myTeleportParams.myTeleportType = this._myParams.myTeleportType;\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n                params.myVisualizerParams.myTeleportValidMaterial = this._myParams.myTeleportValidMaterial;\r\n                params.myVisualizerParams.myTeleportInvalidMaterial = this._myParams.myTeleportInvalidMaterial;\r\n                params.myVisualizerParams.myTeleportPositionObjectRotateWithHead = this._myParams.myTeleportPositionObjectRotateWithHead;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = this._myParams.myGravityAcceleration;\r\n                params.myMaxGravitySpeed = this._myParams.myMaxGravitySpeed;\r\n\r\n                params.myDebugEnabled = false;\r\n                params.myDebugDetectEnabled = true;\r\n                params.myDebugShowEnabled = true;\r\n                params.myDebugVisibilityEnabled = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n\r\n        this._myActive = true;\r\n        this._myStarted = false;\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        if (this._myParams.myDefaultLocomotionType == PlayerLocomotionType.SMOOTH) {\r\n            this._myLocomotionMovementFSM.perform(\"startSmooth\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"startTeleport\");\r\n        }\r\n\r\n        this._myStarted = true;\r\n\r\n        let currentActive = this._myActive\r\n        this._myActive = !this._myActive;\r\n        this.setActive(currentActive);\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (this._myStarted) {\r\n                if (this._myActive) {\r\n                    this._myPlayerObscureManager.start();\r\n                    if (!this._myIdle) {\r\n                        this._myLocomotionMovementFSM.perform(\"resume\");\r\n                    }\r\n                } else {\r\n                    this._myLocomotionMovementFSM.perform(\"idle\");\r\n                    this._myPlayerObscureManager.stop();\r\n                }\r\n            }\r\n\r\n            this._myPlayerHeadManager.setActive(this._myActive);\r\n            this._myPlayerTransformManager.setActive(this._myActive);\r\n        }\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    canStop() {\r\n        let canStop = false;\r\n\r\n        if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n            canStop = true;\r\n        } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n            canStop = true;\r\n        }\r\n\r\n        return canStop;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (this._myParams.mySwitchLocomotionTypeShortcutEnabled &&\r\n            Globals.getLeftGamepad(this._myParams.myEngine).getButtonInfo(GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        this._myPlayerObscureManager.update(dt);\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"resume\");\r\n        }\r\n    }\r\n\r\n    getPlayerLocomotionSmooth() {\r\n        return this._myPlayerLocomotionSmooth;\r\n    }\r\n\r\n    getPlayerLocomotionTeleport() {\r\n        return this._myPlayerLocomotionTeleport;\r\n    }\r\n\r\n    getPlayerTransformManager() {\r\n        return this._myPlayerTransformManager;\r\n    }\r\n\r\n    getPlayerLocomotionRotate() {\r\n        return this._myPlayerLocomotionRotate;\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myPlayerHeadManager;\r\n    }\r\n\r\n    getPlayerObscureManager() {\r\n        return this._myPlayerObscureManager;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        let simplifiedParams = new CharacterColliderSetupSimplifiedCreationParams();\r\n\r\n        simplifiedParams.myHeight = this._myParams.myDefaultHeight;\r\n        simplifiedParams.myRadius = this._myParams.myCharacterRadius;\r\n\r\n        simplifiedParams.myAccuracyLevel = this._myParams.myColliderAccuracy;\r\n\r\n        simplifiedParams.myIsPlayer = true;\r\n\r\n        simplifiedParams.myCheckOnlyFeet = this._myParams.myColliderCheckOnlyFeet;\r\n\r\n        simplifiedParams.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n        simplifiedParams.myCanFly = this._myParams.myFlyEnabled;\r\n\r\n        simplifiedParams.myShouldSlideAlongWall = this._myParams.myColliderSlideAlongWall;\r\n\r\n        simplifiedParams.myCollectGroundInfo = true;\r\n        simplifiedParams.myMaxWalkableGroundAngle = this._myParams.myColliderMaxWalkableGroundAngle;\r\n        simplifiedParams.myShouldSnapOnGround = this._myParams.myColliderSnapOnGround;\r\n        simplifiedParams.myMaxDistanceToSnapOnGround = this._myParams.myColliderMaxDistanceToSnapOnGround;\r\n        simplifiedParams.myMaxWalkableGroundStepHeight = this._myParams.myColliderMaxWalkableGroundStepHeight;\r\n        simplifiedParams.myShouldNotFallFromEdges = this._myParams.myColliderPreventFallingFromEdges;\r\n\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n        let physXComponents = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getComponents(PhysXComponent);\r\n        for (let physXComponent of physXComponents) {\r\n            simplifiedParams.myHorizontalCheckObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n        simplifiedParams.myVerticalCheckBlockLayerFlags.copy(simplifiedParams.myHorizontalCheckBlockLayerFlags);\r\n        simplifiedParams.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n        simplifiedParams.myHorizontalCheckDebugEnabled = this._myParams.myDebugHorizontalEnabled && Globals.isDebugEnabled(this._myParams.myEngine);\r\n        simplifiedParams.myVerticalCheckDebugEnabled = this._myParams.myDebugVerticalEnabled && Globals.isDebugEnabled(this._myParams.myEngine);\r\n\r\n        let colliderSetup = CharacterColliderSetupUtils.createSimplified(simplifiedParams);\r\n\r\n        this._myCollisionCheckParamsMovement = CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(colliderSetup, this._myCollisionCheckParamsMovement, this._myParams.myEngine);\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // Increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 61;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // This is needed for when u want to perform the teleport as a movement\r\n        // Maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // When you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // If nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // You could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugEnabled = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // Get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_resetRotation();\r\n            Globals.getPlayerObjects(this._myParams.myEngine).myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new FSM();\r\n        //this._myLocomotionMovementFSM.setLogEnabled(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"startSmooth\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"teleport\", \"startTeleport\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"resume\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"resume\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myPlayerHeadManager.destroy();\r\n        this._myPlayerLocomotionSmooth.destroy();\r\n        this._myPlayerTransformManager.destroy();\r\n        this._myPlayerObscureManager.destroy();\r\n        this._myPlayerLocomotionTeleport.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "// Even if this can be sued to generally fade, it should be called collision obscure to hint that is meant for collision obscuring\r\n\r\nimport { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { FSM } from \"../../../../../cauldron/fsm/fsm\";\r\nimport { EasingFunction } from \"../../../../../cauldron/js/utils/math_utils\";\r\nimport { MaterialUtils } from \"../../../../../cauldron/utils/material_utils\";\r\nimport { VisualMesh, VisualMeshParams } from \"../../../../../cauldron/visual/elements/visual_mesh\";\r\nimport { vec3_create, vec4_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\n\r\n// Occlude\r\nexport class PlayerObscureManagerParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myEnabled = true;\r\n\r\n        this.myObscureObject = null;\r\n        this.myObscureMaterial = null;\r\n        this.myObscureRadius = 0;\r\n\r\n        this.myObscureFadeOutSeconds = 0.1;\r\n        this.myObscureFadeInSeconds = 0.1;\r\n\r\n        this.myObscureFadeEasingFunction = EasingFunction.linear;\r\n\r\n        this.myDistanceToStartObscureWhenHeadColliding = 0;\r\n        this.myDistanceToStartObscureWhenBodyColliding = 0;\r\n        this.myDistanceToStartObscureWhenFloating = 0;\r\n        this.myDistanceToStartObscureWhenFar = 0;\r\n\r\n        this.myRelativeDistanceToMaxObscureWhenHeadColliding = 0; // Relative to the start distance, 1 means that in 1 meters after it started it will be completely obscured\r\n        this.myRelativeDistanceToMaxObscureWhenBodyColliding = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFloating = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFar = 0;\r\n\r\n        this.myObscureLevelRelativeDistanceEasingFunction = EasingFunction.linear;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerObscureManager {\r\n\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myObscureMaterial = null;\r\n        this._myObscureParentObject = null;\r\n\r\n        this._myCurrentObscureLevel = 0;\r\n        this._myTargetObscureLevel = 0;\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n\r\n        this._myFadeTimer = new Timer(0, false);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setLogEnabled(true, \" Obscure\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n\r\n        this._myFSM.addState(\"inactive\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"fading\", this._fadingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"end\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fading\", \"fade\", this._startFading.bind(this));\r\n        this._myFSM.addTransition(\"fading\", \"idle\", \"done\", this._fadingDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"idle\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"fading\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._setupVisuals();\r\n\r\n        this._myFSM.perform(\"end\");\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myObscureParentObject.pp_resetTransformLocal();\r\n\r\n        this._updateObscured();\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    isStarted() {\r\n        return !this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    isObscured() {\r\n        return this._myCurrentObscureLevel > 0;\r\n    }\r\n\r\n    isFading() {\r\n        return this._myFSM.isInState(\"fading\");\r\n    }\r\n\r\n    isFadingIn() {\r\n        return this.isFading() && this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n    }\r\n\r\n    isFadingOut() {\r\n        return this.isFading() && this._myCurrentObscureLevel <= this._myTargetObscureLevel;\r\n    }\r\n\r\n    getObscureLevel() {\r\n        return this._myCurrentObscureLevel;\r\n    }\r\n\r\n    getTargetObscureLevel() {\r\n        return this._myTargetObscureLevel;\r\n    }\r\n\r\n    getCurrentObscureLevel() {\r\n        this._myCurrentObscureLevel;\r\n    }\r\n\r\n    overrideObscureLevel(obscureLevel, instantFade = false) {\r\n        this._myObscureLevelOverride = obscureLevel;\r\n\r\n        if (instantFade && this.isStarted()) {\r\n            this._setObscureLevel(obscureLevel);\r\n        }\r\n    }\r\n\r\n    resetObscureLevelOverride() {\r\n        this._myObscureLevelOverride = null;\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) > Math.PP_EPSILON) {\r\n            this._myFSM.perform(\"fade\");\r\n        }\r\n    }\r\n\r\n    _fadingUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON) {\r\n            this._myFSM.perform(\"done\");\r\n            return;\r\n        }\r\n\r\n        if (this._myLastTargetObscureLevel != this._myTargetObscureLevel) {\r\n            this._refreshFadeTimer();\r\n            this._myLastTargetObscureLevel = this._myTargetObscureLevel;\r\n        }\r\n\r\n        this._myFadeTimer.update(dt);\r\n\r\n        let newObscureLevel = this._myParams.myObscureFadeEasingFunction(this._myFadeTimer.getPercentage());\r\n\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n        if (!isFadingIn) {\r\n            newObscureLevel = Math.min(newObscureLevel, this._myTargetObscureLevel);\r\n        } else {\r\n            newObscureLevel = Math.pp_clamp(1 - newObscureLevel, 0, 1);\r\n            newObscureLevel = Math.max(newObscureLevel, this._myTargetObscureLevel);\r\n        }\r\n\r\n        this._setObscureAlpha(newObscureLevel);\r\n        this._myCurrentObscureLevel = newObscureLevel;\r\n\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON || this._myFadeTimer.isDone()) {\r\n            this._myFSM.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _startFading() {\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n    }\r\n\r\n    _fadingDone() {\r\n        this._setObscureLevel(this._myTargetObscureLevel);\r\n    }\r\n\r\n    _refreshFadeTimer() {\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n\r\n        if (this._myLastIsFadingIn != isFadingIn) {\r\n            this._setFadeTimerToObscureLevel(isFadingIn);\r\n        }\r\n\r\n        this._myLastIsFadingIn = isFadingIn;\r\n    }\r\n\r\n    _setFadeTimerToObscureLevel(isFadingIn) {\r\n        let percentage = 0;\r\n        let closestPercentage = 0;\r\n        let steps = 1000;\r\n        let increment = 1 / steps;\r\n\r\n        while (percentage < 1) {\r\n            if (Math.abs(this._myParams.myObscureFadeEasingFunction(percentage) - this._myCurrentObscureLevel) <\r\n                Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n                closestPercentage = percentage;\r\n            }\r\n\r\n            percentage += increment;\r\n        }\r\n\r\n        if (Math.abs(this._myParams.myObscureFadeEasingFunction(1) - this._myCurrentObscureLevel) <\r\n            Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n            closestPercentage = 1;\r\n        }\r\n\r\n        if (isFadingIn) {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeInSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(1 - closestPercentage, 0, 1));\r\n        } else {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeOutSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(closestPercentage, 0, 1));\r\n        }\r\n    }\r\n\r\n    _setObscureLevel(obscureLevel) {\r\n        this._myTargetObscureLevel = obscureLevel;\r\n        this._myCurrentObscureLevel = obscureLevel;\r\n        this._setObscureAlpha(obscureLevel);\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    _setObscureAlpha(alpha) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            MaterialUtils.setAlpha(this._myObscureMaterial, alpha);\r\n        } else {\r\n            MaterialUtils.setObjectAlpha(this._myParams.myObscureObject, alpha);\r\n        }\r\n    }\r\n\r\n    _updateObscured() {\r\n        this._myTargetObscureLevel = 0;\r\n\r\n        if (this._myParams.myEnabled) {\r\n            if (this._myObscureLevelOverride != null) {\r\n                this._myTargetObscureLevel = this._myObscureLevelOverride;\r\n            } else {\r\n                // #TODO Check if VALID head is colliding, in that case use max obscure level\r\n                // This prevent being able to see when resetting head to real even though real is colliding\r\n                // For example if u stand up and go with the head in the ceiling and reset by moving\r\n                if (this._myParams.myPlayerTransformManager.isHeadColliding()) {\r\n                    let distance = this._myParams.myPlayerTransformManager.getDistanceToRealHead();\r\n                    let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenHeadColliding;\r\n                    if (relativeDistance >= 0) {\r\n                        let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenHeadColliding, 0, 1);\r\n                        let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                        this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                    }\r\n                }\r\n\r\n                if (this._myParams.myPlayerTransformManager.isBodyColliding()) {\r\n                    let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                    let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenBodyColliding;\r\n                    if (relativeDistance >= 0) {\r\n                        let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenBodyColliding, 0, 1);\r\n                        let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                        this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                    }\r\n                }\r\n\r\n                if (this._myParams.myPlayerTransformManager.isFloating()) {\r\n                    let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                    let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFloating;\r\n                    if (relativeDistance >= 0) {\r\n                        let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFloating, 0, 1);\r\n                        let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                        this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                    }\r\n                }\r\n\r\n                if (this._myParams.myPlayerTransformManager.isFar()) {\r\n                    let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                    let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFar;\r\n                    if (relativeDistance >= 0) {\r\n                        let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFar, 0, 1);\r\n                        let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                        this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupVisuals() {\r\n        this._myObscureMaterial = null;\r\n        if (this._myParams.myObscureMaterial != null) {\r\n            this._myObscureMaterial = this._myParams.myObscureMaterial;\r\n        } else {\r\n            this._myObscureMaterial = Globals.getDefaultMaterials(this._myParams.myEngine).myFlatTransparentNoDepth.clone();\r\n            this._myObscureMaterial.color = vec4_create(0, 0, 0, 1);\r\n        }\r\n\r\n        this._myObscureParentObject = Globals.getPlayerObjects(this._myParams.myEngine).myCauldron.pp_addObject();\r\n\r\n        let obscureVisualParams = new VisualMeshParams(this._myParams.myEngine);\r\n        obscureVisualParams.myMesh = Globals.getDefaultMeshes(this._myParams.myEngine).myInvertedSphere;\r\n        obscureVisualParams.myMaterial = (this._myParams.myObscureMaterial != null) ? this._myParams.myObscureMaterial : this._myObscureMaterial;\r\n        obscureVisualParams.myParent = this._myObscureParentObject;\r\n        obscureVisualParams.myLocal = true;\r\n        obscureVisualParams.myTransform.mat4_setScale(vec3_create(this._myParams.myObscureRadius, this._myParams.myObscureRadius, this._myParams.myObscureRadius));\r\n        this._myObscureVisual = new VisualMesh(obscureVisualParams);\r\n\r\n        if (this._myParams.myObscureObject != null) {\r\n            this._myParams.myObscureObject.pp_setParent(this._myObscureParentObject, false);\r\n            this._myParams.myObscureObject.pp_resetTransformLocal();\r\n        }\r\n\r\n        this._setObscureVisible(false);\r\n    }\r\n\r\n    _setObscureVisible(visible) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            this._myObscureVisual.setVisible(visible);\r\n        } else {\r\n            this._myObscureVisual.setVisible(false);\r\n            this._myParams.myObscureObject.pp_setActive(visible);\r\n        }\r\n\r\n        if (visible) {\r\n            this._myObscureParentObject.pp_setParent(this._myParams.myPlayerTransformManager.getHead(), false);\r\n        } else {\r\n            this._myObscureParentObject.pp_setParent(Globals.getPlayerObjects(this._myParams.myEngine)?.myCauldron, false);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myObscureVisual.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { VisualArrow, VisualArrowParams } from \"../../../../../../cauldron/visual/elements/visual_arrow\";\r\nimport { VisualLine, VisualLineParams } from \"../../../../../../cauldron/visual/elements/visual_line\";\r\nimport { VisualPoint, VisualPointParams } from \"../../../../../../cauldron/visual/elements/visual_point\";\r\nimport { VisualTorus, VisualTorusParams } from \"../../../../../../cauldron/visual/elements/visual_torus\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\n\r\nexport class PlayerLocomotionTeleportDetectionVisualizerParams {\r\n\r\n    constructor() {\r\n        this.myTeleportValidMaterial = null;\r\n        this.myTeleportInvalidMaterial = null;\r\n\r\n        this.myTeleportPositionObject = null;\r\n        this.myTeleportPositionObjectRotateWithHead = true;\r\n\r\n        this.myTeleportParableLineEndOffset = 0.05;\r\n        this.myTeleportParableMinVerticalDistanceToShowVerticalLine = 0.80;\r\n        this.myTeleportParableShowVerticalLineMaxLength = 0.30;\r\n\r\n        this.myTeleportParablePositionUpOffset = 0.05;\r\n\r\n        this.myTeleportParablePositionVisualAlignOnSurface = true;\r\n\r\n        this.myVisualTeleportPositionLerpEnabled = true;\r\n        this.myVisualTeleportPositionLerpFactor = 10;\r\n        this.myVisualTeleportPositionMinDistanceToResetLerp = 0.005;\r\n        this.myVisualTeleportPositionMinDistanceToLerp = 0.15;\r\n        this.myVisualTeleportPositionMaxDistanceToLerp = 5;\r\n\r\n        this.myVisualTeleportPositionMinDistanceToCloseLerpFactor = 0.02;\r\n        this.myVisualTeleportPositionCloseLerpFactor = 30;\r\n\r\n        this.myVisualTeleportPositionMinAngleDistanceToResetLerp = 0.1;\r\n        this.myVisualTeleportPositionMinAngleDistanceToLerp = 1;\r\n        this.myVisualTeleportPositionMaxAngleDistanceToLerp = 180;\r\n    }\r\n};\r\n\r\nexport class PlayerLocomotionTeleportDetectionVisualizer {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, detectionRuntimeParams) {\r\n        this._myDetectionRuntimeParams = detectionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformQuat = quat2_create();\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Min Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp, 1, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp, 1, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Min Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n\r\n        this._setupVisuals();\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    end() {\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        this._hideTeleportPosition();\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Min Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Min Angle Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Angle Distance Lerp\");\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._showTeleportPosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n            this._hideTeleportPosition();\r\n        }\r\n    }\r\n\r\n    _showTeleportPosition(dt) {\r\n        this._hideTeleportPosition();\r\n\r\n        this._showTeleportParable(dt);\r\n    }\r\n\r\n    _hideTeleportPosition() {\r\n        for (let visualLine of this._myValidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        for (let visualLine of this._myInvalidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        this._myValidVisualPoint.setVisible(false);\r\n        this._myInvalidVisualPoint.setVisible(false);\r\n\r\n        this._myValidVisualVerticalArrow.setVisible(false);\r\n\r\n        this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n        this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n    }\r\n\r\n    _addVisualLines(amount) {\r\n        for (let i = 0; i < amount; i++) {\r\n            {\r\n                let visualParams = new VisualLineParams(this._myTeleportParams.myEngine);\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportValidMaterial;\r\n                }\r\n\r\n                this._myValidVisualLines.push(new VisualLine(visualParams));\r\n            }\r\n\r\n            {\r\n                let visualParams = new VisualLineParams(this._myTeleportParams.myEngine);\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportInvalidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportInvalidMaterial;\r\n                }\r\n\r\n                this._myInvalidVisualLines.push(new VisualLine(visualParams));\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let visual of this._myValidVisualLines) {\r\n            visual.destroy();\r\n        }\r\n\r\n        for (let visual of this._myInvalidVisualLines) {\r\n            visual.destroy();\r\n        }\r\n\r\n        this._myValidVisualPoint.destroy();\r\n        this._myInvalidVisualPoint.destroy();\r\n\r\n        this._myValidVisualVerticalArrow.destroy();\r\n        this._myValidVisualTeleportPositionTorus.destroy();\r\n        this._myValidVisualTeleportPositionTorusInner.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._setupVisuals = function () {\r\n    let innerTorusPosition = vec3_create();\r\n    return function _setupVisuals() {\r\n        this._myTeleportValidMaterial = Globals.getDefaultMaterials(this._myTeleportParams.myEngine).myFlatOpaque.clone();\r\n        this._myTeleportValidMaterial.color = vec4_create(0, 0.5, 1, 1);\r\n        this._myTeleportInvalidMaterial = Globals.getDefaultMaterials(this._myTeleportParams.myEngine).myFlatOpaque.clone();\r\n        this._myTeleportInvalidMaterial.color = vec4_create(0.75, 0.05, 0, 1);\r\n\r\n        this._myValidVisualLines = [];\r\n        this._myInvalidVisualLines = [];\r\n        this._addVisualLines(30);\r\n\r\n        {\r\n            let visualParams = new VisualPointParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualPoint = new VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualPointParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportInvalidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportInvalidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportInvalidMaterial;\r\n            }\r\n\r\n            this._myInvalidVisualPoint = new VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualArrowParams(this._myTeleportParams.myEngine);\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualVerticalArrow = new VisualArrow(visualParams);\r\n        }\r\n\r\n        this._myVisualTeleportPositionObject = Globals.getPlayerObjects(this._myTeleportParams.myEngine).myCauldron.pp_addObject();\r\n\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Radius\", 0.175, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneInt(\"Teleport Torus Segments\", 24, 1, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Thickness\", 0.02, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Torus Inner Radius\", 0.04, 0.1, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n\r\n        {\r\n            let visualParams = new VisualTorusParams(this._myTeleportParams.myEngine);\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myLocal = true;\r\n\r\n            this._myValidVisualTeleportPositionTorus = new VisualTorus(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new VisualTorusParams(this._myTeleportParams.myEngine);\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myLocal = true;\r\n\r\n            let visualTorusParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n\r\n            let innerTorusCenter = (visualTorusParams.myRadius - (visualTorusParams.mySegmentThickness / 2)) / 2;\r\n            innerTorusPosition.vec3_set(0, 0, innerTorusCenter);\r\n\r\n            visualParams.myTransform.mat4_setPosition(innerTorusPosition);\r\n\r\n            this._myValidVisualTeleportPositionTorusInner = new VisualTorus(visualParams);\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setParent(this._myVisualTeleportPositionObject);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_resetTransformLocal();\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n\r\n        this._hideTeleportPosition();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParable = function () {\r\n    let currentPosition = vec3_create();\r\n    let nextPosition = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    let upDifference = vec3_create();\r\n    return function _showTeleportParable(dt) {\r\n        let showParableDistance = Math.max(this._myDetectionRuntimeParams.myParableDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableLineEndOffset);\r\n        let lastParableIndex = this._myDetectionRuntimeParams.myParable.getPositionIndexByDistance(showParableDistance);\r\n        let lastParableIndexDistance = this._myDetectionRuntimeParams.myParable.getDistance(lastParableIndex);\r\n\r\n        if (lastParableIndex + 1 > this._myValidVisualLines.length) {\r\n            this._addVisualLines(lastParableIndex + 1, this._myValidVisualLines.length);\r\n        }\r\n\r\n        for (let i = 0; i <= lastParableIndex; i++) {\r\n            currentPosition = this._myDetectionRuntimeParams.myParable.getPosition(i, currentPosition);\r\n            nextPosition = this._myDetectionRuntimeParams.myParable.getPosition(i + 1, nextPosition);\r\n\r\n            let visuaLine = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualLines[i] : this._myInvalidVisualLines[i];\r\n\r\n            let currentVisualLineParams = visuaLine.getParams();\r\n\r\n            if (i == lastParableIndex) {\r\n                let stepLength = Math.max(0, showParableDistance - lastParableIndexDistance);\r\n                nextPosition = nextPosition.vec3_sub(currentPosition, nextPosition).vec3_normalize(nextPosition);\r\n                nextPosition = currentPosition.vec3_add(nextPosition.vec3_scale(stepLength, nextPosition), nextPosition);\r\n            }\r\n\r\n            currentVisualLineParams.setStartEnd(currentPosition, nextPosition);\r\n            currentVisualLineParams.myThickness = 0.005;\r\n\r\n            visuaLine.paramsUpdated();\r\n            visuaLine.setVisible(true);\r\n\r\n            if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugShowEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, currentPosition, vec4_create(1, 0, 0, 1), 0.01);\r\n            }\r\n        }\r\n\r\n        let visualPoint = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualPoint : this._myInvalidVisualPoint;\r\n        let visualPointParams = visualPoint.getParams();\r\n        visualPointParams.myPosition.vec3_copy(nextPosition);\r\n        visualPointParams.myRadius = 0.01;\r\n        visualPoint.paramsUpdated();\r\n        visualPoint.setVisible(true);\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            upDifference = nextPosition.vec3_sub(this._myTeleportRuntimeParams.myTeleportPosition, upDifference).vec3_componentAlongAxis(playerUp, upDifference);\r\n            let upDistance = upDifference.vec3_length();\r\n            if (upDistance >= this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine) {\r\n                let lineLength = Math.min(upDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine, this._myTeleportParams.myVisualizerParams.myTeleportParableShowVerticalLineMaxLength);\r\n\r\n                let visualArrowParams = this._myValidVisualVerticalArrow.getParams();\r\n\r\n                visualArrowParams.myStart.vec3_copy(nextPosition);\r\n                visualArrowParams.myDirection = playerUp.vec3_negate(visualArrowParams.myDirection);\r\n                visualArrowParams.myLength = lineLength;\r\n                visualArrowParams.myThickness = 0.005;\r\n\r\n                visualArrowParams.myArrowThickness = visualPointParams.myRadius;\r\n                visualArrowParams.myArrowLength = visualArrowParams.myArrowThickness * 3.5 / 1.5;\r\n\r\n                this._myValidVisualVerticalArrow.paramsUpdated();\r\n                this._myValidVisualVerticalArrow.setVisible(true);\r\n            }\r\n\r\n            this._showTeleportParablePosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParablePosition = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let feetRotationQuat = quat_create();\r\n\r\n    let parableFirstPosition = vec3_create();\r\n    let parableSecondPosition = vec3_create();\r\n    let parableDirection = vec3_create();\r\n\r\n    let visualPosition = vec3_create();\r\n    let visualForward = vec3_create();\r\n    let visualRotationQuat = quat_create();\r\n\r\n    let currentVisualTeleportTransformQuat = quat2_create();\r\n    let currentVisualTeleportPosition = vec3_create();\r\n    let currentVisualTeleportRotationQuat = quat_create();\r\n    let differenceRotationQuat = quat_create();\r\n\r\n    return function _showTeleportParablePosition(dt) {\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n        feetRotationQuat = feetRotationQuat.quat_rotateAxis(this._myTeleportRuntimeParams.myTeleportRotationOnUp, playerUp, feetRotationQuat);\r\n\r\n        visualPosition = this._myTeleportRuntimeParams.myTeleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myVisualizerParams.myTeleportParablePositionUpOffset, visualPosition), visualPosition);\r\n\r\n        visualForward = feetRotationQuat.quat_getForward(visualForward);\r\n\r\n        if (!this._myTeleportParams.myVisualizerParams.myTeleportPositionObjectRotateWithHead) {\r\n            parableFirstPosition = this._myDetectionRuntimeParams.myParable.getPosition(0, parableFirstPosition);\r\n            parableSecondPosition = this._myDetectionRuntimeParams.myParable.getPosition(1, parableSecondPosition);\r\n            parableDirection = parableSecondPosition.vec3_sub(parableFirstPosition, parableDirection).vec3_removeComponentAlongAxis(playerUp, parableDirection);\r\n            if (parableDirection.vec3_length() > Math.PP_EPSILON) {\r\n                visualForward = parableDirection.vec3_normalize(visualForward);\r\n            }\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportParablePositionVisualAlignOnSurface) {\r\n            visualRotationQuat.quat_setUp(this._myDetectionRuntimeParams.myTeleportSurfaceNormal, visualForward);\r\n        } else {\r\n            visualRotationQuat.quat_setUp(playerUp, visualForward);\r\n        }\r\n\r\n        this._myVisualTeleportTransformQuat.quat2_setPositionRotationQuat(visualPosition, visualRotationQuat);\r\n\r\n        if (this._myVisualTeleportTransformQuatReset || !this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpEnabled) {\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(this._myVisualTeleportTransformQuat);\r\n            this._myVisualTeleportTransformQuatReset = false;\r\n        } else {\r\n            currentVisualTeleportTransformQuat = this._myVisualTeleportPositionObject.pp_getTransformQuat(currentVisualTeleportTransformQuat);\r\n            currentVisualTeleportPosition = currentVisualTeleportTransformQuat.quat2_getPosition(currentVisualTeleportPosition);\r\n            currentVisualTeleportRotationQuat = currentVisualTeleportTransformQuat.quat2_getRotationQuat(currentVisualTeleportRotationQuat);\r\n            currentVisualTeleportRotationQuat.quat_rotationToQuat(visualRotationQuat, differenceRotationQuat);\r\n\r\n            let positionDistance = currentVisualTeleportPosition.vec3_distance(visualPosition);\r\n            let rotationAngleDistance = differenceRotationQuat.quat_getAngle();\r\n\r\n            if ((!this._myVisualTeleportTransformPositionLerping || positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToResetLerp) &&\r\n                (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp)) {\r\n                this._myVisualTeleportTransformPositionLerping = false;\r\n                currentVisualTeleportPosition.vec3_copy(visualPosition);\r\n            } else {\r\n                this._myVisualTeleportTransformPositionLerping = true;\r\n\r\n                let interpolationFactor = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n                if (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToCloseLerpFactor) {\r\n                    interpolationFactor = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionCloseLerpFactor * dt;\r\n                }\r\n                currentVisualTeleportPosition.vec3_lerp(visualPosition, interpolationFactor, currentVisualTeleportPosition);\r\n            }\r\n\r\n            if ((!this._myVisualTeleportTransformRotationLerping || rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToResetLerp) &&\r\n                (rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp)) {\r\n                this._myVisualTeleportTransformRotationLerping = false;\r\n                currentVisualTeleportRotationQuat.quat_copy(visualRotationQuat);\r\n            } else {\r\n                let interpolationFactor = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n\r\n                this._myVisualTeleportTransformRotationLerping = true;\r\n                currentVisualTeleportRotationQuat.quat_slerp(visualRotationQuat, interpolationFactor, currentVisualTeleportRotationQuat);\r\n            }\r\n\r\n            currentVisualTeleportTransformQuat.quat2_setPositionRotationQuat(currentVisualTeleportPosition, currentVisualTeleportRotationQuat);\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(currentVisualTeleportTransformQuat);\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorus.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorusInner.getParams();\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorusInner.paramsUpdated();\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject == null) {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(true);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(true);\r\n        } else {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugShowEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n            Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, this._myTeleportRuntimeParams.myTeleportPosition, vec4_create(0, 0, 1, 1), 0.02);\r\n        }\r\n    };\r\n}();", "import { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class PlayerLocomotionTeleportParable {\r\n\r\n    constructor() {\r\n        this._myStartPosition = vec3_create();\r\n\r\n        this._myForward = vec3_create();\r\n        this._myUp = vec3_create();\r\n\r\n        this._mySpeed = 0;\r\n        this._myGravity = 0;\r\n        this._myStepLength = 0;\r\n    }\r\n\r\n    setStartPosition(startPosition) {\r\n        this._myStartPosition.vec3_copy(startPosition);\r\n    }\r\n\r\n    setForward(forward) {\r\n        this._myForward.vec3_copy(forward);\r\n    }\r\n\r\n    setUp(up) {\r\n        this._myUp.vec3_copy(up);\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        this._mySpeed = speed;\r\n    }\r\n\r\n    setGravity(gravity) {\r\n        this._myGravity = gravity;\r\n    }\r\n\r\n    setStepLength(stepLength) {\r\n        this._myStepLength = stepLength;\r\n    }\r\n\r\n    getPosition(positionIndex, outPosition = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistance(positionIndex) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionIndexByDistance(distance) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getPositionByDistance(distance, outPosition = vec3_create()) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getFlatDistanceOverDistance(distance) {\r\n        // Implemented outside class definition\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPosition = function () {\r\n    let forwardPosition = vec3_create();\r\n    let upPosition = vec3_create();\r\n    return function getPosition(positionIndex, outPosition = vec3_create()) {\r\n        let deltaTimePerStep = this._myStepLength / this._mySpeed;\r\n\r\n        let elapsedTime = deltaTimePerStep * positionIndex;\r\n\r\n        forwardPosition = this._myForward.vec3_scale(this._mySpeed * elapsedTime, forwardPosition);\r\n        forwardPosition = forwardPosition.vec3_add(this._myStartPosition, forwardPosition);\r\n\r\n        upPosition = this._myUp.vec3_scale(this._myGravity * elapsedTime * elapsedTime / 2, upPosition);\r\n\r\n        outPosition = forwardPosition.vec3_add(upPosition, outPosition);\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    return function getDistance(positionIndex) {\r\n        let distance = 0;\r\n        prevPosition.vec3_copy(this._myStartPosition);\r\n\r\n        for (let i = 1; i <= positionIndex; i++) {\r\n            currentPosition = this.getPosition(i, currentPosition);\r\n            distance += currentPosition.vec3_distance(prevPosition);\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return distance;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionIndexByDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    return function getPositionIndexByDistance(distance) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        while (currentDistance < distance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.max(0, currentIndex - 1);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getPositionByDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    let prevToCurrent = vec3_create();\r\n    return function getPositionByDistance(distance, outPosition = vec3_create()) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        let found = false;\r\n\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n        while (!found) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            if (currentDistance > distance) {\r\n                let lengthToRemove = currentDistance - distance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let lengthToAdd = prevToCurrent.vec3_length() - lengthToRemove;\r\n                prevToCurrent.vec3_normalize(prevToCurrent);\r\n\r\n                outPosition = prevPosition.vec3_add(prevToCurrent.vec3_scale(lengthToAdd, outPosition), outPosition);\r\n                found = true;\r\n            }\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getDistanceOverFlatDistance = function () {\r\n    let currentPosition = vec3_create();\r\n    let flatCurrentPosition = vec3_create();\r\n    let flatStartPosition = vec3_create();\r\n    let prevPosition = vec3_create();\r\n    let prevToCurrent = vec3_create();\r\n    let startToCurrentFlat = vec3_create();\r\n    return function getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        if (flatDistance < 0.00001) {\r\n            return 0;\r\n        }\r\n\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        let distanceOverFlatDistance = 0;\r\n\r\n        while (currentDistance <= maxParableDistance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            flatCurrentPosition = currentPosition.vec3_removeComponentAlongAxis(this._myUp, flatCurrentPosition);\r\n            startToCurrentFlat = flatCurrentPosition.vec3_sub(flatStartPosition, startToCurrentFlat);\r\n            let currentFlatDistance = startToCurrentFlat.vec3_length();\r\n            if (currentFlatDistance >= flatDistance) {\r\n                let flatDifference = currentFlatDistance - flatDistance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let angleWithFlat = prevToCurrent.vec3_angleRadians(startToCurrentFlat);\r\n                let cos = Math.cos(angleWithFlat);\r\n                let lengthToRemove = prevToCurrent.vec3_length();\r\n                if (cos != 0) {\r\n                    lengthToRemove = flatDifference / Math.cos(angleWithFlat);\r\n                }\r\n\r\n                distanceOverFlatDistance = currentDistance - lengthToRemove;\r\n                break;\r\n\r\n            } else {\r\n                distanceOverFlatDistance = currentDistance;\r\n            }\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.min(maxParableDistance, distanceOverFlatDistance);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportParable.prototype.getFlatDistanceOverDistance = function () {\r\n    let positionByDistance = vec3_create();\r\n    let flatPositionByDistance = vec3_create();\r\n    let flatStartPosition = vec3_create();\r\n    return function getFlatDistanceOverDistance(distance) {\r\n        positionByDistance = this.getPositionByDistance(distance, positionByDistance);\r\n\r\n        flatPositionByDistance = positionByDistance.vec3_removeComponentAlongAxis(this._myUp, flatPositionByDistance);\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n\r\n        return flatStartPosition.vec3_distance(flatPositionByDistance);\r\n    };\r\n}();", "import { State } from \"../../../../../../cauldron/fsm/state\";\r\nimport { InputUtils } from \"../../../../../../input/cauldron/input_utils\";\r\nimport { GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, quat_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheckBridge } from \"../../../../character_controller/collision/collision_check_bridge\";\r\nimport { CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\n\r\nexport class PlayerLocomotionTeleportState extends State {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super();\r\n\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleport = function () {\r\n    return function _checkTeleport(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams = null) {\r\n        CollisionCheckBridge.getCollisionCheck(this._myTeleportParams.myEngine).teleport(teleportPosition, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n        if (checkTeleportCollisionRuntimeParams != null) {\r\n            checkTeleportCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._checkTeleportAsMovement = function () {\r\n    let checkTeleportMovementCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    let feetRotationQuat = quat_create();\r\n    let feetPosition = vec3_create();\r\n    let feetUp = vec3_create();\r\n    let teleportFeetForward = vec3_create();\r\n    let teleportFeetRotationQuat = quat_create();\r\n    let teleportFeetTransformQuat = quat2_create();\r\n\r\n    let currentFeetPosition = vec3_create();\r\n    let fixedTeleportPosition = vec3_create();\r\n\r\n    let teleportMovement = vec3_create();\r\n    let extraVerticalMovement = vec3_create();\r\n    let movementToTeleportPosition = vec3_create();\r\n    let movementFeetTransformQuat = quat2_create();\r\n    return function _checkTeleportAsMovement(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams) {\r\n        feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n\r\n        // First try a normal teleport\r\n        feetUp = feetRotationQuat.quat_getUp(feetUp);\r\n        teleportFeetForward = teleportPosition.vec3_sub(feetPosition, teleportFeetForward).vec3_removeComponentAlongAxis(feetUp, teleportFeetForward);\r\n        teleportFeetForward.vec3_normalize(teleportFeetForward);\r\n        if (teleportFeetForward.vec3_isZero(0.00001)) {\r\n            teleportFeetForward = feetRotationQuat.quat_getForward(teleportFeetForward);\r\n        }\r\n\r\n        teleportFeetRotationQuat.quat_setUp(feetUp, teleportFeetForward);\r\n        teleportFeetTransformQuat.quat2_setPositionRotationQuat(feetPosition, teleportFeetRotationQuat);\r\n\r\n        this._checkTeleport(teleportPosition, teleportFeetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n\r\n        // If teleport is ok then we can check movement knowing we have to move toward the teleported position (which has also snapped/fixed the position)\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            let teleportMovementValid = false;\r\n\r\n            checkTeleportMovementCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            fixedTeleportPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n            currentFeetPosition.vec3_copy(feetPosition);\r\n            for (let i = 0; i < this._myTeleportParams.myTeleportAsMovementMaxSteps; i++) {\r\n                teleportMovement = fixedTeleportPosition.vec3_sub(currentFeetPosition, teleportMovement);\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementRemoveVerticalMovement) {\r\n                    teleportMovement = teleportMovement.vec3_removeComponentAlongAxis(feetUp, teleportMovement);\r\n                }\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter != 0) {\r\n                    let meters = teleportMovement.vec3_length();\r\n                    let extraVerticalMovementValue = meters * this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter;\r\n                    extraVerticalMovement = feetUp.vec3_scale(extraVerticalMovementValue, extraVerticalMovement);\r\n                    teleportMovement = teleportMovement.vec3_add(extraVerticalMovement, teleportMovement);\r\n                }\r\n\r\n                movementFeetTransformQuat.quat2_setPositionRotationQuat(currentFeetPosition, feetRotationQuat);\r\n                CollisionCheckBridge.getCollisionCheck(this._myTeleportParams.myEngine).move(teleportMovement, movementFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, checkTeleportMovementCollisionRuntimeParams);\r\n\r\n                if (!checkTeleportMovementCollisionRuntimeParams.myHorizontalMovementCanceled && !checkTeleportMovementCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    movementToTeleportPosition = fixedTeleportPosition.vec3_sub(checkTeleportMovementCollisionRuntimeParams.myNewPosition, movementToTeleportPosition);\r\n                    //console.error(movementToTeleportPosition.vec3_length());\r\n                    if (movementToTeleportPosition.vec3_length() < this._myTeleportParams.myTeleportAsMovementMaxDistanceFromTeleportPosition + 0.00001) {\r\n                        teleportMovementValid = true;\r\n                        break;\r\n                    } else {\r\n                        teleportMovement.vec3_copy(movementToTeleportPosition);\r\n                        currentFeetPosition.vec3_copy(checkTeleportMovementCollisionRuntimeParams.myNewPosition);\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!teleportMovementValid) {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n\r\n            this._myTeleportAsMovementFailed = !teleportMovementValid;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportState.prototype._teleportToPosition = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let newFeetTransformQuat = quat2_create();\r\n    let newFeetRotationQuat = quat_create();\r\n    let teleportRotation = quat_create();\r\n    return function _teleportToPosition(teleportPosition, rotationOnUp, collisionRuntimeParams, forceTeleport = false) {\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        newFeetRotationQuat = feetTransformQuat.quat2_getRotationQuat(newFeetRotationQuat);\r\n        if (rotationOnUp != 0) {\r\n            newFeetRotationQuat = newFeetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, newFeetRotationQuat);\r\n        }\r\n\r\n        newFeetTransformQuat.quat2_setPositionRotationQuat(teleportPosition, newFeetRotationQuat);\r\n\r\n        if (Globals.getGamepads(this._myTeleportParams.myEngine)[InputUtils.getOppositeHandedness(this._myTeleportParams.myHandedness)].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            CollisionCheckBridge.getCollisionCheck(this._myTeleportParams.myEngine).positionCheck(true, newFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(teleportPosition);\r\n            if (rotationOnUp != 0) {\r\n                teleportRotation.quat_fromAxis(rotationOnUp, playerUp);\r\n                this._myTeleportParams.myPlayerHeadManager.rotateFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            // Should teleport then rotate\r\n            this._myTeleportParams.myPlayerTransformManager.teleportTransformQuat(newFeetTransformQuat, collisionRuntimeParams, forceTeleport);\r\n        }\r\n    };\r\n}();", "import { PhysicsLayerFlags } from \"../../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { RaycastParams, RaycastResults } from \"../../../../../../cauldron/physics/physics_raycast_params\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { MouseButtonID } from \"../../../../../../input/cauldron/mouse\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, quat_create, vec3_create, vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionRuntimeParams } from \"../../../../character_controller/collision/legacy/collision_check/collision_params\";\r\nimport { PlayerLocomotionTeleportDetectionVisualizer } from \"./player_locomotion_teleport_detection_visualizer\";\r\nimport { PlayerLocomotionTeleportParable } from \"./player_locomotion_teleport_parable\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportDetectionParams {\r\n\r\n    constructor() {\r\n        this.myMaxDistance = 0;\r\n        this.myMaxHeightDifference = 0;\r\n        this.myGroundAngleToIgnoreUpward = 0;\r\n        // This can be used to make it so the teleport position is valid on a steeper angle when going downward by setting the higher value on the collision params\r\n        // and then use this to specify that when going upward u want it to be less, basically to be able to teleprot down a cliff even on a steep ground\r\n        // that would not let you go up\r\n        this.myMustBeOnGround = false;\r\n\r\n        this.myTeleportBlockLayerFlags = new PhysicsLayerFlags();\r\n        this.myTeleportFloorLayerFlags = new PhysicsLayerFlags();\r\n\r\n        this.myParableForwardMinAngleToBeValidUp = 30;\r\n        this.myParableForwardMinAngleToBeValidDown = 0;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        // Used if reference is null\r\n        this.myTeleportParableStartPositionOffset = vec3_create(0, -0.04, 0.08);\r\n        this.myTeleportParableStartRotationOffset = vec3_create(30, 0, 0);\r\n\r\n        this.myTeleportParableSpeed = 15;\r\n        this.myTeleportParableGravity = -30;\r\n        this.myTeleportParableStepLength = 0.25;\r\n\r\n        this.myRotationOnUpMinStickIntensity = 0.5;\r\n        this.myRotationOnUpEnabled = false;\r\n\r\n        this.myTeleportFeetPositionMustBeVisible = false;\r\n        this.myTeleportHeadPositionMustBeVisible = false;\r\n        this.myTeleportHeadOrFeetPositionMustBeVisible = false; // Wins over previous parameters\r\n\r\n        this.myVisibilityCheckRadius = 0.05;\r\n        this.myVisibilityCheckFeetPositionVerticalOffset = 0.1;\r\n        this.myVisibilityCheckDistanceFromHitThreshold = 0.1;\r\n        this.myVisibilityCheckCircumferenceSliceAmount = 6;\r\n        this.myVisibilityCheckCircumferenceStepAmount = 1;\r\n        this.myVisibilityCheckCircumferenceRotationPerStep = 30;\r\n        this.myVisibilityBlockLayerFlags = new PhysicsLayerFlags();\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportDetectionRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myTeleportDetectionValid = false;\r\n        this.myTeleportPositionValid = false;\r\n        this.myTeleportSurfaceNormal = vec3_create();\r\n\r\n        this.myParable = new PlayerLocomotionTeleportParable();\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportDetectionState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myDetectionRuntimeParams = new PlayerLocomotionTeleportDetectionRuntimeParams();\r\n\r\n        this._myVisualizer = new PlayerLocomotionTeleportDetectionVisualizer(this._myTeleportParams, this._myTeleportRuntimeParams, this._myDetectionRuntimeParams);\r\n\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Steps\", this._myTeleportParams.myDetectionParams.myTeleportParableStepLength, 1, 3, 0.01, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Gravity\", this._myTeleportParams.myDetectionParams.myTeleportParableGravity, 10, 3, undefined, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Parable Speed\", this._myTeleportParams.myDetectionParams.myTeleportParableSpeed, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Teleport Max Distance\", this._myTeleportParams.myDetectionParams.myMaxDistance, 10, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = true;\r\n        this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        this._myDetectionRuntimeParams.myParable.setSpeed(this._myTeleportParams.myDetectionParams.myTeleportParableSpeed);\r\n        this._myDetectionRuntimeParams.myParable.setGravity(this._myTeleportParams.myDetectionParams.myTeleportParableGravity);\r\n        this._myDetectionRuntimeParams.myParable.setStepLength(this._myTeleportParams.myDetectionParams.myTeleportParableStepLength);\r\n\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myVisualizer.start();\r\n    }\r\n\r\n    end() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = false;\r\n        this._myVisualizer.end();\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._detectTeleportPosition();\r\n\r\n        this._myVisualizer.update(dt);\r\n\r\n        if (this._confirmTeleport()) {\r\n            if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n                fsm.perform(\"teleport\");\r\n            } else {\r\n                fsm.perform(\"cancel\");\r\n            }\r\n        } else if (this._cancelTeleport()) {\r\n            fsm.perform(\"cancel\");\r\n        }\r\n    }\r\n\r\n    _confirmTeleport() {\r\n        let confirmTeleport = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            if (Globals.getMouse(this._myTeleportParams.myEngine).isInsideView()) {\r\n                confirmTeleport = Globals.getMouse(this._myTeleportParams.myEngine).isButtonPressEnd(MouseButtonID.MIDDLE);\r\n            }\r\n        } else {\r\n            let axes = Globals.getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                confirmTeleport = true;\r\n            }\r\n        }\r\n\r\n        return confirmTeleport;\r\n    }\r\n\r\n    _cancelTeleport() {\r\n        let cancelTeleport = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            cancelTeleport = Globals.getMouse(this._myTeleportParams.myEngine).isButtonPressEnd(MouseButtonID.RIGHT) || !Globals.getMouse(this._myTeleportParams.myEngine).isInsideView();\r\n        } else {\r\n            cancelTeleport = Globals.getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed();\r\n        }\r\n\r\n        return cancelTeleport;\r\n    }\r\n\r\n    _detectTeleportPosition() {\r\n        //this._myDetectionRuntimeParams.myParable.setSpeed(Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Speed\"));\r\n        //this._myDetectionRuntimeParams.myParable.setGravity(Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Gravity\"));\r\n        //this._myDetectionRuntimeParams.myParable.setStepLength(Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Parable Steps\"));\r\n        //this._myTeleportParams.myDetectionParams.myMaxDistance = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Teleport Max Distance\");\r\n\r\n        if (XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            this._detectTeleportRotationVR();\r\n            this._detectTeleportPositionVR();\r\n        } else {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n            this._detectTeleportPositionNonVR();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myVisualizer.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionNonVR = function () {\r\n    let mousePosition = vec3_create();\r\n    let mouseDirection = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    return function _detectTeleportPositionNonVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        Globals.getMouse(this._myTeleportParams.myEngine).getOriginWorld(mousePosition);\r\n        Globals.getMouse(this._myTeleportParams.myEngine).getDirectionWorld(mouseDirection);\r\n\r\n        this._detectTeleportPositionParable(mousePosition, mouseDirection, playerUp);\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionVR = function () {\r\n    let teleportStartTransformLocal = quat2_create();\r\n    let teleportStartTransformWorld = quat2_create();\r\n\r\n    let teleportStartPosition = vec3_create();\r\n    let teleportDirection = vec3_create();\r\n\r\n    let playerUp = vec3_create();\r\n    let playerUpNegate = vec3_create();\r\n    return function _detectTeleportPositionVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = false;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject == null) {\r\n            let referenceObject = Globals.getPlayerObjects(this._myTeleportParams.myEngine).myHands[this._myTeleportParams.myHandedness];\r\n\r\n            teleportStartTransformLocal.quat2_setPositionRotationDegrees(this._myTeleportParams.myDetectionParams.myTeleportParableStartPositionOffset, this._myTeleportParams.myDetectionParams.myTeleportParableStartRotationOffset);\r\n            teleportStartTransformWorld = referenceObject.pp_convertTransformObjectToWorldQuat(teleportStartTransformLocal, teleportStartTransformWorld);\r\n        } else {\r\n            let referenceObject = this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject;\r\n\r\n            referenceObject.pp_getTransformQuat(teleportStartTransformWorld);\r\n        }\r\n\r\n        teleportStartPosition = teleportStartTransformWorld.quat2_getPosition(teleportStartPosition);\r\n        teleportDirection = teleportStartTransformWorld.quat2_getForward(teleportDirection);\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        playerUpNegate = playerUp.vec3_negate(playerUpNegate);\r\n\r\n        if (teleportDirection.vec3_angle(playerUp) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidUp &&\r\n            teleportDirection.vec3_angle(playerUpNegate) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidDown\r\n        ) {\r\n            this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n        }\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._detectTeleportPositionParable(teleportStartPosition, teleportDirection, playerUp);\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionParable = function () {\r\n    let parablePosition = vec3_create();\r\n    let prevParablePosition = vec3_create();\r\n    let parableFinalPosition = vec3_create();\r\n\r\n    let raycastParams = new RaycastParams();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let parableHitPosition = vec3_create();\r\n    let parableHitNormal = vec3_create();\r\n\r\n    let verticalHitOrigin = vec3_create();\r\n    let verticalHitDirection = vec3_create();\r\n\r\n    let flatTeleportHorizontalHitNormal = vec3_create();\r\n    let flatParableHitNormal = vec3_create();\r\n    let flatParableDirectionNegate = vec3_create();\r\n\r\n    let teleportCollisionRuntimeParams = new CollisionRuntimeParams();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _detectTeleportPositionParable(startPosition, direction, up) {\r\n        this._myDetectionRuntimeParams.myParable.setStartPosition(startPosition);\r\n        this._myDetectionRuntimeParams.myParable.setForward(direction);\r\n        this._myDetectionRuntimeParams.myParable.setUp(up);\r\n\r\n        let currentPositionIndex = 1;\r\n        let positionFlatDistance = 0;\r\n        let positionParableDistance = 0;\r\n        prevParablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex - 1, prevParablePosition);\r\n\r\n        raycastParams.myIgnoreHitsInsideCollision = true;\r\n        raycastParams.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportBlockLayerFlags.getMask());\r\n        raycastParams.myPhysics = Globals.getPhysics(this._myTeleportParams.myEngine);\r\n\r\n        raycastParams.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n            raycastParams.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n        }\r\n\r\n        let maxParableDistance = this._myTeleportParams.myDetectionParams.myMaxDistance * 2;\r\n\r\n        do {\r\n            parablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex, parablePosition);\r\n\r\n            raycastParams.myOrigin.vec3_copy(prevParablePosition);\r\n            raycastParams.myDirection = parablePosition.vec3_sub(prevParablePosition, raycastParams.myDirection);\r\n            raycastParams.myDistance = raycastParams.myDirection.vec3_length();\r\n            raycastParams.myDirection.vec3_normalize(raycastParams.myDirection);\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            prevParablePosition.vec3_copy(parablePosition);\r\n            positionFlatDistance = parablePosition.vec3_sub(startPosition, parablePosition).vec3_removeComponentAlongAxis(up, parablePosition).vec3_length();\r\n            positionParableDistance = this._myDetectionRuntimeParams.myParable.getDistance(currentPositionIndex);\r\n\r\n            currentPositionIndex++;\r\n        } while (\r\n            positionFlatDistance <= this._myTeleportParams.myDetectionParams.myMaxDistance &&\r\n            positionParableDistance <= maxParableDistance &&\r\n            !raycastResult.isColliding());\r\n\r\n        let maxParableDistanceOverFlatDistance = this._myDetectionRuntimeParams.myParable.getDistanceOverFlatDistance(this._myTeleportParams.myDetectionParams.myMaxDistance, maxParableDistance);\r\n\r\n        let fixedPositionParableDistance = positionParableDistance;\r\n        if (positionParableDistance > maxParableDistanceOverFlatDistance || positionParableDistance > maxParableDistance) {\r\n            fixedPositionParableDistance = Math.min(maxParableDistanceOverFlatDistance, maxParableDistance);\r\n        }\r\n\r\n        this._myDetectionRuntimeParams.myParableDistance = fixedPositionParableDistance;\r\n\r\n        let hitCollisionValid = false;\r\n\r\n        let bottomCheckMaxLength = 100;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hit = raycastResult.myHits.pp_first();\r\n\r\n            let hitParableDistance = positionParableDistance - (raycastParams.myDistance - hit.myDistance);\r\n\r\n            if (hitParableDistance <= fixedPositionParableDistance) {\r\n                hitCollisionValid = true;\r\n\r\n                this._myDetectionRuntimeParams.myParableDistance = hitParableDistance;\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                parableHitPosition.vec3_copy(hit.myPosition);\r\n                parableHitNormal.vec3_copy(hit.myNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    verticalHitOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(0.01, verticalHitOrigin), verticalHitOrigin);\r\n                    verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n                    raycastParams.myOrigin.vec3_copy(verticalHitOrigin);\r\n                    raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                    raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                    raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                    if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                        Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                    }\r\n\r\n                    if (raycastResult.isColliding()) {\r\n                        let hit = raycastResult.myHits.pp_first();\r\n\r\n                        teleportCollisionRuntimeParams.reset();\r\n                        this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                        this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                        this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                            !this._myTeleportAsMovementFailed &&\r\n                            teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                            teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                            if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                                flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastParams.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                                raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastParams.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"2\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableHitNormal = parableHitNormal.vec3_removeComponentAlongAxis(up, flatParableHitNormal);\r\n                            if (!flatParableHitNormal.vec3_isZero(0.00001)) {\r\n                                flatParableHitNormal.vec3_normalize(flatParableHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastParams.myOrigin = verticalHitOrigin.vec3_add(flatParableHitNormal.vec3_scale(backwardStep, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                                raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastParams.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"3\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                            if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                                flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastParams.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                                raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastParams.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                                    Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"4\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n                    }\r\n                } else {\r\n                    //console.error(\"1\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(\"-\");\r\n\r\n        if (!hitCollisionValid) {\r\n            parableFinalPosition = this._myDetectionRuntimeParams.myParable.getPositionByDistance(this._myDetectionRuntimeParams.myParableDistance, parableFinalPosition);\r\n\r\n            verticalHitOrigin.vec3_copy(parableFinalPosition);\r\n            verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n            raycastParams.myOrigin.vec3_copy(verticalHitOrigin);\r\n            raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n            raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                    !this._myTeleportAsMovementFailed &&\r\n                    teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                    teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                    flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                    if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                        flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastParams.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                        raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                            Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastParams.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                            Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                    if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                        flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastParams.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                        raycastParams.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastParams.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugDetectEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                            Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawPoint(0, raycastParams.myOrigin, vec4_create(0, 0, 0, 1), 0.03);\r\n                            Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._detectTeleportRotationVR = function () {\r\n    let axesVec3 = vec3_create();\r\n    let axesForward = vec3_create(0, 0, 1);\r\n    let axesUp = vec3_create(0, 1, 0);\r\n    return function _detectTeleportRotationVR(dt) {\r\n        let axes = Globals.getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (axes.vec2_length() > this._myTeleportParams.myDetectionParams.myRotationOnUpMinStickIntensity) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = this._myTeleportRotationOnUpNext;\r\n\r\n            axesVec3.vec3_set(axes[0], 0, axes[1]);\r\n            this._myTeleportRotationOnUpNext = axesVec3.vec3_angleSigned(axesForward, axesUp);\r\n        }\r\n\r\n        if (!this._myTeleportParams.myDetectionParams.myRotationOnUpEnabled) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportHitValid = function () {\r\n    let raycastParams = new RaycastParams();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let playerUp = vec3_create();\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isTeleportHitValid(hit, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        if (hit.isValid() && !hit.myInsideCollision) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            if (true || hit.myNormal.vec3_isConcordant(playerUp)) {\r\n                // #TODO When the flags on the physx will be available just check that the hit object physx has the floor flag\r\n\r\n                raycastParams.myIgnoreHitsInsideCollision = true;\r\n                raycastParams.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportFloorLayerFlags.getMask());\r\n                raycastParams.myPhysics = Globals.getPhysics(this._myTeleportParams.myEngine);\r\n\r\n                raycastParams.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n                for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                    raycastParams.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n                }\r\n\r\n                let distanceToCheck = 0.01;\r\n                raycastParams.myOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(distanceToCheck, raycastParams.myOrigin), raycastParams.myOrigin);\r\n                raycastParams.myDirection = hit.myNormal.vec3_negate(raycastParams.myDirection);\r\n                raycastParams.myDistance = distanceToCheck * 1.25;\r\n                raycastParams.myDirection.vec3_normalize(raycastParams.myDirection);\r\n\r\n                raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    let floorHit = raycastResult.myHits.pp_first();\r\n                    if (floorHit.myObject.pp_equals(hit.myObject)) {\r\n                        isValid = this._isTeleportPositionValid(hit.myPosition, rotationOnUp, checkTeleportCollisionRuntimeParams);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionValid = function () {\r\n    let playerUp = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    let feetRotationQuat = quat_create();\r\n    let feetPosition = vec3_create();\r\n    let differenceOnUpVector = vec3_create();\r\n    let teleportCheckCollisionRuntimeParams = new CollisionRuntimeParams();\r\n    return function _isTeleportPositionValid(teleportPosition, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        let positionVisible = this._isTeleportPositionVisible(teleportPosition);\r\n\r\n        if (positionVisible) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n            feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n            if (rotationOnUp != 0) {\r\n                feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n                feetRotationQuat = feetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, feetRotationQuat);\r\n                feetTransformQuat.quat2_setPositionRotationQuat(feetPosition, feetRotationQuat);\r\n            }\r\n\r\n            let differenceOnUp = teleportPosition.vec3_sub(feetPosition, differenceOnUpVector).vec3_componentAlongAxis(playerUp, differenceOnUpVector).vec3_length();\r\n\r\n            if (differenceOnUp < this._myTeleportParams.myDetectionParams.myMaxHeightDifference + 0.00001) {\r\n                let teleportCheckValid = false;\r\n                teleportCheckCollisionRuntimeParams.copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n\r\n                if (!this._myTeleportParams.myPerformTeleportAsMovement) {\r\n                    this._checkTeleport(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                } else {\r\n                    this._checkTeleportAsMovement(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                }\r\n\r\n                if (!teleportCheckCollisionRuntimeParams.myTeleportCanceled) {\r\n                    teleportCheckValid = true;\r\n                }\r\n\r\n                if (teleportCheckValid && (!this._myTeleportParams.myDetectionParams.myMustBeOnGround || teleportCheckCollisionRuntimeParams.myIsOnGround)) {\r\n\r\n                    let groundAngleValid = true;\r\n                    let isTeleportingUpward = teleportCheckCollisionRuntimeParams.myNewPosition.vec3_isFartherAlongAxis(feetPosition, playerUp);\r\n                    if (isTeleportingUpward) {\r\n                        groundAngleValid = teleportCheckCollisionRuntimeParams.myGroundAngle < this._myTeleportParams.myDetectionParams.myGroundAngleToIgnoreUpward + 0.0001;\r\n                    }\r\n\r\n                    if (groundAngleValid) {\r\n                        isValid = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();", "import { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../../../../../cauldron/cauldron/timer\";\r\nimport { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { TimerState } from \"../../../../../../cauldron/fsm/states/timer_state\";\r\nimport { vec4_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { NumberOverFactor } from \"../../../../../cauldron/cauldron/number_over_factor\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportTeleportBlinkState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myBlinkSphere = Globals.getPlayerObjects(this._myTeleportParams.myEngine).myCauldron.pp_addObject();\r\n        this._myBlinkSphereMeshComponent = this._myBlinkSphere.pp_addComponent(MeshComponent);\r\n        this._myBlinkSphereMeshComponent.mesh = Globals.getDefaultMeshes(this._myTeleportParams.myEngine).myInvertedSphere;\r\n        this._myBlinkSphereMeshComponent.material = Globals.getDefaultMaterials(this._myTeleportParams.myEngine).myFlatTransparentNoDepth.clone();\r\n        this._myBlinkSphereMaterialColor = vec4_create(\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[0] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[1] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[2] / 255,\r\n            0);\r\n\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n        this._myBlinkSphere.pp_setScaleLocal(this._myTeleportParams.myTeleportParams.myBlinkSphereScale);\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setLogEnabled(true, \"Locomotion Teleport Teleport Blink\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"fade_out\", this._fadeOutUpdate.bind(this));\r\n        this._myFSM.addState(\"wait\", new TimerState(this._myTeleportParams.myTeleportParams.myBlinkWaitSeconds, \"done\"));\r\n        this._myFSM.addState(\"fade_in\", this._fadeInUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fade_out\", \"teleport\", this._startFadeOut.bind(this));\r\n        this._myFSM.addTransition(\"fade_out\", \"wait\", \"done\", this._teleport.bind(this));\r\n        this._myFSM.addTransition(\"wait\", \"fade_in\", \"done\", this._startFadeIn.bind(this));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"fade_out\", \"idle\", \"stop\", this._stop.bind(this, true));\r\n        this._myFSM.addTransition(\"wait\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myFadeInTimer = new Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeInSeconds);\r\n        this._myFadeOutTimer = new Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeOutSeconds);\r\n        this._myFadeOutAlphaOverTime = new NumberOverFactor(0, 1, 0, 1);\r\n        this._myFadeInAlphaOverTime = new NumberOverFactor(1, 0, 0, 1);\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n        this._myBlinkSphere.pp_setParent(Globals.getPlayerObjects(this._myTeleportParams.myEngine).myCauldron, false);\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myBlinkSphere.pp_setParent(this._myTeleportParams.myPlayerHeadManager.getHead(), false);\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startFadeOut() {\r\n        this._myFadeOutTimer.start();\r\n        this._myBlinkSphereMaterialColor[3] = 0;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n        this._myBlinkSphere.pp_setActive(true);\r\n\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n    }\r\n\r\n    _startFadeIn() {\r\n        this._myFadeInTimer.start();\r\n    }\r\n\r\n    _fadeOutUpdate(dt, fsm) {\r\n        this._myFadeOutTimer.update(dt);\r\n\r\n        let alpha = this._myFadeOutAlphaOverTime.get(this._myFadeOutTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeOutTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _fadeInUpdate(dt, fsm) {\r\n        this._myFadeInTimer.update(dt);\r\n\r\n        let alpha = this._myFadeInAlphaOverTime.get(this._myFadeInTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeInTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _stop(teleport) {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        if (teleport) {\r\n            this._teleport();\r\n        }\r\n    }\r\n\r\n    _teleport() {\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n}", "import { Timer } from \"../../../../../../cauldron/cauldron/timer\";\r\nimport { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportTeleportShiftState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setLogEnabled(true, \"Locomotion Teleport Teleport Shift\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"shifting\", this._shiftingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"shifting\", \"teleport\", this._startShifting.bind(this));\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"stop\", this._stop.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myShiftMovementTimer = new Timer(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n        this._myShiftRotateTimer = new Timer(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, false);\r\n\r\n        this._myFeetStartPosition = vec3_create();\r\n\r\n        this._myCurrentRotationOnUp = 0;\r\n        this._myStartRotationOnUp = 0;\r\n\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Movement Seconds\", this._myTeleportParams.myTeleportParams.myShiftMovementSeconds, 0.5, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Rotate Seconds\", this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, 0.5, 3, 0, undefined, this._myTeleportParams.myEngine));\r\n        //Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).add(new EasyTuneNumber(\"Shift Rotate Start Percentage\", this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage, 0.5, 3, 0, 1, this._myTeleportParams.myEngine));\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        //this._myTeleportParams.myTeleportParams.myShiftMovementSeconds = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Movement Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateSeconds = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Rotate Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage = Globals.getEasyTuneVariables(this._myTeleportParams.myEngine).get(\"Shift Rotate Start Percentage\");\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startShifting() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = true;\r\n\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n        this._myFeetStartPosition = this._myTeleportParams.myPlayerHeadManager.getPositionFeet(this._myFeetStartPosition);\r\n\r\n        this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n\r\n        if (this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction) {\r\n            let distance = this._myTeleportRuntimeParams.myTeleportPosition.vec3_distance(this._myFeetStartPosition);\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction(distance);\r\n            this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds * multiplier);\r\n        }\r\n\r\n        this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds);\r\n        if (this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction) {\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction(Math.abs(this._myTeleportRuntimeParams.myTeleportRotationOnUp));\r\n            this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds * multiplier);\r\n        }\r\n\r\n        this._myStartRotationOnUp = this._myTeleportRuntimeParams.myTeleportRotationOnUp;\r\n        this._myCurrentRotationOnUp = 0;\r\n    }\r\n\r\n    _stop() {\r\n        this._teleport();\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._teleport();\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _teleport() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = false;\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myStartRotationOnUp - this._myCurrentRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleportTeleportShiftState.prototype._shiftingUpdate = function () {\r\n    let movementToTeleportFeet = vec3_create();\r\n    let newFeetPosition = vec3_create();\r\n    return function _shiftingUpdate(dt, fsm) {\r\n        this._myShiftMovementTimer.update(dt);\r\n        this._myShiftRotateTimer.update(dt);\r\n\r\n        if (this._myShiftRotateTimer.isDone() && this._myShiftMovementTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        } else {\r\n            newFeetPosition.vec3_copy(this._myTeleportRuntimeParams.myTeleportPosition);\r\n\r\n            if (this._myShiftMovementTimer.isStarted() || this._myShiftMovementTimer.isJustDone()) {\r\n\r\n                let interpolationFactor = this._myTeleportParams.myTeleportParams.myShiftMovementEasingFunction(this._myShiftMovementTimer.getPercentage());\r\n\r\n                if (interpolationFactor >= this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage && !this._myShiftRotateTimer.isStarted()) {\r\n                    this._myShiftRotateTimer.start();\r\n                    this._myShiftRotateTimer.update(dt);\r\n                }\r\n\r\n                movementToTeleportFeet = this._myTeleportRuntimeParams.myTeleportPosition.vec3_sub(this._myFeetStartPosition, movementToTeleportFeet);\r\n                movementToTeleportFeet.vec3_scale(interpolationFactor, movementToTeleportFeet);\r\n                newFeetPosition = this._myFeetStartPosition.vec3_add(movementToTeleportFeet, newFeetPosition);\r\n            }\r\n\r\n            let rotationOnUp = 0;\r\n            if (this._myShiftRotateTimer.isRunning() || this._myShiftRotateTimer.isJustDone()) {\r\n                let interpolationFactor = this._myTeleportParams.myTeleportParams.myShiftRotateEasingFunction(this._myShiftRotateTimer.getPercentage());\r\n\r\n                let newCurrentRotationOnUp = this._myStartRotationOnUp * interpolationFactor;\r\n                rotationOnUp = newCurrentRotationOnUp - this._myCurrentRotationOnUp;\r\n\r\n                this._myCurrentRotationOnUp = newCurrentRotationOnUp;\r\n            }\r\n\r\n            this._teleportToPosition(newFeetPosition, rotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionTeleportTeleportShiftState.prototype, \"_shiftingUpdate\", { enumerable: false });", "import { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { EasingFunction } from \"../../../../../../cauldron/js/utils/math_utils\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { PlayerLocomotionTeleportState } from \"./player_locomotion_teleport_state\";\r\nimport { PlayerLocomotionTeleportTeleportBlinkState } from \"./player_locomotion_teleport_teleport_blink_state\";\r\nimport { PlayerLocomotionTeleportTeleportShiftState } from \"./player_locomotion_teleport_teleport_shift_state\";\r\n\r\nexport let PlayerLocomotionTeleportTeleportType = {\r\n    INSTANT: 0,\r\n    BLINK: 1,\r\n    SHIFT: 2\r\n};\r\n\r\nexport class PlayerLocomotionTeleportTeleportParams {\r\n\r\n    constructor() {\r\n        this.myTeleportType = PlayerLocomotionTeleportTeleportType.SHIFT;\r\n\r\n        this.myBlinkFadeOutSeconds = 0.1;\r\n        this.myBlinkFadeInSeconds = 0.1;\r\n        this.myBlinkWaitSeconds = 0.1;\r\n        this.myBlinkSphereColor = vec3_create();\r\n        this.myBlinkSphereScale = 0.1;\r\n\r\n        this.myShiftMovementSeconds = 0.15;\r\n        this.myShiftMovementSecondsMultiplierOverDistanceFunction = null;\r\n        this.myShiftMovementEasingFunction = EasingFunction.easeInOut;\r\n\r\n        this.myShiftRotateSeconds = 1;\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = null;\r\n        this.myShiftRotateEasingFunction = EasingFunction.easeOut;\r\n        this.myShiftRotateStartAfterMovementPercentage = 0.7;\r\n\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = function (angle) {\r\n            return EasingFunction.easeOut(angle / 180);\r\n        };\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportTeleportState extends PlayerLocomotionTeleportState {\r\n\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setLogEnabled(true, \"Locomotion Teleport Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myBlinkState = new PlayerLocomotionTeleportTeleportBlinkState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n        this._myShiftState = new PlayerLocomotionTeleportTeleportShiftState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM.addState(\"instant_teleport\", this._instantUpdate.bind(this));\r\n        this._myFSM.addState(\"blink_teleport\", this._myBlinkState);\r\n        this._myFSM.addState(\"shift_teleport\", this._myShiftState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"instant_teleport\", \"start_instant\");\r\n        this._myFSM.addTransition(\"idle\", \"blink_teleport\", \"start_blink\");\r\n        this._myFSM.addTransition(\"idle\", \"shift_teleport\", \"start_shift\");\r\n\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"stop\", this._instantStop.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"stop\");\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        switch (this._myTeleportParams.myTeleportParams.myTeleportType) {\r\n            case PlayerLocomotionTeleportTeleportType.INSTANT:\r\n                this._myFSM.perform(\"start_instant\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.BLINK:\r\n                this._myFSM.perform(\"start_blink\");\r\n                break;\r\n            case PlayerLocomotionTeleportTeleportType.SHIFT:\r\n                this._myFSM.perform(\"start_shift\");\r\n                break;\r\n            default:\r\n                this._myFSM.perform(\"start_instant\");\r\n        }\r\n    }\r\n\r\n    end() {\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    completeTeleport() {\r\n        this._myFSM.perform(\"stop\");\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n\r\n    _instantUpdate(dt, fsm) {\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        fsm.perform(\"done\");\r\n    }\r\n\r\n    _instantStop(fsm) {\r\n        this._instantUpdate(0, fsm);\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n}", "import { FSM } from \"../../../../../../cauldron/fsm/fsm\";\r\nimport { XRUtils } from \"../../../../../../cauldron/utils/xr_utils\";\r\nimport { Handedness } from \"../../../../../../input/cauldron/input_types\";\r\nimport { MouseButtonID } from \"../../../../../../input/cauldron/mouse\";\r\nimport { GamepadAxesID } from \"../../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { CollisionCheckBridge } from \"../../../../character_controller/collision/collision_check_bridge\";\r\nimport { PlayerLocomotionMovement } from \"../player_locomotion_movement\";\r\nimport { PlayerLocomotionTeleportDetectionParams, PlayerLocomotionTeleportDetectionState } from \"./player_locomotion_teleport_detection_state\";\r\nimport { PlayerLocomotionTeleportDetectionVisualizerParams } from \"./player_locomotion_teleport_detection_visualizer\";\r\nimport { PlayerLocomotionTeleportTeleportParams, PlayerLocomotionTeleportTeleportState } from \"./player_locomotion_teleport_teleport_state\";\r\n\r\nexport class PlayerLocomotionTeleportParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myDetectionParams = new PlayerLocomotionTeleportDetectionParams();\r\n        this.myVisualizerParams = new PlayerLocomotionTeleportDetectionVisualizerParams();\r\n        this.myTeleportParams = new PlayerLocomotionTeleportTeleportParams();\r\n\r\n        this.myHandedness = Handedness.LEFT;\r\n\r\n        this.myPerformTeleportAsMovement = false;\r\n        this.myTeleportAsMovementMaxDistanceFromTeleportPosition = 0.001;\r\n        this.myTeleportAsMovementMaxSteps = 2;\r\n        // When checking teleport as movement u may need to move more times to get to the position due to snap and gravity\r\n        // This specifies how many movement u can try to get to the teleport position\r\n\r\n        this.myTeleportAsMovementRemoveVerticalMovement = true;\r\n        // This can be used to remove the vertical movement from the difference from the current and teleport position so that u can apply just\r\n        // the gravity as vertical movement\r\n        this.myTeleportAsMovementExtraVerticalMovementPerMeter = 1; // This simulate the gravity for the teleport movement\r\n\r\n        this.myStickIdleThreshold = 0.1;\r\n\r\n        this.myAdjustPositionEveryFrame = false;\r\n        this.myGravityAcceleration = 0;\r\n        this.myMaxGravitySpeed = 0;\r\n\r\n        this.myEngine = engine;\r\n\r\n        this.myDebugEnabled = false;\r\n        this.myDebugDetectEnabled = false;\r\n        this.myDebugShowEnabled = false;\r\n        this.myDebugVisibilityEnabled = false;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleportRuntimeParams {\r\n\r\n    constructor() {\r\n        this.myTeleportPosition = vec3_create();\r\n        this.myTeleportRotationOnUp = 0;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionTeleport extends PlayerLocomotionMovement {\r\n\r\n    constructor(teleportParams, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = new PlayerLocomotionTeleportRuntimeParams();\r\n\r\n        this._myStickIdleCharge = true;\r\n\r\n        this._myDetectionState = new PlayerLocomotionTeleportDetectionState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n        this._myTeleportState = new PlayerLocomotionTeleportTeleportState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n\r\n        this._myFSM = new FSM();\r\n        //this._myFSM.setLogEnabled(true, \"Locomotion Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"detect\", this._myDetectionState);\r\n        this._myFSM.addState(\"teleport\", this._myTeleportState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"detect\", \"detect\");\r\n        this._myFSM.addTransition(\"detect\", \"teleport\", \"teleport\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"cancel\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"done\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"stop\", this._completeTeleport.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    canStop() {\r\n        return this._myFSM.isInState(\"idle\");\r\n    }\r\n\r\n    getParams() {\r\n        return this._myTeleportParams;\r\n    }\r\n\r\n    getTeleportRuntimeParams() {\r\n        return this._myTeleportRuntimeParams;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = false;\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        if (!this._myLocomotionRuntimeParams.myIsTeleporting && (this._myTeleportParams.myAdjustPositionEveryFrame || this._myTeleportParams.myGravityAcceleration != 0)) {\r\n            this._applyGravity(dt);\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (this._startDetecting()) {\r\n            this._myFSM.perform(\"detect\");\r\n        }\r\n    }\r\n\r\n    _startDetecting() {\r\n        let startDetecting = false;\r\n\r\n        if (!XRUtils.isSessionActive(this._myTeleportParams.myEngine)) {\r\n            startDetecting = Globals.getMouse(this._myTeleportParams.myEngine).isButtonPressStart(MouseButtonID.MIDDLE) &&\r\n                Globals.getMouse(this._myTeleportParams.myEngine).isTargetingRenderCanvas();\r\n        } else {\r\n            let axes = Globals.getGamepads(this._myTeleportParams.myEngine)[this._myTeleportParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                this._myStickIdleCharge = true;\r\n            }\r\n\r\n            if (this._myStickIdleCharge && axes[1] >= 0.75) {\r\n                this._myStickIdleCharge = false;\r\n                startDetecting = true;\r\n            }\r\n        }\r\n\r\n        return startDetecting;\r\n    }\r\n\r\n    _completeTeleport() {\r\n        this._myTeleportState.completeTeleport();\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myDetectionState.destroy();\r\n\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionTeleport.prototype._applyGravity = function () {\r\n    let playerUp = vec3_create();\r\n    let gravityMovement = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n    return function _applyGravity(dt) {\r\n        // If gravity is zero it's still important to move to remain snapped and gather proper surface data even when not teleporting\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        gravityMovement.vec3_zero();\r\n        if (!this._myLocomotionRuntimeParams.myIsFlying && !this._myLocomotionRuntimeParams.myIsTeleporting) {\r\n            this._myLocomotionRuntimeParams.myGravitySpeed += this._myTeleportParams.myGravityAcceleration * dt;\r\n\r\n            if (Math.abs(this._myLocomotionRuntimeParams.myGravitySpeed) > Math.abs(this._myTeleportParams.myMaxGravitySpeed)) {\r\n                this._myLocomotionRuntimeParams.myGravitySpeed = Math.pp_sign(this._myTeleportParams.myGravityAcceleration) * Math.abs(this._myTeleportParams.myMaxGravitySpeed);\r\n            }\r\n\r\n            gravityMovement = playerUp.vec3_scale(this._myLocomotionRuntimeParams.myGravitySpeed * dt, gravityMovement);\r\n        } else {\r\n            this._myLocomotionRuntimeParams.myGravitySpeed = 0;\r\n        }\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        CollisionCheckBridge.getCollisionCheck(this._myTeleportParams.myEngine).move(gravityMovement, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        if (!this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myNewPosition);\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n            this._myLocomotionRuntimeParams.myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myGravitySpeed = 0;\r\n        }\r\n    };\r\n}();", "import { Timer } from \"../../../../../cauldron/cauldron/timer\";\r\nimport { XRUtils } from \"../../../../../cauldron/utils/xr_utils\";\r\nimport { Handedness } from \"../../../../../input/cauldron/input_types\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../../../../../input/gamepad/gamepad_buttons\";\r\nimport { quat2_create, vec3_create } from \"../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../pp/globals\";\r\nimport { Direction2DTo3DConverter, Direction2DTo3DConverterParams } from \"../../../../cauldron/cauldron/direction_2D_to_3D_converter\";\r\nimport { PlayerLocomotionDirectionReferenceType } from \"./player_locomotion\";\r\nimport { PlayerLocomotionMovement } from \"./player_locomotion_movement\";\r\n\r\nexport class PlayerLocomotionSmoothParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myPlayerHeadManager = null;\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myMaxSpeed = 0;\r\n        this.mySpeedSlowDownPercentageOnWallSlid = 1; // this is the target value for a 90 degrees slid, the more u move toward the wall the slower u go \r\n\r\n        this.myMovementMinStickIntensityThreshold = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myGravityAcceleration = 0;\r\n        this.myMaxGravitySpeed = 0;\r\n\r\n        this.myVRDirectionReferenceType = PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myHandedness = Handedness.LEFT;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false;\r\n        this.myMoveHeadShortcutEnabled = false;\r\n        this.myTripleSpeedShortcutEnabled = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n}\r\n\r\nexport class PlayerLocomotionSmooth extends PlayerLocomotionMovement {\r\n\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myCurrentSpeed = 0;\r\n        this._myLastHorizontalMovement = vec3_create();\r\n\r\n        this._myDirectionReference = Globals.getPlayerObjects(this._myParams.myEngine).myHead;\r\n\r\n        this._myStickIdleTimer = new Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new Direction2DTo3DConverterParams(this._myParams.myEngine);\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myInvertForwardWhenUpsideDown = this._myParams.myDirectionInvertForwardWhenUpsideDown;\r\n\r\n        let directionConverterVRParams = new Direction2DTo3DConverterParams(this._myParams.myEngine);\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myInvertForwardWhenUpsideDown = this._myParams.myDirectionInvertForwardWhenUpsideDown;\r\n\r\n        this._myDirectionConverterNonVR = new Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myParams.myEngine);\r\n    }\r\n\r\n    start() {\r\n        this._myCurrentSpeed = 0;\r\n        this._myLastHorizontalMovement.vec3_zero();\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getCurrentSpeed() {\r\n        return this._myCurrentSpeed;\r\n    }\r\n\r\n    getLastHorizontalSpeed() {\r\n        return this._myLastHorizontalMovement;\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myParams.myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = vec3_create();\r\n    let headMovement = vec3_create();\r\n    let direction = vec3_create();\r\n    let directionOnUp = vec3_create();\r\n    let verticalMovement = vec3_create();\r\n    let feetTransformQuat = quat2_create();\r\n\r\n    let directionReferenceTransformQuat = quat2_create();\r\n    return function update(dt) {\r\n        this._myCurrentSpeed = 0;\r\n        this._myLastHorizontalMovement.vec3_zero();\r\n\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getAxesInfo(GamepadAxesID.THUMBSTICK).getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        let horizontalMovement = false;\r\n        let maxSpeed = this._myParams.myMaxSpeed;\r\n\r\n        if (this._myParams.myTripleSpeedShortcutEnabled && Globals.isDebugEnabled(this._myParams.myEngine)) {\r\n            if (Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.SELECT).isPressed()) {\r\n                maxSpeed *= 3;\r\n            }\r\n        }\r\n\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                this._myCurrentSpeed = Math.pp_lerp(0, maxSpeed, movementIntensity);\r\n\r\n                if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsSliding && this._myParams.mySpeedSlowDownPercentageOnWallSlid != 1) {\r\n                    let slowPercentage = this._myParams.mySpeedSlowDownPercentageOnWallSlid;\r\n\r\n                    let slidStrength = Math.pp_mapToRange(Math.abs(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.mySlidingMovementAngle), 0, 90, 0, 1);\r\n                    slowPercentage = Math.pp_lerp(1, slowPercentage, slidStrength);\r\n\r\n                    this._myCurrentSpeed = this._myCurrentSpeed * slowPercentage;\r\n                }\r\n\r\n                headMovement = direction.vec3_scale(this._myCurrentSpeed * dt, headMovement);\r\n\r\n                horizontalMovement = true;\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myFlyEnabled) {\r\n            if (Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(maxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-maxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n\r\n            if (Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myMoveHeadShortcutEnabled && Globals.isDebugEnabled(this._myParams.myEngine) &&\r\n            Globals.getGamepads(this._myParams.myEngine)[InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.getPlayerHeadManager().moveFeet(headMovement);\r\n        } else if (this._myParams.myMoveThroughCollisionShortcutEnabled && Globals.isDebugEnabled(this._myParams.myEngine) &&\r\n            Globals.getGamepads(this._myParams.myEngine)[this._myParams.myHandedness].getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n        } else {\r\n            if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                this._myLocomotionRuntimeParams.myGravitySpeed += this._myParams.myGravityAcceleration * dt;\r\n\r\n                if (Math.abs(this._myLocomotionRuntimeParams.myGravitySpeed) > Math.abs(this._myParams.myMaxGravitySpeed)) {\r\n                    this._myLocomotionRuntimeParams.myGravitySpeed = Math.pp_sign(this._myParams.myGravityAcceleration) * Math.abs(this._myParams.myMaxGravitySpeed);\r\n                }\r\n\r\n                verticalMovement = playerUp.vec3_scale(this._myLocomotionRuntimeParams.myGravitySpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n            } else {\r\n                this._myLocomotionRuntimeParams.myGravitySpeed = 0;\r\n            }\r\n\r\n            feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n                this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(\r\n                    this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myOriginalUp,\r\n                    this._myLastHorizontalMovement\r\n                );\r\n            }\r\n\r\n            if (this._myLocomotionRuntimeParams.myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n                this._myLocomotionRuntimeParams.myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n                this._myLocomotionRuntimeParams.myGravitySpeed = 0;\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = Globals.getPlayerObjects(this._myParams.myEngine).myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = Globals.getPlayerObjects(this._myParams.myEngine).myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = Globals.getPlayerObjects(this._myParams.myEngine).myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { PhysicsLayerFlags } from \"../../../../../cauldron/physics/physics_layer_flags\";\r\nimport { InputUtils } from \"../../../../../input/cauldron/input_utils\";\r\nimport { CollisionCheckBridge } from \"../../../character_controller/collision/collision_check_bridge\";\r\nimport { PlayerLocomotion, PlayerLocomotionParams } from \"./player_locomotion\";\r\n\r\nexport class PlayerLocomotionComponent extends Component {\r\n    static TypeName = \"pp-player-locomotion\";\r\n    static Properties = {\r\n        _myDefaultLocomotionType: Property.enum([\"Smooth\", \"Teleport\"], \"Smooth\"),\r\n        _mySwitchLocomotionTypeShortcutEnabled: Property.bool(true), // double press main hand (default left) thumbstick to switch\r\n        _myPhysicsBlockLayerFlags: Property.string(\"0, 0, 0, 0, 0, 0, 0, 0\"),\r\n        _myDefaultHeight: Property.float(1.75),\r\n        _myCharacterRadius: Property.float(0.3),\r\n        _myMaxSpeed: Property.float(2),\r\n        _myMaxRotationSpeed: Property.float(100),\r\n        _myGravityAcceleration: Property.float(-20),\r\n        _myMaxGravitySpeed: Property.float(-1),\r\n        _mySpeedSlowDownPercentageOnWallSlid: Property.float(1),\r\n        _myIsSnapTurn: Property.bool(true),\r\n        _mySnapTurnOnlyVR: Property.bool(true),\r\n        _mySnapTurnAngle: Property.float(30),\r\n        _mySnapTurnSpeedDegrees: Property.float(0),\r\n        _myFlyEnabled: Property.bool(false),\r\n        _myStartFlying: Property.bool(false),\r\n        _myMinAngleToFlyUpNonVR: Property.float(30),\r\n        _myMinAngleToFlyDownNonVR: Property.float(50),\r\n        _myMinAngleToFlyUpVR: Property.float(60),\r\n        _myMinAngleToFlyDownVR: Property.float(1),\r\n        _myMinAngleToFlyRight: Property.float(60),\r\n\r\n        _myMainHand: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myDirectionInvertForwardWhenUpsideDown: Property.bool(true),\r\n        _myVRDirectionReferenceType: Property.enum([\"Head\", \"Hand\", \"Custom Object\"], \"Head\"),\r\n        _myVRDirectionReferenceObject: Property.object(),\r\n\r\n        _myTeleportType: Property.enum([\"Instant\", \"Blink\", \"Shift\"], \"Shift\"),\r\n        _myTeleportMaxDistance: Property.float(3),\r\n        _myTeleportMaxHeightDifference: Property.float(1.25),\r\n        _myTeleportRotationOnUpEnabled: Property.bool(false),\r\n        _myTeleportValidMaterial: Property.material(),\r\n        _myTeleportInvalidMaterial: Property.material(),\r\n        _myTeleportPositionObject: Property.object(),\r\n        _myTeleportPositionObjectRotateWithHead: Property.bool(true),\r\n        _myTeleportParableStartReferenceObject: Property.object(),\r\n\r\n        // these 2 flags works 100% properly only if both true or false\r\n        _mySyncWithRealWorldPositionOnlyIfValid: Property.bool(true),   // valid means the real player has not moved inside walls\r\n        _myViewOcclusionInsideWallsEnabled: Property.bool(true),\r\n\r\n        _myColliderAccuracy: Property.enum([\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"], \"High\"),\r\n        _myColliderCheckOnlyFeet: Property.bool(false),\r\n        _myColliderSlideAlongWall: Property.bool(true),\r\n        _myColliderMaxWalkableGroundAngle: Property.float(30),\r\n        _myColliderSnapOnGround: Property.bool(true),\r\n        _myColliderMaxDistanceToSnapOnGround: Property.float(0.1),\r\n        _myColliderMaxWalkableGroundStepHeight: Property.float(0.1),\r\n        _myColliderPreventFallingFromEdges: Property.bool(false),\r\n\r\n        _myDebugHorizontalEnabled: Property.bool(false),\r\n        _myDebugVerticalEnabled: Property.bool(false),\r\n\r\n        _myMoveThroughCollisionShortcutEnabled: Property.bool(false),   // main hand (default left) thumbstick pressed while moving\r\n        _myMoveHeadShortcutEnabled: Property.bool(false),               // non main hand (default right) thumbstick pressed while moving\r\n        _myTripleSpeedShortcutEnabled: Property.bool(false)             // main hand (default left) select pressed while moving\r\n    };\r\n\r\n    start() {\r\n        CollisionCheckBridge.initBridge(this.engine);\r\n\r\n        let params = new PlayerLocomotionParams(this.engine);\r\n\r\n        params.myDefaultLocomotionType = this._myDefaultLocomotionType;\r\n        params.mySwitchLocomotionTypeShortcutEnabled = this._mySwitchLocomotionTypeShortcutEnabled;\r\n\r\n        params.myDefaultHeight = this._myDefaultHeight;\r\n\r\n        params.myMaxSpeed = this._myMaxSpeed;\r\n        params.myMaxRotationSpeed = this._myMaxRotationSpeed;\r\n\r\n        params.myGravityAcceleration = this._myGravityAcceleration;\r\n        params.myMaxGravitySpeed = this._myMaxGravitySpeed;\r\n\r\n        params.myCharacterRadius = this._myCharacterRadius;\r\n\r\n        params.mySpeedSlowDownPercentageOnWallSlid = this._mySpeedSlowDownPercentageOnWallSlid;\r\n\r\n        params.myIsSnapTurn = this._myIsSnapTurn;\r\n        params.mySnapTurnOnlyVR = this._mySnapTurnOnlyVR;\r\n        params.mySnapTurnAngle = this._mySnapTurnAngle;\r\n        params.mySnapTurnSpeedDegrees = this._mySnapTurnSpeedDegrees;\r\n\r\n        params.myFlyEnabled = this._myFlyEnabled;\r\n        params.myStartFlying = this._myStartFlying;\r\n        params.myMinAngleToFlyUpNonVR = this._myMinAngleToFlyUpNonVR;\r\n        params.myMinAngleToFlyDownNonVR = this._myMinAngleToFlyDownNonVR;\r\n        params.myMinAngleToFlyUpVR = this._myMinAngleToFlyUpVR;\r\n        params.myMinAngleToFlyDownVR = this._myMinAngleToFlyDownVR;\r\n        params.myMinAngleToFlyRight = this._myMinAngleToFlyRight;\r\n\r\n        params.myMainHand = InputUtils.getHandednessByIndex(this._myMainHand);\r\n\r\n        params.myDirectionInvertForwardWhenUpsideDown = this._myDirectionInvertForwardWhenUpsideDown;\r\n        params.myVRDirectionReferenceType = this._myVRDirectionReferenceType;\r\n        params.myVRDirectionReferenceObject = this._myVRDirectionReferenceObject;\r\n\r\n        params.myForeheadExtraHeight = 0.1;\r\n\r\n        params.myTeleportType = this._myTeleportType;\r\n        params.myTeleportMaxDistance = this._myTeleportMaxDistance;\r\n        params.myTeleportMaxHeightDifference = this._myTeleportMaxHeightDifference;\r\n        params.myTeleportRotationOnUpEnabled = this._myTeleportRotationOnUpEnabled;\r\n        params.myTeleportValidMaterial = this._myTeleportValidMaterial;\r\n        params.myTeleportInvalidMaterial = this._myTeleportInvalidMaterial;\r\n        params.myTeleportPositionObject = this._myTeleportPositionObject;\r\n        params.myTeleportPositionObjectRotateWithHead = this._myTeleportPositionObjectRotateWithHead;\r\n        params.myTeleportParableStartReferenceObject = this._myTeleportParableStartReferenceObject;\r\n\r\n        params.mySyncWithRealWorldPositionOnlyIfValid = this._mySyncWithRealWorldPositionOnlyIfValid;\r\n        params.myViewOcclusionInsideWallsEnabled = this._myViewOcclusionInsideWallsEnabled;\r\n\r\n        params.myColliderAccuracy = this._myColliderAccuracy;\r\n        params.myColliderCheckOnlyFeet = this._myColliderCheckOnlyFeet;\r\n        params.myColliderSlideAlongWall = this._myColliderSlideAlongWall;\r\n        params.myColliderMaxWalkableGroundAngle = this._myColliderMaxWalkableGroundAngle;\r\n        params.myColliderSnapOnGround = this._myColliderSnapOnGround;\r\n        params.myColliderMaxDistanceToSnapOnGround = this._myColliderMaxDistanceToSnapOnGround;\r\n        params.myColliderMaxWalkableGroundStepHeight = this._myColliderMaxWalkableGroundStepHeight;\r\n        params.myColliderPreventFallingFromEdges = this._myColliderPreventFallingFromEdges;\r\n\r\n        params.myMoveThroughCollisionShortcutEnabled = this._myMoveThroughCollisionShortcutEnabled;\r\n        params.myMoveHeadShortcutEnabled = this._myMoveHeadShortcutEnabled;\r\n        params.myTripleSpeedShortcutEnabled = this._myTripleSpeedShortcutEnabled;\r\n\r\n        params.myDebugHorizontalEnabled = this._myDebugHorizontalEnabled;\r\n        params.myDebugVerticalEnabled = this._myDebugVerticalEnabled;\r\n\r\n        params.myPhysicsBlockLayerFlags.copy(this._getPhysicsBlockLayersFlags());\r\n\r\n        this._myPlayerLocomotion = new PlayerLocomotion(params);\r\n\r\n        this._myStartCounter = 1;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myStartCounter > 0) {\r\n            this._myStartCounter--;\r\n            if (this._myStartCounter == 0) {\r\n                this._myPlayerLocomotion.start();\r\n\r\n                this._myPlayerLocomotion.getPlayerTransformManager().resetReal(true, false, false, true);\r\n                this._myPlayerLocomotion.getPlayerTransformManager().resetHeadToReal();\r\n            }\r\n\r\n            this._myPlayerLocomotion.getPlayerHeadManager().update(dt);\r\n        } else {\r\n            CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycasts = 0; // #TODO Debug stuff, remove later\r\n\r\n            this._myPlayerLocomotion.update(dt);\r\n        }\r\n\r\n        //CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycastsMax = Math.max(CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycasts, CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycastsMax);\r\n        //console.error(CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycastsMax);\r\n        //console.error(CollisionCheckBridge.getCollisionCheck(this.engine)._myTotalRaycasts);\r\n    }\r\n\r\n    getPlayerLocomotion() {\r\n        return this._myPlayerLocomotion;\r\n    }\r\n\r\n    onActivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getPhysicsBlockLayersFlags() {\r\n        let physicsFlags = new PhysicsLayerFlags();\r\n\r\n        let flags = [...this._myPhysicsBlockLayerFlags.split(\",\")];\r\n        for (let i = 0; i < flags.length; i++) {\r\n            physicsFlags.setFlagActive(i, flags[i].trim() == \"1\");\r\n        }\r\n\r\n        return physicsFlags;\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myPlayerLocomotion?.destroy();\r\n    }\r\n}", "import { RaycastParams, RaycastResults } from \"../../../../../../cauldron/physics/physics_raycast_params\";\r\nimport { PhysicsUtils } from \"../../../../../../cauldron/physics/physics_utils\";\r\nimport { vec3_create } from \"../../../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../../../pp/globals\";\r\nimport { PlayerLocomotionTeleportDetectionState } from \"./player_locomotion_teleport_detection_state\";\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionVisible = function () {\r\n    let playerUp = vec3_create();\r\n\r\n    let offsetFeetTeleportPosition = vec3_create();\r\n    let headTeleportPosition = vec3_create();\r\n    return function _isTeleportPositionVisible(teleportPosition) {\r\n        let isVisible = true;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible) {\r\n\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n            let isHeadVisible = false;\r\n            let isFeetVisible = false;\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible) {\r\n                let headheight = this._myTeleportParams.myPlayerHeadManager.getHeightHead();\r\n                headTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(headheight, headTeleportPosition), headTeleportPosition);\r\n                isHeadVisible = this._isPositionVisible(headTeleportPosition);\r\n            } else {\r\n                isHeadVisible = true;\r\n            }\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible && isHeadVisible) {\r\n                isFeetVisible = true;\r\n            } else {\r\n                if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                    (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible && isHeadVisible)) {\r\n                    offsetFeetTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myDetectionParams.myVisibilityCheckFeetPositionVerticalOffset, offsetFeetTeleportPosition), offsetFeetTeleportPosition);\r\n                    isFeetVisible = this._isPositionVisible(offsetFeetTeleportPosition);\r\n                } else {\r\n                    isFeetVisible = true;\r\n                }\r\n            }\r\n\r\n            isVisible = isHeadVisible && isFeetVisible;\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._isPositionVisible = function () {\r\n    let playerUp = vec3_create();\r\n    let standardUp = vec3_create(0, 1, 0);\r\n    let standardForward = vec3_create(0, 0, 1);\r\n    let referenceUp = vec3_create();\r\n    let headPosition = vec3_create();\r\n    let direction = vec3_create();\r\n    let fixedRight = vec3_create();\r\n    let fixedForward = vec3_create();\r\n    let fixedUp = vec3_create();\r\n    let raycastEndPosition = vec3_create();\r\n\r\n    let raycastParams = new RaycastParams();\r\n    let raycastResult = new RaycastResults();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isPositionVisible(position) {\r\n        let isVisible = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        let currentHead = this._myTeleportParams.myPlayerHeadManager.getHead();\r\n        headPosition = currentHead.pp_getPosition(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        referenceUp.vec3_copy(standardUp);\r\n        if (direction.vec3_angle(standardUp) < 0.0001) {\r\n            referenceUp.vec3_copy(standardForward);\r\n        }\r\n\r\n        fixedRight = direction.vec3_cross(referenceUp, fixedRight);\r\n        fixedUp = fixedRight.vec3_cross(direction, fixedUp);\r\n        fixedForward.vec3_copy(direction);\r\n\r\n        fixedUp.vec3_normalize(fixedUp);\r\n        fixedForward.vec3_normalize(fixedForward);\r\n\r\n        let checkPositions = this._getVisibilityCheckPositions(headPosition, fixedUp, fixedForward);\r\n\r\n        let distance = headPosition.vec3_distance(position);\r\n\r\n        for (let checkPosition of checkPositions) {\r\n            raycastParams.myOrigin.vec3_copy(checkPosition);\r\n            raycastParams.myDirection.vec3_copy(fixedForward);\r\n            raycastParams.myDistance = distance;\r\n            raycastParams.myPhysics = Globals.getPhysics(this._myTeleportParams.myEngine);\r\n\r\n            raycastParams.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myVisibilityBlockLayerFlags.getMask());\r\n\r\n            raycastParams.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                raycastParams.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            raycastParams.myIgnoreHitsInsideCollision = true;\r\n\r\n            raycastResult = PhysicsUtils.raycast(raycastParams, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugEnabled && this._myTeleportParams.myDebugVisibilityEnabled && Globals.isDebugEnabled(this._myTeleportParams.myEngine)) {\r\n                Globals.getDebugVisualManager(this._myTeleportParams.myEngine).drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                raycastEndPosition = checkPosition.vec3_add(fixedForward.vec3_scale(distance, raycastEndPosition), raycastEndPosition);\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                if (this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold == 0 || hit.myPosition.vec3_distance(raycastEndPosition) > this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold + 0.00001) {\r\n                    isVisible = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPlayerLocomotionTeleportDetectionState.prototype._getVisibilityCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = vec3_create();\r\n    return function _getVisibilityCheckPositions(position, up, forward) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(position);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = this._myTeleportParams.myDetectionParams.myVisibilityCheckRadius / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount;\r\n        let sliceAngle = 360 / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = up.vec3_rotateAxis(currentStepRotation, forward, currentDirection);\r\n            for (let j = 0; j < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, forward, tempCheckPosition);\r\n                checkPositions.push(position.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();", "import { Collider, CollisionComponent, Component, Property } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputSourceType, TrackedHandJointID } from \"../input_types\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class FingerCursorComponent extends Component {\r\n    static TypeName = \"pp-finger-cursor\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myMultipleClicksEnabled: Property.bool(true),\r\n        _myCollisionGroup: Property.int(1),\r\n        _myCollisionSize: Property.float(0.0125),\r\n        _myCursorObject: Property.object(null)\r\n    };\r\n\r\n    init() {\r\n        this._myLastTarget = null;\r\n        this._myHandInputSource = null;\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myDoubleClickTimer = 0;\r\n        this._myTripleClickTimer = 0;\r\n        this._myMultipleClickObject = null;\r\n        this._myMultipleClickDelay = 0.3;\r\n    }\r\n\r\n    start() {\r\n        this._myCursorParentObject = this.object.pp_addObject();\r\n\r\n        if (this._myCursorObject == null) {\r\n            this._myCursorObject = this._myCursorParentObject.pp_addObject();\r\n        } else {\r\n            this._myCursorObject.pp_setParent(this._myCursorParentObject);\r\n        }\r\n\r\n        this._myCollisionComponent = this._myCursorObject.pp_addComponent(CollisionComponent);\r\n        this._myCollisionComponent.collider = Collider.Sphere;\r\n        this._myCollisionComponent.group = 1 << this._myCollisionGroup;\r\n        this._myCollisionComponent.extents = vec3_create(this._myCollisionSize, this._myCollisionSize, this._myCollisionSize);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDoubleClickTimer > 0) {\r\n            this._myDoubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this._myTripleClickTimer > 0) {\r\n            this._myTripleClickTimer -= dt;\r\n        }\r\n\r\n        this._myCursorParentObject.pp_setTransformQuat(Globals.getPlayerObjects(this.engine).myReferenceSpace.pp_getTransformQuat());\r\n        this._updateHand();\r\n\r\n        if (this._myHandInputSource) {\r\n            let overlaps = this._myCollisionComponent.queryOverlaps();\r\n            let overlapTarget = null;\r\n            for (let i = 0; i < overlaps.length; ++i) {\r\n                let object = overlaps[i].object;\r\n                let target = object.pp_getComponent(CursorTarget);\r\n                if (target && (overlapTarget == null || !target.isSurface)) {\r\n                    overlapTarget = target;\r\n                    if (!target.isSurface) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!overlapTarget) {\r\n                this._targetTouchEnd();\r\n            } else if (!overlapTarget.equals(this._myLastTarget)) {\r\n                this._targetTouchEnd();\r\n\r\n                this._myLastTarget = overlapTarget;\r\n\r\n                this._targetTouchStart();\r\n            }\r\n        } else {\r\n            this._targetTouchEnd();\r\n        }\r\n    }\r\n\r\n    _targetTouchStart() {\r\n        this._myLastTarget.onHover.notify(this._myLastTarget.object, this);\r\n        this._myLastTarget.onDown.notify(this._myLastTarget.object, this);\r\n    }\r\n\r\n    _targetTouchEnd() {\r\n        if (this._myLastTarget) {\r\n            if (this._myMultipleClicksEnabled && this._myTripleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.pp_equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onTripleClick.notify(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n            } else if (this._myMultipleClicksEnabled && this._myDoubleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.pp_equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onDoubleClick.notify(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = this._myMultipleClickDelay;\r\n                this._myDoubleClickTimer = 0;\r\n            } else {\r\n                this._myLastTarget.onClick.notify(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n                this._myDoubleClickTimer = this._myMultipleClickDelay;\r\n                this._myMultipleClickObject = this._myLastTarget.object;\r\n            }\r\n\r\n            this._myLastTarget.onUp.notify(this._myLastTarget.object, this);\r\n            this._myLastTarget.onUnhover.notify(this._myLastTarget.object, this);\r\n\r\n            this._myLastTarget = null;\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        this._myCursorParentObject.pp_setActive(true);\r\n    }\r\n\r\n    onDeactivate() {\r\n        this._myCursorParentObject.pp_setActive(false);\r\n    }\r\n\r\n    _updateHand() {\r\n        this._myHandInputSource = InputUtils.getInputSource(this._myHandednessType, InputSourceType.TRACKED_HAND, this.engine);\r\n\r\n        if (this._myHandInputSource) {\r\n            let tip = XRUtils.getFrame(this.engine).getJointPose(this._myHandInputSource.hand.get(TrackedHandJointID.INDEX_FINGER_TIP), XRUtils.getReferenceSpace(this.engine));\r\n\r\n            if (tip) {\r\n                this._myCursorObject.pp_setRotationLocalQuat([\r\n                    tip.transform.orientation.x,\r\n                    tip.transform.orientation.y,\r\n                    tip.transform.orientation.z,\r\n                    tip.transform.orientation.w]);\r\n\r\n                this._myCursorObject.pp_setPositionLocal([\r\n                    tip.transform.position.x,\r\n                    tip.transform.position.y,\r\n                    tip.transform.position.z]);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { InputSourceType } from \"../input_types\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class SwitchHandObjectComponent extends Component {\r\n    static TypeName = \"pp-switch-hand-object\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myGamepad: Property.object(),\r\n        _myTrackedHand: Property.object()\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n\r\n    onActivate() {\r\n        this._myFirstUpdate = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._start();\r\n        }\r\n\r\n        let inputSourceType = InputUtils.getInputSourceTypeByHandedness(this._myHandednessType, this.engine);\r\n        if (inputSourceType != null && this._myCurrentInputSourceType != inputSourceType) {\r\n            this._myCurrentInputSourceType = inputSourceType;\r\n\r\n            if (inputSourceType == InputSourceType.TRACKED_HAND) {\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(false);\r\n                }\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(true);\r\n                }\r\n            } else if (inputSourceType == InputSourceType.GAMEPAD) {\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(false);\r\n                }\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _start() {\r\n        if (this._myGamepad != null) {\r\n            this._myGamepad.pp_setActive(false);\r\n        }\r\n\r\n        if (this._myTrackedHand != null) {\r\n            this._myTrackedHand.pp_setActive(false);\r\n        }\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n}", "import { Component, MeshComponent, Property } from \"@wonderlandengine/api\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class TrackedHandDrawJointComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-joint\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myJointID: Property.enum(\r\n            [\r\n                \"Wrist\",\r\n                \"Thumb Metacarpal\", \"Thumb Phalanx Proximal\", \"Thumb Phalanx Distal\", \"Thumb Tip\",\r\n                \"Index Metacarpal\", \"Index Phalanx Proximal\", \"Index Phalanx Intermediate\", \"Index Phalanx Distal\", \"Index Tip\",\r\n                \"Middle Metacarpal\", \"Middle Phalanx Proximal\", \"Middle Phalanx Intermediate\", \"Middle Phalanx Distal\", \"Middle Tip\",\r\n                \"Ring Metacarpal\", \"Ring Phalanx Proximal\", \"Ring Phalanx Intermediate\", \"Ring Phalanx Distal\", \"Ring Tip\",\r\n                \"Pinky Metacarpal\", \"Pinky Phalanx Proximal\", \"Pinky Phalanx Intermediate\", \"Pinky Phalanx Distal\", \"Pinky Tip\"\r\n            ],\r\n            \"Wrist\"),\r\n        _myJointMesh: Property.mesh(),\r\n        _myJointMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDType = InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._buildTrackedHandHierarchy();\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _buildTrackedHandHierarchy() {\r\n        this._myJointMeshObject = this.object.pp_addObject();\r\n\r\n        let mesh = this._myJointMeshObject.pp_addComponent(MeshComponent);\r\n        mesh.mesh = this._myJointMesh;\r\n        mesh.material = this._myJointMaterial;\r\n\r\n        this._myJointMeshObject.pp_setScaleLocal(0);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nTrackedHandDrawJointComponent.prototype.update = function () {\r\n    let transformQuat = quat2_create()\r\n    return function update(dt) {\r\n        let jointPose = Globals.getTrackedHandPose(this._myHandednessType, this.engine).getJointPose(this._myJointIDType);\r\n\r\n        this._myJointMeshObject.pp_setTransformLocalQuat(jointPose.getTransformQuat(transformQuat, null));\r\n        this._myJointMeshObject.pp_setScaleLocal(jointPose.getJointRadius());\r\n    };\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { TrackedHandJointID, TrackedHandJointIDIndex } from \"../input_types\";\r\nimport { TrackedHandDrawJointComponent } from \"./tracked_hand_draw_joint_component\";\r\n\r\nexport class TrackedHandDrawAllJointsComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-all-joints\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myHideMetacarpals: Property.bool(true),\r\n        _myJointMesh: Property.mesh(),\r\n        _myJointMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._buildTrackedHandHierarchy();\r\n    }\r\n\r\n    _buildTrackedHandHierarchy() {\r\n        this._myTrackedHandMeshObject = this.object.pp_addObject();\r\n\r\n        this._myJointMeshObjectList = [];\r\n\r\n        for (let jointIDKey in TrackedHandJointID) {\r\n            let jointID = TrackedHandJointID[jointIDKey];\r\n            if (!this._myHideMetacarpals ||\r\n                (jointID != TrackedHandJointID.THUMB_METACARPAL &&\r\n                    jointID != TrackedHandJointID.INDEX_FINGER_METACARPAL && jointID != TrackedHandJointID.MIDDLE_FINGER_METACARPAL &&\r\n                    jointID != TrackedHandJointID.RING_FINGER_METACARPAL && jointID != TrackedHandJointID.PINKY_FINGER_METACARPAL)\r\n            ) {\r\n                let jointObject = this._myTrackedHandMeshObject.pp_addObject();\r\n                this._myJointMeshObjectList[jointID] = jointObject;\r\n\r\n                jointObject.pp_addComponent(TrackedHandDrawJointComponent,\r\n                    {\r\n                        \"_myHandedness\": this._myHandedness,\r\n                        \"_myJointID\": TrackedHandJointIDIndex[jointIDKey],\r\n                        \"_myJointMesh\": this._myJointMesh,\r\n                        \"_myJointMaterial\": this._myJointMaterial,\r\n                    });\r\n\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { ObjectUtils } from \"../../../cauldron/wl/utils/object_utils\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputUtils } from \"../input_utils\";\r\n\r\nexport class TrackedHandDrawSkinComponent extends Component {\r\n    static TypeName = \"pp-tracked-hand-draw-skin\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myHandSkin: Property.skin(null)\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._prepareJoints();\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _prepareJoints() {\r\n        this._myJoints = [];\r\n\r\n        let skinJointIDs = this._myHandSkin.jointIds;\r\n\r\n        for (let i = 0; i < skinJointIDs.length; i++) {\r\n            this._myJoints[i] = ObjectUtils.wrapObject(skinJointIDs[i]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nTrackedHandDrawSkinComponent.prototype.update = function () {\r\n    let transformQuat = quat2_create()\r\n    return function update(dt) {\r\n        for (let i = 0; i < this._myJoints.length; i++) {\r\n            let jointObject = this._myJoints[i];\r\n\r\n            let jointID = jointObject.pp_getName(); // Joint name must match the TrackedHandJointID enum value\r\n            let jointPose = Globals.getTrackedHandPose(this._myHandednessType, this.engine).getJointPose(jointID);\r\n\r\n            jointObject.pp_setTransformLocalQuat(jointPose.getTransformQuat(transformQuat, null));\r\n        }\r\n    };\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { HandednessIndex } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesEvent, GamepadAxesID, GamepadButtonEvent, GamepadButtonID } from \"../gamepad_buttons\";\r\n\r\nexport class GamepadMeshAnimatorComponent extends Component {\r\n    static TypeName = \"pp-gamepad-mesh-animator\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _mySelect: Property.object(null),\r\n        _mySqueeze: Property.object(null),\r\n        _myThumbstick: Property.object(null),\r\n        _myTopButton: Property.object(null),\r\n        _myBottomButton: Property.object(null),\r\n        _mySelectRotateAngle: Property.float(15),\r\n        _mySqueezeRotateAngle: Property.float(11),\r\n        _myThumbstickRotateAngle: Property.float(15),\r\n        _myThumbstickPressOffset: Property.float(0.000625),\r\n        _myTopButtonPressOffset: Property.float(0.0015),\r\n        _myBottomButtonPressOffset: Property.float(0.0015),\r\n        _myUsePressForSqueeze: Property.bool(false),\r\n        _mySqueezePressOffset: Property.float(0.0015)\r\n    };\r\n\r\n    start() {\r\n        let gamepad = null;\r\n        if (this._myHandedness == HandednessIndex.LEFT) {\r\n            gamepad = Globals.getLeftGamepad(this.engine);\r\n        } else {\r\n            gamepad = Globals.getRightGamepad(this.engine);\r\n        }\r\n\r\n        if (this._mySelect != null) {\r\n            this._mySelectOriginalRotation = this._mySelect.pp_getRotationLocalQuat();\r\n            this._mySelectOriginalLeft = this._mySelect.pp_getLeftLocal();\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            this._mySqueezeOriginalPosition = this._mySqueeze.pp_getPositionLocal();\r\n            this._mySqueezeOriginalRotation = this._mySqueeze.pp_getRotationLocalQuat();\r\n            this._mySqueezeOriginalLeft = this._mySqueeze.pp_getLeftLocal();\r\n            this._mySqueezeOriginalForward = this._mySqueeze.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myThumbstick != null) {\r\n            this._myThumbstickOriginalPosition = this._myThumbstick.pp_getPositionLocal();\r\n            this._myThumbstickOriginalRotation = this._myThumbstick.pp_getRotationLocalQuat();\r\n            this._myThumbstickOriginalLeft = this._myThumbstick.pp_getLeftLocal();\r\n            this._myThumbstickOriginalUp = this._myThumbstick.pp_getUpLocal();\r\n            this._myThumbstickOriginalForward = this._myThumbstick.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            this._myTopButtonOriginalPosition = this._myTopButton.pp_getPositionLocal();\r\n            this._myTopButtonOriginalUp = this._myTopButton.pp_getUpLocal();\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n            this._myBottomButtonOriginalPosition = this._myBottomButton.pp_getPositionLocal();\r\n            this._myBottomButtonOriginalUp = this._myBottomButton.pp_getUpLocal();\r\n        }\r\n\r\n        // PRESSED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.THUMBSTICK, GamepadButtonEvent.PRESS_START, this, this._thumbstickPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.THUMBSTICK, GamepadButtonEvent.PRESS_END, this, this._thumbstickPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.TOP_BUTTON, GamepadButtonEvent.PRESS_START, this, this._topButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.TOP_BUTTON, GamepadButtonEvent.PRESS_END, this, this._topButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n\r\n            gamepad.registerButtonEventListener(GamepadButtonID.BOTTOM_BUTTON, GamepadButtonEvent.PRESS_START, this, this._bottomButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(GamepadButtonID.BOTTOM_BUTTON, GamepadButtonEvent.PRESS_END, this, this._bottomButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        // VALUE CHANGED\r\n        if (this._mySelect != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.SELECT, GamepadButtonEvent.VALUE_CHANGED, this, this._selectValueChanged.bind(this));\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            gamepad.registerButtonEventListener(GamepadButtonID.SQUEEZE, GamepadButtonEvent.VALUE_CHANGED, this, this._squeezeValueChanged.bind(this));\r\n        }\r\n\r\n        // AXES CHANGED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerAxesEventListener(GamepadAxesID.THUMBSTICK, GamepadAxesEvent.AXES_CHANGED, this, this._thumbstickValueChanged.bind(this));\r\n        }\r\n    }\r\n\r\n    _thumbstickPressedStart() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _thumbstickPressedEnd(buttonInfo, gamepad) {\r\n        this._myThumbstick.pp_setPositionLocal(this._myThumbstickOriginalPosition);\r\n    }\r\n\r\n    _topButtonPressedStart(buttonInfo, gamepad) {\r\n        this._myTopButton.pp_translateAxisLocal(-this._myTopButtonPressOffset, this._myTopButtonOriginalUp);\r\n    }\r\n\r\n    _topButtonPressedEnd(buttonInfo, gamepad) {\r\n        this._myTopButton.pp_setPositionLocal(this._myTopButtonOriginalPosition);\r\n    }\r\n\r\n    _bottomButtonPressedStart(buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_translateAxisLocal(-this._myBottomButtonPressOffset, this._myBottomButtonOriginalUp);\r\n    }\r\n\r\n    _bottomButtonPressedEnd(buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_setPositionLocal(this._myBottomButtonOriginalPosition);\r\n    }\r\n\r\n    _selectValueChanged(buttonInfo, gamepad) {\r\n        this._mySelect.pp_setRotationLocalQuat(this._mySelectOriginalRotation);\r\n\r\n        if (buttonInfo.getValue() > 0.00001) {\r\n            this._mySelect.pp_rotateAxisLocal(this._mySelectRotateAngle * buttonInfo.getValue(), this._mySelectOriginalLeft);\r\n        }\r\n    }\r\n\r\n    _squeezeValueChanged(buttonInfo, gamepad) {\r\n        this._mySqueeze.pp_setPositionLocal(this._mySqueezeOriginalPosition);\r\n        this._mySqueeze.pp_setRotationLocalQuat(this._mySqueezeOriginalRotation);\r\n\r\n        if (buttonInfo.getValue() > 0.00001) {\r\n            if (this._myUsePressForSqueeze) {\r\n                let translation = this._mySqueezePressOffset;\r\n                if (this._myHandedness == 1) {\r\n                    translation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_translateAxisLocal(translation * buttonInfo.getValue(), this._mySqueezeOriginalLeft);\r\n            } else {\r\n                let rotation = -this._mySqueezeRotateAngle;\r\n                if (this._myHandedness == 1) {\r\n                    rotation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_rotateAxisLocal(rotation * buttonInfo.getValue(), this._mySqueezeOriginalForward);\r\n            }\r\n        }\r\n    }\r\n\r\n    _thumbstickValueChanged(axesInfo, gamepad) {\r\n        this._myThumbstick.pp_setRotationLocalQuat(this._myThumbstickOriginalRotation);\r\n\r\n        let leftRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[1];\r\n        let forwardRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[0];\r\n\r\n        if (Math.abs(leftRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(leftRotation, this._myThumbstickOriginalLeft);\r\n        }\r\n\r\n        if (Math.abs(forwardRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(forwardRotation, this._myThumbstickOriginalForward);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nGamepadMeshAnimatorComponent.prototype._thumbstickPressedStart = function () {\r\n    let upTranslation = vec3_create();\r\n    return function _thumbstickPressedStart(buttonInfo, gamepad) {\r\n        // Since thumbstick object rotate you need to specifically use its original up to translate it\r\n        this._myThumbstickOriginalUp.vec3_scale(-this._myThumbstickPressOffset, upTranslation);\r\n        this._myThumbstick.pp_translateLocal(upTranslation);\r\n    };\r\n}();", "import { GamepadButtonID } from \"../gamepad_buttons\";\r\n\r\nlet _mySimultaneousPressMaxDelay = 0.15;\r\nlet _mySimultaneousTouchMaxDelay = 0.15;\r\n\r\nexport function setSimultaneousPressMaxDelay(simultaneousPressMaxDelay) {\r\n    _mySimultaneousPressMaxDelay = simultaneousPressMaxDelay;\r\n}\r\n\r\nexport function setSimultaneousTouchMaxDelay(simultaneousTouchMaxDelay) {\r\n    _mySimultaneousTouchMaxDelay = simultaneousTouchMaxDelay;\r\n}\r\n\r\nexport function getSimultaneousPressMaxDelay() {\r\n    return _mySimultaneousPressMaxDelay;\r\n}\r\n\r\nexport function getSimultaneousTouchMaxDelay() {\r\n    return _mySimultaneousTouchMaxDelay;\r\n}\r\n\r\n\r\n// gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n// If the first parameter is a number it's used as multiplePressCount\r\n// If the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\nexport function isAnyButtonPressStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let atLeastOneButtonPressStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isPressStart(multiplePressCount)) {\r\n                atLeastOneButtonPressStart = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (atLeastOneButtonPressStart) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return atLeastOneButtonPressStart;\r\n}\r\n\r\n// gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n// If the first parameter is a number it's used as multiplePressCount\r\n// If the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\nexport function areButtonsPressStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonPressedRecently = true;\r\n    let atLeastOneButtonPressStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(button.myPressed && (multiplePressCount == null || button.myMultiplePressStartCount == multiplePressCount) && button.myTimePressed < _mySimultaneousPressMaxDelay)) {\r\n                areButtonPressedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isPressStart(multiplePressCount)) {\r\n                atLeastOneButtonPressStart = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonPressedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonPressedRecently && atLeastOneButtonPressStart;\r\n}\r\n\r\nexport function isAnyButtonPressEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let atLeastOneButtonPressEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isPressEnd(multiplePressCount)) {\r\n                atLeastOneButtonPressEnd = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (atLeastOneButtonPressEnd) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return atLeastOneButtonPressEnd;\r\n}\r\n\r\nexport function areButtonsPressEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonNotPressedRecently = true;\r\n    let atLeastOneButtonPressEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(!button.myPressed && (multiplePressCount == null || button.myMultiplePressEndCount == multiplePressCount) && button.myTimeNotPressed < _mySimultaneousPressMaxDelay)) {\r\n                areButtonNotPressedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isPressEnd(multiplePressCount)) {\r\n                atLeastOneButtonPressEnd = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonNotPressedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonNotPressedRecently && atLeastOneButtonPressEnd;\r\n}\r\n\r\nexport function isAnyButtonTouchStart(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let atLeastOneButtonTouchStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isTouchStart(multiplePressCount)) {\r\n                atLeastOneButtonTouchStart = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (atLeastOneButtonTouchStart) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return atLeastOneButtonTouchStart;\r\n}\r\n\r\nexport function areButtonsTouchStart(...gamepadButtonIDsList) {\r\n    let multipleTouchCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multipleTouchCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonTouchedRecently = true;\r\n    let atLeastOneButtonTouchStart = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(button.myTouched && (multipleTouchCount == null || button.myMultipleTouchStartCount == multipleTouchCount) && button.myTimeTouched < _mySimultaneousTouchMaxDelay)) {\r\n                areButtonTouchedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isTouchStart(multipleTouchCount)) {\r\n                atLeastOneButtonTouchStart = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonTouchedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonTouchedRecently && atLeastOneButtonTouchStart;\r\n}\r\n\r\nexport function isAnyButtonTouchEnd(...gamepadButtonIDsList) {\r\n    let multiplePressCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multiplePressCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let atLeastOneButtonTouchEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (button.isTouchEnd(multiplePressCount)) {\r\n                atLeastOneButtonTouchEnd = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (atLeastOneButtonTouchEnd) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return atLeastOneButtonTouchEnd;\r\n}\r\n\r\nexport function areButtonsTouchEnd(...gamepadButtonIDsList) {\r\n    let multipleTouchCount = null;\r\n    let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n    if (!isNaN(gamepadButtonIDsList[0])) {\r\n        multipleTouchCount = gamepadButtonIDsList[0];\r\n        realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n    }\r\n\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        if (gamepadButtonIDs.length == 1) {\r\n            for (let key in GamepadButtonID) {\r\n                gamepadButtonIDs.push(GamepadButtonID[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let areButtonNotTouchedRecently = true;\r\n    let atLeastOneButtonTouchEnd = false;\r\n    for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n        let gamepad = gamepadButtonIDs[0];\r\n        for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n            let buttonID = gamepadButtonIDs[i];\r\n            let button = gamepad.getButtonInfo(buttonID);\r\n\r\n            if (!(!button.myTouched && (multipleTouchCount == null || button.myMultipleTouchEndCount == multipleTouchCount) && button.myTimeNotTouched < _mySimultaneousTouchMaxDelay)) {\r\n                areButtonNotTouchedRecently = false;\r\n                break;\r\n            }\r\n\r\n            if (button.isTouchEnd(multipleTouchCount)) {\r\n                atLeastOneButtonTouchEnd = true;\r\n            }\r\n        }\r\n\r\n        if (!areButtonNotTouchedRecently) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return areButtonNotTouchedRecently && atLeastOneButtonTouchEnd;\r\n}\r\n\r\nexport let GamepadUtils = {\r\n    setSimultaneousPressMaxDelay,\r\n    setSimultaneousTouchMaxDelay,\r\n    getSimultaneousPressMaxDelay,\r\n    getSimultaneousTouchMaxDelay,\r\n    isAnyButtonPressStart,\r\n    areButtonsPressStart,\r\n    areButtonsPressEnd,\r\n    isAnyButtonTouchStart,\r\n    areButtonsTouchStart,\r\n    isAnyButtonTouchEnd,\r\n    areButtonsTouchEnd\r\n};", "import { Alignment, Component, Justification, MeshComponent, Property, TextComponent } from \"@wonderlandengine/api\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class GamepadControlSchemeComponent extends Component {\r\n    static TypeName = \"pp-gamepad-control-scheme\";\r\n    static Properties = {\r\n        _myShowOnStart: Property.bool(true),\r\n\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n\r\n        _mySelectText: Property.string(\"\"),\r\n        _mySqueezeText: Property.string(\"\"),\r\n        _myThumbstickText: Property.string(\"\"),\r\n        _myBottomButtonText: Property.string(\"\"),\r\n        _myTopButtonText: Property.string(\"\"),\r\n\r\n        _mySelect: Property.object(null),\r\n        _mySqueeze: Property.object(null),\r\n        _myThumbstick: Property.object(null),\r\n        _myBottomButton: Property.object(null),\r\n        _myTopButton: Property.object(null),\r\n\r\n        _myTextScaleMultiplier: Property.float(1),\r\n        _myTextOffsetMultiplier: Property.float(1),\r\n        _myLineLengthMultiplier: Property.float(1),\r\n        _myLineThicknessMultiplier: Property.float(1),\r\n        _myDistanceFromButtonsMultiplier: Property.float(1),\r\n\r\n        _myTextMaterial: Property.material(),\r\n        _myLineMaterial: Property.material()\r\n    };\r\n\r\n    start() {\r\n        this._myTextMaterialFinal = (this._myTextMaterial != null) ? this._myTextMaterial : Globals.getDefaultMaterials(this.engine).myText.clone();\r\n        this._myLineMaterialFinal = (this._myLineMaterial != null) ? this._myLineMaterial : Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myControlSchemeDirection = (this._myHandednessType == Handedness.LEFT) ? 1 : -1;\r\n\r\n        this._myVisible = false;\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._createControlScheme();\r\n        this.setVisible(this._myShowOnStart);\r\n\r\n        this._myVisibleBackup = this._myVisible;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this.setVisible(false);\r\n            this.setVisible(this._myVisibleBackup);\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    }\r\n\r\n    onDeactivate() {\r\n        this._myVisibleBackup = this._myVisible;\r\n        this.setVisible(false);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myVisible = visible;\r\n\r\n        if (this._myParentObject != null) {\r\n            this._myParentObject.pp_setActive(this._myVisible);\r\n\r\n            if (this._myVisible) {\r\n                this._hideEmptySchemes();\r\n            }\r\n        }\r\n    }\r\n\r\n    setSelectText(text) {\r\n        this._mySelectText = text;\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setSqueezeText(text) {\r\n        this._mySqueezeText = text;\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setThumbstickText(text) {\r\n        this._myThumbstickText = text;\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setBottomButtonText(text) {\r\n        this._myBottomButtonText = text;\r\n        this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setTopButtonText(text) {\r\n        this._myTopButtonText = text;\r\n        this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    _createControlScheme() {\r\n        this._myParentObject = this.object.pp_addObject();\r\n\r\n        let distanceFromButton = 0.02 * this._myDistanceFromButtonsMultiplier;\r\n        let lineLength = 0.0935 * this._myLineLengthMultiplier;\r\n\r\n        let referenceObject = this._myThumbstick;\r\n\r\n        this._mySelectObject = this._myParentObject.pp_addObject();\r\n        this._mySelectTextComponent = this._addScheme(this._mySelect, referenceObject,\r\n            vec3_create(0, 0, distanceFromButton),\r\n            vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySelectObject);\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n\r\n        this._mySqueezeObject = this._myParentObject.pp_addObject();\r\n        this._mySqueezeTextComponent = this._addScheme(this._mySqueeze, referenceObject,\r\n            vec3_create(distanceFromButton * this._myControlSchemeDirection, 0, 0),\r\n            vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySqueezeObject);\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n\r\n        this._myThumbstickObject = this._myParentObject.pp_addObject();\r\n        this._myThumbstickTextComponent = this._addScheme(this._myThumbstick, referenceObject,\r\n            vec3_create(0, distanceFromButton, 0),\r\n            vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._myThumbstickObject);\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n\r\n        let thumbstickPositionLocal = this._myThumbstick.pp_getPositionLocal();\r\n        let thumbstickUpLocal = this._myThumbstick.pp_getUpLocal();\r\n\r\n        {\r\n            let bottomButtonPositionLocal = this._myBottomButton.pp_getPositionLocal();\r\n            let difference = bottomButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myBottomButtonObject = this._myParentObject.pp_addObject();\r\n            this._myBottomButtonTextComponent = this._addScheme(this._myBottomButton, referenceObject,\r\n                vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                vec3_create(0, 0, -lineLength),\r\n                this._myBottomButtonObject);\r\n            this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        }\r\n\r\n        {\r\n            let topButtonPositionLocal = this._myTopButton.pp_getPositionLocal();\r\n            let difference = topButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myTopButtonObject = this._myParentObject.pp_addObject();\r\n            this._myTopButtonTextComponent = this._addScheme(this._myTopButton, referenceObject,\r\n                vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0).vec3_rotateAxis(-45 * this._myControlSchemeDirection, vec3_create(0, 1, 0)),\r\n                this._myTopButtonObject);\r\n            this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        }\r\n    }\r\n\r\n    _addScheme(buttonObject, referenceObject, startOffset, endOffset, parentObject) {\r\n        let buttonPosition = buttonObject.pp_getPositionLocal();\r\n        let referenceForward = referenceObject.pp_getForwardLocal();\r\n        let referenceRight = referenceObject.pp_getRightLocal();\r\n        let referenceUp = referenceObject.pp_getUpLocal();\r\n\r\n        let lineStart = buttonPosition.vec3_add(referenceRight.vec3_scale(startOffset[0]));\r\n        lineStart.vec3_add(referenceUp.vec3_scale(startOffset[1]), lineStart);\r\n        lineStart.vec3_add(referenceForward.vec3_scale(startOffset[2]), lineStart);\r\n\r\n        let lineEnd = lineStart.vec3_add(referenceRight.vec3_scale(endOffset[0]));\r\n        lineEnd.vec3_add(referenceUp.vec3_scale(endOffset[1]), lineEnd);\r\n        lineEnd.vec3_add(referenceForward.vec3_scale(endOffset[2]), lineEnd);\r\n\r\n        let textOffset = 0.01 * this._myTextOffsetMultiplier;\r\n        let textPosition = lineEnd.vec3_add(referenceForward.vec3_scale(-textOffset));\r\n\r\n        this._addLine(lineStart, lineEnd, parentObject);\r\n        let textComponent = this._addText(textPosition, referenceForward, referenceUp, parentObject);\r\n\r\n        return textComponent;\r\n    }\r\n\r\n    _addLine(start, end, parentObject) {\r\n        let lineDirection = end.vec3_sub(start);\r\n        let length = lineDirection.vec3_length();\r\n        lineDirection.vec3_normalize(lineDirection);\r\n\r\n        let lineParentObject = parentObject.pp_addObject();\r\n        let lineObject = lineParentObject.pp_addObject();\r\n\r\n        let lineMesh = lineObject.pp_addComponent(MeshComponent);\r\n        lineMesh.mesh = Globals.getDefaultMeshes(this.engine).myCylinder;\r\n        lineMesh.material = this._myLineMaterialFinal;\r\n\r\n        lineParentObject.pp_setPositionLocal(start);\r\n\r\n        let thickness = 0.001 * this._myLineThicknessMultiplier;\r\n        lineObject.pp_scaleObject(vec3_create(thickness / 2, length / 2, thickness / 2));\r\n\r\n        lineObject.pp_setUpLocal(lineDirection);\r\n        lineObject.pp_translateObject(vec3_create(0, length / 2, 0));\r\n    }\r\n\r\n    _addText(position, forward, up, parentObject) {\r\n        let textObject = parentObject.pp_addObject();\r\n        textObject.pp_setPositionLocal(position);\r\n        textObject.pp_lookToLocal(up, forward);\r\n        textObject.pp_scaleObject(0.0935 * this._myTextScaleMultiplier);\r\n\r\n        let textComponent = textObject.pp_addComponent(TextComponent);\r\n        textComponent.alignment = Alignment.Center;\r\n        textComponent.justification = Justification.Top;\r\n        textComponent.material = this._myTextMaterialFinal;\r\n\r\n        return textComponent;\r\n    }\r\n\r\n    _hideEmptySchemes() {\r\n        if (this._mySelectText.length == 0) {\r\n            this._mySelectObject.pp_setActive(false);\r\n        }\r\n        if (this._mySqueezeText.length == 0) {\r\n            this._mySqueezeObject.pp_setActive(false);\r\n        }\r\n        if (this._myThumbstickText.length == 0) {\r\n            this._myThumbstickObject.pp_setActive(false);\r\n        }\r\n        if (this._myBottomButtonText.length == 0) {\r\n            this._myBottomButtonObject.pp_setActive(false);\r\n        }\r\n        if (this._myTopButtonText.length == 0) {\r\n            this._myTopButtonObject.pp_setActive(false);\r\n        }\r\n    }\r\n}", "import { GamepadCore } from \"./gamepad_core\";\r\n\r\nexport class VirtualGamepadGamepadCore extends GamepadCore {\r\n\r\n    constructor(virtualGamepad, handPose) {\r\n        super(handPose);\r\n\r\n        this._myVirtualGamepad = virtualGamepad;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return this._myVirtualGamepad.isVisible();\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myPressed = false;\r\n        this._myButtonData.myTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myVirtualGamepad.isButtonPressed(this.getHandedness(), buttonID)) {\r\n                this._myButtonData.myPressed = true;\r\n                this._myButtonData.myTouched = true;\r\n                this._myButtonData.myValue = 1;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            this._myVirtualGamepad.getAxes(this.getHandedness(), axesID, this._myAxesData);\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\n\r\nexport let VirtualGamepadIconType = {\r\n    NONE: 0,\r\n    LABEL: 1,\r\n    IMAGE: 2,\r\n    DOT: 3,\r\n    CIRCLE: 4,\r\n    SQUARE: 5,\r\n    RING: 6,\r\n    FRAME: 7\r\n};\r\n\r\nexport class VirtualGamepadIconParams {\r\n\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n        this.myBackgroundPressedColor = \"\";\r\n        this.myIconColor = \"\";\r\n        this.myIconPressedColor = \"\";\r\n\r\n        this.myIconType = VirtualGamepadIconType.NONE;\r\n\r\n        this.myOverallHoveredBrightness = 1;\r\n\r\n        // If icon type is label\r\n\r\n        this.myLabel = \"\";\r\n        this.myLabelFontSize = 0;\r\n        this.myLabelFontFamily = \"\";\r\n        this.myLabelFontWeight = \"\";\r\n\r\n        // If icon type is image\r\n\r\n        this.myImageURL = \"\";\r\n        this.myImagePressedBrightness = 1;\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadIcon {\r\n\r\n    constructor(iconElementParent, iconParams, minSizeMultiplier, scale, engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myParams = iconParams;\r\n\r\n        this._myIconContainerElement = null;\r\n        this._myBackgroundElement = null;\r\n        this._myIconElement = null;\r\n\r\n        this._myPressed = false;\r\n\r\n        this._myMouseHover = false;\r\n        this._myMouseHoverEnabled = true;\r\n\r\n        this._myDestroyed = false;\r\n\r\n        this._build(iconElementParent, minSizeMultiplier, scale);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myPressed || !this._myMouseHover || !this._myMouseHoverEnabled) {\r\n            this._myIconContainerElement.style.filter = \"none\";\r\n        } else {\r\n            this._myIconContainerElement.style.filter = \"brightness(\" + this._myParams.myOverallHoveredBrightness + \")\";\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setPressed(false);\r\n        this._myMouseHover = false;\r\n        this._myIconContainerElement.style.filter = \"none\";\r\n    }\r\n\r\n    setPressed(pressed) {\r\n        if (this._myPressed != pressed) {\r\n            this._myPressed = pressed;\r\n\r\n            if (this._myPressed) {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundPressedColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconPressedColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconPressedColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"brightness(\" + this._myParams.myImagePressedBrightness + \")\";\r\n                    }\r\n                }\r\n            } else {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this._myMouseHover = true;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this._myMouseHover = false;\r\n    }\r\n\r\n    setMouseHoverEnabled(enabled) {\r\n        this._myMouseHoverEnabled = enabled;\r\n    }\r\n\r\n    _build(iconElementParent, minSizeMultiplier, scale) {\r\n        this._myIconContainerElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this._myIconContainerElement.style.position = \"absolute\";\r\n        this._myIconContainerElement.style.width = \"100%\";\r\n        this._myIconContainerElement.style.height = \"100%\";\r\n        iconElementParent.appendChild(this._myIconContainerElement);\r\n\r\n        this._myBackgroundElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"cx\", \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"cy\", \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, \"r\", \"50%\");\r\n        this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n        this._myIconContainerElement.appendChild(this._myBackgroundElement);\r\n\r\n        switch (this._myParams.myIconType) {\r\n            case VirtualGamepadIconType.NONE:\r\n                break;\r\n            case VirtualGamepadIconType.LABEL:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"50%\");\r\n                this._myIconElement.style.textAlign = \"center\";\r\n                this._myIconElement.style.textAnchor = \"middle\";\r\n                this._myIconElement.style.dominantBaseline = \"central\";\r\n                this._myIconElement.style.alignmentBaseline = \"central\";\r\n                this._myIconElement.style.fontFamily = this._myParams.myLabelFontFamily;\r\n                this._myIconElement.style.fontWeight = this._myParams.myLabelFontWeight;\r\n                this._myIconElement.style.fontSize = this._createSizeValue(this._myParams.myLabelFontSize * scale, minSizeMultiplier);\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.textContent = this._myParams.myLabel;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.IMAGE:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"0%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"0%\");\r\n                this._myIconElement.setAttribute(\"href\", this._myParams.myImageURL);\r\n                this._myIconElement.style.width = \"100%\";\r\n                this._myIconElement.style.height = \"100%\";\r\n                this._myIconElement.style.filter = \"none\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.DOT:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"17.5%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.CIRCLE:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"24%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.SQUARE:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"28%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"28%\");\r\n                this._myIconElement.setAttributeNS(null, \"rx\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"ry\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"width\", \"44%\");\r\n                this._myIconElement.setAttributeNS(null, \"height\", \"44%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.RING:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n                this._myIconElement.setAttributeNS(null, \"cx\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"cy\", \"50%\");\r\n                this._myIconElement.setAttributeNS(null, \"r\", \"20%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case VirtualGamepadIconType.FRAME:\r\n                this._myIconElement = Globals.getDocument(this._myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n                this._myIconElement.setAttributeNS(null, \"x\", \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, \"y\", \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, \"rx\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"ry\", \"10%\");\r\n                this._myIconElement.setAttributeNS(null, \"width\", \"37%\");\r\n                this._myIconElement.setAttributeNS(null, \"height\", \"37%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _invertColors() {\r\n        if (this._myIconElement.style.strokeWidth.length > 0) {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.stroke = this._myParams.myBackgroundColor;\r\n        } else {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myBackgroundColor;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myIconContainerElement.remove();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadIconParams, VirtualGamepadIconType } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadButtonParams {\r\n\r\n    constructor() {\r\n        this.myIconParams = new VirtualGamepadIconParams();\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadThumbstickParams {\r\n\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n\r\n        this.myMaxDistanceFromCenterMultiplier = 1;\r\n\r\n        this.myReleaseTransitionSeconds = 0.2;\r\n        this.myMoveTransitionSeconds = 0;\r\n\r\n        this.myIncludeBackgroundToDetection = false; // You can press the background of the icon to move the thumbstick, makes it harder to miss it\r\n\r\n        this.myIconParams = new VirtualGamepadIconParams();\r\n    }\r\n}\r\n\r\nexport class VirtualGamepadParams {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this.myShowOnDesktop = false;\r\n        this.myShowOnMobile = false;\r\n        this.myShowOnHeadset = false;   // Not 100% reliable, this is true if the device supports XR and it is Desktop\r\n\r\n        this.myAutoUpdateVisibility = false;\r\n\r\n        this.myOpacity = 1;\r\n\r\n        this.myInterfaceScale = 1;\r\n        this.myMarginScale = 1;\r\n\r\n        this.myReleaseOnPointerLeave = true;            // If mouse leaves the canvas it will be like it was released\r\n        this.myStopPropagatingMouseDownEvents = true;   // This can be used to make it so the rest of the game will ignore clicks on the virtual gamepad\r\n\r\n        // Advanced Params\r\n\r\n        this.myButtonParams = [];\r\n        this.myButtonParams[Handedness.LEFT] = [];\r\n        this.myButtonParams[Handedness.RIGHT] = [];\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON] = new VirtualGamepadButtonParams();\r\n\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON] = new VirtualGamepadButtonParams();\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON] = new VirtualGamepadButtonParams();\r\n\r\n        this.myThumbstickParams = [];\r\n        this.myThumbstickParams[Handedness.LEFT] = [];\r\n        this.myThumbstickParams[Handedness.RIGHT] = [];\r\n        this.myThumbstickParams[Handedness.LEFT][GamepadAxesID.THUMBSTICK] = new VirtualGamepadThumbstickParams();\r\n        this.myThumbstickParams[Handedness.RIGHT][GamepadAxesID.THUMBSTICK] = new VirtualGamepadThumbstickParams();\r\n\r\n        this.myButtonsOrder = [];\r\n        this.myButtonsOrder[Handedness.LEFT] = [null, null, null, null, null];\r\n        this.myButtonsOrder[Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        this.myThumbsticksOrder = [];\r\n        this.myThumbsticksOrder[Handedness.LEFT] = [null];\r\n        this.myThumbsticksOrder[Handedness.RIGHT] = [null];\r\n\r\n        // Even More Advanced Params\r\n\r\n        this.myValidPointerButtons = [];\r\n\r\n        this.myMarginLeft = 0;\r\n        this.myMarginRight = 0;\r\n        this.myMarginBottom = 0;\r\n\r\n        this.myThumbstickSize = 0;\r\n\r\n        this.myButtonSize = 0;\r\n        this.myButtonsRingRadius = 0;\r\n        this.myButtonsRingStartAngle = 0;\r\n        this.myButtonsRingEndAngle = 0;\r\n\r\n        this.myFontSize = 0;\r\n\r\n        this.myMinSizeMultiplier = 0;  // Can be used to specify a min size based on the view width for when the view is in portrait mode\r\n\r\n        this.myDisableMouseHoverWhenPressed = false;\r\n\r\n        this.myEngine = engine;\r\n    }\r\n\r\n    defaultConfig() {\r\n        this.myShowOnMobile = true;\r\n        this.myAutoUpdateVisibility = true;\r\n\r\n        this.myOpacity = 0.5;\r\n\r\n        // Params\r\n\r\n        let backgroundColor = \"#616161\";\r\n        let iconColor = \"#e0e0e0\";\r\n\r\n        let buttonHoveredBrightness = 0.75;\r\n        let thumbstickHoveredBrightness = 0.75;\r\n\r\n        let thumbstickIncludeBackgroundToDetection = true;\r\n\r\n        for (let handedness in this.myButtonParams) {\r\n            for (let gamepadButtonID in this.myButtonParams[handedness]) {\r\n                let buttonParams = this.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = backgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                buttonParams.myIconParams.myIconColor = iconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                buttonParams.myIconParams.myOverallHoveredBrightness = buttonHoveredBrightness;\r\n            }\r\n        }\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE].myIconParams.myIconType = VirtualGamepadIconType.SQUARE;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE].myIconParams.myIconType = VirtualGamepadIconType.SQUARE;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT].myIconParams.myIconType = VirtualGamepadIconType.FRAME;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT].myIconParams.myIconType = VirtualGamepadIconType.FRAME;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.CIRCLE;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.CIRCLE;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.RING;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = VirtualGamepadIconType.RING;\r\n\r\n        this.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK].myIconParams.myIconType = VirtualGamepadIconType.DOT;\r\n        this.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK].myIconParams.myIconType = VirtualGamepadIconType.DOT;\r\n\r\n        for (let handedness in this.myThumbstickParams) {\r\n            for (let gamepadAxesID in this.myThumbstickParams[handedness]) {\r\n                let thumbstickParams = this.myThumbstickParams[handedness][gamepadAxesID];\r\n                thumbstickParams.myBackgroundColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myBackgroundColor = iconColor;\r\n                thumbstickParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                thumbstickParams.myIconParams.myIconColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                thumbstickParams.myIconParams.myOverallHoveredBrightness = thumbstickHoveredBrightness;\r\n\r\n                thumbstickParams.myIncludeBackgroundToDetection = thumbstickIncludeBackgroundToDetection;\r\n            }\r\n        }\r\n\r\n        // Orders\r\n\r\n        this.myButtonsOrder[Handedness.LEFT][0] = [Handedness.LEFT, GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[Handedness.LEFT][1] = [Handedness.LEFT, GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[Handedness.LEFT][2] = [Handedness.LEFT, GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[Handedness.LEFT][3] = [Handedness.LEFT, GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[Handedness.LEFT][4] = [Handedness.LEFT, GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myButtonsOrder[Handedness.RIGHT][0] = [Handedness.RIGHT, GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[Handedness.RIGHT][1] = [Handedness.RIGHT, GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[Handedness.RIGHT][2] = [Handedness.RIGHT, GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[Handedness.RIGHT][3] = [Handedness.RIGHT, GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[Handedness.RIGHT][4] = [Handedness.RIGHT, GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myThumbsticksOrder[Handedness.LEFT][0] = [Handedness.LEFT, GamepadAxesID.THUMBSTICK];\r\n        this.myThumbsticksOrder[Handedness.RIGHT][0] = [Handedness.RIGHT, GamepadAxesID.THUMBSTICK];\r\n\r\n        // Sizes\r\n\r\n        this.myMarginLeft = 3;\r\n        this.myMarginRight = 3;\r\n        this.myMarginBottom = 3;\r\n\r\n        this.myThumbstickSize = 15;\r\n\r\n        this.myButtonSize = 5;\r\n        this.myButtonsRingRadius = 12;\r\n        this.myButtonsRingStartAngle = 385;\r\n        this.myButtonsRingEndAngle = 245;\r\n\r\n        this.myMinSizeMultiplier = 5 / 3;\r\n\r\n        // Cauldron\r\n\r\n        this.myDisableMouseHoverWhenPressed = true;\r\n        this.myValidPointerButtons = [0];\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { VirtualGamepadIcon } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadVirtualButton {\r\n\r\n    constructor(buttonElementParent, virtualGamepadParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        this._myButtonElement = null;\r\n        this._myButtonIcon = null;\r\n        this._myButtonDetectionElement = null;\r\n\r\n        this._myActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myButtonParams[gamepadButtonHandedness][gamepadButtonID];\r\n\r\n        this._build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex);\r\n\r\n        this._myPointerDownEventListener = this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents);\r\n        this._myPointerUpEventListener = this._onPointerUp.bind(this);\r\n        this._myPointerLeaveEventListener = this._onPointerLeave.bind(this);\r\n        this._myMouseEnterEventListener = this._onButtonEnter.bind(this);\r\n        this._myMouseLeaveEventListener = this._onButtonLeave.bind(this);\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).addEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            Globals.getBody(this._myVirtualGamepadParams.myEngine).addEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n        }\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"mouseenter\", this._myMouseEnterEventListener);\r\n        this._myButtonDetectionElement.addEventListener(\"mouseleave\", this._myMouseLeaveEventListener);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myActive && this._myPressed;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this.reset();\r\n            this._myButtonIcon.reset();\r\n        }\r\n\r\n        this._myActive = active;\r\n    }\r\n\r\n    setMouseHoverEnabled(hoverActive) {\r\n        this._myButtonIcon.setMouseHoverEnabled(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myButtonIcon.setPressed(false);\r\n\r\n        this._myPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myButtonIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myActive) return;\r\n        if (this._myPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myButtonIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myActive) return;\r\n        if (!this._myPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onButtonEnter(event) {\r\n        if (!this._myActive) return;\r\n\r\n        this._myButtonIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onButtonLeave(event) {\r\n        if (!this._myActive) return;\r\n\r\n        this._myButtonIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex) {\r\n        // Config variables used for the sizes and the like\r\n\r\n        let buttonSize = this._myVirtualGamepadParams.myButtonSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n        let buttonsRingRadius = this._myVirtualGamepadParams.myButtonsRingRadius * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let buttonRingStartAngle = this._myVirtualGamepadParams.myButtonsRingStartAngle;\r\n        let buttonRingEndAngle = this._myVirtualGamepadParams.myButtonsRingEndAngle;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonsAmount = this._myVirtualGamepadParams.myButtonsOrder[Handedness.LEFT].length;\r\n\r\n        let angleStep = (buttonRingEndAngle - buttonRingStartAngle) / (buttonsAmount - 1);\r\n\r\n        let currentAngle = Math.pp_angleClamp(buttonRingStartAngle + angleStep * virtualButtonIndex);\r\n\r\n        if (virtualButtonHandedness == Handedness.RIGHT) {\r\n            currentAngle = 270 + (270 - currentAngle);\r\n            currentAngle = Math.pp_angleClamp(currentAngle, true);\r\n        }\r\n\r\n        let counterAngle = 360 - currentAngle;\r\n\r\n        // Actual button creation\r\n\r\n        this._myButtonContainer = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n        this._myButtonContainer.style.position = \"absolute\";\r\n        this._myButtonContainer.style.width = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n        this._myButtonContainer.style.height = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n\r\n        let centerOnThumbstickBottom = marginBottom + thumbstickSize / 2 - buttonSize / 2;\r\n\r\n        this._myButtonContainer.style.bottom = this._createSizeValue(centerOnThumbstickBottom, minSizeMultiplier);\r\n\r\n        if (virtualButtonHandedness == Handedness.LEFT) {\r\n            let centerOnThumbstickLeft = marginLeft + thumbstickSize / 2 - buttonSize / 2;\r\n            this._myButtonContainer.style.left = this._createSizeValue(centerOnThumbstickLeft, minSizeMultiplier);\r\n        } else {\r\n            let centerOnThumbstickRight = marginRight + thumbstickSize / 2 - buttonSize / 2;\r\n            this._myButtonContainer.style.right = this._createSizeValue(centerOnThumbstickRight, minSizeMultiplier);\r\n        }\r\n\r\n        this._myButtonContainer.style.transform = \"rotate(\" + currentAngle + \"deg) translateX(\" + this._createSizeValue(buttonsRingRadius, minSizeMultiplier) + \")\";\r\n        buttonElementParent.appendChild(this._myButtonContainer);\r\n\r\n        this._myButtonElement = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n        this._myButtonElement.style.position = \"absolute\";\r\n        this._myButtonElement.style.width = \"100%\";\r\n        this._myButtonElement.style.height = \"100%\";\r\n        this._myButtonElement.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        this._myButtonContainer.appendChild(this._myButtonElement);\r\n\r\n        this._myButtonIcon = new VirtualGamepadIcon(this._myButtonElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myInterfaceScale, this._myVirtualGamepadParams.myEngine);\r\n\r\n        let buttonElementStill = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n        buttonElementStill.style.position = \"absolute\";\r\n        buttonElementStill.style.width = \"100%\";\r\n        buttonElementStill.style.height = \"100%\";\r\n        buttonElementStill.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        this._myButtonContainer.appendChild(buttonElementStill);\r\n\r\n        let buttonDetectionElementSVG = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        buttonDetectionElementSVG.style.position = \"absolute\";\r\n        buttonDetectionElementSVG.style.width = \"100%\";\r\n        buttonDetectionElementSVG.style.height = \"100%\";\r\n        buttonElementStill.appendChild(buttonDetectionElementSVG);\r\n\r\n        let buttonDetectionElement = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        buttonDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, \"r\", \"50%\");\r\n        buttonDetectionElement.style.fill = \"#00000000\";\r\n        buttonDetectionElementSVG.appendChild(buttonDetectionElement);\r\n\r\n        this._myButtonDetectionElement = buttonDetectionElement;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myButtonDetectionElement.removeEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).removeEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).removeEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n\r\n        this._myButtonDetectionElement.removeEventListener(\"mouseenter\", this._myMouseEnterEventListener);\r\n        this._myButtonDetectionElement.removeEventListener(\"mouseleave\", this._myPointerUpEventLis_myMouseLeaveEventListenertener);\r\n\r\n        this._myButtonIcon.destroy();\r\n\r\n        this._myButtonContainer.remove();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { VirtualGamepadIcon } from \"./virtual_gamepad_icon\";\r\n\r\nexport class VirtualGamepadVirtualThumbstick {\r\n\r\n    constructor(thumbstickElementParent, virtualGamepadParams, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID) {\r\n        this._myThumbstickElement = null;\r\n        this._myThumbstickIcon = null;\r\n        this._myThumbstickBackground = null;\r\n        this._myThumbstickDetectionElement = null;\r\n\r\n        this._myActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null\r\n\r\n        this._myThumbstickDragStartPosition = vec2_create();\r\n\r\n        this._myAxes = vec2_create();\r\n        this._myPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myThumbstickParams[gamepadThumbstickHandedness][gamepadAxesID];\r\n\r\n        this._build(thumbstickElementParent, virtualThumbstickHandedness);\r\n\r\n        this._myPointerDownEventListener = this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents);\r\n        this._myPointerUpEventListener = this._onPointerUp.bind(this);\r\n        this._myPointerMoveEventListener = this._onPointerMove.bind(this);\r\n        this._myPointerLeaveEventListener = this._onPointerLeave.bind(this);\r\n        this._myMouseEnterEventListener = this._onThumbstickEnter.bind(this);\r\n        this._myMouseLeaveEventListener = this._onThumbstickLeave.bind(this);\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).addEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).addEventListener(\"pointermove\", this._myPointerMoveEventListener);\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            Globals.getBody(this._myVirtualGamepadParams.myEngine).addEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n        }\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseenter\", this._myMouseEnterEventListener);\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseleave\", this._myMouseLeaveEventListener);\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myActive && this._myPressed;\r\n    }\r\n\r\n    getAxes() {\r\n        return this._myAxes;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this.reset();\r\n            this._myThumbstickIcon.reset();\r\n        }\r\n\r\n        this._myActive = active;\r\n    }\r\n\r\n    setMouseHoverEnabled(hoverActive) {\r\n        this._myThumbstickIcon.setMouseHoverEnabled(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myThumbstickIcon.setPressed(false);\r\n\r\n        this._myAxes[0] = 0;\r\n        this._myAxes[1] = 0;\r\n        this._myPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myReleaseTransitionSeconds + \"s ease 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(0px, 0px)\";\r\n    }\r\n\r\n    update(dt) {\r\n        this._myThumbstickIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myActive) return;\r\n        if (this._myPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myThumbstickIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myThumbstickDragStartPosition[0] = event.clientX;\r\n        this._myThumbstickDragStartPosition[1] = event.clientY;\r\n\r\n        this._myPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myActive) return;\r\n        if (!this._myPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onThumbstickEnter(event) {\r\n        this._myThumbstickIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onThumbstickLeave(event) {\r\n        this._myThumbstickIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        if (!this._myActive) return;\r\n        if (!this._myPressed) return;\r\n\r\n        if (event.pointerId != this._myPointerID) return;\r\n\r\n        let mouseX = event.clientX;\r\n        let mouseY = event.clientY;\r\n\r\n        let backgroundRect = this._myThumbstickBackground.getBoundingClientRect();\r\n        let maxDistanceFromCenter = (backgroundRect.width / 2) * this._myParams.myMaxDistanceFromCenterMultiplier;\r\n\r\n        let xDiff = mouseX - this._myThumbstickDragStartPosition[0];\r\n        let yDiff = mouseY - this._myThumbstickDragStartPosition[1];\r\n\r\n        let angle = Math.atan2(yDiff, xDiff);\r\n        let distanceFromDragStart = Math.min(maxDistanceFromCenter, Math.hypot(xDiff, yDiff));\r\n\r\n        let translateThumbstickX = distanceFromDragStart * Math.cos(angle);\r\n        let translateThumbstickY = distanceFromDragStart * Math.sin(angle);\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myMoveTransitionSeconds + \"s ease-out 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(\" + translateThumbstickX + \"px, \" + translateThumbstickY + \"px)\";\r\n\r\n        this._myAxes[0] = translateThumbstickX / maxDistanceFromCenter;\r\n        this._myAxes[1] = -(translateThumbstickY / maxDistanceFromCenter);\r\n    }\r\n\r\n    _build(thumbstickElementParent, virtualThumbstickHandedness) {\r\n        // Config variables used for the sizes and the like\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        // Actual thumbstick creation\r\n\r\n        this._myThumbstickContainer = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n        this._myThumbstickContainer.style.position = \"absolute\";\r\n        this._myThumbstickContainer.style.width = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        this._myThumbstickContainer.style.height = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        this._myThumbstickContainer.style.bottom = this._createSizeValue(marginBottom, minSizeMultiplier);\r\n\r\n        if (virtualThumbstickHandedness == Handedness.LEFT) {\r\n            this._myThumbstickContainer.style.left = this._createSizeValue(marginLeft, minSizeMultiplier);\r\n        } else {\r\n            this._myThumbstickContainer.style.right = this._createSizeValue(marginRight, minSizeMultiplier);\r\n        }\r\n\r\n        thumbstickElementParent.appendChild(this._myThumbstickContainer);\r\n\r\n        let thumbstickContainerSVG = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        thumbstickContainerSVG.style.position = \"absolute\";\r\n        thumbstickContainerSVG.style.width = \"100%\";\r\n        thumbstickContainerSVG.style.height = \"100%\";\r\n        this._myThumbstickContainer.appendChild(thumbstickContainerSVG);\r\n\r\n        this._myThumbstickBackground = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"cx\", \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"cy\", \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, \"r\", \"48%\");\r\n        this._myThumbstickBackground.style.fill = this._myParams.myBackgroundColor;\r\n        thumbstickContainerSVG.appendChild(this._myThumbstickBackground);\r\n\r\n        this._myThumbstickElement = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n        this._myThumbstickElement.style.position = \"absolute\";\r\n        this._myThumbstickElement.style.width = \"34%\";\r\n        this._myThumbstickElement.style.height = \"34%\";\r\n        this._myThumbstickElement.style.top = \"33%\";\r\n        this._myThumbstickElement.style.left = \"33%\";\r\n        this._myThumbstickContainer.appendChild(this._myThumbstickElement);\r\n\r\n        this._myThumbstickIcon = new VirtualGamepadIcon(this._myThumbstickElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myScale, this._myVirtualGamepadParams.myEngine);\r\n\r\n        if (this._myParams.myIncludeBackgroundToDetection) {\r\n            let thumbstickBackgroundDetectionElementSVG = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickBackgroundDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickBackgroundDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickBackgroundDetectionElementSVG.style.height = \"100%\";\r\n            this._myThumbstickContainer.appendChild(thumbstickBackgroundDetectionElementSVG);\r\n\r\n            let thumbstickBackgroundDetectionElement = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, \"r\", \"48%\");\r\n            thumbstickBackgroundDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickBackgroundDetectionElementSVG.appendChild(thumbstickBackgroundDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickBackgroundDetectionElement;\r\n        } else {\r\n            let thumbstickElementStill = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElement(\"div\");\r\n            thumbstickElementStill.style.position = \"absolute\";\r\n            thumbstickElementStill.style.width = \"34%\";\r\n            thumbstickElementStill.style.height = \"34%\";\r\n            thumbstickElementStill.style.top = \"33%\";\r\n            thumbstickElementStill.style.left = \"33%\";\r\n            this._myThumbstickContainer.appendChild(thumbstickElementStill);\r\n\r\n            let thumbstickDetectionElementSVG = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickElementStill.appendChild(thumbstickDetectionElementSVG);\r\n\r\n            let thumbstickDetectionElement = Globals.getDocument(this._myVirtualGamepadParams.myEngine).createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"cx\", \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"cy\", \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, \"r\", \"50%\");\r\n            thumbstickDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickDetectionElementSVG.appendChild(thumbstickDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickDetectionElement;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        this._myThumbstickDetectionElement.removeEventListener(\"pointerdown\", this._myPointerDownEventListener);\r\n\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).removeEventListener(\"pointerup\", this._myPointerUpEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).removeEventListener(\"pointermove\", this._myPointerMoveEventListener);\r\n        Globals.getBody(this._myVirtualGamepadParams.myEngine).removeEventListener(\"pointerleave\", this._myPointerLeaveEventListener);\r\n\r\n        this._myThumbstickDetectionElement.removeEventListener(\"mouseenter\", this._myMouseEnterEventListener);\r\n        this._myThumbstickDetectionElement.removeEventListener(\"mouseleave\", this._myPointerUpEventLis_myMouseLeaveEventListenertener);\r\n\r\n        this._myThumbstickIcon.destroy();\r\n\r\n        this._myThumbstickContainer.remove();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { BrowserUtils } from \"../../../cauldron/utils/browser_utils\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadAxesID, GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadParams } from \"./virtual_gamepad_params\";\r\nimport { VirtualGamepadVirtualButton } from \"./virtual_gamepad_virtual_button\";\r\nimport { VirtualGamepadVirtualThumbstick } from \"./virtual_gamepad_virtual_thumbstick\";\r\n\r\nexport class VirtualGamepad {\r\n\r\n    constructor(params = new VirtualGamepadParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = true;\r\n        this._myVirtualGamepadContainer = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons = [];\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT] = [];\r\n\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myButtonsAmount = this._myVirtualGamepadVirtualButtons[Handedness.LEFT].length;\r\n\r\n        this._myVirtualGamepadVirtualThumbsticks = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.RIGHT] = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.LEFT][GamepadAxesID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualThumbsticks[Handedness.RIGHT][GamepadAxesID.THUMBSTICK] = null;\r\n\r\n        this._myGestureStartEventListener = null;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVirtualGamepadContainer != null) {\r\n                if (this._myVisible) {\r\n                    this._myVirtualGamepadContainer.style.display = \"block\";\r\n                } else {\r\n                    this._myVirtualGamepadContainer.style.display = \"none\";\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                    for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                        if (button != null) {\r\n                            button.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                    for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                        if (thumbstick != null) {\r\n                            thumbstick.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isButtonPressed(handedness, gamepadButtonID) {\r\n        if (!this._myVisible) return false;\r\n\r\n        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n        if (button != null) {\r\n            return button.isPressed();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAxes(handedness, gamepadAxesID, outAxes = vec2_create(0, 0)) {\r\n        if (!this._myVisible) return outAxes;\r\n\r\n        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n        if (thumbstick != null) {\r\n            outAxes.vec2_copy(thumbstick.getAxes());\r\n        }\r\n\r\n        return outAxes;\r\n    }\r\n\r\n    start() {\r\n        this._buildVirtualGamepad();\r\n\r\n        let currentVisible = this._myVisible;\r\n        this._myVisible = !this._myVisible;\r\n        this.setVisible(currentVisible);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myAutoUpdateVisibility) {\r\n            if (XRUtils.isSessionActive(this._myParams.myEngine) && XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(false);\r\n            } else if (this._myParams.myShowOnDesktop && BrowserUtils.isDesktop(this._myParams.myEngine) && !XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnHeadset && BrowserUtils.isDesktop(this._myParams.myEngine) && XRUtils.isVRSupported(this._myParams.myEngine)) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnMobile && BrowserUtils.isMobile(this._myParams.myEngine)) {\r\n                this.setVisible(true);\r\n            } else {\r\n                this.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myVisible) {\r\n            for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                    let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                    if (button != null) {\r\n                        button.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                    if (thumbstick != null) {\r\n                        thumbstick.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._setMouseHoverEnabled(!(this._myParams.myDisableMouseHoverWhenPressed && this._isAnyElementPressed()));\r\n        }\r\n    }\r\n\r\n    _buildVirtualGamepad() {\r\n        this._setupDocumentBody();\r\n\r\n        this._myVirtualGamepadContainer = Globals.getDocument(this._myParams.myEngine).createElement(\"div\");\r\n        this._myVirtualGamepadContainer.style.display = \"block\";\r\n        this._myVirtualGamepadContainer.style.opacity = this._myParams.myOpacity.toString();\r\n        Globals.getBody(this._myParams.myEngine).appendChild(this._myVirtualGamepadContainer);\r\n\r\n        let leftDiv = Globals.getDocument(this._myParams.myEngine).createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(leftDiv);\r\n\r\n        let rightDiv = Globals.getDocument(this._myParams.myEngine).createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(rightDiv);\r\n\r\n        let buttonsAmount = this._myParams.myButtonsOrder[Handedness.LEFT].length;\r\n        for (let i = 0; i < buttonsAmount; i++) {\r\n            if (this._myParams.myButtonsOrder[Handedness.LEFT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[Handedness.LEFT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[Handedness.LEFT][i][1];\r\n                this._buildButton(leftDiv, Handedness.LEFT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n\r\n            if (this._myParams.myButtonsOrder[Handedness.RIGHT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[Handedness.RIGHT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[Handedness.RIGHT][i][1];\r\n                this._buildButton(rightDiv, Handedness.RIGHT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n        }\r\n\r\n        let thumbsticksAmount = this._myParams.myThumbsticksOrder[Handedness.LEFT].length;\r\n        for (let i = 0; i < thumbsticksAmount; i++) {\r\n            if (this._myParams.myThumbsticksOrder[Handedness.LEFT][i] != null) {\r\n                let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[Handedness.LEFT][i][0];\r\n                let gamepadAxesID = this._myParams.myThumbsticksOrder[Handedness.LEFT][i][1];\r\n                this._buildThumbstick(leftDiv, Handedness.LEFT, gamepadThumbstickHandedness, gamepadAxesID);\r\n            }\r\n\r\n            if (this._myParams.myThumbsticksOrder[Handedness.RIGHT][i] != null) {\r\n                let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[Handedness.RIGHT][i][0];\r\n                let gamepadAxesID = this._myParams.myThumbsticksOrder[Handedness.RIGHT][i][1];\r\n                this._buildThumbstick(rightDiv, Handedness.RIGHT, gamepadThumbstickHandedness, gamepadAxesID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupDocumentBody() {\r\n        Globals.getBody(this._myParams.myEngine).style.overflow = \"hidden\";\r\n        Globals.getBody(this._myParams.myEngine).style.userSelect = \"none\";\r\n        Globals.getBody(this._myParams.myEngine).style.webkitUserSelect = \"none\";\r\n        Globals.getBody(this._myParams.myEngine).style.webkitTapHighlightColor = \"transparent\";\r\n        Globals.getBody(this._myParams.myEngine).style.touchAction = \"none\";\r\n\r\n        this._myGestureStartEventListener = function (e) {\r\n            e.preventDefault();\r\n        };\r\n        Globals.getDocument(this._myParams.myEngine).addEventListener(\"gesturestart\", this._myGestureStartEventListener);\r\n    }\r\n\r\n    _buildButton(buttonElementParent, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        let virtualGamepadVirtualButton = new VirtualGamepadVirtualButton(buttonElementParent, this._myParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID);\r\n        this._myVirtualGamepadVirtualButtons[gamepadButtonHandedness][gamepadButtonID] = virtualGamepadVirtualButton;\r\n    }\r\n\r\n    _buildThumbstick(thumbstickElementParent, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID) {\r\n        let virtualGamepadVirtualThumbstick = new VirtualGamepadVirtualThumbstick(thumbstickElementParent, this._myParams, virtualThumbstickHandedness, gamepadThumbstickHandedness, gamepadAxesID);\r\n        this._myVirtualGamepadVirtualThumbsticks[gamepadThumbstickHandedness][gamepadAxesID] = virtualGamepadVirtualThumbstick;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _isAnyElementPressed() {\r\n        let anyElementPressed = false;\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null && button.isPressed()) {\r\n                    anyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!anyElementPressed) {\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                    if (thumbstick != null && thumbstick.isPressed()) {\r\n                        anyElementPressed = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return anyElementPressed;\r\n    }\r\n\r\n    _setMouseHoverEnabled(hoverActive) {\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null) {\r\n                    button.setMouseHoverEnabled(hoverActive);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n            for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                if (thumbstick != null) {\r\n                    thumbstick.setMouseHoverEnabled(hoverActive);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        Globals.getDocument(this._myParams.myEngine).removeEventListener(\"gesturestart\", this._myGestureStartEventListener);\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n\r\n                button.destroy();\r\n            }\r\n        }\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n            for (let gamepadAxesID in this._myVirtualGamepadVirtualThumbsticks[handedness]) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness][gamepadAxesID];\r\n                thumbstick.destroy();\r\n            }\r\n        }\r\n\r\n        this._myVirtualGamepadContainer.remove();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { Handedness } from \"../../cauldron/input_types\";\r\nimport { GamepadButtonID } from \"../gamepad_buttons\";\r\nimport { VirtualGamepadGamepadCore } from \"../gamepad_cores/virtual_gamepad_gamepad_core\";\r\nimport { VirtualGamepad } from \"./virtual_gamepad\";\r\nimport { VirtualGamepadParams } from \"./virtual_gamepad_params\";\r\n\r\nexport class VirtualGamepadComponent extends Component {\r\n    static TypeName = \"pp-virtual-gamepad\";\r\n    static Properties = {\r\n        _myShowOnDesktop: Property.bool(false),   // You may have to enable headset too\r\n        _myShowOnMobile: Property.bool(true),\r\n        _myShowOnHeadset: Property.bool(false),   // Not 100% reliable, this is true if the device supports XR and it is Desktop\r\n        _myAddToUniversalGamepad: Property.bool(true),\r\n        _myOpacity: Property.float(0.5),\r\n        _myIconColor: Property.string(\"#e0e0e0\"),\r\n        _myBackgroundColor: Property.string(\"#616161\"),\r\n        _myInterfaceScale: Property.float(1),\r\n        _myMarginScale: Property.float(1),\r\n\r\n        ADVANCED_PARAMS_BELOW: Property.string(\"\"),\r\n\r\n        _myLabelFontSize: Property.float(2),\r\n        _myLabelFontFamily: Property.string(\"sans-serif\"),\r\n        _myLabelFontWeight: Property.string(\"bold\"),\r\n        _myImagePressedBrightness: Property.float(0.5),\r\n\r\n        _myLeftSelectButtonVisible: Property.bool(true),\r\n        _myLeftSelectButtonOrderIndex: Property.int(1),\r\n        _myLeftSelectButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Frame\"),\r\n        _myLeftSelectButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftSqueezeButtonVisible: Property.bool(true),\r\n        _myLeftSqueezeButtonOrderIndex: Property.int(0),\r\n        _myLeftSqueezeButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Square\"),\r\n        _myLeftSqueezeButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftThumbstickButtonVisible: Property.bool(true),\r\n        _myLeftThumbstickButtonOrderIndex: Property.int(4),\r\n        _myLeftThumbstickButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Dot\"),\r\n        _myLeftThumbstickButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftTopButtonVisible: Property.bool(true),\r\n        _myLeftTopButtonOrderIndex: Property.int(2),\r\n        _myLeftTopButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Circle\"),\r\n        _myLeftTopButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myLeftBottomButtonVisible: Property.bool(true),\r\n        _myLeftBottomButtonOrderIndex: Property.int(3),\r\n        _myLeftBottomButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Ring\"),\r\n        _myLeftBottomButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightSelectButtonVisible: Property.bool(true),\r\n        _myRightSelectButtonOrderIndex: Property.int(1),\r\n        _myRightSelectButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Frame\"),\r\n        _myRightSelectButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightSqueezeButtonVisible: Property.bool(true),\r\n        _myRightSqueezeButtonOrderIndex: Property.int(0),\r\n        _myRightSqueezeButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Square\"),\r\n        _myRightSqueezeButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightThumbstickButtonVisible: Property.bool(true),\r\n        _myRightThumbstickButtonOrderIndex: Property.int(4),\r\n        _myRightThumbstickButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Dot\"),\r\n        _myRightThumbstickButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightTopButtonVisible: Property.bool(true),\r\n        _myRightTopButtonOrderIndex: Property.int(2),\r\n        _myRightTopButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Circle\"),\r\n        _myRightTopButtonIconLabelOrImageUrl: Property.string(\"\"),\r\n\r\n        _myRightBottomButtonVisible: Property.bool(true),\r\n        _myRightBottomButtonOrderIndex: Property.int(3),\r\n        _myRightBottomButtonIconType: Property.enum([\"None\", \"Label\", \"Image\", \"Dot\", \"Circle\", \"Square\", \"Ring\", \"Frame\"], \"Ring\"),\r\n        _myRightBottomButtonIconLabelOrImageUrl: Property.string(\"\")\r\n    };\r\n\r\n    start() {\r\n        let params = new VirtualGamepadParams(this.engine);\r\n        params.defaultConfig();\r\n\r\n        for (let handedness in params.myButtonParams) {\r\n            for (let gamepadButtonID in params.myButtonParams[handedness]) {\r\n                let buttonParams = params.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = this._myBackgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        for (let handedness in params.myThumbstickParams) {\r\n            for (let gamepadAxesID in params.myThumbstickParams[handedness]) {\r\n                let thumbstickParams = params.myThumbstickParams[handedness][gamepadAxesID];\r\n                thumbstickParams.myBackgroundColor = this._myBackgroundColor;\r\n                thumbstickParams.myIconParams.myBackgroundColor = this._myIconColor;\r\n                thumbstickParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                thumbstickParams.myIconParams.myIconColor = this._myBackgroundColor;\r\n                thumbstickParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        params.myOpacity = this._myOpacity;\r\n\r\n        params.myInterfaceScale = this._myInterfaceScale;\r\n        params.myMarginScale = this._myMarginScale;\r\n\r\n        params.myShowOnDesktop = this._myShowOnDesktop;\r\n        params.myShowOnMobile = this._myShowOnMobile;\r\n        params.myShowOnHeadset = this._myShowOnHeadset;\r\n\r\n        if (params.myShowOnDesktop || params.myShowOnMobile || params.myShowOnHeadset) {\r\n            params.myAutoUpdateVisibility = true;\r\n        } else {\r\n            params.myAutoUpdateVisibility = false;\r\n        }\r\n\r\n        this._advancedConfig(params);\r\n\r\n        this._myVirtualGamepad = new VirtualGamepad(params);\r\n        this._myVirtualGamepad.setVisible(false);\r\n\r\n        this._myVirtualGamepad.start();\r\n\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myLeftVirtualGamepadGamepadCore = null;\r\n        this._myRightVirtualGamepadGamepadCore = null;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n\r\n            if (this._myAddToUniversalGamepad) {\r\n                this._myLeftVirtualGamepadGamepadCore = new VirtualGamepadGamepadCore(this._myVirtualGamepad, Globals.getLeftGamepad(this.engine).getGamepadCore(\"pp_left_xr_gamepad\").getHandPose());\r\n                this._myRightVirtualGamepadGamepadCore = new VirtualGamepadGamepadCore(this._myVirtualGamepad, Globals.getRightGamepad(this.engine).getGamepadCore(\"pp_right_xr_gamepad\").getHandPose());\r\n\r\n                Globals.getLeftGamepad(this.engine).addGamepadCore(\"pp_left_virtual_gamepad\", this._myLeftVirtualGamepadGamepadCore);\r\n                Globals.getRightGamepad(this.engine).addGamepadCore(\"pp_right_virtual_gamepad\", this._myRightVirtualGamepadGamepadCore);\r\n            }\r\n        }\r\n\r\n        this._myVirtualGamepad.update(dt);\r\n    }\r\n\r\n    _advancedConfig(params) {\r\n        params.myButtonsOrder[Handedness.LEFT] = [null, null, null, null, null];\r\n        params.myButtonsOrder[Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSelectButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftSelectButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSqueezeButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftSqueezeButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myLeftThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftThumbstickButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftThumbstickButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftTopButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftTopButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.LEFT][GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftBottomButtonVisible) {\r\n                params.myButtonsOrder[Handedness.LEFT][this._myLeftBottomButtonOrderIndex] = [Handedness.LEFT, GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myRightSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSelectButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightSelectButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myRightSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSqueezeButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightSqueezeButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myRightThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightThumbstickButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightThumbstickButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightTopButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightTopButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[Handedness.RIGHT][GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightBottomButtonVisible) {\r\n                params.myButtonsOrder[Handedness.RIGHT][this._myRightBottomButtonOrderIndex] = [Handedness.RIGHT, GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getLeftGamepad(this.engine)?.removeGamepadCore(\"pp_left_virtual_gamepad\");\r\n        Globals.getRightGamepad(this.engine)?.removeGamepadCore(\"pp_right_virtual_gamepad\");\r\n\r\n        this._myLeftVirtualGamepadGamepadCore.destroy();\r\n        this._myRightVirtualGamepadGamepadCore.destroy();\r\n\r\n        this._myVirtualGamepad.destroy();\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\n\r\nexport class SetPlayerHeightComponent extends Component {\r\n    static TypeName = \"pp-set-player-height\";\r\n    static Properties = {\r\n        _myEyesHeight: Property.float(1.65),\r\n        _mySetOnlyOnStart: Property.bool(false)\r\n    };\r\n\r\n    start() {\r\n        let localPosition = this.object.pp_getPositionLocal();\r\n        this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n\r\n        this._myHeightSetOnce = false;\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this.engine);\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        if (this.active && (!this._mySetOnlyOnStart || !this._myHeightSetOnce)) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            if (XRUtils.isReferenceSpaceFloorBased(this.engine)) {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else if (XRUtils.isDeviceEmulated(this.engine)) {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else {\r\n                this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n            }\r\n\r\n            this._myHeightSetOnce = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this.active && !this._mySetOnlyOnStart) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            this.object.pp_setPositionLocal(vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class SetHandLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-hand-local-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\")\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        Globals.getHandPose(this._myHandednessType, this.engine).registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getHandPose(this._myHandednessType, this.engine)?.unregisterPoseUpdatedEventListener(this);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHandLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let handPoseTransform = quat2_create()\r\n    return function onPoseUpdated(pose) {\r\n        if (this.active && XRUtils.isSessionActive(this.engine)) {\r\n            if (pose.isValid()) {\r\n                this.object.pp_setTransformLocalQuat(pose.getTransformQuat(handPoseTransform, null));\r\n            }\r\n        }\r\n    };\r\n}();", "import { Component } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create, quat_create, vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class SetHeadLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-head-local-transform\";\r\n    static Properties = {};\r\n\r\n    start() {\r\n        Globals.getHeadPose(this.engine).registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getHeadPose(this.engine)?.unregisterPoseUpdatedEventListener(this);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetHeadLocalTransformComponent.prototype.update = function () {\r\n    let cameraNonXRRotation = quat_create();\r\n    let cameraNonXRUp = vec3_create();\r\n    let cameraNonXRPosition = vec3_create();\r\n    return function update(dt) {\r\n        if (!XRUtils.isSessionActive(this.engine)) {\r\n            let cameraNonXR = Globals.getPlayerObjects(this.engine).myCameraNonXR;\r\n\r\n            cameraNonXRRotation = cameraNonXR.pp_getRotationLocalQuat(cameraNonXRRotation);\r\n            if (Globals.isPoseForwardFixed(this.engine)) {\r\n                cameraNonXRRotation.quat_rotateAxisRadians(Math.PI, cameraNonXRRotation.quat_getUp(cameraNonXRUp), cameraNonXRRotation);\r\n            }\r\n            this.object.pp_setPositionLocal(cameraNonXR.pp_getPositionLocal(cameraNonXRPosition));\r\n            this.object.pp_setRotationLocalQuat(cameraNonXRRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nSetHeadLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let headPoseTransform = quat2_create();\r\n    return function onPoseUpdated(pose) {\r\n        if (this.active && XRUtils.isSessionActive(this.engine)) {\r\n            if (pose.isValid()) {\r\n                this.object.pp_setTransformLocalQuat(pose.getTransformQuat(headPoseTransform, null));\r\n            }\r\n        }\r\n    }\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { quat2_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class SetTrackedHandJointLocalTransformComponent extends Component {\r\n    static TypeName = \"pp-set-tracked-hand-joint-local-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _mySetLocalScaleAsJointRadius: Property.bool(false),\r\n        _myJointID: Property.enum(\r\n            [\r\n                \"Wrist\",\r\n                \"Thumb Metacarpal\", \"Thumb Phalanx Proximal\", \"Thumb Phalanx Distal\", \"Thumb Tip\",\r\n                \"Index Metacarpal\", \"Index Phalanx Proximal\", \"Index Phalanx Intermediate\", \"Index Phalanx Distal\", \"Index Tip\",\r\n                \"Middle Metacarpal\", \"Middle Phalanx Proximal\", \"Middle Phalanx Intermediate\", \"Middle Phalanx Distal\", \"Middle Tip\",\r\n                \"Ring Metacarpal\", \"Ring Phalanx Proximal\", \"Ring Phalanx Intermediate\", \"Ring Phalanx Distal\", \"Ring Tip\",\r\n                \"Pinky Metacarpal\", \"Pinky Phalanx Proximal\", \"Pinky Phalanx Intermediate\", \"Pinky Phalanx Distal\", \"Pinky Tip\"\r\n            ],\r\n            \"Wrist\")\r\n    };\r\n\r\n    start() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDType = InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        Globals.getTrackedHandPose(this._myHandednessType, this.engine).getJointPose(this._myJointIDType).registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    }\r\n\r\n    onPoseUpdated() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    onDestroy() {\r\n        Globals.getTrackedHandPose(this._myHandednessType, this.engine)?.getJointPose(this._myJointIDType)?.unregisterPoseUpdatedEventListener(this);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nSetTrackedHandJointLocalTransformComponent.prototype.onPoseUpdated = function () {\r\n    let jointPoseTransform = quat2_create()\r\n    return function onPoseUpdated(pose) {\r\n        if (this.active && XRUtils.isSessionActive(this.engine)) {\r\n            if (pose.isValid()) {\r\n                this.object.pp_setTransformLocalQuat(pose.getTransformQuat(jointPoseTransform, null));\r\n\r\n                if (this._mySetLocalScaleAsJointRadius) {\r\n                    this.object.pp_setScaleLocal(pose.getJointRadius());\r\n                }\r\n            }\r\n        }\r\n    }\r\n}();", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { InputUtils } from \"../../cauldron/input_utils\";\r\n\r\nexport class CopyHandTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-hand-transform\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\")\r\n    };\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n    }\r\n\r\n    update(dt) {\r\n        let hand = Globals.getPlayerObjects(this.engine).myHands[this._myHandednessType];\r\n        this.object.pp_setTransformQuat(hand.pp_getTransformQuat());\r\n        this.object.pp_setScale(hand.pp_getScale());\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class CopyHeadTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-head-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let head = Globals.getPlayerObjects(this.engine).myHead;\r\n        this.object.pp_setTransformQuat(head.pp_getTransformQuat());\r\n        this.object.pp_setScale(head.pp_getScale());\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class CopyPlayerTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-player-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let player = Globals.getPlayerObjects(this.engine).myPlayer;\r\n        this.object.pp_setTransformQuat(player.pp_getTransformQuat());\r\n        this.object.pp_setScale(player.pp_getScale());\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class CopyReferenceSpaceTransformComponent extends Component {\r\n    static TypeName = \"pp-copy-reference-space-transform\";\r\n    static Properties = {};\r\n\r\n    update(dt) {\r\n        let referenceSpace = Globals.getPlayerObjects(this.engine).myReferenceSpace;\r\n        this.object.pp_setTransformQuat(referenceSpace.pp_getTransformQuat());\r\n        this.object.pp_setScale(referenceSpace.pp_getScale());\r\n    }\r\n}", "export let ToolHandedness = {\r\n    NONE: null,\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nexport let ToolInputSourceType = {\r\n    NONE: null,\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};", "import { Component, MeshComponent, Property, ViewComponent } from \"@wonderlandengine/api\";\r\nimport { Cursor, CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../cauldron/utils/xr_utils\";\r\nimport { FingerCursorComponent } from \"../../../input/cauldron/components/finger_cursor_component\";\r\nimport { InputUtils } from \"../../../input/cauldron/input_utils\";\r\nimport { quat2_create, vec3_create, vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\n\r\nexport class ToolCursorComponent extends Component {\r\n    static TypeName = \"pp-tool-cursor\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"Left\", \"Right\"], \"Left\"),\r\n        _myApplyDefaultCursorOffset: Property.bool(true),\r\n        _myPulseOnHover: Property.bool(false),\r\n        _myShowFingerCursor: Property.bool(false),\r\n        _myUpdatePointerCursorStyle: Property.bool(true)\r\n    }\r\n\r\n    init() {\r\n        this._myHandednessType = InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myCursorPositionDefaultOffset = vec3_create(0, -0.035, 0.05);\r\n        this._myCursorRotationDefaultOffset = vec3_create(30, 0, 0);\r\n\r\n        this._myCursorMeshScale = vec3_create(0.0025, 0.0025, 0.0025);\r\n        this._myCursorColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this._myCursorTargetCollisionGroup = 7; // Keep this in sync with Widgets \r\n    }\r\n\r\n    start() {\r\n        this._myToolCursorObject = this.object.pp_addObject();\r\n\r\n        this._myCursorObjectXR = this._myToolCursorObject.pp_addObject();\r\n\r\n        if (this._myApplyDefaultCursorOffset) {\r\n            this._myCursorObjectXR.pp_setPositionLocal(this._myCursorPositionDefaultOffset);\r\n            this._myCursorObjectXR.pp_rotateObject(this._myCursorRotationDefaultOffset);\r\n        }\r\n\r\n        {\r\n            this._myCursorMeshobject = this._myCursorObjectXR.pp_addObject();\r\n            this._myCursorMeshobject.pp_setScale(this._myCursorMeshScale);\r\n\r\n            let cursorMeshComponent = this._myCursorMeshobject.pp_addComponent(MeshComponent);\r\n            cursorMeshComponent.mesh = Globals.getDefaultMeshes(this.engine).mySphere;\r\n            cursorMeshComponent.material = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            cursorMeshComponent.material.color = this._myCursorColor;\r\n\r\n            this._myCursorComponentXR = this._myCursorObjectXR.pp_addComponent(Cursor, {\r\n                \"collisionGroup\": this._myCursorTargetCollisionGroup,\r\n                \"handedness\": this._myHandedness + 1,\r\n                \"cursorObject\": this._myCursorMeshobject,\r\n                \"styleCursor\": false\r\n            });\r\n\r\n            this._myCursorComponentXR.rayCastMode = 0; // Collision\r\n            if (this._myPulseOnHover) {\r\n                this._myCursorComponentXR.globalTarget.onHover.add(this._pulseOnHover.bind(this), { id: this });\r\n            }\r\n        }\r\n\r\n        this._myCursorObjectNonXR = this._myToolCursorObject.pp_addObject();\r\n\r\n        {\r\n            this._myCursorComponentNonXR = this._myCursorObjectNonXR.pp_addComponent(Cursor, {\r\n                \"collisionGroup\": this._myCursorTargetCollisionGroup,\r\n                \"handedness\": this._myHandedness + 1,\r\n                \"styleCursor\": this._myUpdatePointerCursorStyle\r\n            });\r\n\r\n            this._myCursorComponentNonXR.rayCastMode = 0; // Collision\r\n            if (this._myPulseOnHover) {\r\n                this._myCursorComponentNonXR.globalTarget.onHover.add(this._pulseOnHover.bind(this), { id: this });\r\n            }\r\n            this._myCursorComponentNonXR.pp_setViewComponent(Globals.getPlayerObjects(this.engine).myCameraNonXR.pp_getComponent(ViewComponent));\r\n        }\r\n\r\n        let fingerCursorMeshObject = null;\r\n        let fingerCollisionSize = 0.0125;\r\n\r\n        if (this._myShowFingerCursor) {\r\n            fingerCursorMeshObject = this._myToolCursorObject.pp_addObject();\r\n\r\n            let meshComponent = fingerCursorMeshObject.pp_addComponent(MeshComponent);\r\n            meshComponent.mesh = Globals.getDefaultMeshes(this.engine).mySphere;\r\n            meshComponent.material = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            meshComponent.material.color = this._myCursorColor;\r\n\r\n            fingerCursorMeshObject.pp_setScale(fingerCollisionSize);\r\n        }\r\n\r\n        this._myFingerCursorObject = this._myToolCursorObject.pp_addObject();\r\n        this._myFingerCursorComponent = this._myFingerCursorObject.pp_addComponent(FingerCursorComponent, {\r\n            \"_myHandedness\": this._myHandedness,\r\n            \"_myMultipleClicksEnabled\": true,\r\n            \"_myCollisionGroup\": this._myCursorTargetCollisionGroup,\r\n            \"_myCollisionSize\": fingerCollisionSize,\r\n            \"_myCursorObject\": fingerCursorMeshObject\r\n        });\r\n\r\n        this._myCursorComponentXR.active = false;\r\n        this._myCursorComponentNonXR.active = false;\r\n        this._myFingerCursorComponent.active = false;\r\n    }\r\n\r\n    update(dt) {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    _isUsingHand() {\r\n        let usingHand = false;\r\n\r\n        if (XRUtils.getSession(this.engine) && XRUtils.getSession(this.engine).inputSources) {\r\n            for (let i = 0; i < XRUtils.getSession(this.engine).inputSources.length; i++) {\r\n                let input = XRUtils.getSession(this.engine).inputSources[i];\r\n                if (input.hand && input.handedness == this._myHandednessType) {\r\n                    usingHand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return usingHand;\r\n    }\r\n\r\n    _pulseOnHover(object) {\r\n        let targetComponent = object.pp_getComponent(CursorTarget);\r\n\r\n        if (targetComponent && !targetComponent.isSurface) {\r\n            if (this._myHandedness == 0) {\r\n                if (Globals.getLeftGamepad(this.engine) != null) {\r\n                    Globals.getLeftGamepad(this.engine).pulse(0.4, 0);\r\n                }\r\n            } else {\r\n                if (Globals.getRightGamepad(this.engine) != null) {\r\n                    Globals.getRightGamepad(this.engine).pulse(0.4, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myCursorComponentXR.globalTarget.onHover.remove(this);\r\n        this._myCursorComponentNonXR.globalTarget.onHover.remove(this);\r\n    }\r\n}\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nToolCursorComponent.prototype.update = function () {\r\n    let transformQuat = quat2_create();\r\n    return function update(dt) {\r\n        let usingHand = this._isUsingHand();\r\n\r\n        this._myFingerCursorComponent.active = usingHand;\r\n\r\n        if (usingHand) {\r\n            this._myCursorComponentXR.active = false;\r\n            this._myCursorComponentNonXR.active = false;\r\n        } else {\r\n            if (XRUtils.isSessionActive(this.engine)) {\r\n                this._myCursorComponentXR.active = !usingHand;\r\n                this._myCursorComponentNonXR.active = false;\r\n            } else {\r\n                this._myCursorComponentNonXR.active = !usingHand;\r\n                this._myCursorComponentXR.active = false;\r\n\r\n                this._myCursorObjectNonXR.pp_setTransformQuat(Globals.getPlayerObjects(this.engine).myCameraNonXR.pp_getTransformQuat(transformQuat));\r\n            }\r\n        }\r\n    };\r\n}()", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { ConsoleVRWidgetMessageType } from \"./console_vr_types\";\r\n\r\nexport class ConsoleVRWidgetConfig {\r\n\r\n    constructor() {\r\n        this._setupBuildConfig();\r\n        this._setupRuntimeConfig();\r\n    }\r\n\r\n    _setupBuildConfig() {\r\n        // General\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;  // Keep this in sync with Tool Cursor\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myMessageTypeColors = [];\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG] = this.myDefaultTextColor;\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR] = vec4_create(255 / 255, 40 / 255, 40 / 255, 1);\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN] = vec4_create(250 / 255, 220 / 255, 40 / 255, 1);\r\n        this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG] = vec4_create(60 / 255, 200 / 255, 255 / 255, 1);\r\n\r\n        // Messages\r\n        this.myMessagesPanelPosition = vec3_create(0, 0.075, 0);\r\n\r\n        this.myMessagesBackgroundScale = vec3_create(0.34, 0.15, 1);\r\n\r\n        {\r\n            let xPaddingPercentage = 0.03;\r\n            let yPaddingPercentage = xPaddingPercentage * this.myMessagesBackgroundScale[0] / this.myMessagesBackgroundScale[1] * 0.8; // A bit less padding\r\n            let xPosition = -this.myMessagesBackgroundScale[0] + this.myMessagesBackgroundScale[0] * xPaddingPercentage;\r\n            let yPosition = this.myMessagesBackgroundScale[1] - this.myMessagesBackgroundScale[1] * yPaddingPercentage;\r\n            this.myMessagesTextsPanelPosition = vec3_create(xPosition, yPosition, 0.007);\r\n        }\r\n        this.myMessagesTextsPanelScale = vec3_create(0.1, 0.1, 0.1);\r\n\r\n        this.myMessagesTextStartString = \".\\n\"; // To avoid issue with text component padding\r\n        this.myMessagesTextAlignment = Alignment.Left;\r\n        this.myMessagesTextJustification = Justification.Top;\r\n\r\n        this.myMessagesTextPositions = [];\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.LOG] = vec3_create(0, 0, 0.0002);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.ERROR] = vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.WARN] = vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[ConsoleVRWidgetMessageType.DEBUG] = vec3_create(0, 0, 0);\r\n\r\n        this.myMessagesTextColors = [];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.LOG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.ERROR] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.WARN] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN];\r\n        this.myMessagesTextColors[ConsoleVRWidgetMessageType.DEBUG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG];\r\n\r\n        // Buttons     \r\n        this.myButtonsPanelPosition = vec3_create(0, -0.11, 0.015);\r\n\r\n        this.myButtonBackgroundScale = vec3_create(0.04, 0.02, 1);\r\n\r\n        this.myButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myButtonCursorTargetPosition[2] = this.myButtonTextPosition[2];\r\n\r\n        this.myButtonsCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myButtonsCollisionGroup = this.myCursorTargetCollisionGroup;\r\n        this.myButtonsCollisionExtents = this.myButtonBackgroundScale.pp_clone();\r\n        this.myButtonsCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myClearButtonTextLabel = \"clear\";\r\n        this.myUpButtonTextLabel = \"up\";\r\n        this.myDownButtonTextLabel = \"down\";\r\n\r\n        this.myFilterButtonsTextColors = [];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.LOG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.LOG];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.ERROR] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.ERROR];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.WARN] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.WARN];\r\n        this.myFilterButtonsTextColors[ConsoleVRWidgetMessageType.DEBUG] = this.myMessageTypeColors[ConsoleVRWidgetMessageType.DEBUG];\r\n\r\n        this.myFilterButtonsTextLabel = [];\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.LOG] = \"log\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.ERROR] = \"error\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.WARN] = \"warn\";\r\n        this.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType.DEBUG] = \"debug\";\r\n\r\n        // Buttons positioning\r\n        {\r\n            let numberOfButtons = 7;\r\n            let buttonsHorizontalSpace = Math.max(0.68, this.myButtonBackgroundScale[0] * numberOfButtons);\r\n            // 2 at start, 3 between filters, 4 spaces between filter and clear and 4 spaces between clear and up/down, 1 space between up and down, 1 at end\r\n            let numberOfSpacesBetweenButtons = 2 + 3 + 4 + 4 + 1 + 2;\r\n            let spaceWidth = Math.max((buttonsHorizontalSpace - numberOfButtons * this.myButtonBackgroundScale[0] * 2) / numberOfSpacesBetweenButtons, 0);\r\n            let halfButtonWidth = this.myButtonBackgroundScale[0];\r\n            let initialPosition = - buttonsHorizontalSpace / 2;\r\n\r\n            this.myFilterButtonsPositions = [];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.LOG] = [initialPosition + spaceWidth * 2 + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.ERROR] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.LOG][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.WARN] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.ERROR][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.DEBUG] = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.WARN][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n\r\n            this.myClearButtonPosition = [this.myFilterButtonsPositions[ConsoleVRWidgetMessageType.DEBUG][0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myUpButtonPosition = [this.myClearButtonPosition[0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myDownButtonPosition = [this.myUpButtonPosition[0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n        }\r\n\r\n        // Notify Icon\r\n        this.myNotifyIconBackgroundScale = vec3_create(0.01, 0.01, 1);\r\n\r\n        this.myNotifyIconPanelPositions = [];\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE] = vec3_create(0, 0, 0);\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][0] = -this.myMessagesBackgroundScale[0] + this.myNotifyIconBackgroundScale[0] + 0.01;\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][1] = -this.myMessagesBackgroundScale[1] + this.myNotifyIconBackgroundScale[1] + 0.01;\r\n        this.myNotifyIconPanelPositions[ToolHandedness.NONE][2] = this.myMessagesTextsPanelPosition[2] - 0.00001; // Prevent glitches with text\r\n\r\n        this.myNotifyIconPanelPositions[ToolHandedness.LEFT] = this.myNotifyIconPanelPositions[ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconPanelPositions[ToolHandedness.RIGHT] = this.myNotifyIconPanelPositions[ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myNotifyIconCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - this.myMessagesTextsPanelPosition[2]; // A little behind the button target to avoid hiding it\r\n\r\n        this.myNotifyIconCollisionExtents = this.myNotifyIconBackgroundScale.pp_clone();\r\n        this.myNotifyIconCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNotifyIconColor = vec4_create(210 / 255, 210 / 255, 210 / 255, 1);\r\n\r\n        // Pointer\r\n        this.myPointerCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionGroup = this.myCursorTargetCollisionGroup;\r\n\r\n        {\r\n            let spaceBetweenMessagesAndButtons = Math.abs((this.myMessagesPanelPosition[1] - this.myMessagesBackgroundScale[1]) - (this.myButtonsPanelPosition[1] + this.myButtonBackgroundScale[1]));\r\n            let pointerCollisionHalfHeight = this.myMessagesBackgroundScale[1] + this.myButtonBackgroundScale[1] + spaceBetweenMessagesAndButtons / 2;\r\n            this.myPointerCollisionExtents = vec3_create(this.myMessagesBackgroundScale[0], pointerCollisionHalfHeight, this.myCursorTargetCollisionThickness);\r\n        }\r\n\r\n        this.myPointerCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myPointerCursorTargetPosition[1] = (this.myMessagesPanelPosition[1] + this.myMessagesBackgroundScale[1]) - this.myPointerCollisionExtents[1];\r\n        this.myPointerCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - 0.0001; // A little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _setupRuntimeConfig() {\r\n        this.myTabString = \"     \";\r\n        this.myAssertStartString = \"Assertion failed:\";\r\n\r\n        this.myMaxCharactersPerLine = 100;\r\n        this.myMaxLineSplits = 500; // Prevent infinite splitting\r\n        this.myMaxLines = 22;\r\n        this.myMaxMessages = 2000;\r\n        this.myMaxMessagesDeletePad = 2000; // To prevent deleting at every message, delay the delete after the limit is exceed by this value\r\n\r\n        this.myLinesBetweenMessages = 1;\r\n\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = vec4_create(110 / 255, 110 / 255, 110 / 255, 1);\r\n\r\n        this.myFilterButtonDisabledTextColor = this.myButtonDisabledTextColor;\r\n        this.myFilterButtonDisabledBackgroundColor = this.myButtonDisabledBackgroundColor;\r\n\r\n        this.myScrollDelay = 0.1;\r\n        this.myScrollAmount = 1;\r\n        this.myScrollThumbstickHandedness = ToolHandedness.RIGHT;\r\n        this.myScrollThumbstickDelay = 0.1;\r\n        this.myScrollThumbstickMinThreshold = 0.2;\r\n        this.myScrollThumbstickAmount = 3;\r\n\r\n        this.myPulseDelay = 5;\r\n        this.myPulseIntensity = 0.3;\r\n        this.myPulseDuration = 0.085;\r\n\r\n        this.myClearBrowserConsoleWhenClearPressed = true;\r\n\r\n        this.myGamepadScrollOnlyOnHover = true;\r\n    }\r\n}", "export let ConsoleVRWidgetConsoleFunction = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3,\r\n    INFO: 4,\r\n    ASSERT: 5\r\n};\r\n\r\nexport let ConsoleVRWidgetSender = {\r\n    BROWSER_CONSOLE: 0,\r\n    CONSOLE_VR: 1,\r\n    WINDOW: 2\r\n};\r\n\r\nexport let ConsoleVRWidgetPulseOnNewMessage = {\r\n    NEVER: 0,\r\n    ALWAYS: 1,\r\n    WHEN_HIDDEN: 2\r\n};\r\n\r\nexport let ConsoleVRWidgetMessageType = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3\r\n};", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { ConsoleVRWidgetMessageType } from \"./console_vr_types\";\r\n\r\nexport class ConsoleVRWidgetUI {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    build(parentObject, config, params) {\r\n        this._myParentObject = parentObject;\r\n        this._myConfig = config;\r\n        this._myParams = params;\r\n\r\n        this._myPlaneMesh = Globals.getDefaultMeshes(this._myEngine).myDoubleSidedPlane;\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonXR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActive(visible);\r\n    }\r\n\r\n    // Skeleton\r\n    _createSkeleton() {\r\n        this.myPivotObject = this._myParentObject.pp_addObject();\r\n\r\n        this._createMessagesSkeleton();\r\n        this._createButtonsSkeleton();\r\n        this._createPointerSkeleton();\r\n    }\r\n\r\n    _createMessagesSkeleton() {\r\n        this.myMessagesPanel = this.myPivotObject.pp_addObject();\r\n        this.myMessagesBackground = this.myMessagesPanel.pp_addObject();\r\n        this.myMessagesTextsPanel = this.myMessagesPanel.pp_addObject();\r\n\r\n        this.myMessagesTexts = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myMessagesTexts[ConsoleVRWidgetMessageType[key]] = this.myMessagesTextsPanel.pp_addObject();\r\n        }\r\n\r\n        this.myNotifyIconPanel = this.myMessagesPanel.pp_addObject();\r\n        this.myNotifyIconBackground = this.myNotifyIconPanel.pp_addObject();\r\n        this.myNotifyIconCursorTarget = this.myNotifyIconPanel.pp_addObject();\r\n    }\r\n\r\n    _createButtonsSkeleton() {\r\n        this.myButtonsPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myFilterButtonsPanels = [];\r\n        this.myFilterButtonsBackgrounds = [];\r\n        this.myFilterButtonsTexts = [];\r\n        this.myFilterButtonsCursorTargets = [];\r\n\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]] = this.myButtonsPanel.pp_addObject();\r\n            this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n            this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]] = this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_addObject();\r\n        }\r\n\r\n        this.myClearButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myClearButtonBackground = this.myClearButtonPanel.pp_addObject();\r\n        this.myClearButtonText = this.myClearButtonPanel.pp_addObject();\r\n        this.myClearButtonCursorTarget = this.myClearButtonPanel.pp_addObject();\r\n\r\n        this.myUpButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myUpButtonBackground = this.myUpButtonPanel.pp_addObject();\r\n        this.myUpButtonText = this.myUpButtonPanel.pp_addObject();\r\n        this.myUpButtonCursorTarget = this.myUpButtonPanel.pp_addObject();\r\n\r\n        this.myDownButtonPanel = this.myButtonsPanel.pp_addObject();\r\n        this.myDownButtonBackground = this.myDownButtonPanel.pp_addObject();\r\n        this.myDownButtonText = this.myDownButtonPanel.pp_addObject();\r\n        this.myDownButtonCursorTarget = this.myDownButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _createPointerSkeleton() {\r\n        this.myPointerCursorTarget = this.myPivotObject.pp_addObject();\r\n    }\r\n\r\n    // Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_markDirty();\r\n\r\n        this._setMessagesTransforms();\r\n        this._setButtonsTransforms();\r\n        this._setPointerTransform();\r\n    }\r\n\r\n    _setMessagesTransforms() {\r\n        this.myMessagesPanel.pp_setPositionLocal(this._myConfig.myMessagesPanelPosition);\r\n        this.myMessagesBackground.pp_scaleObject(this._myConfig.myMessagesBackgroundScale);\r\n\r\n        this.myMessagesTextsPanel.pp_setPositionLocal(this._myConfig.myMessagesTextsPanelPosition);\r\n        this.myMessagesTextsPanel.pp_scaleObject(this._myConfig.myMessagesTextsPanelScale);\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myMessagesTexts[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._myConfig.myMessagesTextPositions[ConsoleVRWidgetMessageType[key]]);\r\n        }\r\n\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._myConfig.myNotifyIconPanelPositions[this._myParams.myHandedness]);\r\n        this.myNotifyIconBackground.pp_scaleObject(this._myConfig.myNotifyIconBackgroundScale);\r\n        this.myNotifyIconCursorTarget.pp_setPositionLocal(this._myConfig.myNotifyIconCursorTargetPosition);\r\n    }\r\n\r\n    _setButtonsTransforms() {\r\n        this.myButtonsPanel.pp_setPositionLocal(this._myConfig.myButtonsPanelPosition);\r\n\r\n        // Filter Buttons\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this.myFilterButtonsPanels[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._myConfig.myFilterButtonsPositions[ConsoleVRWidgetMessageType[key]]);\r\n\r\n            this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]].pp_scaleObject(this._myConfig.myButtonBackgroundScale);\r\n\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._myConfig.myButtonTextPosition);\r\n            this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_scaleObject(this._myConfig.myButtonTextScale);\r\n\r\n            this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_setPositionLocal(this._myConfig.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Clear\r\n        {\r\n            this.myClearButtonPanel.pp_setPositionLocal(this._myConfig.myClearButtonPosition);\r\n\r\n            this.myClearButtonBackground.pp_scaleObject(this._myConfig.myButtonBackgroundScale);\r\n\r\n            this.myClearButtonText.pp_setPositionLocal(this._myConfig.myButtonTextPosition);\r\n            this.myClearButtonText.pp_scaleObject(this._myConfig.myButtonTextScale);\r\n\r\n            this.myClearButtonCursorTarget.pp_setPositionLocal(this._myConfig.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Up\r\n        {\r\n            this.myUpButtonPanel.pp_setPositionLocal(this._myConfig.myUpButtonPosition);\r\n\r\n            this.myUpButtonBackground.pp_scaleObject(this._myConfig.myButtonBackgroundScale);\r\n\r\n            this.myUpButtonText.pp_setPositionLocal(this._myConfig.myButtonTextPosition);\r\n            this.myUpButtonText.pp_scaleObject(this._myConfig.myButtonTextScale);\r\n\r\n            this.myUpButtonCursorTarget.pp_setPositionLocal(this._myConfig.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Down\r\n        {\r\n            this.myDownButtonPanel.pp_setPositionLocal(this._myConfig.myDownButtonPosition);\r\n\r\n            this.myDownButtonBackground.pp_scaleObject(this._myConfig.myButtonBackgroundScale);\r\n\r\n            this.myDownButtonText.pp_setPositionLocal(this._myConfig.myButtonTextPosition);\r\n            this.myDownButtonText.pp_scaleObject(this._myConfig.myButtonTextScale);\r\n\r\n            this.myDownButtonCursorTarget.pp_setPositionLocal(this._myConfig.myButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _setPointerTransform() {\r\n        this.myPointerCursorTarget.pp_setPositionLocal(this._myConfig.myPointerCursorTargetPosition);\r\n    }\r\n\r\n    // Components\r\n    _addComponents() {\r\n        this._addMessagesComponents();\r\n        this._addButtonsComponents();\r\n        this._addPointerComponents();\r\n    }\r\n\r\n    _addMessagesComponents() {\r\n        let messagesBackgroundMeshComp = this.myMessagesBackground.pp_addComponent(MeshComponent);\r\n        messagesBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n        messagesBackgroundMeshComp.material = this._myParams.myPlaneMaterial.clone();\r\n        messagesBackgroundMeshComp.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myMessagesTextComponents = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let textComp = this.myMessagesTexts[ConsoleVRWidgetMessageType[key]].pp_addComponent(TextComponent);\r\n\r\n            textComp.alignment = this._myConfig.myMessagesTextAlignment;\r\n            textComp.justification = this._myConfig.myMessagesTextJustification;\r\n            textComp.material = this._myParams.myTextMaterial.clone();\r\n            textComp.material.color = this._myConfig.myMessagesTextColors[ConsoleVRWidgetMessageType[key]];\r\n            textComp.lineSpacing = 1.2;\r\n            textComp.text = this._myConfig.myMessagesTextStartString;\r\n\r\n            this.myMessagesTextComponents[ConsoleVRWidgetMessageType[key]] = textComp;\r\n        }\r\n\r\n        this.myNotifyIconBackgroundComponent = this.myNotifyIconBackground.pp_addComponent(MeshComponent);\r\n        this.myNotifyIconBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNotifyIconBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myNotifyIconBackgroundComponent.material.color = this._myConfig.myNotifyIconColor;\r\n\r\n        this.myNotifyIconCursorTargetComponent = this.myNotifyIconCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n        this.myNotifyIconCollisionComponent = this.myNotifyIconCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myNotifyIconCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myNotifyIconCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myNotifyIconCollisionComponent.extents = this._myConfig.myNotifyIconCollisionExtents;\r\n    }\r\n\r\n    _addButtonsComponents() {\r\n        // Worship the code copy pasteness\r\n\r\n        this.myFilterButtonsBackgroundComponents = [];\r\n        this.myFilterButtonsTextComponents = [];\r\n        this.myFilterButtonsCursorTargetComponents = [];\r\n        this.myFilterButtonsCollisionComponents = [];\r\n\r\n        // Filter Buttons\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let buttonBackgroundMeshComp = this.myFilterButtonsBackgrounds[ConsoleVRWidgetMessageType[key]].pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myParams.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._myConfig.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myFilterButtonsTexts[ConsoleVRWidgetMessageType[key]].pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.material.color = this._myConfig.myFilterButtonsTextColors[ConsoleVRWidgetMessageType[key]];\r\n            buttonTextComp.text = this._myConfig.myFilterButtonsTextLabel[ConsoleVRWidgetMessageType[key]];\r\n\r\n            let buttonCursorTargetComp = this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myFilterButtonsCursorTargets[ConsoleVRWidgetMessageType[key]].pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._myConfig.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._myConfig.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._myConfig.myButtonsCollisionExtents;\r\n\r\n            this.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]] = buttonBackgroundMeshComp;\r\n            this.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]] = buttonTextComp;\r\n            this.myFilterButtonsCursorTargetComponents[ConsoleVRWidgetMessageType[key]] = buttonCursorTargetComp;\r\n            this.myFilterButtonsCollisionComponents[ConsoleVRWidgetMessageType[key]] = buttonCollisionComp;\r\n        }\r\n\r\n        // Clear \r\n        {\r\n            let buttonBackgroundMeshComp = this.myClearButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myParams.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._myConfig.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myClearButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._myConfig.myClearButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myClearButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myClearButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._myConfig.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._myConfig.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._myConfig.myButtonsCollisionExtents;\r\n\r\n            this.myClearButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myClearButtonTextComponent = buttonTextComp;\r\n            this.myClearButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myClearButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        // Up \r\n        {\r\n            let buttonBackgroundMeshComp = this.myUpButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myParams.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._myConfig.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myUpButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._myConfig.myUpButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myUpButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myUpButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._myConfig.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._myConfig.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._myConfig.myButtonsCollisionExtents;\r\n\r\n            this.myUpButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myUpButtonTextComponent = buttonTextComp;\r\n            this.myUpButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myUpButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        // Down \r\n        {\r\n            let buttonBackgroundMeshComp = this.myDownButtonBackground.pp_addComponent(MeshComponent);\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myParams.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._myConfig.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myDownButtonText.pp_addComponent(TextComponent);\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._myConfig.myDownButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myDownButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n            let buttonCollisionComp = this.myDownButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n            buttonCollisionComp.collider = this._myConfig.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._myConfig.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._myConfig.myButtonsCollisionExtents;\r\n\r\n            this.myDownButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myDownButtonTextComponent = buttonTextComp;\r\n            this.myDownButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myDownButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n    }\r\n\r\n    _addPointerComponents() {\r\n        this.myPointerCursorTargetComponent = this.myPointerCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPointerCursorTargetComponent.isSurface = true;\r\n\r\n        let collisionComp = this.myPointerCursorTarget.pp_addComponent(CollisionComponent);\r\n        collisionComp.collider = this._myConfig.myPointerCollisionCollider;\r\n        collisionComp.group = 1 << this._myConfig.myPointerCollisionGroup;\r\n        collisionComp.extents = this._myConfig.myPointerCollisionExtents;\r\n\r\n        this.myPointerCollisionComponent = collisionComp;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._myConfig.myTextAlignment;\r\n        textComponent.justification = this._myConfig.myTextJustification;\r\n        textComponent.material = this._myParams.myTextMaterial.clone();\r\n        textComponent.material.color = this._myConfig.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForXR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonXR();\r\n    }\r\n\r\n    _setTransformForXR() {\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._myConfig.myNotifyIconPanelPositions[this._myParams.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonXR() {\r\n        this.myNotifyIconPanel.pp_setPositionLocal(this._myConfig.myNotifyIconPanelPositions[ToolHandedness.NONE]);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { WidgetFrameConfig } from \"./widget_frame_config\";\r\nimport { WidgetFrameUI } from \"./widget_frame_ui\";\r\n\r\nexport class WidgetParams {\r\n\r\n    constructor() {\r\n        this.myHandedness = ToolHandedness.NONE;\r\n\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n    }\r\n}\r\n\r\nexport class WidgetFrame {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex, engine = Globals.getMainEngine()) {\r\n        this._myWidgetVisible = true;\r\n        this._myPinned = false;\r\n\r\n        this._myConfig = new WidgetFrameConfig(widgetLetterID, buttonsColumnIndex);\r\n        this._myParams = null;\r\n\r\n        this._myUI = new WidgetFrameUI(engine);\r\n        this._myShowVisibilityButton = false;\r\n\r\n        this._myWidgetVisibleChangedEmitter = new Emitter();      // Signature: listener(widgetVisible)\r\n        this._myPinChangedEmitter = new Emitter();                // Signature: listener(pinned)\r\n\r\n        this._myDestroyed = true;\r\n    }\r\n\r\n    getWidgetObject() {\r\n        return this._myUI.myWidgetObject;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetVisible = !visible;\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetVisible;\r\n    }\r\n\r\n    toggleVisibility() {\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    togglePin() {\r\n        this._togglePin(false);\r\n    }\r\n\r\n    registerWidgetVisibleChangedEventListener(id, listener) {\r\n        this._myWidgetVisibleChangedEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterWidgetVisibleChangedEventListener(id) {\r\n        this._myWidgetVisibleChangedEmitter.remove(id);\r\n    }\r\n\r\n    registerPinChangedEventListener(id, listener) {\r\n        this._myPinChangedEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterPinChangedEventListener(id) {\r\n        this._myPinChangedEmitter.remove(id);\r\n    }\r\n\r\n    start(parentObject, params) {\r\n        this._myParams = params;\r\n\r\n        this._myUI.build(parentObject, this._myConfig, params);\r\n        this._myUI.setVisibilityButtonVisible(params.myShowVisibilityButton);\r\n        this._myShowVisibilityButton = params.myShowVisibilityButton;\r\n        if (!params.myShowOnStart) {\r\n            this._toggleVisibility(false, false);\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myUI.update(dt);\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myPinButtonCursorTargetComponent.onClick.add(this._togglePin.bind(this, true));\r\n        ui.myPinButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n        ui.myPinButtonCursorTargetComponent.onUnhover.add(this._pinUnhover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n\r\n        ui.myVisibilityButtonCursorTargetComponent.onClick.add(this._toggleVisibility.bind(this, true, true));\r\n        ui.myVisibilityButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n        ui.myVisibilityButtonCursorTargetComponent.onUnhover.add(this._visibilityUnhover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _toggleVisibility(isButton, notify) {\r\n        this._myWidgetVisible = !this._myWidgetVisible;\r\n\r\n        this._myUI.setWidgetVisible(this._myWidgetVisible);\r\n\r\n        let textMaterial = this._myUI.myVisibilityButtonTextComponent.material;\r\n        let backgroundMaterial = this._myUI.myVisibilityButtonBackgroundComponent.material;\r\n        if (this._myWidgetVisible) {\r\n            textMaterial.color = this._myConfig.myDefaultTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._myConfig.myBackgroundColor;\r\n            }\r\n        } else {\r\n            textMaterial.color = this._myConfig.myButtonDisabledTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._myConfig.myButtonDisabledBackgroundColor;\r\n            }\r\n        }\r\n\r\n        if (notify) {\r\n            this._myWidgetVisibleChangedEmitter.notify(this._myWidgetVisible);\r\n        }\r\n\r\n        this._myUI.setVisibilityButtonVisible(this._myShowVisibilityButton);\r\n    }\r\n\r\n    _togglePin(isButton) {\r\n        if (this._myWidgetVisible) {\r\n            this._myPinned = !this._myPinned;\r\n\r\n            this._myUI.setPinned(this._myPinned);\r\n\r\n            let textMaterial = this._myUI.myPinButtonTextComponent.material;\r\n            let backgroundMaterial = this._myUI.myPinButtonBackgroundComponent.material;\r\n            if (this._myPinned) {\r\n                textMaterial.color = this._myConfig.myDefaultTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._myConfig.myBackgroundColor;\r\n                }\r\n            } else {\r\n                textMaterial.color = this._myConfig.myButtonDisabledTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._myConfig.myButtonDisabledBackgroundColor;\r\n                }\r\n            }\r\n\r\n            this._myPinChangedEmitter.notify(this._myPinned);\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._myConfig.myButtonHoverColor;\r\n    }\r\n\r\n    _visibilityUnhover(material) {\r\n        if (this._myWidgetVisible) {\r\n            material.color = this._myConfig.myBackgroundColor;\r\n        } else {\r\n            material.color = this._myConfig.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _pinUnhover(material) {\r\n        if (this._myPinned) {\r\n            material.color = this._myConfig.myBackgroundColor;\r\n        } else {\r\n            material.color = this._myConfig.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        if (this._myUI != null) {\r\n            this._myUI.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { quat_create, vec3_create, vec4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness, ToolInputSourceType } from \"../cauldron/tool_types\";\r\n\r\nexport class WidgetFrameConfig {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n\r\n        this._setupBuildConfig(widgetLetterID, buttonsColumnIndex);\r\n        this._setupRuntimeConfig();\r\n    }\r\n\r\n    _setupBuildConfig(widgetLetterID, buttonsColumnIndex) {\r\n        // General\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;  // Keep this in sync with Tool Cursor\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myVisibilityButtonBackgroundScale = vec3_create(0.015, 0.015, 1);\r\n        this.myVisibilityButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myVisibilityButtonTextScale = this.myButtonTextScale;\r\n\r\n        let distanceBetweenToolsVisibilityButtons = 0.01;\r\n        let buttonXOffset = this.myVisibilityButtonBackgroundScale[0] * (2 * buttonsColumnIndex) + distanceBetweenToolsVisibilityButtons * buttonsColumnIndex;\r\n\r\n        this.myVisibilityButtonPosition = [];\r\n        this.myVisibilityButtonPosition[ToolHandedness.NONE] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition = vec3_create(-0.3 + buttonXOffset, -0.205, 0.035);\r\n\r\n        this.myVisibilityButtonPosition[ToolHandedness.LEFT] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.LEFT].myPosition = vec3_create(-0.2 + buttonXOffset, 0.025, 0.015);\r\n\r\n        this.myVisibilityButtonPosition[ToolHandedness.RIGHT] = {};\r\n        this.myVisibilityButtonPosition[ToolHandedness.RIGHT].myPosition = vec3_create(0.2 - buttonXOffset, 0.025, 0.015);\r\n\r\n        this.myVisibilityButtonText = widgetLetterID;\r\n\r\n        this.myVisibilityButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myVisibilityButtonCursorTargetPosition[2] = this.myVisibilityButtonTextPosition[2];\r\n        this.myVisibilityButtonCollisionExtents = this.myVisibilityButtonBackgroundScale.pp_clone();\r\n        this.myVisibilityButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myFlagButtonBackgroundScale = vec3_create(0.0125, 0.0125, 1);\r\n        this.myFlagButtonTextPosition = vec3_create(0, 0, 0.007);\r\n        this.myFlagButtonTextScale = vec3_create(0.15, 0.15, 0.15);\r\n\r\n        let distanceBetweenFlagButtons = 0.0075;\r\n        let pinFlagIndex = 0;\r\n        let pinButtonYOffset = this.myVisibilityButtonBackgroundScale[1] + this.myFlagButtonBackgroundScale[1] + distanceBetweenFlagButtons +\r\n            this.myFlagButtonBackgroundScale[1] * (2 * pinFlagIndex) + distanceBetweenFlagButtons * pinFlagIndex;\r\n\r\n        this.myPinButtonPosition = [];\r\n        this.myPinButtonPosition[ToolHandedness.NONE] = {};\r\n        this.myPinButtonPosition[ToolHandedness.NONE].myPosition = this.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.NONE].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[ToolHandedness.LEFT] = {};\r\n        this.myPinButtonPosition[ToolHandedness.LEFT].myPosition = this.myVisibilityButtonPosition[ToolHandedness.LEFT].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.LEFT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT] = {};\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT].myPosition = this.myVisibilityButtonPosition[ToolHandedness.RIGHT].myPosition.pp_clone();\r\n        this.myPinButtonPosition[ToolHandedness.RIGHT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonText = \"P\";\r\n\r\n        this.myPinButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myPinButtonCursorTargetPosition[2] = this.myFlagButtonTextPosition[2];\r\n        this.myPinButtonCollisionExtents = this.myFlagButtonBackgroundScale.pp_clone();\r\n        this.myPinButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _setupRuntimeConfig() {\r\n        this._initializeObjectsTransforms();\r\n\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = vec4_create(110 / 255, 110 / 255, 110 / 255, 1);\r\n    }\r\n\r\n    _initializeObjectsTransforms() {\r\n        this.myPivotObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation = quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation = quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation = quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation = quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myRotation);\r\n\r\n        /*\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myPosition = vec3_create(-0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation = quat_create(0, 0.536, -0.43, 0.727);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myPosition = vec3_create(0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation = quat_create(0, -0.536, 0.43, 0.727);\r\n        this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myRotation);\r\n        */\r\n\r\n        this.myWidgetObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.LEFT].myPosition = vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.GAMEPAD][ToolHandedness.RIGHT].myPosition = vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.LEFT].myPosition = vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[ToolInputSourceType.TRACKED_HAND][ToolHandedness.RIGHT].myPosition = vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this._myPivotObjectDistanceFromHeadNonXR = 0.6;\r\n    }\r\n\r\n    _createDefaultObjectTransforms() {\r\n        let defaultObjectTransforms = [];\r\n\r\n        for (let inputSourceTypeKey in ToolInputSourceType) {\r\n            let inputSourceType = ToolInputSourceType[inputSourceTypeKey];\r\n            defaultObjectTransforms[inputSourceType] = [];\r\n            for (let handednessKey in ToolHandedness) {\r\n                let handedness = ToolHandedness[handednessKey];\r\n                defaultObjectTransforms[inputSourceType][handedness] = {};\r\n                defaultObjectTransforms[inputSourceType][handedness].myPosition = vec3_create(0, 0, 0);\r\n                defaultObjectTransforms[inputSourceType][handedness].myRotation = quat_create(0, 0, 0, 1);\r\n            }\r\n        }\r\n\r\n        return defaultObjectTransforms;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../cauldron/utils/xr_utils\";\r\nimport { InputUtils } from \"../../input/cauldron/input_utils\";\r\nimport { vec3_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { ToolHandedness, ToolInputSourceType } from \"../cauldron/tool_types\";\r\n\r\nexport class WidgetFrameUI {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myInputSourceType = null;\r\n\r\n        this._myParentObject = null;\r\n        this._myPinned = false;\r\n\r\n        this._myWidgetVisible = true;\r\n        this._myVisibilityButtonVisible = true;\r\n\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    build(parentObject, config, params) {\r\n        this._myParentObject = parentObject;\r\n        this._myConfig = config;\r\n        this._myParams = params;\r\n        this._myPlaneMesh = Globals.getDefaultMeshes(this._myEngine).myDoubleSidedPlane;\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonXR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setWidgetVisible(visible) {\r\n        this._myWidgetVisible = visible;\r\n        this.myFlagsButtonPanel.pp_setActive(visible);\r\n        if (visible) {\r\n            this._updateObjectsTransforms(true);\r\n        }\r\n    }\r\n\r\n    setVisibilityButtonVisible(visible) {\r\n        this._myVisibilityButtonVisible = visible;\r\n        this.myVisibilityButtonPanel.pp_setActive(visible);\r\n    }\r\n\r\n    setPinned(pinned) {\r\n        if (pinned != this._myPinned) {\r\n            this._myPinned = pinned;\r\n            if (this._myPinned) {\r\n                this.myPivotObject.pp_setParent(Globals.getSceneObjects(this._myEngine).myTools);\r\n            } else {\r\n                this.myPivotObject.pp_setParent(this.myFixForwardObject);\r\n\r\n                if (!XRUtils.isSessionActive(this._myEngine)) {\r\n                    this._setTransformForNonXR();\r\n                }\r\n\r\n                this._updateObjectsTransforms(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateObjectsTransforms(false);\r\n    }\r\n\r\n    _updateObjectsTransforms(forceRefreshObjectsTransforms) {\r\n        if (XRUtils.isSessionActive(this._myEngine)) {\r\n            let inputSourceType = InputUtils.getInputSourceTypeByHandedness(this._myParams.myHandedness, this._myEngine);\r\n\r\n            if (inputSourceType != this._myInputSourceType || forceRefreshObjectsTransforms) {\r\n                this._myInputSourceType = inputSourceType;\r\n\r\n                if (!this._myPinned) {\r\n                    this.myPivotObject.pp_setPositionLocal(this._myConfig.myPivotObjectTransforms[this._myInputSourceType][this._myParams.myHandedness].myPosition);\r\n                    this.myPivotObject.pp_resetRotationLocal();\r\n                    this.myPivotObject.pp_rotateObjectQuat(this._myConfig.myPivotObjectTransforms[this._myInputSourceType][this._myParams.myHandedness].myRotation);\r\n\r\n                    this.myWidgetObject.pp_setPositionLocal(this._myConfig.myWidgetObjectTransforms[this._myInputSourceType][this._myParams.myHandedness].myPosition);\r\n                    this.myWidgetObject.pp_resetRotationLocal();\r\n                    this.myWidgetObject.pp_rotateObjectQuat(this._myConfig.myWidgetObjectTransforms[this._myInputSourceType][this._myParams.myHandedness].myRotation);\r\n\r\n                    this.myVisibilityButtonPanel.pp_setPositionLocal(this._myConfig.myVisibilityButtonPosition[this._myParams.myHandedness].myPosition);\r\n                    this.myPinButtonPanel.pp_setPositionLocal(this._myConfig.myPinButtonPosition[this._myParams.myHandedness].myPosition);\r\n                }\r\n            }\r\n        } else {\r\n            this.myVisibilityButtonPanel.pp_setActive(this._myWidgetVisible || this._myVisibilityButtonVisible);\r\n        }\r\n    }\r\n\r\n    // Skeleton\r\n    _createSkeleton() {\r\n        this.myFixForwardObject = this._myParentObject.pp_addObject();\r\n\r\n        if (Globals.isPoseForwardFixed(this._myEngine)) {\r\n            this.myFixForwardObject.pp_rotateObject(vec3_create(0, 180, 0));\r\n        }\r\n\r\n        this.myPivotObject = this.myFixForwardObject.pp_addObject();\r\n        this.myWidgetObject = this.myPivotObject.pp_addObject();\r\n\r\n        this.myVisibilityButtonPanel = this.myPivotObject.pp_addObject();\r\n        this.myVisibilityButtonBackground = this.myVisibilityButtonPanel.pp_addObject();\r\n        this.myVisibilityButtonText = this.myVisibilityButtonPanel.pp_addObject();\r\n        this.myVisibilityButtonCursorTarget = this.myVisibilityButtonPanel.pp_addObject();\r\n\r\n        this.myFlagsButtonPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myPinButtonPanel = this.myFlagsButtonPanel.pp_addObject();\r\n        this.myPinButtonBackground = this.myPinButtonPanel.pp_addObject();\r\n        this.myPinButtonText = this.myPinButtonPanel.pp_addObject();\r\n        this.myPinButtonCursorTarget = this.myPinButtonPanel.pp_addObject();\r\n\r\n        this.myNonXRParentObject = Globals.getPlayerObjects(this._myEngine).myCameraNonXR.pp_addObject();\r\n        this.myNonXRParentObject.pp_translateLocal(vec3_create(0, 0, -this._myConfig._myPivotObjectDistanceFromHeadNonXR));\r\n        this.myNonXRParentObject.pp_lookToLocal(vec3_create(0, 0, 1), vec3_create(0, 1, 0));\r\n\r\n    }\r\n\r\n    // Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_markDirty();\r\n\r\n        this.myVisibilityButtonPanel.pp_setPositionLocal(this._myConfig.myVisibilityButtonPosition[this._myParams.myHandedness].myPosition);\r\n        this.myVisibilityButtonBackground.pp_scaleObject(this._myConfig.myVisibilityButtonBackgroundScale);\r\n        this.myVisibilityButtonText.pp_setPositionLocal(this._myConfig.myVisibilityButtonTextPosition);\r\n        this.myVisibilityButtonText.pp_scaleObject(this._myConfig.myVisibilityButtonTextScale);\r\n        this.myVisibilityButtonCursorTarget.pp_setPositionLocal(this._myConfig.myVisibilityButtonCursorTargetPosition);\r\n\r\n        this.myPinButtonPanel.pp_setPositionLocal(this._myConfig.myPinButtonPosition[this._myParams.myHandedness].myPosition);\r\n\r\n        this.myPinButtonBackground.pp_scaleObject(this._myConfig.myFlagButtonBackgroundScale);\r\n        this.myPinButtonText.pp_setPositionLocal(this._myConfig.myFlagButtonTextPosition);\r\n        this.myPinButtonText.pp_scaleObject(this._myConfig.myFlagButtonTextScale);\r\n        this.myPinButtonCursorTarget.pp_setPositionLocal(this._myConfig.myPinButtonCursorTargetPosition);\r\n    }\r\n\r\n    // Components\r\n    _addComponents() {\r\n        this.myVisibilityButtonBackgroundComponent = this.myVisibilityButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myVisibilityButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myVisibilityButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myVisibilityButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myVisibilityButtonTextComponent = this.myVisibilityButtonText.pp_addComponent(TextComponent);\r\n        this._setupButtonTextComponent(this.myVisibilityButtonTextComponent);\r\n        this.myVisibilityButtonTextComponent.text = this._myConfig.myVisibilityButtonText;\r\n\r\n        this.myVisibilityButtonCursorTargetComponent = this.myVisibilityButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myVisibilityButtonCollisionComponent = this.myVisibilityButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myVisibilityButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myVisibilityButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myVisibilityButtonCollisionComponent.extents = this._myConfig.myVisibilityButtonCollisionExtents;\r\n\r\n        this.myPinButtonBackgroundComponent = this.myPinButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPinButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPinButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPinButtonBackgroundComponent.material.color = this._myConfig.myButtonDisabledBackgroundColor;\r\n\r\n        this.myPinButtonTextComponent = this.myPinButtonText.pp_addComponent(TextComponent);\r\n        this._setupButtonTextComponent(this.myPinButtonTextComponent);\r\n        this.myPinButtonTextComponent.material.color = this._myConfig.myButtonDisabledTextColor;\r\n        this.myPinButtonTextComponent.text = this._myConfig.myPinButtonText;\r\n\r\n        this.myPinButtonCursorTargetComponent = this.myPinButtonCursorTarget.pp_addComponent(CursorTarget);\r\n\r\n        this.myPinButtonCollisionComponent = this.myPinButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPinButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPinButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPinButtonCollisionComponent.extents = this._myConfig.myPinButtonCollisionExtents;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._myConfig.myTextAlignment;\r\n        textComponent.justification = this._myConfig.myTextJustification;\r\n        textComponent.material = this._myParams.myTextMaterial.clone();\r\n        textComponent.material.color = this._myConfig.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this.myVisibilityButtonPanel.pp_setActive(this._myVisibilityButtonVisible);\r\n\r\n        this._setTransformForXR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonXR();\r\n    }\r\n\r\n    _setTransformForXR() {\r\n        this.myFixForwardObject.pp_setParent(this._myParentObject);\r\n\r\n        this.myFixForwardObject.pp_resetTransformLocal();\r\n\r\n        if (Globals.isPoseForwardFixed(this._myEngine)) {\r\n            this.myFixForwardObject.pp_rotateObject(vec3_create(0, 180, 0));\r\n        }\r\n\r\n        this._updateObjectsTransforms(true);\r\n    }\r\n\r\n    _setTransformForNonXR() {\r\n        if (!this._myPinned) {\r\n            this.myFixForwardObject.pp_setParent(this.myNonXRParentObject);\r\n            this.myFixForwardObject.pp_resetTransformLocal();\r\n\r\n            this.myPivotObject.pp_setPositionLocal(this._myConfig.myPivotObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myPosition);\r\n            this.myPivotObject.pp_resetRotationLocal();\r\n            this.myPivotObject.pp_rotateObjectQuat(this._myConfig.myPivotObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myRotation);\r\n\r\n            this.myWidgetObject.pp_setPositionLocal(this._myConfig.myWidgetObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myPosition);\r\n            this.myWidgetObject.pp_resetRotationLocal();\r\n            this.myWidgetObject.pp_rotateObjectQuat(this._myConfig.myWidgetObjectTransforms[ToolInputSourceType.NONE][ToolHandedness.NONE].myRotation);\r\n\r\n            this.myVisibilityButtonPanel.pp_setPositionLocal(this._myConfig.myVisibilityButtonPosition[ToolHandedness.NONE].myPosition);\r\n            this.myPinButtonPanel.pp_setPositionLocal(this._myConfig.myPinButtonPosition[ToolHandedness.NONE].myPosition);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "let _myConsoleOriginalLog = console.log;\r\nlet _myConsoleOriginalError = console.error;\r\nlet _myConsoleOriginalWarn = console.warn;\r\nlet _myConsoleOriginalInfo = console.info;\r\nlet _myConsoleOriginalDebug = console.debug;\r\nlet _myConsoleOriginalAssert = console.assert;\r\nlet _myConsoleOriginalClear = console.clear;\r\n\r\nexport function log(...args) {\r\n    return ConsoleOriginalFunctions.getLog().apply(console, args);\r\n}\r\n\r\nexport function error(...args) {\r\n    return ConsoleOriginalFunctions.getError().apply(console, args);\r\n}\r\n\r\nexport function warn(...args) {\r\n    return ConsoleOriginalFunctions.getWarn().apply(console, args);\r\n}\r\n\r\nexport function info(...args) {\r\n    return ConsoleOriginalFunctions.getInfo().apply(console, args);\r\n}\r\n\r\nexport function debug(...args) {\r\n    return ConsoleOriginalFunctions.getDebug().apply(console, args);\r\n}\r\n\r\nexport function assert(...args) {\r\n    return ConsoleOriginalFunctions.getAssert().apply(console, args);\r\n}\r\n\r\nexport function clear(...args) {\r\n    return ConsoleOriginalFunctions.getClear().apply(console, args);\r\n}\r\n\r\nexport function getLog() {\r\n    return _myConsoleOriginalLog;\r\n}\r\n\r\nexport function getError() {\r\n    return _myConsoleOriginalError;\r\n}\r\n\r\nexport function getWarn() {\r\n    return _myConsoleOriginalWarn;\r\n}\r\n\r\nexport function getInfo() {\r\n    return _myConsoleOriginalInfo;\r\n}\r\n\r\nexport function getDebug() {\r\n    return _myConsoleOriginalDebug;\r\n}\r\n\r\nexport function getAssert() {\r\n    return _myConsoleOriginalAssert;\r\n}\r\n\r\nexport function getClear() {\r\n    return _myConsoleOriginalClear;\r\n}\r\n\r\nexport let ConsoleOriginalFunctions = {\r\n    log,\r\n    error,\r\n    warn,\r\n    info,\r\n    debug,\r\n    assert,\r\n    clear,\r\n    getLog,\r\n    getError,\r\n    getWarn,\r\n    getInfo,\r\n    getDebug,\r\n    getAssert,\r\n    getClear\r\n}", "import { GamepadAxesID, GamepadButtonID } from \"../../input/gamepad/gamepad_buttons\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { ToolHandedness } from \"../cauldron/tool_types\";\r\nimport { WidgetFrame, WidgetParams } from \"../widget_frame/widget_frame\";\r\nimport { ConsoleOriginalFunctions } from \"./console_original_functions\";\r\nimport { ConsoleVRWidgetConsoleFunction, ConsoleVRWidgetMessageType, ConsoleVRWidgetPulseOnNewMessage, ConsoleVRWidgetSender } from \"./console_vr_types\";\r\nimport { ConsoleVRWidgetConfig } from \"./console_vr_widget_config\";\r\nimport { ConsoleVRWidgetUI } from \"./console_vr_widget_ui\";\r\n\r\nexport class ConsoleVRWidgetParams extends WidgetParams {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.myOverrideBrowserConsole = false;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myPulseOnNewMessage = ConsoleVRWidgetPulseOnNewMessage.NEVER;\r\n    }\r\n}\r\n\r\nexport class ConsoleVRWidgetMessage {\r\n\r\n    constructor(messageType, messageLines) {\r\n        this.myType = messageType;\r\n        this.myLines = messageLines;\r\n\r\n        this._myOriginalText = messageLines.join(\"\\n\");\r\n\r\n        this._myMessagesCount = 1;\r\n    }\r\n\r\n    hasSameInfo(message) {\r\n        return this._myOriginalText == message._myOriginalText && this.myType == message.myType;\r\n    }\r\n\r\n    increaseCount() {\r\n        this._myMessagesCount += 1;\r\n\r\n        let countString = ((\"(x\").concat(this._myMessagesCount)).concat(\") \");\r\n\r\n        let text = this._myOriginalText;\r\n        text = countString.concat(text);\r\n        this.myLines = text.split(\"\\n\");\r\n    }\r\n}\r\n\r\n// Doesn't support\r\n//  - Placeholder like %d and other similar kind of way to build strings\r\nexport class ConsoleVRWidget {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myWidgetFrame = new WidgetFrame(\"C\", 0, engine);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._myConfig = new ConsoleVRWidgetConfig();\r\n        this._myParams = null;\r\n\r\n        this._myUI = new ConsoleVRWidgetUI(engine);\r\n\r\n        this._myMessages = [];\r\n\r\n        this._myOldBrowserConsole = [];\r\n        this._myOldConsoleVR = [];\r\n\r\n        this._myTypeFilters = [];\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n        }\r\n\r\n        this._myScrollUp = false;\r\n        this._myScrollDown = false;\r\n        this._myScrollOffset = 0;\r\n        this._myScrollTimer = 0;\r\n        this._myScrollThumbstickTimer = 0;\r\n\r\n        this._myPulseTimer = 0;\r\n\r\n        this._myGamepadScrollEnabled = true;\r\n        if (this._myConfig.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollEnabled = false;\r\n        }\r\n\r\n        this._myErrorEventListener = null;\r\n        this._myUnhandledRejectionEventListener = null;\r\n\r\n        this._myConsolePrintAddMessageEnabled = true;\r\n        this._myConsolePrintUpdateTextEnabled = true;\r\n        this._myConsolePrintAddMessageEnabledReset = false;\r\n        this._myConsolePrintUpdateTextEnabledReset = false;\r\n        this._myTextDirty = false;\r\n\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, params) {\r\n        this._myLeftGamepad = Globals.getLeftGamepad(this._myEngine);\r\n        this._myRightGamepad = Globals.getRightGamepad(this._myEngine);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myWidgetFrame.start(parentObject, params);\r\n\r\n        this._myUI.build(this._myWidgetFrame.getWidgetObject(), this._myConfig, params);\r\n        this._myUI.setVisible(this._myWidgetFrame.isVisible());\r\n        this._setNotifyIconActive(false);\r\n\r\n        this._addListeners();\r\n\r\n        this._overrideConsolesFunctions();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            if (this._myConsolePrintAddMessageEnabledReset) {\r\n                this._myConsolePrintAddMessageEnabledReset = false;\r\n                this._myConsolePrintAddMessageEnabled = true;\r\n            }\r\n\r\n            if (this._myConsolePrintUpdateTextEnabledReset) {\r\n                this._myConsolePrintUpdateTextEnabledReset = false;\r\n                this._myConsolePrintUpdateTextEnabled = true;\r\n            }\r\n\r\n            if (this._myTextDirty) {\r\n                this._myTextDirty = false;\r\n                this._updateAllTexts();\r\n            }\r\n\r\n            this._updateScroll(dt);\r\n        }\r\n\r\n        this._updateGamepadsExtraActions(dt);\r\n    }\r\n\r\n    // This must be done only when all the setup is complete, to avoid issues with other part of the code calling the console and then triggering the console vr while not ready yet\r\n    _overrideConsolesFunctions() {\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.LOG] = console.log;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.ERROR] = console.error;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.WARN] = console.warn;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.INFO] = console.info;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.DEBUG] = console.debug;\r\n        this._myOldBrowserConsole[ConsoleVRWidgetConsoleFunction.ASSERT] = console.assert;\r\n        this._myOldBrowserConsoleClear = console.clear;\r\n\r\n        if (this._myParams.myOverrideBrowserConsole) {\r\n            console.log = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.LOG, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.error = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.warn = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.WARN, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.info = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.INFO, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.debug = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.DEBUG, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.assert = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ASSERT, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n            console.clear = this._clearConsole.bind(this, true, ConsoleVRWidgetSender.BROWSER_CONSOLE);\r\n\r\n            this._myErrorEventListener = function (errorEvent) {\r\n                if (errorEvent.error != null) {\r\n                    this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught\", errorEvent.error.stack);\r\n                } else {\r\n                    this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught\", errorEvent.message);\r\n                }\r\n            }.bind(this);\r\n\r\n            this._myUnhandledRejectionEventListener = function (errorEvent) {\r\n                this._consolePrint(ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.WINDOW, \"Uncaught (in promise)\", errorEvent.reason);\r\n            }.bind(this);\r\n\r\n            Globals.getWindow(this._myEngine).addEventListener(\"error\", this._myErrorEventListener);\r\n            Globals.getWindow(this._myEngine).addEventListener(\"unhandledrejection\", this._myUnhandledRejectionEventListener);\r\n        }\r\n\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.LOG] = Globals.getConsoleVR(this._myEngine).log;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.ERROR] = Globals.getConsoleVR(this._myEngine).error;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.WARN] = Globals.getConsoleVR(this._myEngine).warn;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.INFO] = Globals.getConsoleVR(this._myEngine).info;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.DEBUG] = Globals.getConsoleVR(this._myEngine).debug;\r\n        this._myOldConsoleVR[ConsoleVRWidgetConsoleFunction.ASSERT] = Globals.getConsoleVR(this._myEngine).assert;\r\n        this._myOldConsoleVRClear = Globals.getConsoleVR(this._myEngine).clear;\r\n\r\n        Globals.getConsoleVR(this._myEngine).log = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.LOG, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).error = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ERROR, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).warn = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.WARN, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).info = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.INFO, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).debug = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.DEBUG, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).assert = this._consolePrint.bind(this, ConsoleVRWidgetConsoleFunction.ASSERT, ConsoleVRWidgetSender.CONSOLE_VR);\r\n        Globals.getConsoleVR(this._myEngine).clear = this._clearConsole.bind(this, true, ConsoleVRWidgetSender.CONSOLE_VR);\r\n    }\r\n\r\n    // Text section\r\n\r\n    _updateText(messageType) {\r\n        let consoleText = \"\";\r\n\r\n        if (!this._myTypeFilters[messageType]) {\r\n            let linesCount = 0;\r\n            let i = this._myMessages.length - 1;\r\n\r\n            let scrollLinesToSkip = Math.round(this._myScrollOffset);\r\n\r\n            while (i >= 0 && linesCount < this._myConfig.myMaxLines) {\r\n                let message = this._myMessages[i];\r\n\r\n                // Skip filtered messages\r\n                if (this._myTypeFilters[message.myType]) {\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                let messageLines = message.myLines.length;\r\n\r\n                // Compute line to skip due to scroll offset\r\n                let linesToSkip = 0;\r\n                if (scrollLinesToSkip > 0) {\r\n                    let additionalEmptyLines = 0;\r\n                    if (i != this._myMessages.length - 1) {\r\n                        additionalEmptyLines = this._myConfig.myLinesBetweenMessages;\r\n                    }\r\n\r\n                    if (scrollLinesToSkip >= messageLines + additionalEmptyLines) { // + empty lines between messages\r\n                        scrollLinesToSkip -= messageLines + additionalEmptyLines;\r\n                        linesToSkip = messageLines + additionalEmptyLines;\r\n                    } else {\r\n                        linesToSkip = scrollLinesToSkip;\r\n                        scrollLinesToSkip = 0;\r\n                    }\r\n                }\r\n\r\n                // Add empty lines between messages\r\n                if (i != this._myMessages.length - 1) {\r\n                    let emptyLinesToSkip = this._myConfig.myLinesBetweenMessages - Math.max(this._myConfig.myLinesBetweenMessages - linesToSkip, 0);\r\n                    let emptyLinesToShow = this._myConfig.myLinesBetweenMessages - emptyLinesToSkip;\r\n                    if (linesCount + emptyLinesToShow > this._myConfig.myMaxLines) {\r\n                        emptyLinesToShow = this._myMaxLines - linesCount;\r\n                    }\r\n\r\n                    for (let j = 0; j < emptyLinesToShow; j++) {\r\n                        consoleText = (\"\\n\").concat(consoleText);\r\n                    }\r\n\r\n                    linesCount += emptyLinesToShow;\r\n                    linesToSkip -= emptyLinesToSkip;\r\n                }\r\n\r\n                // Computing the number of message lines to show\r\n                let linesToShow = messageLines - linesToSkip;\r\n                if (linesCount + linesToShow > this._myConfig.myMaxLines) {\r\n                    linesToShow = this._myConfig.myMaxLines - linesCount;\r\n                }\r\n\r\n                if (linesToShow > 0) {\r\n                    if (message.myType == messageType) {\r\n                        // If the message is the same type of this message text component, add the message lines\r\n\r\n                        let linesToPrint = message.myLines.slice(messageLines - linesToShow - linesToSkip, messageLines - linesToSkip);\r\n                        let text = linesToPrint.join(\"\\n\");\r\n                        consoleText = (text.concat(\"\\n\")).concat(consoleText);\r\n\r\n                        linesCount += linesToShow;\r\n                    } else {\r\n                        // Otherwise add empty lines, so that the text component with the correct type will have space to show this message\r\n\r\n                        for (let j = 0; j < linesToShow; j++) {\r\n                            consoleText = (\"\\n\").concat(consoleText);\r\n                        }\r\n\r\n                        linesCount += linesToShow;\r\n                    }\r\n                }\r\n\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        consoleText = this._myConfig.myMessagesTextStartString.concat(consoleText);\r\n\r\n        try {\r\n            this._myConsolePrintUpdateTextEnabled = false;\r\n            this._myUI.myMessagesTextComponents[messageType].text = consoleText;\r\n            this._myConsolePrintUpdateTextEnabled = true;\r\n        } catch (error) {\r\n            this._myConsolePrintUpdateTextEnabledReset = true;\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    _consolePrint(consoleFunction, sender, ...args) {\r\n        if (this._myConsolePrintAddMessageEnabled && (consoleFunction != ConsoleVRWidgetConsoleFunction.ASSERT || (args.length > 0 && !args[0]))) {\r\n            try {\r\n                let message = this._argsToMessage(consoleFunction, ...args);\r\n                this._addMessage(message);\r\n\r\n                if (this._myMessages.length >= this._myConfig.myMaxMessages + this._myConfig.myMaxMessagesDeletePad) {\r\n                    this._myMessages = this._myMessages.slice(this._myMessages.length - this._myConfig.myMaxMessages);\r\n                    this._clampScrollOffset();\r\n                }\r\n            } catch (error) {\r\n                this._myConsolePrintAddMessageEnabled = false;\r\n                this._myConsolePrintAddMessageEnabledReset = true;\r\n\r\n                this._myTextDirty = true;\r\n\r\n                try {\r\n                    let errorMessage = \"An error occurred while trying to add a new message to the Console VR Widget\";\r\n                    let message = new ConsoleVRWidgetMessage(ConsoleVRWidgetMessageType.ERROR, [errorMessage]);\r\n                    this._myMessages.push(message);\r\n                    ConsoleOriginalFunctions.error(errorMessage);\r\n                } catch (anotherError) {\r\n                    // ignored\r\n                }\r\n\r\n                throw error;\r\n            }\r\n\r\n            if (this._myConsolePrintUpdateTextEnabled) {\r\n                this._updateAllTexts();\r\n                this._pulseGamepad();\r\n            } else {\r\n                this._myTextDirty = true;\r\n            }\r\n        }\r\n\r\n        switch (sender) {\r\n            case ConsoleVRWidgetSender.BROWSER_CONSOLE:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n            case ConsoleVRWidgetSender.CONSOLE_VR:\r\n                this._myOldConsoleVR[consoleFunction].apply(Globals.getConsoleVR(this._myEngine), args);\r\n                break;\r\n            default:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _argsToMessage(consoleFunction, ...args) {\r\n        if (consoleFunction == ConsoleVRWidgetConsoleFunction.ASSERT) {\r\n            args = args.slice(1);\r\n            args.splice(0, 0, this._myConfig.myAssertStartString);\r\n        }\r\n\r\n        let messageType = this._consoleFunctionToMessageType(consoleFunction);\r\n\r\n        let formattedText = this._formatArgs(...args);\r\n\r\n        let lines = this._splitLongLines(formattedText);\r\n\r\n        if (messageType == ConsoleVRWidgetMessageType.INFO) {\r\n            messageType = ConsoleVRWidgetMessageType.LOG;\r\n        } else if (messageType == ConsoleVRWidgetMessageType.EXCEPTION || messageType == ConsoleVRWidgetMessageType.ASSERT) {\r\n            messageType = ConsoleVRWidgetMessageType.ERROR;\r\n        }\r\n\r\n\r\n        let message = new ConsoleVRWidgetMessage(messageType, lines);\r\n\r\n        return message;\r\n    }\r\n\r\n    _consoleFunctionToMessageType(consoleFunction) {\r\n        let messageType = ConsoleVRWidgetMessageType.LOG;\r\n\r\n        if (consoleFunction < ConsoleVRWidgetConsoleFunction.INFO) {\r\n            messageType = consoleFunction;\r\n        } else if (consoleFunction == ConsoleVRWidgetConsoleFunction.INFO) {\r\n            messageType = ConsoleVRWidgetMessageType.LOG;\r\n        } else {\r\n            messageType = ConsoleVRWidgetMessageType.ERROR;\r\n        }\r\n\r\n        return messageType;\r\n    }\r\n\r\n    // Here the formatting using placeholder like %d could be implemented in the future\r\n    _formatArgs(...args) {\r\n        let stringifiedArgs = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (args[i] === undefined) {\r\n                stringifiedArgs.push(\"undefined\");\r\n            } else {\r\n                stringifiedArgs.push(this._stringifyItem(args[i]));\r\n            }\r\n        }\r\n\r\n        let formattedString = stringifiedArgs.join(\" \");\r\n\r\n        return formattedString;\r\n    }\r\n\r\n    _stringifyItem(item) {\r\n        let stringifiedItem = null;\r\n\r\n        if (item instanceof Error) {\r\n            stringifiedItem = item.stack;\r\n        } else if (typeof item === \"object\") {\r\n            let linesBetweenItems = 2;\r\n\r\n            try {\r\n                stringifiedItem = JSON.stringify(item, this._jsonReplacer.bind(this), linesBetweenItems);\r\n            } catch (error) {\r\n                let cache = new WeakSet();\r\n\r\n                stringifiedItem = JSON.stringify(item, function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (cache.has(value)) {\r\n                            return \"<stringify error: object already stringified>\"; // Try to avoid circular reference, a repeated object will be caught in this check too sadly\r\n                        }\r\n                        cache.add(value);\r\n                    }\r\n\r\n                    return this._jsonReplacer(key, value);\r\n                }.bind(this), linesBetweenItems);\r\n            }\r\n\r\n            stringifiedItem = stringifiedItem.replaceAll(\"\\\"[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"'[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]\\\"\", \"]\");\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]'\", \"]\");\r\n        } else {\r\n            stringifiedItem = item;\r\n        }\r\n\r\n        return stringifiedItem;\r\n    }\r\n\r\n    _splitLongLines(messageText) {\r\n        let linesToSplit = messageText.split(\"\\n\");\r\n        let lines = [];\r\n        for (let i = 0; i < linesToSplit.length; i++) {\r\n            let lineToSplit = linesToSplit[i];\r\n\r\n            if (lineToSplit.length > this._myConfig.myMaxCharactersPerLine) {\r\n                let spacesAtStart = this._getSpacesAtStart(lineToSplit);\r\n                let spaceToAdd = this._myConfig.myTabString.concat(spacesAtStart);\r\n                let lineSplits = 0;\r\n\r\n                while (lineToSplit.length > this._myConfig.myMaxCharactersPerLine && lineSplits < this._myConfig.myMaxLineSplits) {\r\n                    let firstSub = lineToSplit.substr(0, this._myConfig.myMaxCharactersPerLine - 1);\r\n                    let secondSub = lineToSplit.substr(this._myConfig.myMaxCharactersPerLine - 1);\r\n                    secondSub = spaceToAdd.concat(secondSub);\r\n\r\n                    lines.push(firstSub);\r\n\r\n                    lineToSplit = secondSub;\r\n                    lineSplits++;\r\n                }\r\n                lines.push(lineToSplit);\r\n            } else {\r\n                lines.push(lineToSplit);\r\n            }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    _getSpacesAtStart(text) {\r\n        let spaces = \"\";\r\n        let i = 0;\r\n\r\n        while (i < text.length && text[i] == \" \") {\r\n            spaces = spaces.concat(\" \");\r\n            i++;\r\n        }\r\n\r\n        return spaces;\r\n    }\r\n\r\n    _addMessage(message) {\r\n        let hasSameInfoAsPrev = false;\r\n        if (this._myMessages.length > 0) {\r\n            let lastMessage = this._myMessages[this._myMessages.length - 1];\r\n            if (lastMessage.hasSameInfo(message)) {\r\n                lastMessage.increaseCount();\r\n                hasSameInfoAsPrev = true;\r\n            }\r\n        }\r\n\r\n        if (!hasSameInfoAsPrev) {\r\n            this._myMessages.push(message);\r\n        }\r\n\r\n        this._adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev);\r\n        this._updateNotifyIcon(message);\r\n    }\r\n\r\n    // If you have scrolled, new messages does not move the scroll position\r\n    _adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev) {\r\n        if (!hasSameInfoAsPrev && !(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._myScrollOffset += message.myLines.length + this._myConfig.myLinesBetweenMessages;\r\n        }\r\n    }\r\n\r\n    _updateAllTexts() {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                this._updateText(ConsoleVRWidgetMessageType[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateNotifyIcon(message) {\r\n        if (!(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._setNotifyIconActive(true);\r\n        }\r\n    }\r\n\r\n    _updateScroll(dt) {\r\n        if (this._myScrollUp) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._myConfig.myScrollDelay) {\r\n                this._myScrollTimer -= this._myConfig.myScrollDelay;\r\n                this._myScrollOffset += this._myConfig.myScrollAmount;\r\n            }\r\n        } else if (this._myScrollDown) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._myConfig.myScrollDelay) {\r\n                this._myScrollTimer -= this._myConfig.myScrollDelay;\r\n                this._myScrollOffset -= this._myConfig.myScrollAmount;\r\n            }\r\n        }\r\n\r\n        this._clampScrollOffset();\r\n\r\n        if (this._myScrollUp || this._myScrollDown) {\r\n            this._updateAllTexts();\r\n        }\r\n\r\n        if (this._myScrollOffset == 0) {\r\n            this._setNotifyIconActive(false);\r\n        }\r\n    }\r\n\r\n    _clampScrollOffset() {\r\n        let maxScroll = this._getMaxScrollOffset();\r\n        this._myScrollOffset = Math.pp_clamp(this._myScrollOffset, 0, maxScroll);\r\n    }\r\n\r\n    _getMaxScrollOffset() {\r\n        return Math.max(this._getLinesCount() - this._myConfig.myMaxLines, 0);\r\n    }\r\n\r\n    _getLinesCount() {\r\n        let linesCount = 0;\r\n        for (let message of this._myMessages) {\r\n            if (!this._myTypeFilters[message.myType]) {\r\n                linesCount += message.myLines.length + this._myConfig.myLinesBetweenMessages;\r\n            }\r\n        }\r\n        linesCount -= this._myConfig.myLinesBetweenMessages; // Empty line is added only between messages\r\n        linesCount = Math.max(linesCount, 0);\r\n\r\n        return linesCount;\r\n    }\r\n\r\n    // Listener section\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        for (let key in ConsoleVRWidgetMessageType) {\r\n            let cursorTarget = ui.myFilterButtonsCursorTargetComponents[ConsoleVRWidgetMessageType[key]];\r\n            let backgroundMaterial = ui.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n            let textMaterial = ui.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n\r\n            cursorTarget.onSingleClick.add(this._toggleFilter.bind(this, ConsoleVRWidgetMessageType[key], textMaterial));\r\n            cursorTarget.onDoubleClick.add(this._filterAllButOne.bind(this, ConsoleVRWidgetMessageType[key], textMaterial));\r\n            cursorTarget.onTripleClick.add(this._resetFilters.bind(this, ConsoleVRWidgetMessageType[key]));\r\n            cursorTarget.onHover.add(this._filterHover.bind(this, ConsoleVRWidgetMessageType[key], backgroundMaterial));\r\n            cursorTarget.onUnhover.add(this._filterUnhover.bind(this, ConsoleVRWidgetMessageType[key], backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myClearButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myClearButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.onClick.add(this._clearConsole.bind(this, false, null));\r\n            cursorTarget.onHover.add(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.onUnhover.add(this._genericUnhover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myUpButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myUpButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.onDoubleClick.add(this._instantScrollUp.bind(this, true));\r\n            cursorTarget.onDown.add(this._setScrollUp.bind(this, true));\r\n            cursorTarget.onDownOnHover.add(this._setScrollUp.bind(this, true));\r\n            cursorTarget.onUp.add(this._setScrollUp.bind(this, false));\r\n            cursorTarget.onUnhover.add(this._setScrollUp.bind(this, false));\r\n            cursorTarget.onHover.add(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.onUnhover.add(this._genericUnhover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myDownButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myDownButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.onDoubleClick.add(this._instantScrollDown.bind(this));\r\n            cursorTarget.onDown.add(this._setScrollDown.bind(this, true));\r\n            cursorTarget.onDownOnHover.add(this._setScrollDown.bind(this, true));\r\n            cursorTarget.onUp.add(this._setScrollDown.bind(this, false));\r\n            cursorTarget.onUnhover.add(this._setScrollDown.bind(this, false));\r\n            cursorTarget.onHover.add(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.onUnhover.add(this._genericUnhover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myNotifyIconCursorTargetComponent;\r\n            let backgroundMaterial = ui.myNotifyIconBackgroundComponent.material;\r\n\r\n            cursorTarget.onClick.add(this._instantScrollDown.bind(this));\r\n            cursorTarget.onHover.add(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.onUnhover.add(this._notifyIconUnhover.bind(this));\r\n        }\r\n\r\n        ui.myPointerCursorTargetComponent.onHover.add(this._setGamepadScrollEnabled.bind(this, true));\r\n        ui.myPointerCursorTargetComponent.onUnhover.add(this._setGamepadScrollEnabled.bind(this, false));\r\n    }\r\n\r\n    _resetFilters(messageType) {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n\r\n                this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n                filterTextMaterial.color = this._myConfig.myMessageTypeColors[ConsoleVRWidgetMessageType[key]];\r\n                if (ConsoleVRWidgetMessageType[key] != messageType) {\r\n                    backgroundMaterial.color = this._myConfig.myBackgroundColor;\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _filterAllButOne(messageType) {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            for (let key in ConsoleVRWidgetMessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[ConsoleVRWidgetMessageType[key]].material;\r\n                if (ConsoleVRWidgetMessageType[key] != messageType) {\r\n                    this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = true;\r\n                    backgroundMaterial.color = this._myConfig.myFilterButtonDisabledBackgroundColor;\r\n                    filterTextMaterial.color = this._myConfig.myFilterButtonDisabledTextColor;\r\n                } else {\r\n                    this._myTypeFilters[ConsoleVRWidgetMessageType[key]] = false;\r\n                    filterTextMaterial.color = this._myConfig.myMessageTypeColors[messageType];\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _toggleFilter(messageType, textMaterial) {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n\r\n            this._myTypeFilters[messageType] = !this._myTypeFilters[messageType];\r\n            if (this._myTypeFilters[messageType]) {\r\n                textMaterial.color = this._myConfig.myFilterButtonDisabledTextColor;\r\n            } else {\r\n                textMaterial.color = this._myConfig.myMessageTypeColors[messageType];\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _clearConsole(codeDrivenClear = false, sender = null) {\r\n        if (this._myWidgetFrame.isVisible() || codeDrivenClear) {\r\n            this._myMessages = [];\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n\r\n            if (codeDrivenClear) {\r\n                switch (sender) {\r\n                    case ConsoleVRWidgetSender.BROWSER_CONSOLE:\r\n                        this._myOldBrowserConsoleClear.apply(console);\r\n                        break;\r\n                    case ConsoleVRWidgetSender.CONSOLE_VR:\r\n                        this._myOldConsoleVRClear.apply(Globals.getConsoleVR(this._myEngine));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else if (this._myConfig.myClearBrowserConsoleWhenClearPressed) {\r\n                ConsoleOriginalFunctions.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    _setScrollUp(value) {\r\n        if (this._myWidgetFrame.isVisible() || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollUp = value;\r\n        }\r\n    }\r\n\r\n    _setScrollDown(value) {\r\n        if (this._myWidgetFrame.isVisible() || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollDown = value;\r\n        }\r\n    }\r\n\r\n    _instantScrollUp() {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            this._myScrollOffset = this._getMaxScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _instantScrollDown() {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            this._myScrollOffset = 0;\r\n            this._setNotifyIconActive(false);\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _setNotifyIconActive(active) {\r\n        this._myUI.myNotifyIconPanel.pp_setActive(active && this._myWidgetFrame.isVisible());\r\n    }\r\n\r\n    _notifyIconUnhover() {\r\n        let material = this._myUI.myNotifyIconBackgroundComponent.material;\r\n        material.color = this._myConfig.myNotifyIconColor;\r\n    }\r\n\r\n    _filterHover(messageType, material) {\r\n        this._genericHover(material);\r\n    }\r\n\r\n    _filterUnhover(messageType, material) {\r\n        if (this._myTypeFilters[messageType]) {\r\n            material.color = this._myConfig.myFilterButtonDisabledBackgroundColor;\r\n        } else {\r\n            material.color = this._myConfig.myBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._myConfig.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnhover(material) {\r\n        material.color = this._myConfig.myBackgroundColor;\r\n    }\r\n\r\n    // Gamepad section\r\n\r\n    _updateGamepadsExtraActions(dt) {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            if ((this._myLeftGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressStart() && this._myRightGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed()) ||\r\n                (this._myRightGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressStart() && this._myLeftGamepad.getButtonInfo(GamepadButtonID.THUMBSTICK).isPressed())) {\r\n                this._toggleVisibility();\r\n            }\r\n\r\n            this._myPulseTimer = Math.max(this._myPulseTimer - dt, 0);\r\n\r\n            this._updateScrollWithThumbstick(dt);\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        this._myUI.setVisible(visible);\r\n        if (visible) {\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _updateScrollWithThumbstick(dt) {\r\n        if (this._myWidgetFrame.isVisible() && this._myGamepadScrollEnabled) {\r\n            let axes = [0, 0];\r\n            if (this._myConfig.myScrollThumbstickHandedness == ToolHandedness.LEFT) {\r\n                axes = this._myLeftGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes;\r\n            } else if (this._myConfig.myScrollThumbstickHandedness == ToolHandedness.RIGHT) {\r\n                axes = this._myRightGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes;\r\n            }\r\n\r\n            if (Math.abs(axes[1]) > this._myConfig.myScrollThumbstickMinThreshold) {\r\n                this._myScrollThumbstickTimer += dt;\r\n\r\n                while (this._myScrollThumbstickTimer > this._myConfig.myScrollThumbstickDelay) {\r\n                    this._myScrollThumbstickTimer -= this._myConfig.myScrollThumbstickDelay;\r\n\r\n                    let normalizedScrollAmount = (Math.abs(axes[1]) - this._myConfig.myScrollThumbstickMinThreshold) / (1 - this._myConfig.myScrollThumbstickMinThreshold);\r\n                    this._myScrollOffset += Math.sign(axes[1]) * normalizedScrollAmount * this._myConfig.myScrollThumbstickAmount;\r\n                }\r\n\r\n                this._clampScrollOffset();\r\n                this._updateAllTexts();\r\n            } else {\r\n                this._myScrollThumbstickTimer = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _pulseGamepad() {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            let pulseType = this._myParams.myPulseOnNewMessage;\r\n            let pulseEnabled = pulseType == ConsoleVRWidgetPulseOnNewMessage.ALWAYS || (!this._myWidgetFrame.isVisible() && pulseType == ConsoleVRWidgetPulseOnNewMessage.WHEN_HIDDEN);\r\n            if (pulseEnabled && this._myPulseTimer == 0) {\r\n                if (this._myParams.myHandedness == ToolHandedness.RIGHT) {\r\n                    this._myRightGamepad.pulse(this._myConfig.myPulseIntensity, this._myConfig.myPulseDuration);\r\n                } else {\r\n                    this._myLeftGamepad.pulse(this._myConfig.myPulseIntensity, this._myConfig.myPulseDuration);\r\n                }\r\n                this._myPulseTimer = this._myConfig.myPulseDelay;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isSimpleArray(array) {\r\n        if (this._isSpecialSimpleArray(array)) {\r\n            return true;\r\n        } else if (Array.isArray(array)) {\r\n            let builtInArray = true;\r\n            for (let element of array) {\r\n                if (element instanceof Object) {\r\n                    builtInArray = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return builtInArray;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _isSpecialSimpleArray(item) {\r\n        let arrayPrototypesToExtend = [\r\n            Array.prototype, Uint8ClampedArray.prototype, Uint8Array.prototype, Uint16Array.prototype, Uint32Array.prototype, Int8Array.prototype,\r\n            Int16Array.prototype, Int32Array.prototype, Float32Array.prototype, Float64Array.prototype];\r\n        return item && item.constructor &&\r\n            (\r\n                item.constructor.name == \"Uint8ClampedArray\" ||\r\n                item.constructor.name == \"Uint8Array\" ||\r\n                item.constructor.name == \"Uint16Array\" ||\r\n                item.constructor.name == \"Uint32Array\" ||\r\n                item.constructor.name == \"Int8Array\" ||\r\n                item.constructor.name == \"Int16Array\" ||\r\n                item.constructor.name == \"Int32Array\" ||\r\n                item.constructor.name == \"Float32Array\" ||\r\n                item.constructor.name == \"Float64Array\"\r\n            );\r\n    }\r\n\r\n    _setGamepadScrollEnabled(enabled) {\r\n        this._myGamepadScrollEnabled = enabled;\r\n\r\n        if (!this._myConfig.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollEnabled = true;\r\n        }\r\n    }\r\n\r\n    _jsonReplacer(key, value) {\r\n        if (value instanceof Map) {\r\n            return Array.from(value.entries());\r\n        } else if (this._isSimpleArray(value)) {\r\n            let array = value;\r\n            if (this._isSpecialSimpleArray(array)) {\r\n                let arrayCopy = []; // Special arrays like Float32Array do not print like Array\r\n                for (let i = 0; i < array.length; i++) {\r\n                    arrayCopy[i] = array[i];\r\n                }\r\n\r\n                array = arrayCopy;\r\n            }\r\n\r\n            let stringifiedArray = JSON.stringify(array);\r\n            stringifiedArray = stringifiedArray.split(\",\").join(\", \");\r\n            return stringifiedArray;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        Globals.getWindow(this._myEngine).removeEventListener(\"error\", this._myErrorEventListener);\r\n        Globals.getWindow(this._myEngine).removeEventListener(\"unhandledrejection\", this._myUnhandledRejectionEventListener);\r\n\r\n        this._myUI.destroy();\r\n        this._myWidgetFrame.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { ConsoleOriginalFunctions } from \"./console_original_functions\";\r\n\r\nexport class ConsoleVR {\r\n\r\n    constructor() {\r\n        this._myForwardToBrowserConsole = true;\r\n    }\r\n\r\n    log(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.log(...args);\r\n        }\r\n    }\r\n\r\n    error(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.error(...args);\r\n        }\r\n    }\r\n\r\n    warn(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.warn(...args);\r\n        }\r\n    }\r\n\r\n    info(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.info(...args);\r\n        }\r\n    }\r\n\r\n    debug(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.debug(...args);\r\n        }\r\n    }\r\n\r\n    assert(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.assert(...args);\r\n        }\r\n    }\r\n\r\n    clear(...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            ConsoleOriginalFunctions.clear(...args);\r\n        }\r\n    }\r\n\r\n    setForwardToBrowserConsole(forwardToBrowserConsole) {\r\n        this._myForwardToBrowserConsole = forwardToBrowserConsole;\r\n    }\r\n\r\n    isForwardToBrowserConsole() {\r\n        return this._myForwardToBrowserConsole;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { ConsoleVRWidget, ConsoleVRWidgetParams } from \"../console_vr_widget\";\r\nimport { InitConsoleVRComponent } from \"./init_console_vr_component\";\r\n\r\nexport class ConsoleVRToolComponent extends Component {\r\n    static TypeName = \"pp-console-vr-tool\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"None\", \"Left\", \"Right\"], \"None\"),\r\n        _myOverrideBrowserConsole: Property.bool(true),\r\n        _myShowOnStart: Property.bool(false),\r\n        _myShowVisibilityButton: Property.bool(false),\r\n        _myPulseOnNewMessage: Property.enum([\"Never\", \"Always\", \"When Hidden\"], \"Never\")\r\n    };\r\n\r\n    init() {\r\n        // #TODO this should check for tool enabled but it might not have been initialized yet, not way to specify component order\r\n\r\n        this.object.pp_addComponent(InitConsoleVRComponent);\r\n\r\n        this._myWidget = new ConsoleVRWidget(this.engine);\r\n\r\n        this._myStarted = false;\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            let params = new ConsoleVRWidgetParams(this.engine);\r\n            params.myHandedness = [null, \"left\", \"right\"][this._myHandedness];\r\n            params.myOverrideBrowserConsole = this._myOverrideBrowserConsole;\r\n            params.myShowOnStart = this._myShowOnStart;\r\n            params.myShowVisibilityButton = this._myShowVisibilityButton;\r\n            params.myPulseOnNewMessage = this._myPulseOnNewMessage;\r\n            params.myPlaneMaterial = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            params.myTextMaterial = Globals.getDefaultMaterials(this.engine).myText.clone();\r\n\r\n            this._myWidget.start(this.object, params);\r\n\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n            this._mySetVisibleNextUpdate = false;\r\n\r\n            this._myStarted = true;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                if (this._mySetVisibleNextUpdate) {\r\n                    this._mySetVisibleNextUpdate = false;\r\n                    this._myWidget.setVisible(false);\r\n                    this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n                }\r\n\r\n\r\n                this._myWidget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._mySetVisibleNextUpdate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n                this._myWidget.setVisible(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myWidget.destroy();\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { ConsoleVR } from \"../console_vr\";\r\n\r\nexport class InitConsoleVRComponent extends Component {\r\n    static TypeName = \"pp-init-console-vr\";\r\n    static Properties = {\r\n        _myInit: Property.bool(true)\r\n    };\r\n\r\n    init() {\r\n        this._myConsoleVR = null;\r\n\r\n        if (this._myInit) {\r\n            // Prevents double global from same engine\r\n            if (!Globals.hasConsoleVR(this.engine)) {\r\n                this._myConsoleVR = new ConsoleVR();\r\n\r\n                Globals.setConsoleVR(this._myConsoleVR, this.engine);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this._myConsoleVR != null && Globals.getConsoleVR(this.engine) == this._myConsoleVR) {\r\n            Globals.removeConsoleVR(this.engine);\r\n        }\r\n    }\r\n}", "/*\r\nEasy Tune Variables Examples\r\n\r\nNumber:         Globals.getEasyTuneVariables().add(new EasyTuneNumber(\"Float\", 1.00, (newValue) => this.myFloat = newValue, true, 2, 0.1));\r\nNumber Array:   Globals.getEasyTuneVariables().add(new EasyTuneNumberArray(\"Float Array\", [1.00, 2.00, 3.00], (newValue) => this.myFloatArray.pp_copy(newValue), true, 2, 0.1));\r\nInt:            Globals.getEasyTuneVariables().add(new EasyTuneInt(\"Int\", this.myInt, (newValue) => this.myInt = newValue, true, 1));\r\nInt Array:      Globals.getEasyTuneVariables().add(new EasyTuneIntArray(\"Int Array\", [1, 2, 3], (newValue) => this.myIntArray.pp_copy(newValue), true, 1));\r\nBool:           Globals.getEasyTuneVariables().add(new EasyTuneBool(\"Bool\", this.myBool, (newValue) => this.myBool = newValue, true));\r\nBool Array:     Globals.getEasyTuneVariables().add(new EasyTuneBoolArray(\"Bool Array\", [false, true, false], (newValue) => this.myBoolArray.pp_copy(newValue), true));\r\nTransform:      Globals.getEasyTuneVariables().add(new EasyTuneTransform(\"Transform\", mat4_create(), (newValue) => this.myTransform.mat4_copy(newValue), true, true, 3));\r\n*/\r\n\r\nimport { Emitter } from \"@wonderlandengine/api\";\r\nimport { mat4_create } from \"../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../pp/globals\";\r\nimport { EasyTuneUtils } from \"./easy_tune_utils\";\r\n\r\nexport let EasyTuneVariableType = {\r\n    NONE: 0,\r\n    NUMBER: 1,\r\n    BOOL: 2,\r\n    TRANSFORM: 3\r\n};\r\n\r\nexport class EasyTuneVariable {\r\n\r\n    constructor(name, type, onValueChangedEventListener = null, showOnWidget = true, engine = Globals.getMainEngine()) {\r\n        this._myName = name;\r\n        this._myType = type;\r\n\r\n        this._myValue = null;\r\n        this._myDefaultValue = null;\r\n\r\n        this._myShowOnWidget = showOnWidget;\r\n\r\n        this._myWidgetCurrentVariable = false;\r\n\r\n        this._myValueChangedEmitter = new Emitter();      // Signature: listener(value, easyTuneVariables)\r\n\r\n        this._myEngine = engine;\r\n\r\n        if (onValueChangedEventListener != null) {\r\n            this.registerValueChangedEventListener(this, onValueChangedEventListener);\r\n        }\r\n    }\r\n\r\n    getName() {\r\n        return this._myName;\r\n    }\r\n\r\n    getType() {\r\n        return this._myType;\r\n    }\r\n\r\n    isWidgetCurrentVariable() {\r\n        return this._myWidgetCurrentVariable;\r\n    }\r\n\r\n    setWidgetCurrentVariable(widgetCurrentVariable) {\r\n        this._myWidgetCurrentVariable = widgetCurrentVariable;\r\n    }\r\n\r\n    getValue() {\r\n        return this._myValue;\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let valueChanged = this._myValue != value;\r\n\r\n        this._myValue = value;\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneVariable.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshWidget(this._myEngine);\r\n\r\n        if (valueChanged) {\r\n            this._myValueChangedEmitter.notify(this.getValue(), this);\r\n        }\r\n    }\r\n\r\n    getDefaultValue() {\r\n        return this._myDefaultValue;\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this._myDefaultValue = value;\r\n    }\r\n\r\n    shouldShowOnWidget() {\r\n        return this._myShowOnWidget;\r\n    }\r\n\r\n    setShowOnWidget(showOnWidget) {\r\n        this._myShowOnWidget = showOnWidget;\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return JSON.stringify(this.getValue());\r\n    }\r\n\r\n    registerValueChangedEventListener(id, listener) {\r\n        this._myValueChangedEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterValueChangedEventListener(id) {\r\n        this._myValueChangedEmitter.remove(id);\r\n    }\r\n}\r\n\r\nexport class EasyTuneVariableArray extends EasyTuneVariable {\r\n\r\n    constructor(name, type, value, onValueChangedEventListener, showOnWidget, engine) {\r\n        super(name, type, onValueChangedEventListener, showOnWidget, engine);\r\n\r\n        EasyTuneVariableArray.prototype.setValue.call(this, value, true);\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let valueChanged = this._myValue != null && !this._myValue.pp_equals(value);\r\n\r\n        if (this._myValue == null) {\r\n            this._myValue = value.pp_clone();\r\n        } else {\r\n            this._myValue.pp_copy(value);\r\n        }\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneVariableArray.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshWidget(this._myEngine);\r\n\r\n        if (valueChanged) {\r\n            this._myValueChangedEmitter.notify(this.getValue(), this);\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        if (this._myDefaultValue == null) {\r\n            this._myDefaultValue = value.pp_clone();\r\n        } else {\r\n            this._myDefaultValue.pp_copy(value);\r\n        }\r\n    }\r\n}\r\n\r\n// NUMBER\r\n\r\nexport class EasyTuneNumberArray extends EasyTuneVariableArray {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, decimalPlaces = 3, stepPerSecond = 1, min = null, max = null, editAllValuesTogether = false, engine) {\r\n        super(name, EasyTuneVariableType.NUMBER, value, onValueChangedEventListener, showOnWidget, engine);\r\n\r\n        this._myDecimalPlaces = decimalPlaces;\r\n        this._myStepPerSecond = stepPerSecond;\r\n\r\n        this._myDefaultStepPerSecond = this._myStepPerSecond;\r\n\r\n        this._myMin = min;\r\n        this._myMax = max;\r\n\r\n        this._myEditAllValuesTogether = editAllValuesTogether;\r\n\r\n        this._clampValue(true);\r\n    }\r\n\r\n    setMax(max) {\r\n        this._myMax = max;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    setMin(min) {\r\n        this._myMin = min;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    _clampValue(resetDefaultValue) {\r\n        let clampedValue = this._myValue.vec_clamp(this._myMin, this._myMax);\r\n\r\n        if (!resetDefaultValue) {\r\n            let clampedDefaultValue = this.getDefaultValue().vec_clamp(this._myMin, this._myMax);\r\n            let defaultValueChanged = !clampedDefaultValue.vec_equals(this.getDefaultValue(), 0.00001);\r\n            if (defaultValueChanged) {\r\n                EasyTuneVariableArray.prototype.setDefaultValue.call(this, clampedDefaultValue);\r\n            }\r\n        }\r\n\r\n        EasyTuneVariableArray.prototype.setValue.call(this, clampedValue, resetDefaultValue);\r\n    }\r\n}\r\n\r\nexport class EasyTuneNumber extends EasyTuneNumberArray {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, decimalPlaces, stepPerSecond, min, max, engine) {\r\n        super(name, [value], onValueChangedEventListener, showOnWidget, decimalPlaces, stepPerSecond, min, max, engine);\r\n\r\n        this._myTempValue = [0];\r\n        this._myTempDefaultValue = [0];\r\n    }\r\n\r\n    getValue() {\r\n        return super.getValue()[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this._myTempValue[0] = value;\r\n        super.setValue(this._myTempValue, resetDefaultValue);\r\n    }\r\n\r\n    getDefaultValue() {\r\n        return super.getDefaultValue()[0];\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this._myTempDefaultValue[0] = value;\r\n        super.setDefaultValue(this._myTempValue);\r\n    }\r\n}\r\n\r\nexport class EasyTuneInt extends EasyTuneNumber {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, stepPerSecond, min, max, engine) {\r\n        super(name, value, onValueChangedEventListener, showOnWidget, 0, stepPerSecond, min, max, engine);\r\n    }\r\n}\r\n\r\nexport class EasyTuneIntArray extends EasyTuneNumberArray {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, stepPerSecond, min, max, editAllValuesTogether, engine) {\r\n        let roundedValue = value.pp_clone();\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            roundedValue[i] = Math.round(roundedValue[i]);\r\n        }\r\n\r\n        super(name, roundedValue, onValueChangedEventListener, showOnWidget, 0, stepPerSecond, min != null ? Math.round(min) : null, max != null ? Math.round(max) : max, editAllValuesTogether, engine);\r\n    }\r\n}\r\n\r\n// BOOL\r\n\r\nexport class EasyTuneBoolArray extends EasyTuneVariableArray {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, engine) {\r\n        super(name, EasyTuneVariableType.BOOL, value, onValueChangedEventListener, showOnWidget, engine);\r\n    }\r\n}\r\n\r\nexport class EasyTuneBool extends EasyTuneBoolArray {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, engine) {\r\n        super(name, [value], onValueChangedEventListener, showOnWidget, engine);\r\n\r\n        this._myTempValue = [0];\r\n        this._myTempDefaultValue = [0];\r\n    }\r\n\r\n    getValue() {\r\n        return super.getValue()[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this._myTempValue[0] = value;\r\n        super.setValue(this._myTempValue, resetDefaultValue);\r\n    }\r\n\r\n    getDefaultValue() {\r\n        return super.getDefaultValue()[0];\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this._myTempDefaultValue[0] = value;\r\n        super.setDefaultValue(this._myTempValue);\r\n    }\r\n}\r\n\r\n// EASY TUNE EASY TRANSFORM\r\n\r\nexport class EasyTuneTransform extends EasyTuneVariable {\r\n\r\n    constructor(name, value, onValueChangedEventListener, showOnWidget, scaleAsOne = true, decimalPlaces = 3, positionStepPerSecond = 1, rotationStepPerSecond = 50, scaleStepPerSecond = 1, engine) {\r\n        super(name, EasyTuneVariableType.TRANSFORM, onValueChangedEventListener, showOnWidget, engine);\r\n\r\n        this._myDecimalPlaces = decimalPlaces;\r\n\r\n        this._myPosition = value.mat4_getPosition();\r\n        this._myRotation = value.mat4_getRotationDegrees();\r\n        this._myScale = value.mat4_getScale();\r\n\r\n        let decimalPlacesMultiplier = Math.pow(10, this._myDecimalPlaces);\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myScale[i] = Math.max(this._myScale[i], 1 / decimalPlacesMultiplier);\r\n        }\r\n\r\n        this._myScaleAsOne = scaleAsOne;\r\n\r\n        this._myPositionStepPerSecond = positionStepPerSecond;\r\n        this._myRotationStepPerSecond = rotationStepPerSecond;\r\n        this._myScaleStepPerSecond = scaleStepPerSecond;\r\n\r\n        this._myDefaultPosition = this._myPosition.vec3_clone();\r\n        this._myDefaultRotation = this._myRotation.vec3_clone();\r\n        this._myDefaultScale = this._myScale.vec3_clone();\r\n\r\n        this._myDefaultPositionStepPerSecond = this._myPositionStepPerSecond;\r\n        this._myDefaultRotationStepPerSecond = this._myRotationStepPerSecond;\r\n        this._myDefaultScaleStepPerSecond = this._myScaleStepPerSecond;\r\n\r\n        this._myTransform = mat4_create();\r\n        this._myTransform.mat4_setPositionRotationDegreesScale(this._myPosition, this._myRotation, this._myScale);\r\n\r\n        this._myTempTransform = mat4_create();\r\n    }\r\n\r\n    getValue() {\r\n        this._myTransform.mat4_setPositionRotationDegreesScale(this._myPosition, this._myRotation, this._myScale);\r\n        return this._myTransform;\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this._myTempTransform.mat4_setPositionRotationDegreesScale(this._myPosition, this._myRotation, this._myScale);\r\n\r\n        value.mat4_getPosition(this._myPosition);\r\n        value.mat4_getRotationDegrees(this._myRotation);\r\n        value.mat4_getScale(this._myScale);\r\n\r\n        this._myTransform.mat4_setPositionRotationDegreesScale(this._myPosition, this._myRotation, this._myScale);\r\n\r\n        let valueChanged = !this._myTempTransform.pp_equals(this._myTransform)\r\n\r\n        if (resetDefaultValue) {\r\n            EasyTuneTransform.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        EasyTuneUtils.refreshWidget(this._myEngine);\r\n\r\n        if (valueChanged) {\r\n            this._myValueChangedEmitter.notify(this.getValue(), this);\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this._myDefaultPosition = value.mat4_getPosition();\r\n        this._myDefaultRotation = value.mat4_getRotationDegrees();\r\n        this._myDefaultScale = value.mat4_getScale();\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.getValue().vec_toString();\r\n    }\r\n}", "import { Globals } from \"../../pp/globals\";\r\n\r\nlet _mySetWidgetCurrentVariableCallbacks = new WeakMap();    // Signature: callback(variableName)\r\nlet _myRefreshWidgetCallbacks = new WeakMap();               // Signature: callback()\r\n\r\nexport function setWidgetCurrentVariable(variableName, engine = Globals.getMainEngine()) {\r\n    if (_mySetWidgetCurrentVariableCallbacks.has(engine)) {\r\n        for (let callback of _mySetWidgetCurrentVariableCallbacks.get(engine).values()) {\r\n            callback(variableName);\r\n        }\r\n    }\r\n}\r\n\r\nexport function refreshWidget(engine = Globals.getMainEngine()) {\r\n    if (_myRefreshWidgetCallbacks.has(engine)) {\r\n        for (let callback of _myRefreshWidgetCallbacks.get(engine).values()) {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nexport function importVariables(fileURL = null, resetVariablesDefaultValueOnImport = false, onSuccessCallback = null, onFailureCallback = null, engine = Globals.getMainEngine()) {\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (Globals.getNavigator(engine).clipboard) {\r\n            Globals.getNavigator(engine).clipboard.readText().then(\r\n                function (clipboard) {\r\n                    Globals.getEasyTuneVariables(engine).fromJSON(clipboard, resetVariablesDefaultValueOnImport);\r\n\r\n                    EasyTuneUtils.refreshWidget(engine);\r\n\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Imported from: clipboard\");\r\n                    console.log(clipboard);\r\n                }, function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = _importExportVariablesReplaceFileURLParams(fileURL, engine);\r\n\r\n        fetch(replacedFileURL).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    response.text().then(\r\n                        function (text) {\r\n                            Globals.getEasyTuneVariables(engine).fromJSON(text, resetVariablesDefaultValueOnImport);\r\n\r\n                            EasyTuneUtils.refreshWidget(engine);\r\n\r\n                            if (onSuccessCallback != null) {\r\n                                onSuccessCallback();\r\n                            }\r\n\r\n                            console.log(\"Easy Tune Variables Imported from:\", replacedFileURL);\r\n                            console.log(text);\r\n                        },\r\n                        function (response) {\r\n                            if (onFailureCallback != null) {\r\n                                onFailureCallback();\r\n                            }\r\n\r\n                            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                            console.error(response);\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n\r\n    EasyTuneUtils.refreshWidget(engine);\r\n}\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nexport function exportVariables(fileURL = null, onSuccessCallback = null, onFailureCallback = null, engine = Globals.getMainEngine()) {\r\n    let jsonVariables = Globals.getEasyTuneVariables(engine).toJSON();\r\n\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (Globals.getNavigator(engine).clipboard) {\r\n            Globals.getNavigator(engine).clipboard.writeText(jsonVariables).then(\r\n                function () {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to: clipboard\");\r\n                    console.log(jsonVariables);\r\n                },\r\n                function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = _importExportVariablesReplaceFileURLParams(fileURL, engine);\r\n\r\n        fetch(replacedFileURL, {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: jsonVariables\r\n        }).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to:\", replacedFileURL);\r\n                    console.log(jsonVariables);\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n}\r\n\r\nexport function addSetWidgetCurrentVariableCallback(id, callback, engine = Globals.getMainEngine()) {\r\n    if (!_mySetWidgetCurrentVariableCallbacks.has(engine)) {\r\n        _mySetWidgetCurrentVariableCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _mySetWidgetCurrentVariableCallbacks.get(engine).set(id, callback);\r\n}\r\n\r\nexport function removeSetWidgetCurrentVariableCallback(id, engine = Globals.getMainEngine()) {\r\n    if (_mySetWidgetCurrentVariableCallbacks.has(engine)) {\r\n        _mySetWidgetCurrentVariableCallbacks.get(engine).delete(id);\r\n    }\r\n}\r\n\r\nexport function addRefreshWidgetCallback(id, callback, engine = Globals.getMainEngine()) {\r\n    if (!_myRefreshWidgetCallbacks.has(engine)) {\r\n        _myRefreshWidgetCallbacks.set(engine, new Map());\r\n    }\r\n\r\n    _myRefreshWidgetCallbacks.get(engine).set(id, callback);\r\n}\r\n\r\nexport function removeRefreshWidgetCallback(id, engine = Globals.getMainEngine()) {\r\n    if (_myRefreshWidgetCallbacks.has(engine)) {\r\n        _myRefreshWidgetCallbacks.get(engine).delete(id);\r\n    }\r\n}\r\n\r\nexport let EasyTuneUtils = {\r\n    setWidgetCurrentVariable,\r\n    refreshWidget,\r\n    importVariables,\r\n    exportVariables,\r\n    addSetWidgetCurrentVariableCallback,\r\n    removeSetWidgetCurrentVariableCallback,\r\n    addRefreshWidgetCallback,\r\n    removeRefreshWidgetCallback\r\n};\r\n\r\n\r\n\r\nfunction _importExportVariablesReplaceFileURLParams(fileURL, engine = Globals.getMainEngine()) {\r\n    let params = fileURL.match(/\\{.+?\\}/g);\r\n\r\n    if (params == null || params.length == 0) {\r\n        return fileURL;\r\n    }\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n        params[i] = params[i].replace(\"{\", \"\");\r\n        params[i] = params[i].replace(\"}\", \"\");\r\n    }\r\n\r\n    let urlSearchParams = new URL(Globals.getDocument(engine).location).searchParams;\r\n\r\n    let replacedFileURL = fileURL;\r\n\r\n    for (let param of params) {\r\n        let searchParamValue = urlSearchParams.get(param);\r\n        if (searchParamValue != null) {\r\n            replacedFileURL = replacedFileURL.replace(\"{\" + param + \"}\", searchParamValue);\r\n        }\r\n    }\r\n\r\n    return replacedFileURL;\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\nimport { EasyTuneWidget, EasyTuneWidgetParams } from \"../easy_tune_widgets/easy_tune_widget\";\r\nimport { InitEasyTuneVariablesComponent } from \"./init_easy_tune_variables_component\";\r\n\r\nexport class EasyTuneToolComponent extends Component {\r\n    static TypeName = \"pp-easy-tune-tool\";\r\n    static Properties = {\r\n        _myHandedness: Property.enum([\"None\", \"Left\", \"Right\"], \"None\"),\r\n        _myShowOnStart: Property.bool(false),\r\n        _myShowVisibilityButton: Property.bool(false),\r\n        _myGamepadScrollVariableEnabled: Property.bool(true),\r\n\r\n        _myShowVariablesImportExportButtons: Property.bool(false),\r\n        _myVariablesImportURL: Property.string(\"\"),   // The URL can contain parameters inside brackets, like {param}\r\n        _myVariablesExportURL: Property.string(\"\"),   // Those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\n        _myImportVariablesOnStart: Property.bool(false),\r\n        _myResetVariablesDefaultValueOnImport: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        // #TODO this should check for tool enabled but it might not have been initialized yet, not way to specify component order\r\n\r\n        this.object.pp_addComponent(InitEasyTuneVariablesComponent);\r\n\r\n        this._myWidget = new EasyTuneWidget(this.engine);\r\n\r\n        EasyTuneUtils.addSetWidgetCurrentVariableCallback(this, function (variableName) {\r\n            this._myWidget.setCurrentVariable(variableName);\r\n        }.bind(this), this.engine);\r\n\r\n        EasyTuneUtils.addRefreshWidgetCallback(this, function () {\r\n            this._myWidget.refresh();\r\n        }.bind(this), this.engine);\r\n\r\n        this._myStarted = false;\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            let params = new EasyTuneWidgetParams();\r\n            params.myHandedness = [null, \"left\", \"right\"][this._myHandedness];\r\n            params.myShowOnStart = this._myShowOnStart;\r\n            params.myShowVisibilityButton = this._myShowVisibilityButton;\r\n            params.myShowAdditionalButtons = true;\r\n            params.myGamepadScrollVariableEnabled = this._myGamepadScrollVariableEnabled;\r\n            params.myPlaneMaterial = Globals.getDefaultMaterials(this.engine).myFlatOpaque.clone();\r\n            params.myTextMaterial = Globals.getDefaultMaterials(this.engine).myText.clone();\r\n\r\n            params.myShowVariablesImportExportButtons = this._myShowVariablesImportExportButtons;\r\n            params.myVariablesImportCallback = function (onSuccessCallback, onFailureCallback) {\r\n                EasyTuneUtils.importVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, onSuccessCallback, onFailureCallback, this.engine);\r\n            }.bind(this);\r\n            params.myVariablesExportCallback = function (onSuccessCallback, onFailureCallback) {\r\n                EasyTuneUtils.exportVariables(this._myVariablesExportURL, onSuccessCallback, onFailureCallback, this.engine);\r\n            }.bind(this);\r\n\r\n            this._myWidget.start(this.object, params, Globals.getEasyTuneVariables(this.engine));\r\n\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n            this._mySetVisibleNextUpdate = false;\r\n\r\n            this._myStarted = true;\r\n            this._myFirstUpdate = true;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                if (this._myFirstUpdate) {\r\n                    this._myFirstUpdate = false;\r\n                    if (this._myImportVariablesOnStart) {\r\n                        EasyTuneUtils.importVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, undefined, undefined, this.engine);\r\n                    }\r\n                }\r\n\r\n                if (this._mySetVisibleNextUpdate) {\r\n                    this._mySetVisibleNextUpdate = false;\r\n                    this._myWidget.setVisible(false);\r\n                    this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n                }\r\n\r\n                this._myWidget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onActivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._mySetVisibleNextUpdate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myStarted) {\r\n                this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n                this._myWidget.setVisible(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this._myWidget.destroy();\r\n\r\n        EasyTuneUtils.removeSetWidgetCurrentVariableCallback(this, this.engine);\r\n        EasyTuneUtils.removeRefreshWidgetCallback(this, this.engine);\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { Timer } from \"../../../../cauldron/cauldron/timer\";\r\n\r\nexport class EasyTuneBaseWidgetParams {\r\n\r\n    constructor() {\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n}\r\n\r\nexport class EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        this._myConfig = null;\r\n        this._myUI = null;\r\n\r\n        this._myParams = params;\r\n\r\n        this._myVariable = null;\r\n\r\n        this._myVisible = true;\r\n\r\n        this._myScrollVariableRequestEmitter = new Emitter();     // Signature: listener(scrollAmount)\r\n\r\n        this._myAppendToVariableName = \"\";\r\n\r\n        this._myScrollVariableActive = false;\r\n        this._myScrollDirection = 0;\r\n        this._myScrollVariableTimer = 0;\r\n        this._myHasScrolled = false;\r\n\r\n        this._myResetImportLabelTimer = new Timer(0, false);\r\n        this._myResetExportLabelTimer = new Timer(0, false);\r\n\r\n        this._myDestroyed = false;\r\n\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (visible) {\r\n            this._refreshUI();\r\n        }\r\n\r\n        this._myUI.setVisible(visible);\r\n\r\n        this._myVisible = visible;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        if ((typeof appendToVariableName) !== undefined) {\r\n            this._myAppendToVariableName = appendToVariableName;\r\n        } else {\r\n            this._myAppendToVariableName = \"\";\r\n        }\r\n\r\n        this._setEasyTuneVariableHook();\r\n\r\n        this._refreshUI();\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        return this._myScrollVariableActive;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        return this._myScrollDirection;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        this._myScrollVariableActive = active;\r\n        this._myScrollDirection = scrollDirection;\r\n        this._myScrollVariableTimer = this._myConfig.myScrollVariableDelay;\r\n        this._myHasScrolled = false;\r\n    }\r\n\r\n    getWidget() {\r\n        return this;\r\n    }\r\n\r\n    syncWidget(otherEasyTuneWidget) {\r\n        if (otherEasyTuneWidget != null) {\r\n            if (otherEasyTuneWidget._myResetImportLabelTimer.isRunning()) {\r\n                this._myResetImportLabelTimer.start(otherEasyTuneWidget._myResetImportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetImportLabelTimer.reset();\r\n            }\r\n\r\n            if (otherEasyTuneWidget._myResetExportLabelTimer.isRunning()) {\r\n                this._myResetExportLabelTimer.start(otherEasyTuneWidget._myResetExportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetExportLabelTimer.reset();\r\n            }\r\n\r\n            this._myUI.myImportButtonTextComponent.text = otherEasyTuneWidget._myUI.myImportButtonTextComponent.text;\r\n            this._myUI.myExportButtonTextComponent.text = otherEasyTuneWidget._myUI.myExportButtonTextComponent.text;\r\n\r\n            this.setScrollVariableActive(otherEasyTuneWidget.isScrollVariableActive(), otherEasyTuneWidget.getScrollVariableDirection());\r\n        } else {\r\n            this._myResetImportLabelTimer.reset();\r\n            this._myUI.myImportButtonTextComponent.text = this._myConfig.myImportButtonText;\r\n\r\n            this._myResetExportLabelTimer.reset();\r\n            this._myUI.myExportButtonTextComponent.text = this._myConfig.myExportButtonText;\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        this._myUI.myImportButtonTextComponent.text = this._myConfig.myImportSuccessButtonText;\r\n        this._myResetImportLabelTimer.start(this._myConfig.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onImportFailure() {\r\n        this._myUI.myImportButtonTextComponent.text = this._myConfig.myImportFailureButtonText;\r\n        this._myResetImportLabelTimer.start(this._myConfig.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportSuccess() {\r\n        this._myUI.myExportButtonTextComponent.text = this._myConfig.myExportSuccessButtonText;\r\n        this._myResetExportLabelTimer.start(this._myConfig.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportFailure() {\r\n        this._myUI.myExportButtonTextComponent.text = this._myConfig.myExportFailureButtonText;\r\n        this._myResetExportLabelTimer.start(this._myConfig.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, listener) {\r\n        this._myScrollVariableRequestEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestEmitter.remove(id);\r\n    }\r\n\r\n    start(parentObject, easyTuneParams) {\r\n        this._myConfig.build();\r\n\r\n        this._myResetImportLabelTimer.setDuration(this._myConfig.myImportExportResetLabelSeconds);\r\n        this._myResetExportLabelTimer.setDuration(this._myConfig.myImportExportResetLabelSeconds);\r\n\r\n        this._myUI.build(parentObject, this._myConfig, easyTuneParams);\r\n        this._myUI.setImportExportButtonsVisible(easyTuneParams.myShowVariablesImportExportButtons);\r\n\r\n        this._startHook(parentObject, easyTuneParams);\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._updateHook(dt);\r\n\r\n            this._updateScrollVariable(dt);\r\n\r\n            this._updateImportExportLabel(dt);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _setEasyTuneVariableHook() {\r\n    }\r\n\r\n    _refreshUIHook() {\r\n    }\r\n\r\n    _startHook(parentObject, easyTuneParams) {\r\n    }\r\n\r\n    _addListenersHook() {\r\n    }\r\n\r\n    _updateHook(dt) {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _refreshUI() {\r\n        if (this._myVariable) {\r\n            if (this._myVariable.getName() != null) {\r\n                this._myUI.myVariableLabelTextComponent.text = this._myVariable.getName().concat(this._myAppendToVariableName);\r\n            } else {\r\n                let name = \"Unknown\";\r\n                this._myUI.myVariableLabelTextComponent.text = name.concat(this._myAppendToVariableName);\r\n            }\r\n\r\n            this._refreshUIHook();\r\n        }\r\n    }\r\n\r\n    _updateScrollVariable(dt) {\r\n        if (this._myScrollVariableActive) {\r\n            if (this._myScrollVariableTimer <= 0) {\r\n                this._scrollVariableRequest(this._myScrollDirection);\r\n                this._myScrollVariableTimer = this._myConfig.myScrollVariableDelay;\r\n                this._myHasScrolled = true;\r\n            } else {\r\n                this._myScrollVariableTimer -= dt;\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateImportExportLabel(dt) {\r\n        if (this._myResetImportLabelTimer.isRunning(dt)) {\r\n            this._myResetImportLabelTimer.update(dt);\r\n            if (this._myResetImportLabelTimer.isDone()) {\r\n                this._myResetImportLabelTimer.reset();\r\n                this._myUI.myImportButtonTextComponent.text = this._myConfig.myImportButtonText;\r\n            }\r\n        }\r\n\r\n        if (this._myResetExportLabelTimer.isRunning(dt)) {\r\n            this._myResetExportLabelTimer.update(dt);\r\n            if (this._myResetExportLabelTimer.isDone()) {\r\n                this._myResetExportLabelTimer.reset();\r\n                this._myUI.myExportButtonTextComponent.text = this._myConfig.myExportButtonText;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myVisible && this._myVariable;\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myNextButtonCursorTargetComponent.onDown.add(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.onDownOnHover.add(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.onUpWithDown.add(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myNextButtonCursorTargetComponent.onUpWithNoDown.add(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.onUnhover.add(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n        ui.myNextButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n\r\n        ui.myPreviousButtonCursorTargetComponent.onDown.add(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.onDownOnHover.add(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.onUpWithDown.add(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myPreviousButtonCursorTargetComponent.onUpWithNoDown.add(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.onUnhover.add(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n        ui.myPreviousButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n\r\n        ui.myImportButtonCursorTargetComponent.onUpWithDown.add(this._importVariables.bind(this));\r\n        ui.myImportButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n        ui.myImportButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n\r\n        ui.myExportButtonCursorTargetComponent.onUpWithDown.add(this._exportVariables.bind(this));\r\n        ui.myExportButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n        ui.myExportButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n\r\n        this._addListenersHook();\r\n    }\r\n\r\n    _setScrollVariableActive(active, scrollDirection, skipForceScroll) {\r\n        if (this._isActive() || !active) {\r\n            let forceScroll = !active && !this._myHasScrolled && !skipForceScroll;\r\n            let oldScrollDirection = this._myScrollDirection;\r\n\r\n            this.setScrollVariableActive(active, scrollDirection);\r\n\r\n            if (forceScroll) {\r\n                this._scrollVariableRequest(oldScrollDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        if (this._isActive() && amount != 0) {\r\n            this._myScrollVariableRequestEmitter.notify(amount);\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._myConfig.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnhover(material) {\r\n        material.color = this._myConfig.myBackgroundColor;\r\n    }\r\n\r\n    _importVariables() {\r\n        if (this._myUI.myImportButtonTextComponent.text == this._myConfig.myImportButtonText) {\r\n            this._myUI.myImportButtonTextComponent.text = this._myConfig.myImportingButtonText;\r\n            this._myResetImportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesImportCallback();\r\n        }\r\n    }\r\n\r\n    _exportVariables() {\r\n        if (this._myUI.myExportButtonTextComponent.text == this._myConfig.myExportButtonText) {\r\n            this._myUI.myExportButtonTextComponent.text = this._myConfig.myExportingButtonText;\r\n            this._myResetExportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesExportCallback();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        if (this._myUI != null) {\r\n            this._myUI.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Emitter } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\n\r\nexport class EasyTuneBaseArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad, engine = Globals.getMainEngine()) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myEasyTuneParams = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestEmitter = new Emitter();     // Signature: listener(scrollAmount)\r\n\r\n        this._myCurrentArraySize = null;\r\n\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        this._myCurrentArraySize = this._myVariable.getValue().length; // null for non array variable\r\n\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, listener) {\r\n        this._myScrollVariableRequestEmitter.add(listener, { id: id });\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestEmitter.remove(id);\r\n    }\r\n\r\n    start(parentObject, easyTuneParams) {\r\n        this._myParentObject = parentObject;\r\n        this._myEasyTuneParams = easyTuneParams;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        this._myScrollVariableRequestEmitter.notify(amount);\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, this._getEasyTuneArrayWidget(arraySize));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myEasyTuneParams);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.getValue().length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return null;\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.destroy();\r\n        }\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { Alignment, Collider, Justification } from \"@wonderlandengine/api\";\r\nimport { vec3_create, vec4_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { ToolHandedness } from \"../../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneBaseWidgetConfig {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    build() {\r\n        this._setupBuildConfig();\r\n        this._setupRuntimeConfig();\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getBackPanelMaxY() {\r\n        return this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + this._mySideButtonDistanceFromBorder * 1.25;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myDisplayPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this._mySideButtonPanelHalfWidth\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return -this._mySideButtonPanelHalfWidth;\r\n    }\r\n\r\n    // Small Z offset to avoid glitching with other widgets\r\n    _getPivotZOffset() {\r\n        return 0;\r\n    }\r\n\r\n    _setupBuildConfigHook() {\r\n    }\r\n\r\n    _setupRuntimeConfigHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _setupBuildConfig() {\r\n        // General\r\n\r\n        this.myBackgroundColor = vec4_create(46 / 255, 46 / 255, 46 / 255, 1);\r\n\r\n        this.myCursorTargetCollisionCollider = Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;  // Keep this in sync with Tool Cursor\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = vec4_create(255 / 255, 255 / 255, 255 / 255, 1);\r\n\r\n        this.myTextAlignment = Alignment.Center;\r\n        this.myTextJustification = Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myLabelTextScale = vec3_create(0.18, 0.18, 0.18);\r\n        this.myButtonTextScale = vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this._myPanelZOffset = 0.01;\r\n        this._myColliderZOffset = 0.017;\r\n        this._mySideButtonDistanceFromBorder = 0.0125;\r\n        this._mySideButtonPanelHalfWidth = 0.2;\r\n\r\n        // Pivot\r\n\r\n        this.myPivotObjectPositions = [];\r\n        this.myPivotObjectPositions[ToolHandedness.NONE] = vec3_create(0, 0, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[ToolHandedness.LEFT] = vec3_create(-0.04, 0.02, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[ToolHandedness.RIGHT] = vec3_create(-0.08, 0.02, this._getPivotZOffset());\r\n\r\n        this.mySideButtonBackgroundScale = vec3_create(0.015, 0.015, 1);\r\n        this.mySideButtonTextScale = this.myButtonTextScale;\r\n        this.mySideButtonTextPosition = vec3_create(0, 0, 0.007);\r\n\r\n        this.mySideButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.mySideButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.pp_clone();\r\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myLeftSideButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myLeftSideButtonPosition[0] = -this._mySideButtonPanelHalfWidth + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n\r\n        this.myRightSideButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myRightSideButtonPosition[0] = -this.myLeftSideButtonPosition[0];\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanelPosition = vec3_create(0, 0.1, 0);\r\n\r\n        this.myVariableLabelPanelPosition = vec3_create(0, 0.025, this._myPanelZOffset);\r\n        this.myVariableLabelTextScale = this.myLabelTextScale;\r\n\r\n        this.myVariableLabelCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myVariableLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myVariableLabelCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNextButtonText = \">\";\r\n        this.myPreviousButtonText = \"<\";\r\n\r\n        this._setupBuildConfigHook();\r\n\r\n        // Background\r\n\r\n        {\r\n            let maxX = this._getBackPanelMaxX();\r\n            let minX = this._getBackPanelMinX();\r\n            let maxY = this._getBackPanelMaxY();\r\n            let minY = this._getBackPanelMinY();\r\n\r\n            this.myBackPanelPosition = [(maxX + minX) / 2, (maxY + minY) / 2, 0];\r\n            this.myBackBackgroundScale = [(maxX - minX) / 2, (maxY - minY) / 2, 1];\r\n\r\n            this.myBackBackgroundColor = vec4_create(70 / 255, 70 / 255, 70 / 255, 1);\r\n        }\r\n\r\n        // Import Export\r\n\r\n        this.myImportExportButtonBackgroundScale = vec3_create(0.04, 0.02, 1);\r\n        this.myImportExportButtonTextScale = this.myButtonTextScale;\r\n        this.myImportExportButtonTextPosition = vec3_create(0, 0, 0.007);\r\n\r\n        this.myImportExportPanelPosition = [0, this._getBackPanelMaxY() + this._mySideButtonDistanceFromBorder + this.myImportExportButtonBackgroundScale[1], this._myPanelZOffset];\r\n\r\n        this.myImportExportButtonCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myImportExportButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myImportExportButtonCollisionExtents = this.myImportExportButtonBackgroundScale.pp_clone();\r\n        this.myImportExportButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myImportButtonText = \"Import\";\r\n        this.myExportButtonText = \"Export\";\r\n\r\n        this.myImportExportResetLabelSeconds = 2;\r\n\r\n        this.myImportingButtonText = \"...\";\r\n        this.myImportSuccessButtonText = \"Done\";\r\n        this.myImportFailureButtonText = \"Error\";\r\n\r\n        this.myExportingButtonText = \"...\";\r\n        this.myExportSuccessButtonText = \"Done\";\r\n        this.myExportFailureButtonText = \"Error\";\r\n\r\n        this.myImportButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myImportButtonPosition[0] = -this.myImportExportButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder / 2;\r\n\r\n        this.myExportButtonPosition = vec3_create(0, 0, -0.00001);\r\n        this.myExportButtonPosition[0] = -this.myImportButtonPosition[0];\r\n\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.pp_clone();\r\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.pp_clone();\r\n        this.myPointerCursorTargetPosition[2] = this._myColliderZOffset - 0.0001; // A little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _setupRuntimeConfig() {\r\n        this.myButtonHoverColor = vec4_create(150 / 255, 150 / 255, 150 / 255, 1);\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n\r\n        this._setupRuntimeConfigHook();\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetConfig } from \"../base/easy_tune_base_widget_config\";\r\n\r\nexport class EasyTuneBoolArrayWidgetConfig extends EasyTuneBaseWidgetConfig {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        return super._getBackPanelMinY() + this.myValuesPanelPosition[1] + valuePanelLastPosition;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00802713;\r\n    }\r\n\r\n    _setupBuildConfigHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n    }\r\n\r\n    _setupRuntimeConfigHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.1, 1.1, 1.1);\r\n\r\n        this.myThumbstickToggleThreshold = 0.6;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneBoolArrayWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsVisible(visible) {\r\n        this._myAdditionalButtonsVisible = visible;\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n        }\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsVisible = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = this.myDisplayPanel.pp_addObject();\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValuePanels[i] = this.myValuesPanel.pp_addObject();\r\n            this.myValueTexts[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueCursorTargets[i] = this.myValuePanels[i].pp_addObject();\r\n\r\n            this.myValueIncreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonBackgrounds[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonTexts[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonCursorTargets[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myValueDecreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonBackgrounds[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonTexts[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonCursorTargets[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.pp_setPositionLocal(this._myConfig.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValuePanels[i].pp_setPositionLocal(this._myConfig.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].pp_scaleObject(this._myConfig.myValueTextScale);\r\n            this.myValueCursorTargets[i].pp_setPositionLocal(this._myConfig.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._myConfig.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._myConfig.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._myConfig.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n        }\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsVisible(this._myAdditionalButtonsVisible);\r\n        }\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { XRUtils } from \"../../../../cauldron/utils/xr_utils\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { ToolHandedness } from \"../../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    build(parentObject, config, params) {\r\n        this._myParentObject = parentObject;\r\n        this._myConfig = config;\r\n        this._myParams = params;\r\n\r\n        this._myImportExportButtonsVisible = true;\r\n\r\n        this._myPlaneMesh = Globals.getDefaultMeshes(this._myEngine).myDoubleSidedPlane;\r\n\r\n        this._buildHook();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonXR();\r\n\r\n        XRUtils.registerSessionStartEndEventListeners(this, this._onXRSessionStart.bind(this), this._onXRSessionEnd.bind(this), true, false, this._myEngine);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActive(visible);\r\n\r\n        if (visible) {\r\n            this.setImportExportButtonsVisible(this._myImportExportButtonsVisible);\r\n        }\r\n\r\n        this._setVisibleHook(visible);\r\n    }\r\n\r\n    setImportExportButtonsVisible(visible) {\r\n        this._myImportExportButtonsVisible = visible;\r\n\r\n        this.myImportExportPanel.pp_setActive(this._myImportExportButtonsVisible);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _buildHook() {\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n    }\r\n\r\n    _setTransformHook() {\r\n    }\r\n\r\n    _addComponentsHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    // Skeleton\r\n\r\n    _createSkeleton() {\r\n        this.myPivotObject = this._myParentObject.pp_addObject();\r\n\r\n        this.myBackPanel = this.myPivotObject.pp_addObject();\r\n        this.myBackBackground = this.myBackPanel.pp_addObject();\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myVariableLabelPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myVariableLabelText = this.myVariableLabelPanel.pp_addObject();\r\n        this.myVariableLabelCursorTarget = this.myVariableLabelPanel.pp_addObject();\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel = this.myVariableLabelPanel.pp_addObject();\r\n        this.myNextButtonBackground = this.myNextButtonPanel.pp_addObject();\r\n        this.myNextButtonText = this.myNextButtonPanel.pp_addObject();\r\n        this.myNextButtonCursorTarget = this.myNextButtonPanel.pp_addObject();\r\n\r\n        this.myPreviousButtonPanel = this.myVariableLabelPanel.pp_addObject();\r\n        this.myPreviousButtonBackground = this.myPreviousButtonPanel.pp_addObject();\r\n        this.myPreviousButtonText = this.myPreviousButtonPanel.pp_addObject();\r\n        this.myPreviousButtonCursorTarget = this.myPreviousButtonPanel.pp_addObject();\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel = this.myPivotObject.pp_addObject();\r\n\r\n        this.myImportButtonPanel = this.myImportExportPanel.pp_addObject();\r\n        this.myImportButtonBackground = this.myImportButtonPanel.pp_addObject();\r\n        this.myImportButtonText = this.myImportButtonPanel.pp_addObject();\r\n        this.myImportButtonCursorTarget = this.myImportButtonPanel.pp_addObject();\r\n\r\n        this.myExportButtonPanel = this.myImportExportPanel.pp_addObject();\r\n        this.myExportButtonBackground = this.myExportButtonPanel.pp_addObject();\r\n        this.myExportButtonText = this.myExportButtonPanel.pp_addObject();\r\n        this.myExportButtonCursorTarget = this.myExportButtonPanel.pp_addObject();\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget = this.myPivotObject.pp_addObject();\r\n\r\n        this._createSkeletonHook();\r\n    }\r\n\r\n    // Transforms\r\n\r\n    _setTransforms() {\r\n        this.myPivotObject.pp_setPositionLocal(this._myConfig.myPivotObjectPositions[this._myParams.myHandedness]);\r\n\r\n        this.myBackPanel.pp_setPositionLocal(this._myConfig.myBackPanelPosition);\r\n        this.myBackBackground.pp_scaleObject(this._myConfig.myBackBackgroundScale);\r\n\r\n        // Display\r\n        this.myDisplayPanel.pp_setPositionLocal(this._myConfig.myDisplayPanelPosition);\r\n\r\n        this.myVariableLabelPanel.pp_setPositionLocal(this._myConfig.myVariableLabelPanelPosition);\r\n        this.myVariableLabelText.pp_scaleObject(this._myConfig.myVariableLabelTextScale);\r\n        this.myVariableLabelCursorTarget.pp_setPositionLocal(this._myConfig.myVariableLabelCursorTargetPosition);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel.pp_setPositionLocal(this._myConfig.myRightSideButtonPosition);\r\n        this.myNextButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myNextButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myNextButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myNextButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPreviousButtonPanel.pp_setPositionLocal(this._myConfig.myLeftSideButtonPosition);\r\n        this.myPreviousButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myPreviousButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myPreviousButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myPreviousButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel.pp_setPositionLocal(this._myConfig.myImportExportPanelPosition);\r\n\r\n        this.myImportButtonPanel.pp_setPositionLocal(this._myConfig.myImportButtonPosition);\r\n        this.myImportButtonBackground.pp_scaleObject(this._myConfig.myImportExportButtonBackgroundScale);\r\n        this.myImportButtonText.pp_setPositionLocal(this._myConfig.myImportExportButtonTextPosition);\r\n        this.myImportButtonText.pp_scaleObject(this._myConfig.myImportExportButtonTextScale);\r\n        this.myImportButtonCursorTarget.pp_setPositionLocal(this._myConfig.myImportExportButtonCursorTargetPosition);\r\n\r\n        this.myExportButtonPanel.pp_setPositionLocal(this._myConfig.myExportButtonPosition);\r\n        this.myExportButtonBackground.pp_scaleObject(this._myConfig.myImportExportButtonBackgroundScale);\r\n        this.myExportButtonText.pp_setPositionLocal(this._myConfig.myImportExportButtonTextPosition);\r\n        this.myExportButtonText.pp_scaleObject(this._myConfig.myImportExportButtonTextScale);\r\n        this.myExportButtonCursorTarget.pp_setPositionLocal(this._myConfig.myImportExportButtonCursorTargetPosition);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget.pp_setPositionLocal(this._myConfig.myPointerCursorTargetPosition);\r\n\r\n        this._setTransformHook();\r\n    }\r\n\r\n    // Components\r\n\r\n    _addComponents() {\r\n        this.myBackBackgroundComponent = this.myBackBackground.pp_addComponent(MeshComponent);\r\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myBackBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myBackBackgroundComponent.material.color = this._myConfig.myBackBackgroundColor;\r\n\r\n        // Display\r\n\r\n        this.myVariableLabelTextComponent = this.myVariableLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myVariableLabelTextComponent);\r\n        this.myVariableLabelTextComponent.text = \" \";\r\n\r\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myVariableLabelCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myVariableLabelCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myVariableLabelCollisionComponent.extents = this._myConfig.myVariableLabelCollisionExtents;\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNextButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myNextButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myNextButtonTextComponent = this.myNextButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myNextButtonTextComponent);\r\n        this.myNextButtonTextComponent.text = this._myConfig.myNextButtonText;\r\n\r\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myNextButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myNextButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myNextButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPreviousButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPreviousButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\r\n        this.myPreviousButtonTextComponent.text = this._myConfig.myPreviousButtonText;\r\n\r\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPreviousButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPreviousButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPreviousButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        // Import/Export\r\n\r\n        this.myImportButtonBackgroundComponent = this.myImportButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myImportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myImportButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myImportButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myImportButtonTextComponent = this.myImportButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myImportButtonTextComponent);\r\n        this.myImportButtonTextComponent.text = this._myConfig.myImportButtonText;\r\n\r\n        this.myImportButtonCursorTargetComponent = this.myImportButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myImportButtonCollisionComponent = this.myImportButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myImportButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myImportButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myImportButtonCollisionComponent.extents = this._myConfig.myImportExportButtonCollisionExtents;\r\n\r\n        this.myExportButtonBackgroundComponent = this.myExportButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myExportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myExportButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myExportButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myExportButtonTextComponent = this.myExportButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myExportButtonTextComponent);\r\n        this.myExportButtonTextComponent.text = this._myConfig.myExportButtonText;\r\n\r\n        this.myExportButtonCursorTargetComponent = this.myExportButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myExportButtonCollisionComponent = this.myExportButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myExportButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myExportButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myExportButtonCollisionComponent.extents = this._myConfig.myImportExportButtonCollisionExtents;\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPointerCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPointerCollisionComponent.extents = this._myConfig.myPointerCollisionExtents;\r\n\r\n        this._addComponentsHook();\r\n    }\r\n\r\n    _setupTextComponent(textComponent) {\r\n        textComponent.alignment = this._myConfig.myTextAlignment;\r\n        textComponent.justification = this._myConfig.myTextJustification;\r\n        textComponent.material = this._myParams.myTextMaterial.clone();\r\n        textComponent.material.color = this._myConfig.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForXR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonXR();\r\n    }\r\n\r\n    _setTransformForXR() {\r\n        this.myPivotObject.pp_setPositionLocal(this._myConfig.myPivotObjectPositions[this._myParams.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonXR() {\r\n        this.myPivotObject.pp_setPositionLocal(this._myConfig.myPivotObjectPositions[ToolHandedness.NONE]);\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        XRUtils.unregisterSessionStartEndEventListeners(this, this._myEngine);\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneBoolArrayWidgetConfig } from \"./easy_tune_bool_array_widget_config\";\r\nimport { EasyTuneBoolArrayWidgetUI } from \"./easy_tune_bool_array_widget_ui\";\r\n\r\nexport class EasyTuneBoolArrayWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad, engine = Globals.getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myNonArray = arraySize == null;\r\n        this._myArraySize = this._myNonArray ? 1 : arraySize;\r\n\r\n        this._myConfig = new EasyTuneBoolArrayWidgetConfig(this._myArraySize);\r\n        this._myUI = new EasyTuneBoolArrayWidgetUI(engine);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myValueEditIndex = 0;\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myValueEditEnabled = false;\r\n\r\n        this._myTempValue = [];\r\n\r\n        this._myTempNonArrayValue = [0];\r\n        this._myTempNonArrayDefaultValue = [0];\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = (this._getVariableValue()[i]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _startHook(parentObject, easyTuneParams) {\r\n        this._myUI.setAdditionalButtonsVisible(easyTuneParams.myShowAdditionalButtons);\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myVariable != null) {\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n        }\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            stickVariableIntensity = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditEnabled) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(valueIntensity) > this._myConfig.myThumbstickToggleThreshold) {\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n            this._myTempValue[this._myValueEditIndex] = valueIntensity > 0;\r\n            this._setVariableValue(this._myTempValue);\r\n            this._refreshUI();\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.onClick.add(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myVariableLabelText, this._myConfig.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].onClick.add(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].onHover.add(this._setValueEditEnabled.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].onUnhover.add(this._setValueEditEnabled.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._myConfig.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditEnabled(index, text, enabled) {\r\n        if (this._isActive() || !enabled) {\r\n            if (enabled) {\r\n                this._myValueEditIndex = index;\r\n                text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleLocal(this._myConfig.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditEnabled = enabled;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n            this._myTempValue[index] = this._getVariableDefaultValue()[index];\r\n            this._setVariableValue(this._myTempValue);\r\n\r\n            this._myUI.myValueTextComponents[index].text = (this._getVariableValue()[index]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnhover(text, originalScale) {\r\n        text.pp_setScaleLocal(originalScale);\r\n    }\r\n\r\n    _getVariableValue() {\r\n        if (this._myNonArray) {\r\n            this._myTempNonArrayValue[0] = this._myVariable.getValue();\r\n            return this._myTempNonArrayValue;\r\n        }\r\n\r\n        return this._myVariable.getValue();\r\n    }\r\n\r\n    _getVariableDefaultValue() {\r\n        if (this._myNonArray) {\r\n            this._myTempNonArrayDefaultValue[0] = this._myVariable.getDefaultValue();\r\n            return this._myTempNonArrayDefaultValue;\r\n        }\r\n\r\n        return this._myVariable.getDefaultValue();\r\n    }\r\n\r\n    _setVariableValue(value) {\r\n        if (this._myNonArray) {\r\n            this._myVariable.setValue(value[0]);\r\n        } else {\r\n            this._myVariable.setValue(this._myTempValue);\r\n        }\r\n    }\r\n}", "import { EasyTuneBaseArrayWidgetSelector } from \"../base/easy_tune_base_array_widget_selector\";\r\nimport { EasyTuneBoolArrayWidget } from \"./easy_tune_bool_array_widget\";\r\n\r\nexport class EasyTuneBoolArrayWidgetSelector extends EasyTuneBaseArrayWidgetSelector {\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return new EasyTuneBoolArrayWidget(this._myParams, arraySize, this._myGamepad, this._myEngine);\r\n    }\r\n}", "import { ToolHandedness } from \"../../cauldron/tool_types\";\r\n\r\nexport class EasyTuneWidgetConfig {\r\n\r\n    constructor() {\r\n        this._setupRuntimeConfig();\r\n    }\r\n\r\n    _setupRuntimeConfig() {\r\n        this.myGamepadHandedness = ToolHandedness.RIGHT;\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n        this.myScrollVariableMinXThreshold = 0.6;\r\n        this.myScrollVariableMaxYThreshold = 0.25;\r\n        this.myScrollVariableButtonID = null;\r\n\r\n        this.myRefreshVariablesDelay = null;\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetConfig } from \"../base/easy_tune_base_widget_config\";\r\n\r\nexport class EasyTuneNoneWidgetConfig extends EasyTuneBaseWidgetConfig {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myTypeNotSupportedPanelPosition[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00804713;\r\n    }\r\n\r\n    _setupBuildConfigHook() {\r\n        this.myTypeNotSupportedPanelPosition = vec3_create(0, -0.03, this._myPanelZOffset);\r\n        this.myTypeNotSupportedTextScale = vec3_create(0.275, 0.275, 0.275);\r\n        this.myTypeNotSupportedText = \"Type Not Supported\";\r\n    }\r\n}", "import { TextComponent } from \"@wonderlandengine/api\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneNoneWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myTypeNotSupportedPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myTypeNotSupportedText = this.myTypeNotSupportedPanel.pp_addObject();\r\n        this.myTypeNotSupportedCursorTarget = this.myTypeNotSupportedPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myTypeNotSupportedPanel.pp_setPositionLocal(this._myConfig.myTypeNotSupportedPanelPosition);\r\n        this.myTypeNotSupportedText.pp_scaleObject(this._myConfig.myTypeNotSupportedTextScale);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myTypeNotSupportedTextComponent = this.myTypeNotSupportedText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myTypeNotSupportedTextComponent);\r\n        this.myTypeNotSupportedTextComponent.text = this._myConfig.myTypeNotSupportedText;\r\n    }\r\n}", "import { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneNoneWidgetConfig } from \"./easy_tune_none_widget_config\";\r\nimport { EasyTuneNoneWidgetUI } from \"./easy_tune_none_widget_ui\";\r\n\r\nexport class EasyTuneNoneWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, engine = Globals.getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myConfig = new EasyTuneNoneWidgetConfig();\r\n        this._myUI = new EasyTuneNoneWidgetUI(engine);\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetConfig } from \"../base/easy_tune_base_widget_config\";\r\n\r\nexport class EasyTuneNumberArrayWidgetConfig extends EasyTuneBaseWidgetConfig {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myStepPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00803713;\r\n    }\r\n\r\n    _setupBuildConfigHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        this.myStepPanelPosition = [0, this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _setupRuntimeConfigHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.1, 1.1, 1.1);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneNumberArrayWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsVisible(visible) {\r\n        this._myAdditionalButtonsVisible = visible;\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n        }\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n        this.myStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsVisible = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = this.myDisplayPanel.pp_addObject();\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValuePanels[i] = this.myValuesPanel.pp_addObject();\r\n            this.myValueTexts[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueCursorTargets[i] = this.myValuePanels[i].pp_addObject();\r\n\r\n            this.myValueIncreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonBackgrounds[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonTexts[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n            this.myValueIncreaseButtonCursorTargets[i] = this.myValueIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myValueDecreaseButtonPanels[i] = this.myValuePanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonBackgrounds[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonTexts[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n            this.myValueDecreaseButtonCursorTargets[i] = this.myValueDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        this.myStepPanel = this.myPivotObject.pp_addObject();\r\n        this.myStepText = this.myStepPanel.pp_addObject();\r\n        this.myStepCursorTarget = this.myStepPanel.pp_addObject();\r\n\r\n        this.myStepIncreaseButtonPanel = this.myStepPanel.pp_addObject();\r\n        this.myStepIncreaseButtonBackground = this.myStepIncreaseButtonPanel.pp_addObject();\r\n        this.myStepIncreaseButtonText = this.myStepIncreaseButtonPanel.pp_addObject();\r\n        this.myStepIncreaseButtonCursorTarget = this.myStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myStepDecreaseButtonPanel = this.myStepPanel.pp_addObject();\r\n        this.myStepDecreaseButtonBackground = this.myStepDecreaseButtonPanel.pp_addObject();\r\n        this.myStepDecreaseButtonText = this.myStepDecreaseButtonPanel.pp_addObject();\r\n        this.myStepDecreaseButtonCursorTarget = this.myStepDecreaseButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.pp_setPositionLocal(this._myConfig.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValuePanels[i].pp_setPositionLocal(this._myConfig.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].pp_scaleObject(this._myConfig.myValueTextScale);\r\n            this.myValueCursorTargets[i].pp_setPositionLocal(this._myConfig.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        this.myStepPanel.pp_setPositionLocal(this._myConfig.myStepPanelPosition);\r\n        this.myStepText.pp_scaleObject(this._myConfig.myStepTextScale);\r\n        this.myStepCursorTarget.pp_setPositionLocal(this._myConfig.myStepCursorTargetPosition);\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setPositionLocal(this._myConfig.myRightSideButtonPosition);\r\n        this.myStepIncreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myStepIncreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myStepIncreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        this.myStepDecreaseButtonPanel.pp_setPositionLocal(this._myConfig.myLeftSideButtonPosition);\r\n        this.myStepDecreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myStepDecreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myStepDecreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._myConfig.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._myConfig.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._myConfig.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._myConfig.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        this.myStepTextComponent = this.myStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepTextComponent);\r\n        this.myStepTextComponent.text = \" \";\r\n\r\n        this.myStepCursorTargetComponent = this.myStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepCollisionComponent = this.myStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myStepIncreaseButtonBackgroundComponent = this.myStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myStepIncreaseButtonTextComponent = this.myStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepIncreaseButtonTextComponent);\r\n        this.myStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myStepIncreaseButtonCursorTargetComponent = this.myStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepIncreaseButtonCollisionComponent = this.myStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myStepDecreaseButtonBackgroundComponent = this.myStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myStepDecreaseButtonTextComponent = this.myStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myStepDecreaseButtonTextComponent);\r\n        this.myStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myStepDecreaseButtonCursorTargetComponent = this.myStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myStepDecreaseButtonCollisionComponent = this.myStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsVisible(this._myAdditionalButtonsVisible);\r\n        }\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneNumberArrayWidgetConfig } from \"./easy_tune_number_array_widget_config\";\r\nimport { EasyTuneNumberArrayWidgetUI } from \"./easy_tune_number_array_widget_ui\";\r\n\r\nexport class EasyTuneNumberArrayWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad, engine = Globals.getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myNonArray = arraySize == null;\r\n        this._myArraySize = this._myNonArray ? 1 : arraySize;\r\n\r\n        this._myConfig = new EasyTuneNumberArrayWidgetConfig(this._myArraySize);\r\n        this._myUI = new EasyTuneNumberArrayWidgetUI(engine);\r\n\r\n        this._myValueEditIndex = -1;\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditEnabled = false;\r\n        this._myStepEditEnabled = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n\r\n        this._myTempValue = [];\r\n\r\n        this._myTempNonArrayValue = [0];\r\n        this._myTempNonArrayDefaultValue = [0];\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            this._myValueRealValue = this._getVariableValue()[this._myValueEditIndex];\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = this._getVariableValue()[i].toFixed(this._myVariable._myDecimalPlaces);\r\n        }\r\n\r\n        this._myUI.myStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myStepPerSecond);\r\n    }\r\n\r\n\r\n    _startHook(parentObject, easyTuneParams) {\r\n        this._myUI.setAdditionalButtonsVisible(easyTuneParams.myShowAdditionalButtons);\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myVariable != null) {\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n        }\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._myConfig.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._myConfig.myEditThumbstickMinThreshold) / (1 - this._myConfig.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditEnabled) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myVariable._myStepPerSecond * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            if (this._myVariable._myMin != null && this._myVariable._myMax != null) {\r\n                this._myValueRealValue = Math.pp_clamp(this._myValueRealValue, this._myVariable._myMin, this._myVariable._myMax);\r\n            } else if (this._myVariable._myMin != null) {\r\n                this._myValueRealValue = Math.max(this._myValueRealValue, this._myVariable._myMin);\r\n            } else if (this._myVariable._myMax != null) {\r\n                this._myValueRealValue = Math.min(this._myValueRealValue, this._myVariable._myMax);\r\n            }\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable._myDecimalPlaces);\r\n\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n\r\n            if (this._myVariable._myEditAllValuesTogether) {\r\n                let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                let difference = newValue - this._myTempValue[this._myValueEditIndex];\r\n\r\n                for (let i = 0; i < this._myArraySize; i++) {\r\n                    this._myTempValue[i] = Math.round((this._myTempValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                    if (this._myVariable._myMin != null && this._myVariable._myMax != null) {\r\n                        this._myTempValue[i] = Math.pp_clamp(this._myTempValue[i], this._myVariable._myMin, this._myVariable._myMax);\r\n                    } else if (this._myVariable._myMin != null) {\r\n                        this._myTempValue[i] = Math.max(this._myTempValue[i], this._myVariable._myMin);\r\n                    } else if (this._myVariable._myMax != null) {\r\n                        this._myTempValue[i] = Math.min(this._myTempValue[i], this._myVariable._myMax);\r\n                    }\r\n\r\n                    this._myUI.myValueTextComponents[i].text = this._myTempValue[i].toFixed(this._myVariable._myDecimalPlaces);\r\n                }\r\n\r\n            } else {\r\n                this._myTempValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                if (this._myVariable._myMin != null && this._myVariable._myMax != null) {\r\n                    this._myTempValue[this._myValueEditIndex] = Math.pp_clamp(this._myTempValue[this._myValueEditIndex], this._myVariable._myMin, this._myVariable._myMax);\r\n                } else if (this._myVariable._myMin != null) {\r\n                    this._myTempValue[this._myValueEditIndex] = Math.max(this._myTempValue[this._myValueEditIndex], this._myVariable._myMin);\r\n                } else if (this._myVariable._myMax != null) {\r\n                    this._myTempValue[this._myValueEditIndex] = Math.min(this._myTempValue[this._myValueEditIndex], this._myVariable._myMax);\r\n                }\r\n\r\n                this._myUI.myValueTextComponents[this._myValueEditIndex].text = this._myTempValue[this._myValueEditIndex].toFixed(this._myVariable._myDecimalPlaces);\r\n            }\r\n\r\n            this._setVariableValue(this._myTempValue);\r\n        } else {\r\n            this._myValueRealValue = this._getVariableValue()[this._myValueEditIndex];\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditEnabled) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._myConfig.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myVariable._myStepPerSecond * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myVariable._myStepPerSecond * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.onClick.add(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myVariableLabelText, this._myConfig.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].onClick.add(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].onHover.add(this._setValueEditEnabled.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].onUnhover.add(this._setValueEditEnabled.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n\r\n        ui.myStepCursorTargetComponent.onClick.add(this._resetStep.bind(this));\r\n        ui.myStepCursorTargetComponent.onHover.add(this._setStepEditEnabled.bind(this, ui.myStepText, true));\r\n        ui.myStepCursorTargetComponent.onUnhover.add(this._setStepEditEnabled.bind(this, ui.myStepText, false));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 0));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._myConfig.myButtonEditDelay;\r\n                this._myValueRealValue = this._getVariableValue()[index];\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._myConfig.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditEnabled(index, text, enabled) {\r\n        if (this._isActive() || !enabled) {\r\n            if (enabled) {\r\n                this._myValueRealValue = this._getVariableValue()[index];\r\n                this._myValueEditIndex = index;\r\n                text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleLocal(this._myConfig.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditEnabled = enabled;\r\n        }\r\n    }\r\n\r\n    _setStepEditEnabled(text, enabled) {\r\n        if (this._isActive() || !enabled) {\r\n            if (enabled) {\r\n                text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleLocal(this._myConfig.myStepTextScale);\r\n            }\r\n\r\n            this._myStepEditEnabled = enabled;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myTempValue.pp_copy(this._getVariableValue());\r\n            this._myTempValue[index] = this._getVariableDefaultValue()[index];\r\n            this._setVariableValue(this._myTempValue);\r\n\r\n            this._myUI.myValueTextComponents[index].text = this._getVariableValue()[index].toFixed(this._myVariable._myDecimalPlaces);\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _resetStep() {\r\n        if (this._isActive()) {\r\n            this._changeStep(this._myVariable._myDefaultStepPerSecond);\r\n        }\r\n    }\r\n\r\n    _changeStep(step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n        this._myVariable._myStepPerSecond = step;\r\n        this._myUI.myStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myStepPerSecond);\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnhover(text, originalScale) {\r\n        text.pp_setScaleLocal(originalScale);\r\n    }\r\n\r\n    _getVariableValue() {\r\n        if (this._myNonArray) {\r\n            this._myTempNonArrayValue[0] = this._myVariable.getValue();\r\n            return this._myTempNonArrayValue;\r\n        }\r\n\r\n        return this._myVariable.getValue();\r\n    }\r\n\r\n    _getVariableDefaultValue() {\r\n        if (this._myNonArray) {\r\n            this._myTempNonArrayDefaultValue[0] = this._myVariable.getDefaultValue();\r\n            return this._myTempNonArrayDefaultValue;\r\n        }\r\n\r\n        return this._myVariable.getDefaultValue();\r\n    }\r\n\r\n    _setVariableValue(value) {\r\n        if (this._myNonArray) {\r\n            this._myVariable.setValue(value[0]);\r\n        } else {\r\n            this._myVariable.setValue(this._myTempValue);\r\n        }\r\n    }\r\n}", "import { EasyTuneBaseArrayWidgetSelector } from \"../base/easy_tune_base_array_widget_selector\";\r\nimport { EasyTuneNumberArrayWidget } from \"./easy_tune_number_array_widget\";\r\n\r\nexport class EasyTuneNumberArrayWidgetSelector extends EasyTuneBaseArrayWidgetSelector {\r\n\r\n    _getEasyTuneArrayWidget(arraySize) {\r\n        return new EasyTuneNumberArrayWidget(this._myParams, arraySize, this._myGamepad, this._myEngine);\r\n    }\r\n}", "import { vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneBaseWidgetConfig } from \"../base/easy_tune_base_widget_config\";\r\n\r\nexport class EasyTuneTransformWidgetConfig extends EasyTuneBaseWidgetConfig {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myPositionPanelPosition[1] + this.myStepPanelPosition[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this.myDisplayPanelPosition[0] + this.myRotationPanelPosition[0] + this.myIncreaseButtonPosition[0] + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return this.myDisplayPanelPosition[0] + this.myScalePanelPosition[0] + this.myDecreaseButtonPosition[0] - this.mySideButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00805713;\r\n    }\r\n\r\n    _setupBuildConfigHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this.myDecreaseButtonPosition = vec3_create(-0.13, 0, -0.00001);\r\n        this.myIncreaseButtonPosition = vec3_create(-this.myDecreaseButtonPosition[0], 0, -0.00001);\r\n\r\n        let distanceBetweenComponents = Math.abs(this.myIncreaseButtonPosition[0]) + Math.abs(this.myRightSideButtonPosition[0]);\r\n        let distanceFromVariableLabel = 0.045;\r\n        this.myPositionPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myRotationPanelPosition = [this.myPositionPanelPosition[0] + distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myScalePanelPosition = [this.myPositionPanelPosition[0] - distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n\r\n        this.myPositionText = \"Position\";\r\n        this.myRotationText = \"Rotation\";\r\n        this.myScaleText = \"Scale\";\r\n\r\n        this.myComponentLabelTextScale = this.myLabelTextScale;\r\n        this.myComponentLabelCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myComponentLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myComponentLabelCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myComponentLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValueTextScale = vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = vec3_create(0, -this._myValuePanelDistanceFromVariableLabelPanel, 0);\r\n        for (let i = 1; i < 3; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].pp_clone();\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = this.myValuePanelsPositions[2][1];\r\n        this.myStepPanelPosition = [0, valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, 0];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _setupRuntimeConfigHook() {\r\n        this.myTextHoverScaleMultiplier = vec3_create(1.1, 1.1, 1.1);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n}", "import { CollisionComponent, MeshComponent, TextComponent } from \"@wonderlandengine/api\";\r\nimport { CursorTarget } from \"@wonderlandengine/components\";\r\nimport { EasyTuneBaseWidgetUI } from \"../base/easy_tune_base_widget_ui\";\r\n\r\nexport class EasyTuneTransformWidgetUI extends EasyTuneBaseWidgetUI {\r\n\r\n    constructor(engine) {\r\n        super(engine);\r\n    }\r\n\r\n    setAdditionalButtonsVisible(visible) {\r\n        this._myAdditionalButtonsVisible = visible;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n            this.myPositionDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n        }\r\n        this.myPositionStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n        this.myPositionStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n            this.myRotationDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n        }\r\n        this.myRotationStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n        this.myRotationStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleIncreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n            this.myScaleDecreaseButtonPanels[i].pp_setActive(this._myAdditionalButtonsVisible);\r\n        }\r\n        this.myScaleStepIncreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n        this.myScaleStepDecreaseButtonPanel.pp_setActive(this._myAdditionalButtonsVisible);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsVisible = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myPositionLabelText = this.myPositionPanel.pp_addObject();\r\n        this.myPositionLabelCursorTarget = this.myPositionPanel.pp_addObject();\r\n\r\n        this.myPositionPanels = [];\r\n        this.myPositionTexts = [];\r\n        this.myPositionCursorTargets = [];\r\n\r\n        this.myPositionIncreaseButtonPanels = [];\r\n        this.myPositionIncreaseButtonBackgrounds = [];\r\n        this.myPositionIncreaseButtonTexts = [];\r\n        this.myPositionIncreaseButtonCursorTargets = [];\r\n\r\n        this.myPositionDecreaseButtonPanels = [];\r\n        this.myPositionDecreaseButtonBackgrounds = [];\r\n        this.myPositionDecreaseButtonTexts = [];\r\n        this.myPositionDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i] = this.myPositionPanel.pp_addObject();\r\n            this.myPositionTexts[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionCursorTargets[i] = this.myPositionPanels[i].pp_addObject();\r\n\r\n            this.myPositionIncreaseButtonPanels[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonBackgrounds[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonTexts[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionIncreaseButtonCursorTargets[i] = this.myPositionIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myPositionDecreaseButtonPanels[i] = this.myPositionPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonBackgrounds[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonTexts[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n            this.myPositionDecreaseButtonCursorTargets[i] = this.myPositionDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel = this.myDisplayPanel.pp_addObject();\r\n        this.myRotationLabelText = this.myRotationPanel.pp_addObject();\r\n        this.myRotationLabelCursorTarget = this.myRotationPanel.pp_addObject();\r\n\r\n        this.myRotationPanels = [];\r\n        this.myRotationTexts = [];\r\n        this.myRotationCursorTargets = [];\r\n\r\n        this.myRotationIncreaseButtonPanels = [];\r\n        this.myRotationIncreaseButtonBackgrounds = [];\r\n        this.myRotationIncreaseButtonTexts = [];\r\n        this.myRotationIncreaseButtonCursorTargets = [];\r\n\r\n        this.myRotationDecreaseButtonPanels = [];\r\n        this.myRotationDecreaseButtonBackgrounds = [];\r\n        this.myRotationDecreaseButtonTexts = [];\r\n        this.myRotationDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i] = this.myRotationPanel.pp_addObject();\r\n            this.myRotationTexts[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationCursorTargets[i] = this.myRotationPanels[i].pp_addObject();\r\n\r\n            this.myRotationIncreaseButtonPanels[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonBackgrounds[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonTexts[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationIncreaseButtonCursorTargets[i] = this.myRotationIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myRotationDecreaseButtonPanels[i] = this.myRotationPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonBackgrounds[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonTexts[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n            this.myRotationDecreaseButtonCursorTargets[i] = this.myRotationDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel = this.myDisplayPanel.pp_addObject();\r\n        this.myScaleLabelText = this.myScalePanel.pp_addObject();\r\n        this.myScaleLabelCursorTarget = this.myScalePanel.pp_addObject();\r\n\r\n        this.myScalePanels = [];\r\n        this.myScaleTexts = [];\r\n        this.myScaleCursorTargets = [];\r\n\r\n        this.myScaleIncreaseButtonPanels = [];\r\n        this.myScaleIncreaseButtonBackgrounds = [];\r\n        this.myScaleIncreaseButtonTexts = [];\r\n        this.myScaleIncreaseButtonCursorTargets = [];\r\n\r\n        this.myScaleDecreaseButtonPanels = [];\r\n        this.myScaleDecreaseButtonBackgrounds = [];\r\n        this.myScaleDecreaseButtonTexts = [];\r\n        this.myScaleDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i] = this.myScalePanel.pp_addObject();\r\n            this.myScaleTexts[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleCursorTargets[i] = this.myScalePanels[i].pp_addObject();\r\n\r\n            this.myScaleIncreaseButtonPanels[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonBackgrounds[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonTexts[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleIncreaseButtonCursorTargets[i] = this.myScaleIncreaseButtonPanels[i].pp_addObject();\r\n\r\n            this.myScaleDecreaseButtonPanels[i] = this.myScalePanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonBackgrounds[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonTexts[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n            this.myScaleDecreaseButtonCursorTargets[i] = this.myScaleDecreaseButtonPanels[i].pp_addObject();\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel = this.myPositionPanel.pp_addObject();\r\n        this.myPositionStepText = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepCursorTarget = this.myPositionStepPanel.pp_addObject();\r\n\r\n        this.myPositionStepIncreaseButtonPanel = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonBackground = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonText = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepIncreaseButtonCursorTarget = this.myPositionStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myPositionStepDecreaseButtonPanel = this.myPositionStepPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonBackground = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonText = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n        this.myPositionStepDecreaseButtonCursorTarget = this.myPositionStepDecreaseButtonPanel.pp_addObject();\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel = this.myRotationPanel.pp_addObject();\r\n        this.myRotationStepText = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepCursorTarget = this.myRotationStepPanel.pp_addObject();\r\n\r\n        this.myRotationStepIncreaseButtonPanel = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonBackground = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonText = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepIncreaseButtonCursorTarget = this.myRotationStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myRotationStepDecreaseButtonPanel = this.myRotationStepPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonBackground = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonText = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n        this.myRotationStepDecreaseButtonCursorTarget = this.myRotationStepDecreaseButtonPanel.pp_addObject();\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel = this.myScalePanel.pp_addObject();\r\n        this.myScaleStepText = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepCursorTarget = this.myScaleStepPanel.pp_addObject();\r\n\r\n        this.myScaleStepIncreaseButtonPanel = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonBackground = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonText = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepIncreaseButtonCursorTarget = this.myScaleStepIncreaseButtonPanel.pp_addObject();\r\n\r\n        this.myScaleStepDecreaseButtonPanel = this.myScaleStepPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonBackground = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonText = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n        this.myScaleStepDecreaseButtonCursorTarget = this.myScaleStepDecreaseButtonPanel.pp_addObject();\r\n    }\r\n\r\n    _setTransformHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel.pp_setPositionLocal(this._myConfig.myPositionPanelPosition);\r\n        this.myPositionLabelText.pp_scaleObject(this._myConfig.myComponentLabelTextScale);\r\n        this.myPositionLabelCursorTarget.pp_setPositionLocal(this._myConfig.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i].pp_setPositionLocal(this._myConfig.myValuePanelsPositions[i]);\r\n            this.myPositionTexts[i].pp_scaleObject(this._myConfig.myValueTextScale);\r\n            this.myPositionCursorTargets[i].pp_setPositionLocal(this._myConfig.myValueCursorTargetPosition);\r\n\r\n            this.myPositionIncreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n            this.myPositionIncreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myPositionIncreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myPositionIncreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myPositionIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n            this.myPositionDecreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n            this.myPositionDecreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myPositionDecreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myPositionDecreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myPositionDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel.pp_setPositionLocal(this._myConfig.myRotationPanelPosition);\r\n        this.myRotationLabelText.pp_scaleObject(this._myConfig.myComponentLabelTextScale);\r\n        this.myRotationLabelCursorTarget.pp_setPositionLocal(this._myConfig.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i].pp_setPositionLocal(this._myConfig.myValuePanelsPositions[i]);\r\n            this.myRotationTexts[i].pp_scaleObject(this._myConfig.myValueTextScale);\r\n            this.myRotationCursorTargets[i].pp_setPositionLocal(this._myConfig.myValueCursorTargetPosition);\r\n\r\n            this.myRotationIncreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n            this.myRotationIncreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myRotationIncreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myRotationIncreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myRotationIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n            this.myRotationDecreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n            this.myRotationDecreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myRotationDecreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myRotationDecreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myRotationDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel.pp_setPositionLocal(this._myConfig.myScalePanelPosition);\r\n        this.myScaleLabelText.pp_scaleObject(this._myConfig.myComponentLabelTextScale);\r\n        this.myScaleLabelCursorTarget.pp_setPositionLocal(this._myConfig.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i].pp_setPositionLocal(this._myConfig.myValuePanelsPositions[i]);\r\n            this.myScaleTexts[i].pp_scaleObject(this._myConfig.myValueTextScale);\r\n            this.myScaleCursorTargets[i].pp_setPositionLocal(this._myConfig.myValueCursorTargetPosition);\r\n\r\n            this.myScaleIncreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n            this.myScaleIncreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myScaleIncreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myScaleIncreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myScaleIncreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n            this.myScaleDecreaseButtonPanels[i].pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n            this.myScaleDecreaseButtonBackgrounds[i].pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n            this.myScaleDecreaseButtonTexts[i].pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n            this.myScaleDecreaseButtonTexts[i].pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n            this.myScaleDecreaseButtonCursorTargets[i].pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel.pp_setPositionLocal(this._myConfig.myStepPanelPosition);\r\n        this.myPositionStepText.pp_scaleObject(this._myConfig.myStepTextScale);\r\n        this.myPositionStepCursorTarget.pp_setPositionLocal(this._myConfig.myStepCursorTargetPosition);\r\n\r\n        this.myPositionStepIncreaseButtonPanel.pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n        this.myPositionStepIncreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myPositionStepIncreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myPositionStepIncreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myPositionStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPositionStepDecreaseButtonPanel.pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n        this.myPositionStepDecreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myPositionStepDecreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myPositionStepDecreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myPositionStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel.pp_setPositionLocal(this._myConfig.myStepPanelPosition);\r\n        this.myRotationStepText.pp_scaleObject(this._myConfig.myStepTextScale);\r\n        this.myRotationStepCursorTarget.pp_setPositionLocal(this._myConfig.myStepCursorTargetPosition);\r\n\r\n        this.myRotationStepIncreaseButtonPanel.pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n        this.myRotationStepIncreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myRotationStepIncreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myRotationStepIncreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myRotationStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        this.myRotationStepDecreaseButtonPanel.pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n        this.myRotationStepDecreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myRotationStepDecreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myRotationStepDecreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myRotationStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel.pp_setPositionLocal(this._myConfig.myStepPanelPosition);\r\n        this.myScaleStepText.pp_scaleObject(this._myConfig.myStepTextScale);\r\n        this.myScaleStepCursorTarget.pp_setPositionLocal(this._myConfig.myStepCursorTargetPosition);\r\n\r\n        this.myScaleStepIncreaseButtonPanel.pp_setPositionLocal(this._myConfig.myIncreaseButtonPosition);\r\n        this.myScaleStepIncreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myScaleStepIncreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myScaleStepIncreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myScaleStepIncreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n\r\n        this.myScaleStepDecreaseButtonPanel.pp_setPositionLocal(this._myConfig.myDecreaseButtonPosition);\r\n        this.myScaleStepDecreaseButtonBackground.pp_scaleObject(this._myConfig.mySideButtonBackgroundScale);\r\n        this.myScaleStepDecreaseButtonText.pp_setPositionLocal(this._myConfig.mySideButtonTextPosition);\r\n        this.myScaleStepDecreaseButtonText.pp_scaleObject(this._myConfig.mySideButtonTextScale);\r\n        this.myScaleStepDecreaseButtonCursorTarget.pp_setPositionLocal(this._myConfig.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        // Position\r\n\r\n        this.myPositionLabelTextComponent = this.myPositionLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionLabelTextComponent);\r\n        this.myPositionLabelTextComponent.text = this._myConfig.myPositionText;\r\n\r\n        this.myPositionLabelCursorTargetComponent = this.myPositionLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionLabelCollisionComponent = this.myPositionLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionLabelCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionLabelCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionLabelCollisionComponent.extents = this._myConfig.myComponentLabelCollisionExtents;\r\n\r\n        this.myPositionTextComponents = [];\r\n        this.myPositionCursorTargetComponents = [];\r\n        this.myPositionCollisionComponents = [];\r\n\r\n        this.myPositionIncreaseButtonBackgroundComponents = [];\r\n        this.myPositionIncreaseButtonTextComponents = [];\r\n        this.myPositionIncreaseButtonCursorTargetComponents = [];\r\n        this.myPositionIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myPositionDecreaseButtonBackgroundComponents = [];\r\n        this.myPositionDecreaseButtonTextComponents = [];\r\n        this.myPositionDecreaseButtonCursorTargetComponents = [];\r\n        this.myPositionDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionTextComponents[i] = this.myPositionTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionTextComponents[i]);\r\n            this.myPositionTextComponents[i].text = \" \";\r\n\r\n            this.myPositionCursorTargetComponents[i] = this.myPositionCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionCollisionComponents[i] = this.myPositionCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myPositionCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myPositionCollisionComponents[i].extents = this._myConfig.myValueCollisionExtents;\r\n\r\n            this.myPositionIncreaseButtonBackgroundComponents[i] = this.myPositionIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myPositionIncreaseButtonTextComponents[i] = this.myPositionIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionIncreaseButtonTextComponents[i]);\r\n            this.myPositionIncreaseButtonTextComponents[i].text = this._myConfig.myIncreaseButtonText;\r\n\r\n            this.myPositionIncreaseButtonCursorTargetComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionIncreaseButtonCollisionComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionIncreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n            this.myPositionDecreaseButtonBackgroundComponents[i] = this.myPositionDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myPositionDecreaseButtonTextComponents[i] = this.myPositionDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myPositionDecreaseButtonTextComponents[i]);\r\n            this.myPositionDecreaseButtonTextComponents[i].text = this._myConfig.myDecreaseButtonText;\r\n\r\n            this.myPositionDecreaseButtonCursorTargetComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myPositionDecreaseButtonCollisionComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myPositionDecreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationLabelTextComponent = this.myRotationLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationLabelTextComponent);\r\n        this.myRotationLabelTextComponent.text = this._myConfig.myRotationText;\r\n\r\n        this.myRotationLabelCursorTargetComponent = this.myRotationLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationLabelCollisionComponent = this.myRotationLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationLabelCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationLabelCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationLabelCollisionComponent.extents = this._myConfig.myComponentLabelCollisionExtents;\r\n\r\n        this.myRotationTextComponents = [];\r\n        this.myRotationCursorTargetComponents = [];\r\n        this.myRotationCollisionComponents = [];\r\n\r\n        this.myRotationIncreaseButtonBackgroundComponents = [];\r\n        this.myRotationIncreaseButtonTextComponents = [];\r\n        this.myRotationIncreaseButtonCursorTargetComponents = [];\r\n        this.myRotationIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myRotationDecreaseButtonBackgroundComponents = [];\r\n        this.myRotationDecreaseButtonTextComponents = [];\r\n        this.myRotationDecreaseButtonCursorTargetComponents = [];\r\n        this.myRotationDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationTextComponents[i] = this.myRotationTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationTextComponents[i]);\r\n            this.myRotationTextComponents[i].text = \" \";\r\n\r\n            this.myRotationCursorTargetComponents[i] = this.myRotationCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationCollisionComponents[i] = this.myRotationCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myRotationCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myRotationCollisionComponents[i].extents = this._myConfig.myValueCollisionExtents;\r\n\r\n            this.myRotationIncreaseButtonBackgroundComponents[i] = this.myRotationIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myRotationIncreaseButtonTextComponents[i] = this.myRotationIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationIncreaseButtonTextComponents[i]);\r\n            this.myRotationIncreaseButtonTextComponents[i].text = this._myConfig.myIncreaseButtonText;\r\n\r\n            this.myRotationIncreaseButtonCursorTargetComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationIncreaseButtonCollisionComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationIncreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n            this.myRotationDecreaseButtonBackgroundComponents[i] = this.myRotationDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myRotationDecreaseButtonTextComponents[i] = this.myRotationDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myRotationDecreaseButtonTextComponents[i]);\r\n            this.myRotationDecreaseButtonTextComponents[i].text = this._myConfig.myDecreaseButtonText;\r\n\r\n            this.myRotationDecreaseButtonCursorTargetComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myRotationDecreaseButtonCollisionComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myRotationDecreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScaleLabelTextComponent = this.myScaleLabelText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleLabelTextComponent);\r\n        this.myScaleLabelTextComponent.text = this._myConfig.myScaleText;\r\n\r\n        this.myScaleLabelCursorTargetComponent = this.myScaleLabelCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleLabelCollisionComponent = this.myScaleLabelCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleLabelCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleLabelCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleLabelCollisionComponent.extents = this._myConfig.myComponentLabelCollisionExtents;\r\n\r\n        this.myScaleTextComponents = [];\r\n        this.myScaleCursorTargetComponents = [];\r\n        this.myScaleCollisionComponents = [];\r\n\r\n        this.myScaleIncreaseButtonBackgroundComponents = [];\r\n        this.myScaleIncreaseButtonTextComponents = [];\r\n        this.myScaleIncreaseButtonCursorTargetComponents = [];\r\n        this.myScaleIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myScaleDecreaseButtonBackgroundComponents = [];\r\n        this.myScaleDecreaseButtonTextComponents = [];\r\n        this.myScaleDecreaseButtonCursorTargetComponents = [];\r\n        this.myScaleDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleTextComponents[i] = this.myScaleTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleTextComponents[i]);\r\n            this.myScaleTextComponents[i].text = \" \";\r\n\r\n            this.myScaleCursorTargetComponents[i] = this.myScaleCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleCollisionComponents[i] = this.myScaleCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myScaleCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myScaleCollisionComponents[i].extents = this._myConfig.myValueCollisionExtents;\r\n\r\n            this.myScaleIncreaseButtonBackgroundComponents[i] = this.myScaleIncreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myScaleIncreaseButtonTextComponents[i] = this.myScaleIncreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleIncreaseButtonTextComponents[i]);\r\n            this.myScaleIncreaseButtonTextComponents[i].text = this._myConfig.myIncreaseButtonText;\r\n\r\n            this.myScaleIncreaseButtonCursorTargetComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleIncreaseButtonCollisionComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleIncreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n            this.myScaleDecreaseButtonBackgroundComponents[i] = this.myScaleDecreaseButtonBackgrounds[i].pp_addComponent(MeshComponent);\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material = this._myParams.myPlaneMaterial.clone();\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material.color = this._myConfig.myBackgroundColor;\r\n\r\n            this.myScaleDecreaseButtonTextComponents[i] = this.myScaleDecreaseButtonTexts[i].pp_addComponent(TextComponent);\r\n            this._setupTextComponent(this.myScaleDecreaseButtonTextComponents[i]);\r\n            this.myScaleDecreaseButtonTextComponents[i].text = this._myConfig.myDecreaseButtonText;\r\n\r\n            this.myScaleDecreaseButtonCursorTargetComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].pp_addComponent(CursorTarget);\r\n            this.myScaleDecreaseButtonCollisionComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].pp_addComponent(CollisionComponent);\r\n            this.myScaleDecreaseButtonCollisionComponents[i].collider = this._myConfig.myCursorTargetCollisionCollider;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].extents = this._myConfig.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position \r\n        this.myPositionStepTextComponent = this.myPositionStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepTextComponent = this.myRotationStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepTextComponent = this.myScaleStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _addStepComponents() {\r\n        // Position\r\n        this.myPositionStepTextComponent = this.myPositionStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n        this.myRotationStepTextComponent = this.myRotationStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n        this.myScaleStepTextComponent = this.myScaleStepText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._myConfig.myStepCollisionExtents;\r\n\r\n        // Increase/Decrease\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._myConfig.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.pp_addComponent(MeshComponent);\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myParams.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._myConfig.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.pp_addComponent(TextComponent);\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._myConfig.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CursorTarget);\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.pp_addComponent(CollisionComponent);\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._myConfig.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._myConfig.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._myConfig.mySideButtonCollisionExtents;\r\n    }\r\n}", "import { GamepadAxesID } from \"../../../../input/gamepad/gamepad_buttons\";\r\nimport { mat4_create, vec3_create } from \"../../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTuneBaseWidget } from \"../base/easy_tune_base_widget\";\r\nimport { EasyTuneTransformWidgetConfig } from \"./easy_tune_transform_widget_config\";\r\nimport { EasyTuneTransformWidgetUI } from \"./easy_tune_transform_widget_ui\";\r\n\r\nexport class EasyTuneTransformWidget extends EasyTuneBaseWidget {\r\n\r\n    constructor(params, gamepad, engine = Globals.getMainEngine()) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myConfig = new EasyTuneTransformWidgetConfig();\r\n        this._myUI = new EasyTuneTransformWidgetUI(engine);\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditEnabled = false;\r\n        this._myStepEditEnabled = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myComponentStepValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n\r\n        this._myValueEditIndex = -1;\r\n        this._myComponentIndex = 0;\r\n        this._myStepIndex = 0;\r\n\r\n        this._myTempTransformValue = mat4_create();\r\n        this._myTempPositionValue = vec3_create();\r\n        this._myTempRotationValue = vec3_create();\r\n        this._myTempScaleValue = vec3_create();\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable._myPosition[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable._myPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable._myRotation[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable._myRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable._myScale[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable._myScaleStepPerSecond;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myPositionTextComponents[i].text = this._myVariable._myPosition[i].toFixed(this._myVariable._myDecimalPlaces);\r\n        }\r\n        this._myUI.myPositionStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myPositionStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myRotationTextComponents[i].text = this._myVariable._myRotation[i].toFixed(this._myVariable._myDecimalPlaces);\r\n        }\r\n        this._myUI.myRotationStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myRotationStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myScaleTextComponents[i].text = this._myVariable._myScale[i].toFixed(this._myVariable._myDecimalPlaces);\r\n        }\r\n        this._myUI.myScaleStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myScaleStepPerSecond);\r\n    }\r\n\r\n    _startHook(parentObject, easyTuneParams) {\r\n        this._myUI.setAdditionalButtonsVisible(easyTuneParams.myShowAdditionalButtons);\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myVariable != null) {\r\n            this._myTempPositionValue.pp_copy(this._myVariable._myPosition);\r\n            this._myTempRotationValue.pp_copy(this._myVariable._myRotation);\r\n            this._myTempScaleValue.pp_copy(this._myVariable._myScale);\r\n        }\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._myConfig.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._myConfig.myEditThumbstickMinThreshold) / (1 - this._myConfig.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditEnabled) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            this._myTempPositionValue.pp_copy(this._myVariable._myPosition);\r\n            this._myTempRotationValue.pp_copy(this._myVariable._myRotation);\r\n            this._myTempScaleValue.pp_copy(this._myVariable._myScale);\r\n\r\n            let amountToAdd = valueIntensity * this._myComponentStepValue * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable._myDecimalPlaces);\r\n\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myTempPositionValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myPositionTextComponents[this._myValueEditIndex].text = this._myTempPositionValue[this._myValueEditIndex].toFixed(this._myVariable._myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    if (this._myValueRealValue > 180) {\r\n                        while (this._myValueRealValue > 180) {\r\n                            this._myValueRealValue -= 180;\r\n                        }\r\n                        this._myValueRealValue = -180 + this._myValueRealValue;\r\n                    }\r\n\r\n                    if (this._myValueRealValue < -180) {\r\n                        while (this._myValueRealValue < - 180) {\r\n                            this._myValueRealValue += 180;\r\n                        }\r\n                        this._myValueRealValue = 180 - this._myValueRealValue;\r\n                    }\r\n\r\n                    this._myTempRotationValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myRotationTextComponents[this._myValueEditIndex].text = this._myTempRotationValue[this._myValueEditIndex].toFixed(this._myVariable._myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    if (this._myValueRealValue <= 0) {\r\n                        this._myValueRealValue = 1 / decimalPlacesMultiplier;\r\n                    }\r\n\r\n                    if (this._myVariable._myScaleAsOne) {\r\n                        let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        let difference = newValue - this._myTempScaleValue[this._myValueEditIndex];\r\n\r\n                        for (let i = 0; i < 3; i++) {\r\n                            this._myTempScaleValue[i] = Math.round((this._myTempScaleValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                            this._myTempScaleValue[i] = Math.max(this._myTempScaleValue[i], 1 / decimalPlacesMultiplier);\r\n                            this._myUI.myScaleTextComponents[i].text = this._myTempScaleValue[i].toFixed(this._myVariable._myDecimalPlaces);\r\n                        }\r\n                    } else {\r\n                        this._myTempScaleValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        this._myTempScaleValue[this._myValueEditIndex] = Math.max(this._myTempScaleValue[this._myValueEditIndex], 1 / decimalPlacesMultiplier);\r\n                        this._myUI.myScaleTextComponents[this._myValueEditIndex].text = this._myTempScaleValue[this._myValueEditIndex].toFixed(this._myVariable._myDecimalPlaces);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this._myTempTransformValue.mat4_setPositionRotationDegreesScale(this._myTempPositionValue, this._myTempRotationValue, this._myTempScaleValue);\r\n            this._myVariable.setValue(this._myTempTransformValue);\r\n        } else {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable._myPosition[this._myValueEditIndex];\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable._myRotation[this._myValueEditIndex];\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable._myScale[this._myValueEditIndex];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditEnabled) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._myConfig.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                let stepValue = 0;\r\n                switch (this._myStepIndex) {\r\n                    case 0:\r\n                        stepValue = this._myVariable._myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        stepValue = this._myVariable._myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        stepValue = this._myVariable._myScaleStepPerSecond;\r\n                        break;\r\n                    default:\r\n                        stepValue = 0;\r\n                }\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.onClick.add(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myVariableLabelText, this._myConfig.myVariableLabelTextScale));\r\n\r\n        ui.myPositionLabelCursorTargetComponent.onClick.add(this._resetComponentValues.bind(this, 0));\r\n        ui.myPositionLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myPositionLabelText));\r\n        ui.myPositionLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myPositionLabelText, this._myConfig.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myPositionCursorTargetComponents[i].onClick.add(this._resetValue.bind(this, 0, i));\r\n            ui.myPositionCursorTargetComponents[i].onHover.add(this._setValueEditEnabled.bind(this, 0, i, ui.myPositionTexts[i], true));\r\n            ui.myPositionCursorTargetComponents[i].onUnhover.add(this._setValueEditEnabled.bind(this, 0, i, ui.myPositionTexts[i], false));\r\n        }\r\n\r\n        ui.myRotationLabelCursorTargetComponent.onClick.add(this._resetComponentValues.bind(this, 1));\r\n        ui.myRotationLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myRotationLabelText));\r\n        ui.myRotationLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myRotationLabelText, this._myConfig.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myRotationCursorTargetComponents[i].onClick.add(this._resetValue.bind(this, 1, i));\r\n            ui.myRotationCursorTargetComponents[i].onHover.add(this._setValueEditEnabled.bind(this, 1, i, ui.myRotationTexts[i], true));\r\n            ui.myRotationCursorTargetComponents[i].onUnhover.add(this._setValueEditEnabled.bind(this, 1, i, ui.myRotationTexts[i], false));\r\n        }\r\n\r\n        ui.myScaleLabelCursorTargetComponent.onClick.add(this._resetComponentValues.bind(this, 2));\r\n        ui.myScaleLabelCursorTargetComponent.onHover.add(this._genericTextHover.bind(this, ui.myScaleLabelText));\r\n        ui.myScaleLabelCursorTargetComponent.onUnhover.add(this._genericTextUnhover.bind(this, ui.myScaleLabelText, this._myConfig.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onDown.add(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onDownOnHover.add(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onUp.add(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onHover.add(this._genericHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].onUnhover.add(this._genericUnhover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myScaleCursorTargetComponents[i].onClick.add(this._resetValue.bind(this, 2, i));\r\n            ui.myScaleCursorTargetComponents[i].onHover.add(this._setValueEditEnabled.bind(this, 2, i, ui.myScaleTexts[i], true));\r\n            ui.myScaleCursorTargetComponents[i].onUnhover.add(this._setValueEditEnabled.bind(this, 2, i, ui.myScaleTexts[i], false));\r\n        }\r\n\r\n        ui.myPositionStepCursorTargetComponent.onClick.add(this._resetStep.bind(this, 0));\r\n        ui.myPositionStepCursorTargetComponent.onHover.add(this._setStepEditEnabled.bind(this, 0, ui.myPositionStepText, true));\r\n        ui.myPositionStepCursorTargetComponent.onUnhover.add(this._setStepEditEnabled.bind(this, 0, ui.myPositionStepText, false));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 0, 0));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myRotationStepCursorTargetComponent.onClick.add(this._resetStep.bind(this, 1));\r\n        ui.myRotationStepCursorTargetComponent.onHover.add(this._setStepEditEnabled.bind(this, 1, ui.myRotationStepText, true));\r\n        ui.myRotationStepCursorTargetComponent.onUnhover.add(this._setStepEditEnabled.bind(this, 1, ui.myRotationStepText, false));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 1, 0));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myScaleStepCursorTargetComponent.onClick.add(this._resetStep.bind(this, 2));\r\n        ui.myScaleStepCursorTargetComponent.onHover.add(this._setStepEditEnabled.bind(this, 2, ui.myScaleStepText, true));\r\n        ui.myScaleStepCursorTargetComponent.onUnhover.add(this._setStepEditEnabled.bind(this, 2, ui.myScaleStepText, false));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onDown.add(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onDownOnHover.add(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onUp.add(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._setStepEditIntensity.bind(this, 2, 0));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onHover.add(this._genericHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.onUnhover.add(this._genericUnhover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n\r\n    }\r\n\r\n    _setValueEditIntensity(componentIndex, index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable._myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable._myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable._myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable._myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable._myScale[index];\r\n                        this._myComponentStepValue = this._myVariable._myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueButtonEditIntensityTimer = this._myConfig.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._myConfig.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _setValueEditEnabled(componentIndex, index, text, enabled) {\r\n        if (this._isActive() || !enabled) {\r\n            if (enabled) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable._myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable._myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable._myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable._myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable._myScale[index];\r\n                        this._myComponentStepValue = this._myVariable._myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n                text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleLocal(this._myConfig.myValueTextScale);\r\n            }\r\n\r\n            this._myValueEditEnabled = enabled;\r\n        }\r\n    }\r\n\r\n    _setStepEditEnabled(index, text, enabled) {\r\n        if (this._isActive() || !enabled) {\r\n            if (enabled) {\r\n                text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.pp_setScaleLocal(this._myConfig.myStepTextScale);\r\n            }\r\n\r\n            this._myStepEditEnabled = enabled;\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _resetValue(componentIndex, index) {\r\n        if (this._isActive()) {\r\n            this._myTempPositionValue.pp_copy(this._myVariable._myPosition);\r\n            this._myTempRotationValue.pp_copy(this._myVariable._myRotation);\r\n            this._myTempScaleValue.pp_copy(this._myVariable._myScale);\r\n\r\n            switch (componentIndex) {\r\n                case 0:\r\n                    this._myTempPositionValue[index] = this._myVariable._myDefaultPosition[index];\r\n                    this._myUI.myPositionTextComponents[index].text = this._myTempPositionValue[index].toFixed(this._myVariable._myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    this._myTempRotationValue[index] = this._myVariable._myDefaultRotation[index];\r\n                    this._myUI.myRotationTextComponents[index].text = this._myTempRotationValue[index].toFixed(this._myVariable._myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    this._myTempScaleValue[index] = this._myVariable._myDefaultScale[index];\r\n                    this._myUI.myScaleTextComponents[index].text = this._myTempScaleValue[index].toFixed(this._myVariable._myDecimalPlaces);\r\n                    break;\r\n\r\n            }\r\n\r\n            this._myTempTransformValue.mat4_setPositionRotationDegreesScale(this._myTempPositionValue, this._myTempRotationValue, this._myTempScaleValue);\r\n            this._myVariable.setValue(this._myTempTransformValue);\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetComponentValues(i);\r\n        }\r\n    }\r\n\r\n    _resetComponentValues(index) {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetValue(index, i);\r\n        }\r\n    }\r\n\r\n    _resetStep(index) {\r\n        if (this._isActive()) {\r\n            let defaultValue = 0;\r\n            switch (index) {\r\n                case 0:\r\n                    defaultValue = this._myVariable._myDefaultPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    defaultValue = this._myVariable._myDefaultRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    defaultValue = this._myVariable._myDefaultScaleStepPerSecond;\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n\r\n            this._changeStep(index, defaultValue);\r\n        }\r\n    }\r\n\r\n    _changeStep(index, step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n\r\n        switch (index) {\r\n            case 0:\r\n                this._myVariable._myPositionStepPerSecond = step;\r\n                this._myUI.myPositionStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myPositionStepPerSecond);\r\n                break;\r\n            case 1:\r\n                this._myVariable._myRotationStepPerSecond = step;\r\n                this._myUI.myRotationStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myRotationStepPerSecond);\r\n                break;\r\n            case 2:\r\n                this._myVariable._myScaleStepPerSecond = step;\r\n                this._myUI.myScaleStepTextComponent.text = this._myConfig.myStepStartString.concat(this._myVariable._myScaleStepPerSecond);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.pp_scaleObject(this._myConfig.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnhover(text, originalScale) {\r\n        text.pp_setScaleLocal(originalScale);\r\n    }\r\n}", "import { GamepadAxesID, GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { ToolHandedness } from \"../../cauldron/tool_types\";\r\nimport { WidgetFrame, WidgetParams } from \"../../widget_frame/widget_frame\";\r\nimport { EasyTuneVariableType } from \"../easy_tune_variable_types\";\r\nimport { EasyTuneBaseWidgetParams } from \"./base/easy_tune_base_widget\";\r\nimport { EasyTuneBoolArrayWidgetSelector } from \"./bool/easy_tune_bool_array_widget_selector\";\r\nimport { EasyTuneWidgetConfig } from \"./easy_tune_widget_config\";\r\nimport { EasyTuneNoneWidget } from \"./none/easy_tune_none_widget\";\r\nimport { EasyTuneNumberArrayWidgetSelector } from \"./number/easy_tune_number_widget_selector\";\r\nimport { EasyTuneTransformWidget } from \"./transform/easy_tune_transform_widget\";\r\n\r\nexport class EasyTuneWidgetParams extends WidgetParams {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myShowAdditionalButtons = false;\r\n        this.myGamepadScrollVariableEnabled = false;\r\n\r\n        this.myShowVariablesImportExportButtons = false;\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n}\r\n\r\nexport class EasyTuneWidget {\r\n\r\n    constructor(engine = Globals.getMainEngine()) {\r\n        this._myStarted = false;\r\n        this._myStartVariable = null;\r\n\r\n        this._myWidgetFrame = new WidgetFrame(\"E\", 1, engine);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._myConfig = new EasyTuneWidgetConfig();\r\n        this._myParams = null;\r\n\r\n        this._myWidgets = [];\r\n\r\n        this._myEasyTuneVariables = null;\r\n        this._myEasyTuneLastSize = 0;\r\n        this._myVariableNames = null;\r\n\r\n        this._myCurrentWidget = null;\r\n        this._myCurrentVariable = null;\r\n\r\n        this._myScrollVariableTimer = 0;\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myRefreshVariablesTimer = 0;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myEngine = engine;\r\n\r\n        this._myDestroyed = false;\r\n    }\r\n\r\n    setCurrentVariable(variableName) {\r\n        if (!this._myStarted) {\r\n            this._myStartVariable = variableName;\r\n        } else if (this._myEasyTuneVariables.has(variableName)) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(variableName);\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            console.log(\"Can't set easy tune active variable\");\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        if (this._myWidgetFrame.isVisible()) {\r\n            this._myDirty = true;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, params, easyTuneVariables) {\r\n        this._myRightGamepad = Globals.getRightGamepad(this._myEngine);\r\n        this._myLeftGamepad = Globals.getLeftGamepad(this._myEngine);\r\n        if (this._myConfig.myGamepadHandedness == ToolHandedness.RIGHT) {\r\n            this._myGamepad = this._myRightGamepad;\r\n        } else if (this._myConfig.myGamepadHandedness == ToolHandedness.LEFT) {\r\n            this._myGamepad = this._myLeftGamepad;\r\n        }\r\n\r\n        this._myStarted = true;\r\n\r\n        this._myParams = params;\r\n\r\n        this._myWidgetFrame.start(parentObject, params);\r\n\r\n        this._myEasyTuneVariables = easyTuneVariables;\r\n        this._myEasyTuneLastSize = this.getValidEasyTuneVariablesLength();\r\n        this._myVariableNames = this.getValidEasyTuneVariablesNames();\r\n\r\n        if (this.getValidEasyTuneVariablesLength() > 0) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n        }\r\n\r\n        if (this._myStartVariable) {\r\n            if (this._myEasyTuneVariables.has(this._myStartVariable)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myStartVariable);\r\n            } else {\r\n                console.log(\"Can't set easy tune active variable\");\r\n            }\r\n        }\r\n\r\n        this._initializeWidgets();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this.getValidEasyTuneVariablesLength() != this._myEasyTuneLastSize || this._myDirty) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n\r\n        if (this._myWidgetFrame.isVisible() && this.getValidEasyTuneVariablesLength() > 0) {\r\n            if (this._myConfig.myRefreshVariablesDelay != null) {\r\n                this._myRefreshVariablesTimer += dt;\r\n                if (this._myRefreshVariablesTimer > this._myConfig.myRefreshVariablesDelay) {\r\n                    this._myRefreshVariablesTimer = 0;\r\n                    this._refreshEasyTuneVariables();\r\n                }\r\n            }\r\n\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.update(dt);\r\n            }\r\n\r\n            if (this._myParams.myGamepadScrollVariableEnabled) {\r\n                this._updateGamepadScrollVariable(dt);\r\n            }\r\n        }\r\n\r\n        this._updateGamepadWidgetVisibility();\r\n\r\n        this._updateWidgetCurrentVariable();\r\n    }\r\n\r\n    _initializeWidgets() {\r\n        let widgetParams = new EasyTuneBaseWidgetParams();\r\n        widgetParams.myVariablesImportCallback = this._importVariables.bind(this);\r\n        widgetParams.myVariablesExportCallback = this._exportVariables.bind(this);\r\n\r\n        this._myWidgets[EasyTuneVariableType.NONE] = new EasyTuneNoneWidget(widgetParams, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.NUMBER] = new EasyTuneNumberArrayWidgetSelector(widgetParams, this._myGamepad, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.BOOL] = new EasyTuneBoolArrayWidgetSelector(widgetParams, this._myGamepad, this._myEngine);\r\n        this._myWidgets[EasyTuneVariableType.TRANSFORM] = new EasyTuneTransformWidget(widgetParams, this._myGamepad, this._myEngine);\r\n\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.start(this._myWidgetFrame.getWidgetObject(), this._myParams);\r\n                widget.setVisible(false);\r\n                widget.registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\r\n            }\r\n        }\r\n\r\n        this._selectCurrentWidget();\r\n    }\r\n\r\n    _selectCurrentWidget() {\r\n        if (this.getValidEasyTuneVariablesLength() <= 0) {\r\n            return;\r\n        } else if (this._myCurrentVariable == null) {\r\n            this._myVariableNames = this.getValidEasyTuneVariablesNames();\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n        }\r\n\r\n        let prevWidget = null;\r\n        if (this._myCurrentWidget != null) {\r\n            prevWidget = this._myCurrentWidget.getWidget();\r\n        }\r\n\r\n        if (this._myCurrentVariable.getType() in this._myWidgets) {\r\n            this._myCurrentWidget = this._myWidgets[this._myCurrentVariable.getType()];\r\n        } else {\r\n            this._myCurrentWidget = this._myWidgets[EasyTuneVariableType.NONE];\r\n        }\r\n\r\n        this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\r\n        this._myCurrentWidget.getWidget().syncWidget(prevWidget);\r\n\r\n        if (prevWidget != null) {\r\n            prevWidget.setVisible(false);\r\n        }\r\n\r\n        this._myCurrentWidget.setVisible(this._myWidgetFrame.isVisible());\r\n    }\r\n\r\n    _refreshEasyTuneVariables() {\r\n        this._myVariableNames = this.getValidEasyTuneVariablesNames();\r\n        this._myEasyTuneLastSize = this.getValidEasyTuneVariablesLength();\r\n\r\n        if (this.getValidEasyTuneVariablesLength() > 0) {\r\n            if (this._myCurrentVariable && this._myVariableNames.pp_hasEqual(this._myCurrentVariable.getName())) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myCurrentVariable.getName());\r\n            } else {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n            }\r\n\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            this._myCurrentVariable = null;\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.setVisible(false);\r\n                this._myCurrentWidget = null;\r\n            }\r\n        }\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _updateGamepadWidgetVisibility() {\r\n        if (this._myGamepad) {\r\n            if ((this._myGamepad.getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) ||\r\n                (this._myGamepad.getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(GamepadButtonID.BOTTOM_BUTTON).isPressed())) {\r\n                this._toggleVisibility();\r\n            }\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentWidget) {\r\n            if (this.getValidEasyTuneVariablesLength() > 0) {\r\n                this._myCurrentWidget.setVisible(visible);\r\n            } else {\r\n                this._myCurrentWidget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (visible) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _updateGamepadScrollVariable(dt) {\r\n        if (this._myGamepad && (!this._myConfig.myScrollVariableButtonID || this._myGamepad.getButtonInfo(this._myConfig.myScrollVariableButtonID).isPressed())) {\r\n            let x = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[0];\r\n            let y = this._myGamepad.getAxesInfo(GamepadAxesID.THUMBSTICK).myAxes[1];\r\n            if (Math.abs(x) > this._myConfig.myScrollVariableMinXThreshold && Math.abs(y) < this._myConfig.myScrollVariableMaxYThreshold) {\r\n                this._myScrollVariableTimer += dt;\r\n                while (this._myScrollVariableTimer > this._myConfig.myScrollVariableDelay) {\r\n                    this._myScrollVariableTimer -= this._myConfig.myScrollVariableDelay;\r\n                    this._scrollVariable(Math.sign(x));\r\n                }\r\n            } else {\r\n                this._myScrollVariableTimer = this._myConfig.myScrollVariableDelay;\r\n            }\r\n        } else {\r\n            this._myScrollVariableTimer = this._myConfig.myScrollVariableDelay;\r\n        }\r\n    }\r\n\r\n    _scrollVariable(amount) {\r\n        if (this.getValidEasyTuneVariablesLength() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let variableIndex = this._getVariableIndex(this._myCurrentVariable);\r\n        if (variableIndex >= 0) {\r\n            // Manage negative numbers\r\n            let newIndex = (((variableIndex + amount) % this._myVariableNames.length) + this._myVariableNames.length) % this._myVariableNames.length;\r\n            if (this._myEasyTuneVariables.has(this._myVariableNames[newIndex])) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[newIndex]);\r\n                this._selectCurrentWidget();\r\n            } else {\r\n                this._refreshEasyTuneVariables();\r\n            }\r\n        } else {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _createIndexString() {\r\n        let indexString = \" (\";\r\n        let index = (this._getVariableIndex(this._myCurrentVariable) + 1).toString();\r\n        let length = (this.getValidEasyTuneVariablesLength()).toString();\r\n        while (index.length < length.length) {\r\n            index = \"0\".concat(index);\r\n        }\r\n\r\n        indexString = indexString.concat(index).concat(\" - \").concat(length).concat(\")\");\r\n\r\n        return indexString;\r\n    }\r\n\r\n    _getVariableIndex(variable) {\r\n        let variableIndex = this._myVariableNames.indexOf(variable.getName());\r\n        return variableIndex;\r\n    }\r\n\r\n    _updateWidgetCurrentVariable() {\r\n        for (let variable of this._myEasyTuneVariables.getEasyTuneVariablesList()) {\r\n            variable.setWidgetCurrentVariable(false);\r\n        }\r\n\r\n        if (this._myWidgetFrame.isVisible() && this._myCurrentVariable) {\r\n            this._myCurrentVariable.setWidgetCurrentVariable(true);\r\n        }\r\n    }\r\n\r\n    _importVariables() {\r\n        this._myParams.myVariablesImportCallback(this._onImportSuccess.bind(this), this._onImportFailure.bind(this));\r\n    }\r\n\r\n    _exportVariables() {\r\n        this._myParams.myVariablesExportCallback(this._onExportSuccess.bind(this), this._onExportFailure.bind(this));\r\n    }\r\n\r\n    _onImportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    _onImportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    _onExportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    _onExportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._myDestroyed = true;\r\n\r\n        for (let widget of this._myWidgets) {\r\n            widget.destroy();\r\n        }\r\n\r\n        this._myWidgetFrame.destroy();\r\n    }\r\n\r\n    isDestroyed() {\r\n        return this._myDestroyed;\r\n    }\r\n\r\n\r\n    getValidEasyTuneVariablesLength() {\r\n        return this.getValidEasyTuneVariablesNames().length;\r\n    }\r\n\r\n    getValidEasyTuneVariablesNames() {\r\n        let names = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n\r\n        let validNames = [];\r\n        for (let name of names) {\r\n            let variable = this._myEasyTuneVariables.getEasyTuneVariable(name);\r\n            if (variable.shouldShowOnWidget()) {\r\n                validNames.push(name);\r\n            }\r\n        }\r\n\r\n        return validNames;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\n\r\nexport class EasyTuneImportVariablesComponent extends Component {\r\n    static TypeName = \"pp-easy-tune-import-variables\";\r\n    static Properties = {\r\n        _myVariablesImportURL: Property.string(\"\"),\r\n        _myResetVariablesDefaultValueOnImport: Property.bool(true)\r\n    };\r\n\r\n    start() {\r\n        this._myFirstUpdate = true;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            EasyTuneUtils.importVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, undefined, undefined, this.engine);\r\n        }\r\n    }\r\n}", "import { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneUtils } from \"../easy_tune_utils\";\r\n\r\nexport class EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine = Globals.getMainEngine()) {\r\n        this._myObject = object;\r\n        this._myUseTuneTarget = useTuneTarget;\r\n        this._mySetAsWidgetCurrentVariable = setAsWidgetCurrentVariable;\r\n\r\n        this._myEasyObject = this._myObject;\r\n        if (this._myUseTuneTarget) {\r\n            this._myEasyObject = Globals.getEasyTuneTarget(engine);\r\n        }\r\n        this._myPrevEasyObject = null;\r\n\r\n        let variableNamePrefix = this._getVariableNamePrefix();\r\n\r\n        if (variableName == \"\") {\r\n            let objectName = this._myObject.pp_getName();\r\n            if (objectName != \"\") {\r\n                this._myEasyTuneVariableName = variableNamePrefix.concat(objectName);\r\n            } else {\r\n                this._myEasyTuneVariableName = variableNamePrefix.concat(this._myObject.pp_getID());\r\n            }\r\n        } else {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(variableName);\r\n        }\r\n\r\n        this._myEngine = engine;\r\n    }\r\n\r\n    start() {\r\n        let easyTuneVariable = this._createEasyTuneVariable(this._myEasyTuneVariableName);\r\n\r\n        Globals.getEasyTuneVariables(this._myEngine).add(easyTuneVariable);\r\n        if (this._mySetAsWidgetCurrentVariable) {\r\n            EasyTuneUtils.setWidgetCurrentVariable(this._myEasyTuneVariableName, this._myEngine);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.getEasyTuneVariables(this._myEngine).isWidgetCurrentVariable(this._myEasyTuneVariableName)) {\r\n            if (this._myUseTuneTarget) {\r\n                this._myEasyObject = Globals.getEasyTuneTarget(engine);\r\n            }\r\n\r\n            if (this._myPrevEasyObject != this._myEasyObject) {\r\n                this._myPrevEasyObject = this._myEasyObject;\r\n                if (this._myEasyObject) {\r\n                    let value = this._getObjectValue(this._myEasyObject);\r\n                    Globals.getEasyTuneVariables(this._myEngine).set(this._myEasyTuneVariableName, value, true);\r\n                } else {\r\n                    let value = this._getDefaultValue();\r\n                    Globals.getEasyTuneVariables(this._myEngine).set(this._myEasyTuneVariableName, value, true);\r\n                }\r\n            }\r\n\r\n            if (this._myEasyObject) {\r\n                this._updateObjectValue(this._myEasyObject, Globals.getEasyTuneVariables(this._myEngine).get(this._myEasyTuneVariableName));\r\n            }\r\n        }\r\n    }\r\n}", "import { LightComponent } from \"@wonderlandengine/api\";\r\nimport { EasyTuneNumber } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyLightAttenuation extends EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsWidgetCurrentVariable, useTuneTarget) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = \"Light Attenuation \";\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumber(variableName, this._getDefaultValue(), null, true, 3, 0.01, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let attenuation = this._getLightAttenuation(object);\r\n        return attenuation;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let attenuation = value;\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            light.color[3] = attenuation;\r\n        }\r\n    }\r\n\r\n    _getLightAttenuation(object) {\r\n        let attenuation = this._getDefaultValue();\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            attenuation = light.color[3];\r\n        }\r\n\r\n        return attenuation;\r\n    }\r\n}", "import { LightComponent } from \"@wonderlandengine/api\";\r\nimport { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneIntArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyLightColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Light RGB \";\r\n        } else {\r\n            nameFirstPart = \"Light HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), null, true, 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let lightColor = this._getLightColor(object);\r\n        if (lightColor) {\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbCodeToHuman(lightColor);\r\n            } else {\r\n                color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHSV(lightColor));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = ColorUtils.hsvToRGB(ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            light.color[0] = color[0];\r\n            light.color[1] = color[1];\r\n            light.color[2] = color[2];\r\n            light.color[3] = light.color[3];\r\n        }\r\n\r\n        if ((Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) ||\r\n            (Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed())) {\r\n\r\n            let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHSV(color));\r\n            let rgbColor = ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getLightColor(object) {\r\n        let color = null;\r\n        let light = object.pp_getComponent(LightComponent);\r\n        if (light) {\r\n            color = light.color.slice(0, 3);\r\n        }\r\n\r\n        return color;\r\n    }\r\n}", "import { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneIntArray, EasyTuneNumberArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyMeshColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, colorType, object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = [\"color\", \"diffuseColor\", \"ambientColor\", \"specularColor\", \"emissiveColor\", \"fogColor\", \"ambientFactor\",];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh RGB \";\r\n        } else {\r\n            nameFirstPart = \"Mesh HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        if (this._myColorType == 6) {\r\n            return new EasyTuneNumberArray(variableName, this._getDefaultValue(), null, true, 3, 0.1, 0, 1);\r\n        }\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), null, true, 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            if (this._myColorType != 6) {\r\n                color = meshMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n                if (this._myColorModel == 0) {\r\n                    color = ColorUtils.rgbCodeToHuman(color);\r\n                } else {\r\n                    color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHSV(color));\r\n                }\r\n            } else {\r\n                color = [meshMaterial[this._myColorVariableNames[this._myColorType]]];\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        if (this._myColorType == 6) {\r\n            return [0];\r\n        }\r\n\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorType != 6) {\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbHumanToCode(color);\r\n            } else {\r\n                color = ColorUtils.hsvToRGB(ColorUtils.hsvHumanToCode(color));\r\n            }\r\n        }\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if (this._myColorType != 6) {\r\n            if ((Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) ||\r\n                (Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed())) {\r\n\r\n                let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHSV(color));\r\n                let rgbColor = ColorUtils.color1To255(color);\r\n\r\n                console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponent(MeshComponent);\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { vec3_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneNumberArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyScale extends EasyObjectTuner {\r\n\r\n    constructor(local, scaleAsOne, object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n        this._myLocal = local;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Scale \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumberArray(variableName, this._getDefaultValue(), null, true, 3, 1, 0.001, null, this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myLocal ? object.pp_getScaleLocal() : object.pp_getScale();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create(1, 1, 1);\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myLocal) {\r\n            object.pp_setScaleLocal(value);\r\n        } else {\r\n            object.pp_setScale(value);\r\n        }\r\n    }\r\n}", "import { mat4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { EasyTuneTransform } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyTransform extends EasyObjectTuner {\r\n\r\n    constructor(local, scaleAsOne, object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n        this._myLocal = local;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Transform \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneTransform(variableName, this._getDefaultValue(), null, true, this._myScaleAsOne, 3);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myLocal ? object.pp_getTransformLocal() : object.pp_getTransform();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return mat4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myLocal) {\r\n            object.pp_setTransformLocal(value);\r\n        } else {\r\n            object.pp_setTransform(value);\r\n        }\r\n    }\r\n}", "import { MeshComponent } from \"@wonderlandengine/api\";\r\nimport { EasyTuneNumber } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyMeshAmbientFactor extends EasyObjectTuner {\r\n\r\n    constructor(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh AF \";\r\n        } else {\r\n            nameFirstPart = \"Mesh AF \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneNumber(variableName, this._getDefaultValue(), null, true, 3, 0.1, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let ambientFactor = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            ambientFactor = meshMaterial.ambientFactor;\r\n        } else {\r\n            ambientFactor = this._getDefaultValue();\r\n        }\r\n\r\n        return ambientFactor;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let ambientFactor = value;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial.ambientFactor = ambientFactor;\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponent(MeshComponent);\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { TextComponent } from \"@wonderlandengine/api\";\r\nimport { ColorUtils } from \"../../../cauldron/utils/color_utils\";\r\nimport { GamepadButtonID } from \"../../../input/gamepad/gamepad_buttons\";\r\nimport { vec4_create } from \"../../../plugin/js/extensions/array_extension\";\r\nimport { Globals } from \"../../../pp/globals\";\r\nimport { EasyTuneIntArray } from \"../easy_tune_variable_types\";\r\nimport { EasyObjectTuner } from \"./easy_object_tuner\";\r\n\r\nexport class EasyTextColor extends EasyObjectTuner {\r\n\r\n    constructor(colorModel, colorType, object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine) {\r\n        super(object, variableName, setAsWidgetCurrentVariable, useTuneTarget, engine);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = [\"color\", \"effectColor\"];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Text RGB \";\r\n        } else {\r\n            nameFirstPart = \"Text HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new EasyTuneIntArray(variableName, this._getDefaultValue(), null, true, 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            color = textMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n            if (this._myColorModel == 0) {\r\n                color = ColorUtils.rgbCodeToHuman(color);\r\n            } else {\r\n                color = ColorUtils.hsvCodeToHuman(ColorUtils.rgbToHSV(color));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = ColorUtils.hsvToRGB(ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            textMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if ((Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed()) ||\r\n            (Globals.getLeftGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressStart() && Globals.getRightGamepad(this._myEngine).getButtonInfo(GamepadButtonID.TOP_BUTTON).isPressed())) {\r\n\r\n            let hsvColor = ColorUtils.color1To255(ColorUtils.rgbToHSV(color));\r\n            let rgbColor = ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getTextMaterial(object) {\r\n        let material = null;\r\n        let text = object.pp_getComponent(TextComponent);\r\n        if (text) {\r\n            material = text.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyLightAttenuation } from \"../easy_light_attenuation\";\r\n\r\nexport class EasyLightAttenuationComponent extends Component {\r\n    static TypeName = \"pp-easy-light-attenuation\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyLightAttenuation(this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyLightColor } from \"../easy_light_color\";\r\n\r\nexport class EasyLightColorComponent extends Component {\r\n    static TypeName = \"pp-easy-light-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\")\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyLightColor(this._myColorModel, this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { ComponentUtils } from \"../../../../cauldron/wl/utils/component_utils\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyMeshAmbientFactor } from \"../easy_mesh_ambient_factor\";\r\n\r\nexport class EasyMeshAmbientFactorComponent extends Component {\r\n    static TypeName = \"pp-easy-mesh-ambient-factor\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false)\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyMeshAmbientFactor(this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = ComponentUtils.cloneDefault(this, targetObject);\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { ComponentUtils } from \"../../../../cauldron/wl/utils/component_utils\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyMeshColor } from \"../easy_mesh_color\";\r\n\r\nexport class EasyMeshColorComponent extends Component {\r\n    static TypeName = \"pp-easy-mesh-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\"),\r\n        _myColorType: Property.enum([\"Color\", \"Diffuse Color\", \"Ambient Color\", \"Specular Color\", \"Emissive Color\", \"Fog Color\", \"Ambient Factor\"], \"Color\"),\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyMeshColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = ComponentUtils.cloneDefault(this, targetObject);\r\n\r\n        return clonedComponent;\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyScale } from \"../easy_scale\";\r\n\r\nexport class EasyScaleComponent extends Component {\r\n    static TypeName = \"pp-easy-scale\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myLocal: Property.bool(false),\r\n        _myScaleAsOne: Property.bool(true) // Edit all scale values together\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyScale(this._myLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTuneUtils } from \"../../easy_tune_utils\";\r\n\r\nexport class EasySetTuneTargetChildNumberComponent extends Component {\r\n    static TypeName = \"pp-easy-set-tune-target-child-number\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n    };\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyTuneVariableName = \"Target Child \";\r\n\r\n            if (this._myVariableName == \"\") {\r\n                this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this.object.pp_getID());\r\n            } else {\r\n                this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this._myVariableName);\r\n            }\r\n\r\n            let childrenCount = this.object.pp_getChildren().length;\r\n            let min = 1;\r\n            let max = childrenCount;\r\n            if (childrenCount == 0) {\r\n                min = 0;\r\n                max = 0;\r\n            }\r\n\r\n            Globals.getEasyTuneVariables(this.engine).add(new EasyTuneInt(this._myEasyTuneVariableName, 0, null, true, 10, min, max));\r\n            if (this._mySetAsWidgetCurrentVariable) {\r\n                EasyTuneUtils.setWidgetCurrentVariable(this._myEasyTuneVariableName, this.engine);\r\n            }\r\n\r\n            this._myCurrentChildIndex = -1;\r\n            this._myCurrentChildrenCount = childrenCount;\r\n\r\n            this._myEasyTuneTarget = null;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (Globals.getEasyTuneVariables(this.engine).isWidgetCurrentVariable(this._myEasyTuneVariableName)) {\r\n                let childrenCount = this.object.pp_getChildren().length;\r\n                if (childrenCount != this._myCurrentChildrenCount) {\r\n                    this._myCurrentChildrenCount = childrenCount;\r\n\r\n                    let min = 1;\r\n                    let max = childrenCount;\r\n                    if (childrenCount == 0) {\r\n                        min = 0;\r\n                        max = 0;\r\n                    }\r\n\r\n                    let easyTuneVariable = Globals.getEasyTuneVariables(this.engine).getEasyTuneVariable(this._myEasyTuneVariableName);\r\n                    easyTuneVariable.setMin(min);\r\n                    easyTuneVariable.setMax(max);\r\n                }\r\n\r\n                let childIndex = Globals.getEasyTuneVariables(this.engine).get(this._myEasyTuneVariableName);\r\n                if (childIndex != this._myCurrentChildIndex) {\r\n                    if (childIndex == 0 && this._myCurrentChildIndex != -1) {\r\n                        if (Globals.getEasyTuneTarget(this.engine) == this._myEasyTuneTarget) {\r\n                            Globals.removeEasyTuneTarget(this.engine);\r\n                        }\r\n                        this._myEasyTuneTarget = null;\r\n                    } else if (childIndex > 0) {\r\n                        this._myEasyTuneTarget = this.object.pp_getChildren()[childIndex - 1];\r\n                        Globals.setEasyTuneTarget(this._myEasyTuneTarget, this.engine);\r\n                    }\r\n\r\n                    this._myCurrentChildIndex = childIndex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { Component } from \"@wonderlandengine/api\";\r\nimport { GrabberHandComponent } from \"../../../../gameplay/grab_throw/grabber_hand_component\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\n\r\nexport class EasySetTuneTargeetGrabComponent extends Component {\r\n    static TypeName = \"pp-easy-set-tune-target-grab\";\r\n    static Properties = {};\r\n\r\n    start() {\r\n        this._myGrabber = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myGrabber = this.object.pp_getComponent(GrabberHandComponent);\r\n            this._myEasyTuneTarget = null;\r\n        }\r\n    }\r\n\r\n    _onRelease(grabber, grabbable) {\r\n        this._myEasyTuneTarget = grabbable.object;\r\n        Globals.setEasyTuneTarget(this._myEasyTuneTarget, this.engine);\r\n    }\r\n\r\n    _onGrab(grabber, grabbable) {\r\n        if (Globals.getEasyTuneTarget(this.engine) == this._myEasyTuneTarget) {\r\n            Globals.removeEasyTuneTarget(this.engine);\r\n        }\r\n        this._myEasyTuneTarget = null;\r\n    }\r\n\r\n    onActivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myGrabber != null) {\r\n                //this._myGrabber.registerGrabEventListener(this, this._onGrab.bind(this));\r\n                this._myGrabber.registerThrowEventListener(this, this._onRelease.bind(this));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeactivate() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myGrabber != null) {\r\n                //this._myGrabber.unregisterGrabEventListener(this);\r\n                this._myGrabber.unregisterThrowEventListener(this);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTextColor } from \"../easy_text_color\";\r\n\r\nexport class EasyTextColorComponent extends Component {\r\n    static TypeName = \"pp-easy-text-color\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myColorModel: Property.enum([\"RGB\", \"HSV\"], \"HSV\"),\r\n        _myColorType: Property.enum([\"Color\", \"Effect Color\"], \"Color\")\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyTextColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n}", "import { Component, Property } from \"@wonderlandengine/api\";\r\nimport { ComponentUtils } from \"../../../../cauldron/wl/utils/component_utils\";\r\nimport { Globals } from \"../../../../pp/globals\";\r\nimport { EasyTransform } from \"../easy_transform\";\r\n\r\nexport class EasyTransformComponent extends Component {\r\n    static TypeName = \"pp-easy-transform\";\r\n    static Properties = {\r\n        _myVariableName: Property.string(\"\"),\r\n        _mySetAsWidgetCurrentVariable: Property.bool(false),\r\n        _myUseTuneTarget: Property.bool(false),\r\n        _myLocal: Property.bool(false),\r\n        _myScaleAsOne: Property.bool(true) // Edit all scale values together\r\n    };\r\n\r\n    init() {\r\n        this._myEasyObjectTuner = null;\r\n\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            this._myEasyObjectTuner = new EasyTransform(this._myLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsWidgetCurrentVariable, this._myUseTuneTarget);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (Globals.isToolEnabled(this.engine)) {\r\n            if (this._myEasyObjectTuner != null) {\r\n                this._myEasyObjectTuner.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = ComponentUtils.cloneDefault(this, targetObject);\r\n\r\n        return clonedComponent;\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["pp_exports", "__export", "AddPPToWindowComponent", "AddWLToWindowComponent", "AdjustHierarchyPhysXScaleComponent", "ArrayUtils", "AudioEvent", "AudioManager", "AudioManagerComponent", "AudioPlayer", "AudioSetup", "AudioUtils", "BaseGamepad", "BasePose", "BasePoseParams", "BenchmarkMaxPhysXComponent", "BenchmarkMaxVisibleTrianglesComponent", "BrowserUtils", "CADisplayLeaderboardComponent", "CADummyServer", "CAError", "CAUtils", "CharacterColliderAdditionalParams", "CharacterColliderDebugParams", "CharacterColliderHorizontalCheckParams", "CharacterColliderHorizontalPositionVerticalCheckDirection", "CharacterColliderSetup", "CharacterColliderSetupSimplifiedCreationAccuracyLevel", "CharacterColliderSetupSimplifiedCreationParams", "CharacterColliderSetupUtils", "CharacterColliderSlideFlickerPreventionMode", "CharacterColliderSplitMovementParams", "CharacterColliderSurfaceParams", "CharacterColliderVerticalCheckParams", "CharacterColliderWallSlideParams", "CharacterCollisionCheckTransformResults", "CharacterCollisionCheckType", "CharacterCollisionDebugResults", "CharacterCollisionInternalResults", "CharacterCollisionMovementResults", "CharacterCollisionResults", "CharacterCollisionSplitMovementResults", "CharacterCollisionSurfaceInfo", "CharacterCollisionSurfaceResults", "CharacterCollisionSystem", "CharacterCollisionSystemComponent", "CharacterCollisionTeleportResults", "CharacterCollisionTransformResults", "CharacterCollisionWallSlideResults", "ClassicGamepadCore", "ClearConsoleOnXRSessionStartComponent", "CloneParams", "CollisionCheck", "CollisionCheckBridge", "CollisionCheckParams", "CollisionCheckUtils", "CollisionRuntimeParams", "ColorUtils", "ComponentUtils", "ConsoleOriginalFunctions", "ConsoleVR", "ConsoleVRToolComponent", "ConsoleVRWidget", "ConsoleVRWidgetConfig", "ConsoleVRWidgetConsoleFunction", "ConsoleVRWidgetMessage", "ConsoleVRWidgetMessageType", "ConsoleVRWidgetParams", "ConsoleVRWidgetPulseOnNewMessage", "ConsoleVRWidgetSender", "ConsoleVRWidgetUI", "CopyHandTransformComponent", "CopyHeadTransformComponent", "CopyPlayerTransformComponent", "CopyReferenceSpaceTransformComponent", "CustomCloneParams", "DebugArrayFunctionsPerformanceAnalyzerComponent", "DebugFunctionPerformanceAnalysisResults", "DebugFunctionsOverwriter", "DebugFunctionsOverwriterParams", "DebugFunctionsPerformanceAnalysisResultsLogger", "DebugFunctionsPerformanceAnalysisResultsLoggerParams", "DebugFunctionsPerformanceAnalyzer", "DebugFunctionsPerformanceAnalyzerComponent", "DebugFunctionsPerformanceAnalyzerParams", "DebugFunctionsPerformanceAnalyzerSortOrder", "DebugManager", "DebugManagerComponent", "DebugPPFunctionsPerformanceAnalyzerComponent", "DebugTransformComponent", "DebugVisualManager", "DebugWLComponentsFunctionsPerformanceAnalyzerComponent", "DebugWLFunctionsPerformanceAnalyzerComponent", "DeepCloneParams", "DefaultResources", "DefaultResourcesMaterials", "DefaultResourcesMeshes", "DefaultWLComponentCloneCallbacks", "Direction2DTo3DConverter", "Direction2DTo3DConverterParams", "EPSILON", "EPSILON_DEGREES", "EPSILON_SQUARED", "EasingFunction", "EasyLightAttenuation", "EasyLightAttenuationComponent", "EasyLightColor", "EasyLightColorComponent", "EasyMeshAmbientFactor", "EasyMeshAmbientFactorComponent", "EasyMeshColor", "EasyMeshColorComponent", "EasyObjectTuner", "EasyScale", "EasyScaleComponent", "EasySetTuneTargeetGrabComponent", "EasySetTuneTargetChildNumberComponent", "EasyTextColor", "EasyTextColorComponent", "EasyTransform", "EasyTransformComponent", "EasyTuneBaseArrayWidgetSelector", "EasyTuneBaseWidget", "EasyTuneBaseWidgetConfig", "EasyTuneBaseWidgetParams", "EasyTuneBaseWidgetUI", "EasyTuneBool", "EasyTuneBoolArray", "EasyTuneBoolArrayWidget", "EasyTuneBoolArrayWidgetConfig", "EasyTuneBoolArrayWidgetSelector", "EasyTuneBoolArrayWidgetUI", "EasyTuneImportVariablesComponent", "EasyTuneInt", "EasyTuneIntArray", "EasyTuneNoneWidget", "EasyTuneNoneWidgetConfig", "EasyTuneNoneWidgetUI", "EasyTuneNumber", "EasyTuneNumberArray", "EasyTuneNumberArrayWidget", "EasyTuneNumberArrayWidgetConfig", "EasyTuneNumberArrayWidgetSelector", "EasyTuneNumberArrayWidgetUI", "EasyTuneToolComponent", "EasyTuneTransform", "EasyTuneTransformWidget", "EasyTuneTransformWidgetConfig", "EasyTuneTransformWidgetUI", "EasyTuneUtils", "EasyTuneVariable", "EasyTuneVariableArray", "EasyTuneVariableType", "EasyTuneVariables", "EasyTuneWidget", "EasyTuneWidgetConfig", "EasyTuneWidgetParams", "EnableDebugComponent", "EnableToolComponent", "FSM", "FingerCursorComponent", "GamepadAxesEvent", "GamepadAxesID", "GamepadAxesInfo", "GamepadButtonEvent", "GamepadButtonID", "GamepadButtonInfo", "GamepadControlSchemeComponent", "GamepadCore", "GamepadMeshAnimatorComponent", "GamepadPulseInfo", "GamepadUtils", "GamepadsManager", "GetDefaultResourcesComponent", "GetSceneObjectsComponent", "Globals", "GrabbableComponent", "GrabberHandComponent", "HandPose", "HandPoseParams", "Handedness", "HandednessIndex", "HeadPose", "HowlerAudioPlayer", "InitConsoleVRComponent", "InitEasyTuneVariablesComponent", "InputManager", "InputManagerComponent", "InputSourceType", "InputUtils", "IntOverFactor", "IntRangeOverFactor", "JSUtils", "KeyID", "Keyboard", "KeyboardGamepadCore", "Mat3Utils", "Mat4Utils", "MaterialUtils", "MathUtils", "MeshCreationParams", "MeshCreationTriangleParams", "MeshCreationVertexParams", "MeshUtils", "Mouse", "MouseButtonID", "MuteEverythingComponent", "NumberOverFactor", "NumberRangeOverFactor", "ObjectPool", "ObjectPoolManager", "ObjectPoolManagerComponent", "ObjectPoolParams", "ObjectUtils", "PPGatewayComponent", "PerformDelayedMode", "PerformMode", "PhysicsCollisionCollector", "PhysicsLayerFlags", "PhysicsUtils", "PlayerHeadManager", "PlayerHeadManagerParams", "PlayerLocomotion", "PlayerLocomotionComponent", "PlayerLocomotionDirectionReferenceType", "PlayerLocomotionMovement", "PlayerLocomotionMovementRuntimeParams", "PlayerLocomotionParams", "PlayerLocomotionRotate", "PlayerLocomotionRotateParams", "PlayerLocomotionSmooth", "PlayerLocomotionSmoothParams", "PlayerLocomotionTeleport", "PlayerLocomotionTeleportDetectionParams", "PlayerLocomotionTeleportDetectionRuntimeParams", "PlayerLocomotionTeleportDetectionState", "PlayerLocomotionTeleportDetectionVisualizer", "PlayerLocomotionTeleportDetectionVisualizerParams", "PlayerLocomotionTeleportParable", "PlayerLocomotionTeleportParams", "PlayerLocomotionTeleportRuntimeParams", "PlayerLocomotionTeleportState", "PlayerLocomotionTeleportTeleportBlinkState", "PlayerLocomotionTeleportTeleportParams", "PlayerLocomotionTeleportTeleportShiftState", "PlayerLocomotionTeleportTeleportState", "PlayerLocomotionTeleportTeleportType", "PlayerLocomotionType", "PlayerObjects", "PlayerObscureManager", "PlayerObscureManagerParams", "PlayerTransformManager", "PlayerTransformManagerParams", "PlayerTransformManagerSyncFlag", "PluginUtils", "Quat2Utils", "QuatUtils", "RaycastHit", "RaycastParams", "RaycastResults", "SaveManager", "SaveUtils", "SceneObjects", "SceneUtils", "SetActiveComponent", "SetHandLocalTransformComponent", "SetHeadLocalTransformComponent", "SetPlayerHeightComponent", "SetTrackedHandJointLocalTransformComponent", "ShowFPSComponent", "SkipStateFunction", "SpatialAudioListenerComponent", "State", "StateData", "SwitchHandObjectComponent", "TextUtils", "Timer", "TimerState", "ToolCursorComponent", "ToolHandedness", "ToolInputSourceType", "TrackedHandDrawAllJointsComponent", "TrackedHandDrawJointComponent", "TrackedHandDrawSkinComponent", "TrackedHandJointID", "TrackedHandJointIDIndex", "TrackedHandJointPose", "TrackedHandPose", "TrackedHandPoseParams", "Transition", "TransitionData", "UniversalGamepad", "Vec2Utils", "Vec3Utils", "Vec4Utils", "VecUtils", "VirtualGamepad", "VirtualGamepadButtonParams", "VirtualGamepadComponent", "VirtualGamepadGamepadCore", "VirtualGamepadIcon", "VirtualGamepadIconParams", "VirtualGamepadIconType", "VirtualGamepadParams", "VirtualGamepadThumbstickParams", "VirtualGamepadVirtualButton", "VirtualGamepadVirtualThumbstick", "VisualArrow", "VisualArrowParams", "VisualElementType", "VisualLine", "VisualLineParams", "VisualManager", "VisualManagerComponent", "VisualMesh", "VisualMeshParams", "VisualPoint", "VisualPointParams", "VisualRaycast", "VisualRaycastParams", "VisualResources", "VisualResourcesMaterials", "VisualText", "VisualTextParams", "VisualTorus", "VisualTorusParams", "VisualTransform", "VisualTransformParams", "WidgetFrame", "WidgetFrameConfig", "WidgetFrameUI", "WidgetParams", "XRGamepadCore", "XRUtils", "add", "addComponent", "addEngine", "addRefreshWidgetCallback", "addSetWidgetCurrentVariableCallback", "angle", "angleClamp", "angleClampDegrees", "angleClampRadians", "angleDegrees", "angleDistance", "angleDistanceDegrees", "angleDistanceRadians", "angleDistanceSigned", "angleDistanceSignedDegrees", "angleDistanceSignedRadians", "anglePivoted", "anglePivotedDegrees", "anglePivotedRadians", "anglePivotedSigned", "anglePivotedSignedDegrees", "anglePivotedSignedRadians", "angleRadians", "angleSigned", "angleSignedDegrees", "angleSignedRadians", "areButtonsPressEnd", "areButtonsPressStart", "areButtonsTouchEnd", "areButtonsTouchStart", "assert", "ceil", "checkMovement", "checkTeleportToTransform", "checkTransform", "cleanObjectProperties", "cloneCollision", "cloneDefault", "cloneMesh", "clonePhysX", "clonePostProcess", "cloneText", "color1To255", "color255To1", "componentAlongAxis", "convertCharacterColliderSetupToCollisionCheckParams", "convertCharacterCollisionResultsToCollisionRuntimeParams", "convertCollisionRuntimeParamsToCharacterCollisionResults", "convertDirectionLocalToObject", "convertDirectionLocalToWorld", "convertDirectionObjectToLocal", "convertDirectionObjectToWorld", "convertDirectionToLocal", "convertDirectionToLocalMatrix", "convertDirectionToLocalQuat", "convertDirectionToWorld", "convertDirectionToWorldMatrix", "convertDirectionToWorldQuat", "convertDirectionWorldToLocal", "convertDirectionWorldToObject", "convertPositionLocalToObject", "convertPositionLocalToWorld", "convertPositionObjectToLocal", "convertPositionObjectToWorld", "convertPositionToLocal", "convertPositionToLocalMatrix", "convertPositionToLocalQuat", "convertPositionToWorld", "convertPositionToWorldMatrix", "convertPositionToWorldQuat", "convertPositionWorldToLocal", "convertPositionWorldToObject", "convertTransformLocalToObject", "convertTransformLocalToObjectMatrix", "convertTransformLocalToObjectQuat", "convertTransformLocalToWorld", "convertTransformLocalToWorldMatrix", "convertTransformLocalToWorldQuat", "convertTransformObjectToLocal", "convertTransformObjectToLocalMatrix", "convertTransformObjectToLocalQuat", "convertTransformObjectToWorld", "convertTransformObjectToWorldMatrix", "convertTransformObjectToWorldQuat", "convertTransformWorldToLocal", "convertTransformWorldToLocalMatrix", "convertTransformWorldToLocalQuat", "convertTransformWorldToObject", "convertTransformWorldToObjectMatrix", "convertTransformWorldToObjectQuat", "copyComponentAlongAxis", "copyObjectProperties", "createPlane", "createSimplified", "createTeleportColliderSetupFromMovementColliderSetup", "cross", "debug", "degreesAddRotation", "degreesAddRotationDegrees", "degreesAddRotationQuat", "degreesAddRotationRadians", "degreesToMatrix", "degreesToQuat", "destroy", "distance", "distanceSquared", "div", "doesObjectPropertyUseAccessors", "dot", "exitSession", "exportVariables", "find", "findAll", "findAllEqual", "findAllIndexes", "findAllIndexesEqual", "findEqual", "findIndex", "findIndexEqual", "first", "floor", "fromAxis", "fromAxisDegrees", "fromAxisRadians", "fromDegrees", "fromMatrix", "fromQuat", "fromRadians", "fromTwistSwing", "generate360TeleportParamsFromMovementParams", "getAngle", "getAngleDegrees", "getAngleRadians", "getAssert", "getAudioManager", "getAxesLocal", "getAxesWorld", "getAxis", "getAxisScaled", "getAxisScaledDegrees", "getAxisScaledRadians", "getBackwardLocal", "getBackwardWorld", "getBody", "getCanvas", "getCharacterCollisionSystem", "getChildren", "getClassFromType", "getClear", "getCloneCallback", "getClonePostProcessCallback", "getCollisionCheck", "getComponentBreadth", "getComponentChildren", "getComponentDepth", "getComponentDescendants", "getComponentDescendantsBreadth", "getComponentDescendantsDepth", "getComponentHierarchy", "getComponentHierarchyBreadth", "getComponentHierarchyDepth", "getComponentObjects", "getComponentSelf", "getComponentsAmountMapChildren", "getComponentsAmountMapDescendants", "getComponentsAmountMapHierarchy", "getComponentsAmountMapSelf", "getComponentsBreadth", "getComponentsChildren", "getComponentsDepth", "getComponentsDescendants", "getComponentsDescendantsBreadth", "getComponentsDescendantsDepth", "getComponentsHierarchy", "getComponentsHierarchyBreadth", "getComponentsHierarchyDepth", "getComponentsObjects", "getComponentsSelf", "getConsoleVR", "getDebug", "getDebugManager", "getDebugVisualManager", "getDefaultMaterials", "getDefaultMeshes", "getDefaultResources", "getDefaultWLComponentCloneCallback", "getDescendants", "getDescendantsBreadth", "getDescendantsDepth", "getDocument", "getDownLocal", "getDownWorld", "getDummyServer", "getEasyTuneTarget", "getEasyTuneVariables", "getEngine", "getEngines", "getError", "getForwardLocal", "getForwardWorld", "getFrame", "getGamepad", "getGamepads", "getGamepadsManager", "getHandPose", "getHandPoses", "getHandednessByIndex", "getHeadPose", "getHierarchy", "getHierarchyBreadth", "getHierarchyDepth", "getID", "getInfo", "getInputManager", "getInputSource", "getInputSourceType", "getInputSourceTypeByHandedness", "getJavascriptComponentClass", "getJavascriptComponentClassesByIndex", "getJavascriptComponentInstances", "getJavascriptComponentTypeFromIndex", "getJavascriptComponentTypeIndex", "getJavascriptComponentTypeIndexes", "getJointIDByIndex", "getKeyboard", "getLayerFlagsNames", "getLeaderboard", "getLeaderboardDummy", "getLeftGamepad", "getLeftHandPose", "getLeftLocal", "getLeftTrackedHandPose", "getLeftWorld", "getLog", "getMainEngine", "getMouse", "getName", "getNavigator", "getObjectByIDBreadth", "getObjectByIDChildren", "getObjectByIDDepth", "getObjectByIDDescendants", "getObjectByIDDescendantsBreadth", "getObjectByIDDescendantsDepth", "getObjectByIDHierarchy", "getObjectByIDHierarchyBreadth", "getObjectByIDHierarchyDepth", "getObjectByIDObjects", "getObjectByNameBreadth", "getObjectByNameChildren", "getObjectByNameDepth", "getObjectByNameDescendants", "getObjectByNameDescendantsBreadth", "getObjectByNameDescendantsDepth", "getObjectByNameHierarchy", "getObjectByNameHierarchyBreadth", "getObjectByNameHierarchyDepth", "getObjectByNameObjects", "getObjectFromPath", "getObjectNameFromPath", "getObjectParentFromPath", "getObjectPoolManager", "getObjectProperty", "getObjectPropertyDescriptor", "getObjectPropertyNames", "getObjectPropertyOwnParent", "getObjectPropertyOwnParents", "getObjectPrototypes", "getObjects", "getObjectsBreadth", "getObjectsByIDObjects", "getObjectsByNameBreadth", "getObjectsByNameChildren", "getObjectsByNameDepth", "getObjectsByNameDescendants", "getObjectsByNameDescendantsBreadth", "getObjectsByNameDescendantsDepth", "getObjectsByNameHierarchy", "getObjectsByNameHierarchyBreadth", "getObjectsByNameHierarchyDepth", "getObjectsByNameObjects", "getObjectsDepth", "getOppositeHandedness", "getParent", "getPhysics", "getPlayerObjects", "getPositionLocal", "getPositionWorld", "getReferenceSpace", "getReferenceSpaceType", "getRightGamepad", "getRightHandPose", "getRightLocal", "getRightTrackedHandPose", "getRightWorld", "getRotationLocal", "getRotationLocalDegrees", "getRotationLocalMatrix", "getRotationLocalQuat", "getRotationLocalRadians", "getRotationMatrix", "getRotationWorld", "getRotationWorldDegrees", "getRotationWorldMatrix", "getRotationWorldQuat", "getRotationWorldRadians", "getSDK", "getScaleLocal", "getScaleWorld", "getScene", "getSceneObjects", "getSelf", "getSession", "getSessionMode", "getSimultaneousPressMaxDelay", "getSimultaneousTouchMaxDelay", "getSwing", "getSwingFromTwist", "getTrackedHandPose", "getTrackedHandPoses", "getTransform", "getTransformLocal", "getTransformLocalMatrix", "getTransformLocalQuat", "getTransformMatrix", "getTransformQuat", "getTransformWorld", "getTransformWorldMatrix", "getTransformWorldQuat", "getTwist", "getTwistFromSwing", "getTypeFromTypeOrClass", "getUpLocal", "getUpWorld", "getUser", "getUserDummy", "getVisualManager", "getVisualResources", "getWASM", "getWLJavascriptComponentTypes", "getWLNativeComponentTypes", "getWarn", "getWindow", "getXR", "hasAudioManager", "hasCharacterCollisionSystem", "hasCloneCallback", "hasClonePostProcess", "hasClonePostProcessCallback", "hasConsoleVR", "hasDebugEnabled", "hasDebugManager", "hasDefaultResources", "hasDefaultWLComponentCloneCallback", "hasEasyTuneTarget", "hasEasyTuneVariables", "hasEngine", "hasEqual", "hasInputManager", "hasObjectPoolManager", "hasPoseForwardFixed", "hasSceneObjects", "hasToolEnabled", "hasUniformScaleLocal", "hasUniformScaleWorld", "hasVisualManager", "hasVisualResources", "hsvCodeToHuman", "hsvHumanToCode", "hsvToRGB", "importVariables", "info", "initArrayExtension", "initArrayExtensionProtoype", "initBridge", "initComponentMods", "initCursorComponentMod", "initCursorComponentModPrototype", "initCursorTargetComponentMod", "initCursorTargetComponentModPrototype", "initEngine", "initJSExtensions", "initJSPlugins", "initMathExtension", "initMathExtensionStatic", "initMouseLookComponentMod", "initMouseLookComponentModPrototype", "initNumberExtension", "initNumberExtensionPrototype", "initObjectExtension", "initObjectExtensionProtoype", "initPP", "initPlugins", "initSceneExtension", "initSceneExtensionPrototype", "initWLExtensions", "initWLMods", "initWLPlugins", "injectProperties", "isARSupported", "isAnyButtonPressEnd", "isAnyButtonPressStart", "isAnyButtonTouchEnd", "isAnyButtonTouchStart", "isClass", "isClassByName", "isConcordant", "isDebugEnabled", "isDesktop", "isDeviceEmulated", "isFartherAlongAxis", "isFunction", "isFunctionByName", "isInsideAngleRange", "isInsideAngleRangeDegrees", "isInsideAngleRangeRadians", "isMobile", "isObject", "isObjectByName", "isOnAxis", "isOnPlane", "isPlaybackBlocked", "isPoseForwardFixed", "isReferenceSpaceFloorBased", "isRegistered", "isSDKAvailable", "isSessionActive", "isToTheRight", "isToolEnabled", "isTransformChanged", "isUseDummyServerOnError", "isUseDummyServerOnSDKMissing", "isVRSupported", "isWLComponent", "isWLJavascriptComponent", "isWLNativeComponent", "isWLNativeComponentRegistered", "isXRSupported", "last", "lengthSigned", "load", "loadBool", "loadNumber", "loadString", "lookAt", "lookAtLocal", "lookAtWorld", "lookTo", "lookToLocal", "lookToWorld", "makeDoubleSided", "mapToRange", "markDirty", "mat3_create", "mat4_create", "negate", "openLink", "openLinkPersistent", "overwriteObjectProperty", "perpendicularRandom", "projectOnAxis", "projectOnAxisAlongAxis", "projectOnPlane", "projectOnPlaneAlongAxis", "pushUnique", "quat2_create", "quat_create", "radiansAddRotation", "radiansAddRotationDegrees", "radiansAddRotationQuat", "radiansAddRotationRadians", "radiansToMatrix", "radiansToQuat", "random", "randomBool", "randomInt", "randomPick", "randomSign", "randomUUID", "raycast", "refreshWidget", "registerPPComponents", "registerSessionEndEventListener", "registerSessionStartEndEventListeners", "registerSessionStartEventListener", "registerWLComponents", "removeAll", "removeAllEqual", "removeAllIndexes", "removeAudioManager", "removeCharacterCollisionSystem", "removeCloneCallback", "removeClonePostProcessCallback", "removeComponentAlongAxis", "removeConsoleVR", "removeDebugEnabled", "removeDebugManager", "removeDefaultResources", "removeDefaultWLComponentCloneCallbacks", "removeEasyTuneTarget", "removeEasyTuneVariables", "removeEngine", "removeEqual", "removeIndex", "removeInputManager", "removeMainEngine", "removeObjectPoolManager", "removePoseForwardFixed", "removeRefreshWidgetCallback", "removeSceneObjects", "removeSetWidgetCurrentVariableCallback", "removeToolEnabled", "removeVisualManager", "removeVisualResources", "reserveObjects", "reserveObjectsChildren", "reserveObjectsDescendants", "reserveObjectsHierarchy", "reserveObjectsSelf", "resetPosition", "resetPositionLocal", "resetPositionWorld", "resetRotation", "resetRotationLocal", "resetRotationWorld", "resetScale", "resetScaleLocal", "resetScaleWorld", "resetTransform", "resetTransformLocal", "resetTransformWorld", "rgbCodeToHuman", "rgbHumanToCode", "rgbToHSV", "rotateAroundAxisLocal", "rotateAroundAxisLocalDegrees", "rotateAroundAxisLocalRadians", "rotateAroundAxisObject", "rotateAroundAxisObjectDegrees", "rotateAroundAxisObjectRadians", "rotateAroundAxisWorld", "rotateAroundAxisWorldDegrees", "rotateAroundAxisWorldRadians", "rotateAroundLocal", "rotateAroundLocalDegrees", "rotateAroundLocalMatrix", "rotateAroundLocalQuat", "rotateAroundLocalRadians", "rotateAroundMatrix", "rotateAroundObject", "rotateAroundObjectDegrees", "rotateAroundObjectMatrix", "rotateAroundObjectQuat", "rotateAroundObjectRadians", "rotateAroundWorld", "rotateAroundWorldDegrees", "rotateAroundWorldMatrix", "rotateAroundWorldQuat", "rotateAroundWorldRadians", "rotateAxisLocal", "rotateAxisLocalDegrees", "rotateAxisLocalRadians", "rotateAxisObject", "rotateAxisObjectDegrees", "rotateAxisObjectRadians", "rotateAxisWorld", "rotateAxisWorldDegrees", "rotateAxisWorldRadians", "rotateLocal", "rotateLocalDegrees", "rotateLocalMatrix", "rotateLocalQuat", "rotateLocalRadians", "rotateMatrix", "rotateObject", "rotateObjectDegrees", "rotateObjectMatrix", "rotateObjectQuat", "rotateObjectRadians", "rotateWorld", "rotateWorldDegrees", "rotateWorldMatrix", "rotateWorldQuat", "rotateWorldRadians", "rotationAroundAxis", "rotationAroundAxisDegrees", "rotationAroundAxisQuat", "rotationAroundAxisRadians", "rotationToPivoted", "rotationToPivotedDegrees", "rotationToPivotedQuat", "rotationToPivotedRadians", "round", "roundDecimal", "save", "scaleObject", "setActive", "setActiveChildren", "setActiveDescendants", "setActiveDescendantsBreadth", "setActiveDescendantsDepth", "setActiveHierarchy", "setActiveHierarchyBreadth", "setActiveHierarchyDepth", "setActiveObjects", "setActiveSelf", "setAlpha", "setAudioManager", "setAxesLocal", "setAxesWorld", "setBackwardLocal", "setBackwardWorld", "setCharacterCollisionSystem", "setCloneCallback", "setClonePostProcessCallback", "setClonedMaterials", "setCollisionCheck", "setConsoleVR", "setDebugEnabled", "setDebugManager", "setDefaultResources", "setDefaultWLComponentCloneCallbacks", "setDownLocal", "setDownWorld", "setDummyServer", "setEasyTuneTarget", "setEasyTuneVariables", "setForwardLocal", "setForwardWorld", "setInputManager", "setLayerFlagsNames", "setLeftLocal", "setLeftWorld", "setMainEngine", "setName", "setObjectAlpha", "setObjectClonedMaterials", "setObjectFogColor", "setObjectMaterial", "setObjectPoolManager", "setObjectProperty", "setObjectSpecularColor", "setParent", "setPoseForwardFixed", "setPositionLocal", "setPositionRotationDegreesScale", "setPositionRotationQuatScale", "setPositionRotationRadiansScale", "setPositionRotationScale", "setPositionWorld", "setRightLocal", "setRightWorld", "setRotationLocal", "setRotationLocalDegrees", "setRotationLocalMatrix", "setRotationLocalQuat", "setRotationLocalRadians", "setRotationMatrix", "setRotationWorld", "setRotationWorldDegrees", "setRotationWorldMatrix", "setRotationWorldQuat", "setRotationWorldRadians", "setScaleLocal", "setScaleWorld", "setSceneObjects", "setSimultaneousPressMaxDelay", "setSimultaneousTouchMaxDelay", "setToolEnabled", "setTransform", "setTransformLocal", "setTransformLocalMatrix", "setTransformLocalQuat", "setTransformMatrix", "setTransformQuat", "setTransformWorld", "setTransformWorldMatrix", "setTransformWorldQuat", "setUpLocal", "setUpWorld", "setUseDummyServerOnError", "setUseDummyServerOnSDKMissing", "setVisualManager", "setVisualResources", "setWidgetCurrentVariable", "sign", "signTo", "sub", "subRotation", "subRotationDegrees", "subRotationQuat", "subRotationRadians", "submitScore", "submitScoreDummy", "transformMat3", "transformMat4", "transformQuat", "translate", "translateAxis", "translateAxisLocal", "translateAxisObject", "translateAxisWorld", "translateLocal", "translateObject", "translateWorld", "unregisterSessionEndEventListener", "unregisterSessionStartEndEventListeners", "unregisterSessionStartEventListener", "unshiftUnique", "updateCeilingInfo", "updateGroundInfo", "valueAlongAxis", "vec2_create", "vec3_create", "vec4_create", "wrapObject", "ARCamera8thwall", "Cursor", "CursorTarget", "DebugObject", "DeviceOrientationLook", "FingerCursor", "FixedFoveation", "HandTracking", "HitTestLocation", "HowlerAudioListener", "HowlerAudioSource", "ImageTexture", "MouseLookComponent", "PlayerHeight", "TargetFramerate", "TeleportComponent", "Trail", "TwoJointIkSolver", "VideoTexture", "VrModeActiveSwitch", "Vrm", "WasdControlsComponent", "registerWLComponents", "engine", "AnimationComponent", "CollisionComponent", "InputComponent", "LightComponent", "MeshComponent", "PhysXComponent", "TextComponent", "ViewComponent", "ARCamera8thwall", "Anchor", "Cursor", "CursorTarget", "DebugObject", "DeviceOrientationLook", "FingerCursor", "FixedFoveation", "HandTracking", "HitTestLocation", "HowlerAudioListener", "HowlerAudioSource", "ImageTexture", "MouseLookComponent", "PlaneDetection", "PlayerHeight", "TargetFramerate", "TeleportComponent", "Trail", "TwoJointIkSolver", "VideoTexture", "VrModeActiveSwitch", "Vrm", "WasdControlsComponent", "audio_globals_exports", "__export", "getAudioManager", "hasAudioManager", "removeAudioManager", "setAudioManager", "_myAudioManagers", "getAudioManager", "engine", "Globals", "setAudioManager", "audioManager", "removeAudioManager", "hasAudioManager", "window_globals_exports", "__export", "getBody", "getDocument", "getNavigator", "getWindow", "getWindow", "engine", "Globals", "getNavigator", "getDocument", "getBody", "object_pool_globals_exports", "__export", "getObjectPoolManager", "hasObjectPoolManager", "removeObjectPoolManager", "setObjectPoolManager", "_myObjectPoolManagers", "getObjectPoolManager", "engine", "Globals", "setObjectPoolManager", "audioManager", "removeObjectPoolManager", "hasObjectPoolManager", "visual_globals_exports", "__export", "getVisualManager", "getVisualResources", "hasVisualManager", "hasVisualResources", "removeVisualManager", "removeVisualResources", "setVisualManager", "setVisualResources", "_myVisualResourcesContainer", "_myVisualManagers", "getVisualResources", "engine", "Globals", "setVisualResources", "visualResources", "removeVisualResources", "hasVisualResources", "getVisualManager", "setVisualManager", "visualManager", "removeVisualManager", "hasVisualManager", "engine_globals_exports", "__export", "addEngine", "getCanvas", "getEngines", "getMainEngine", "getPhysics", "getRoot", "getScene", "getWASM", "getXR", "hasEngine", "initEngine", "removeEngine", "removeMainEngine", "setMainEngine", "EasingFunction", "t", "EPSILON", "EPSILON_SQUARED", "EPSILON_DEGREES", "clamp", "value", "start", "end", "fixedStart", "fixedEnd", "min", "max", "sign", "zeroSign", "toDegrees", "angle", "toRadians", "roundDecimal", "number", "decimalPlaces", "factor", "mapToRange", "originRangeStart", "originRangeEnd", "newRangeStart", "newRangeEnd", "clampedValue", "MathUtils", "newValue", "random", "randomInt", "randomBool", "randomSign", "randomPick", "args", "randomIndex", "randomUUID", "lerp", "from", "to", "interpolationFactor", "interpolate", "easingFunction", "lerpFactor", "angleDistance", "angleDistanceDegrees", "angleDistanceRadians", "angleDistanceSigned", "angleDistanceSignedDegrees", "clampedFrom", "clampedTo", "distance", "angleDistanceSignedRadians", "angleClamp", "usePositiveRange", "angleClampDegrees", "clampedAngle", "angleClampRadians", "isInsideAngleRange", "useShortestAngle", "isInsideAngleRangeDegrees", "insideAngleRange", "anglePositive", "startPositive", "endPositive", "temp", "isInsideAngleRangeRadians", "gl_mat3", "gl_quat", "gl_mat3", "gl_quat", "first", "array", "last", "has", "callback", "ArrayUtils", "hasEqual", "elementToFind", "elementsEqualCallback", "find", "elementFound", "index", "findIndex", "findAll", "findAllIndexes", "indexes", "i", "element", "findEqual", "currentElement", "findAllEqual", "_findAllEqualOptimized", "elementsFound", "findIndexEqual", "indexFound", "findAllIndexesEqual", "indexesFound", "removeIndex", "elementRemoved", "arrayRemoved", "removeAllIndexes", "elementsRemoved", "remove", "removeAll", "removeEqual", "elementToRemove", "removeAllEqual", "pushUnique", "length", "unshiftUnique", "copy", "from", "to", "copyCallback", "clone", "cloneCallback", "equals", "other", "clear", "getIndexes", "gl_vec3", "gl_mat4", "gl_mat4", "gl_quat2", "create", "x1", "y1", "z1", "w1", "x2", "y2", "z2", "w2", "out", "gl_quat2", "set", "quat", "normalize", "Quat2Utils", "invert", "conjugate", "copy", "from", "to", "identity", "getPosition", "Vec3Utils", "getRotation", "getRotationDegrees", "rotationQuat", "QuatUtils", "getRotationRadians", "getRotationQuat", "setPosition", "position", "setRotation", "rotation", "setRotationDegrees", "setRotationRadians", "setRotationQuat", "setPositionRotation", "setPositionRotationDegrees", "setPositionRotationRadians", "setPositionRotationQuat", "isNormalized", "epsilon", "MathUtils", "length", "lengthSquared", "mul", "first", "second", "getAxes", "getForward", "rotationMatrix", "getBackward", "getLeft", "getRight", "getUp", "getDown", "toWorld", "parentTransformQuat", "toLocal", "invertQuat", "rotateAxis", "angle", "axis", "rotateAxisDegrees", "rotateAxisRadians", "toMatrix", "Mat4Utils", "gl_mat4", "fromMatrix", "matrix", "lerp", "interpolationFactor", "interpolate", "easingFunction", "EasingFunction", "lerpFactor", "slerp", "fromPosition", "toPosition", "interpolatedPosition", "fromRotationQuat", "toRotationQuat", "interpolatedRotationQuat", "sinterpolate", "create", "m00", "m01", "m02", "m03", "m10", "m11", "m12", "m13", "m20", "m21", "m22", "m23", "m30", "m31", "m32", "m33", "out", "gl_mat4", "set", "matrix", "copy", "from", "to", "identity", "invert", "Mat4Utils", "mul", "first", "second", "scale", "vector", "clone", "getPosition", "Vec3Utils", "getRotation", "getRotationDegrees", "quat", "QuatUtils", "getRotationRadians", "getRotationQuat", "tempScale", "transformMatrixNoScale", "inverseScale", "one", "getScale", "setPosition", "position", "setRotation", "rotation", "setRotationDegrees", "setRotationRadians", "setRotationQuat", "setScale", "scaleToSet", "setPositionRotationScale", "setPositionRotationDegreesScale", "setPositionRotationRadiansScale", "setPositionRotationQuatScale", "setPositionRotation", "setPositionRotationDegrees", "setPositionRotationRadians", "setPositionRotationQuat", "getAxes", "getForward", "getBackward", "getLeft", "getRight", "getUp", "getDown", "toWorld", "convertTransform", "parentTransformMatrix", "toLocal", "hasUniformScale", "MathUtils", "toQuat", "Quat2Utils", "fromQuat", "create", "x", "y", "z", "out", "gl_vec3", "set", "vector", "normalize", "Vec3Utils", "copy", "from", "to", "clone", "zero", "angle", "first", "second", "angleDegrees", "MathUtils", "angleRadians", "firstX", "firstY", "firstZ", "secondX", "secondY", "secondZ", "firstLengthSquared", "secondLengthSquared", "lengthSquared", "length", "cos", "equals", "epsilon", "distance", "distanceSquared", "add", "sub", "mul", "div", "scale", "value", "dot", "negate", "cross", "transformQuat", "quat", "transformMat3", "matrix", "transformMat4", "mat4", "lengthSigned", "positiveDirection", "signedLength", "angleSigned", "referenceAxis", "angleSignedDegrees", "angleSignedRadians", "crossAxis", "anglePivoted", "anglePivotedDegrees", "anglePivotedRadians", "flatFirst", "flatSecond", "anglePivotedSigned", "anglePivotedSignedDegrees", "anglePivotedSignedRadians", "toRadians", "toDegrees", "toQuat", "radiansToQuat", "QuatUtils", "degreesToQuat", "isNormalized", "isZero", "componentAlongAxis", "axis", "componentAlongAxisLength", "valueAlongAxis", "removeComponentAlongAxis", "componentAlong", "copyComponentAlongAxis", "isConcordant", "isFartherAlongAxis", "isToTheRight", "signTo", "componentAlongThis", "componentAlongVector", "zeroSign", "angleSignedResult", "projectOnAxis", "projectOnAxisAlongAxis", "up", "thisToAxis", "fixedProjectAlongAxis", "projectAlongAxis", "angleWithAlongAxis", "lengthToRemove", "projectOnPlane", "planeNormal", "projectOnPlaneAlongAxis", "thisToPlane", "isOnAxis", "angleResult", "isOnPlane", "rotate", "rotation", "rotateDegrees", "rotateRadians", "rotateQuat", "rotateAxis", "rotateAxisDegrees", "rotateAxisRadians", "rotateAround", "origin", "rotateAroundDegrees", "rotateAroundRadians", "rotateAroundQuat", "rotateAroundAxis", "rotateAroundAxisDegrees", "rotateAroundAxisRadians", "convertPositionToWorld", "parentTransform", "convertPositionToLocal", "convertPositionToWorldMatrix", "convertPositionToLocalMatrix", "inverse", "Mat4Utils", "convertPositionToWorldQuat", "parentTransformMatrix", "position", "one", "Quat2Utils", "convertPositionToLocalQuat", "convertDirectionToWorld", "convertDirectionToLocal", "convertDirectionToWorldMatrix", "convertDirectionToLocalMatrix", "convertDirectionToWorldQuat", "convertDirectionToLocalQuat", "addRotation", "addRotationDegrees", "addRotationRadians", "addRotationQuat", "degreesAddRotation", "degreesAddRotationDegrees", "degreesAddRotationRadians", "degreesAddRotationQuat", "radiansAddRotation", "radiansAddRotationDegrees", "radiansAddRotationRadians", "radiansAddRotationQuat", "toMatrix", "Mat3Utils", "degreesToMatrix", "radiansToMatrix", "rotationTo", "rotationToDegrees", "rotationQuat", "rotationToRadians", "rotationToQuat", "rotationAxis", "signedAngle", "rotationToPivoted", "pivotAxis", "rotationToPivotedDegrees", "rotationToPivotedRadians", "rotationToPivotedQuat", "fromFlat", "toFlat", "lerp", "interpolationFactor", "interpolate", "easingFunction", "EasingFunction", "lerpFactor", "perpendicularRandom", "notVector", "zeroAmount", "i", "create", "x", "y", "z", "w", "out", "gl_quat", "QuatUtils", "set", "quat", "normalize", "copy", "from", "to", "clone", "identity", "length", "lengthSquared", "invert", "conjugate", "mul", "first", "second", "getAxis", "zero", "Vec3Utils", "MathUtils", "getAngle", "getAngleDegrees", "angle", "getAngleRadians", "vector", "getAxisScaled", "getAxisScaledDegrees", "getAxisScaledRadians", "getAxes", "getForward", "rotationMatrix", "getBackward", "getLeft", "getRight", "getUp", "getDown", "setAxes", "left", "up", "forward", "setForward", "_setAxes", "setBackward", "backward", "setUp", "setDown", "down", "setLeft", "setRight", "right", "toWorld", "parentQuat", "toLocal", "invertQuat", "fromAxis", "axis", "fromAxisDegrees", "fromAxisRadians", "fromAxes", "matrix", "leftAxis", "upAxis", "forwardAxis", "Mat3Utils", "fromRadians", "radiansRotation", "fromDegrees", "degreesRotation", "toRadians", "toDegrees", "isNormalized", "epsilon", "addRotation", "addRotationDegrees", "secondQuat", "addRotationRadians", "addRotationQuat", "subRotation", "subRotationDegrees", "subRotationRadians", "subRotationQuat", "inverse", "rotationTo", "rotationToDegrees", "toQuat", "rotationToRadians", "rotationToQuat", "rotationAroundAxis", "rotationAroundAxisDegrees", "rotationAroundQuat", "rotationAroundAxisRadians", "rotationAroundAxisQuat", "getTwist", "rotationAxis", "projection", "rotationAlongAxis", "dotProd", "getSwing", "twist", "getSwingFromTwist", "getTwistFromSwing", "swing", "fromTwistSwing", "toMatrix", "gl_mat3", "rotate", "rotateDegrees", "rotateRadians", "rotateQuat", "rotateAxis", "rotateAxisDegrees", "rotateAxisRadians", "lerp", "interpolationFactor", "interpolate", "easingFunction", "EasingFunction", "lerpFactor", "slerp", "sinterpolate", "fixedAxes", "fixedAxesFixSignMap", "fixedLeft", "fixedUp", "fixedForward", "currentAxis", "rotationMat", "rotationQuat", "axes", "priority", "firstAxis", "secondAxis", "thirdAxis", "secondAxisValid", "thirdAxisValid", "crossAxis", "secondAxisIndex", "thirdAxisIndex", "fixSignMap", "ArrayUtils", "angleBetween", "create", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "out", "gl_mat3", "set", "matrix", "toDegrees", "quat", "Vec3Utils", "Mat3Utils", "QuatUtils", "toRadians", "toQuat", "gl_quat", "fromAxes", "leftAxis", "upAxis", "forwardAxis", "CloneParams", "DeepCloneParams", "CustomCloneParams", "getPosition", "object", "position", "ObjectUtils", "getPositionWorld", "Vec3Utils", "getPositionLocal", "getRotation", "rotation", "getRotationDegrees", "getRotationRadians", "getRotationMatrix", "getRotationQuat", "getRotationWorld", "getRotationWorldDegrees", "getRotationWorldRadians", "quat", "QuatUtils", "getRotationWorldMatrix", "Mat3Utils", "getRotationWorldQuat", "getRotationLocal", "getRotationLocalDegrees", "getRotationLocalRadians", "getRotationLocalMatrix", "getRotationLocalQuat", "getScale", "scale", "getScaleWorld", "getScaleLocal", "getTransform", "transform", "getTransformMatrix", "getTransformQuat", "getTransformWorld", "getTransformWorldMatrix", "transformQuat", "Quat2Utils", "Mat4Utils", "getTransformWorldQuat", "getTransformLocal", "getTransformLocalMatrix", "getTransformLocalQuat", "getAxes", "axes", "getAxesWorld", "getAxesLocal", "getForward", "forward", "getForwardWorld", "getForwardLocal", "getBackward", "backward", "getBackwardWorld", "getBackwardLocal", "getUp", "up", "getUpWorld", "getUpLocal", "getDown", "down", "getDownWorld", "getDownLocal", "getLeft", "left", "getLeftWorld", "getLeftLocal", "getRight", "right", "getRightWorld", "getRightLocal", "setPosition", "setPositionWorld", "setPositionLocal", "setRotation", "setRotationDegrees", "setRotationRadians", "setRotationMatrix", "setRotationQuat", "setRotationWorld", "setRotationWorldDegrees", "setRotationWorldRadians", "degreesRotation", "setRotationWorldMatrix", "setRotationWorldQuat", "setRotationLocal", "setRotationLocalDegrees", "setRotationLocalRadians", "setRotationLocalMatrix", "setRotationLocalQuat", "setScale", "setScaleWorld", "vector", "setScaleLocal", "setAxes", "setAxesWorld", "setAxesLocal", "setForward", "setForwardWorld", "setForwardLocal", "setBackward", "setBackwardWorld", "setBackwardLocal", "setUp", "setUpWorld", "setUpLocal", "setDown", "setDownWorld", "setDownLocal", "setLeft", "setLeftWorld", "setLeftLocal", "setRight", "setRightWorld", "setRightLocal", "setTransform", "setTransformMatrix", "setTransformQuat", "setTransformWorld", "setTransformWorldMatrix", "transformMatrixNoScale", "inverseScale", "one", "setTransformWorldQuat", "setTransformLocal", "setTransformLocalMatrix", "setTransformLocalQuat", "resetPosition", "resetPositionWorld", "zero", "resetPositionLocal", "resetRotation", "resetRotationWorld", "identity", "resetRotationLocal", "resetScale", "resetScaleWorld", "resetScaleLocal", "resetTransform", "resetTransformWorld", "resetTransformLocal", "translate", "translation", "translateWorld", "translateLocal", "translateObject", "translateAxis", "amount", "direction", "translateAxisWorld", "translateAxisLocal", "translateAxisObject", "rotate", "rotateDegrees", "rotateRadians", "rotateMatrix", "rotateQuat", "rotateWorld", "rotateWorldDegrees", "rotationQuat", "rotateWorldRadians", "rotateWorldMatrix", "rotateWorldQuat", "currentRotationQuat", "rotateLocal", "rotateLocalDegrees", "rotateLocalRadians", "rotateLocalMatrix", "rotateLocalQuat", "rotateObject", "rotateObjectDegrees", "rotateObjectRadians", "rotateObjectMatrix", "rotateObjectQuat", "rotateAxis", "angle", "axis", "rotateAxisDegrees", "rotateAxisRadians", "rotateAxisWorld", "rotateAxisWorldDegrees", "MathUtils", "rotateAxisWorldRadians", "rotateAxisLocal", "rotateAxisLocalDegrees", "rotateAxisLocalRadians", "rotateAxisObject", "rotateAxisObjectDegrees", "rotateAxisObjectRadians", "rotateAround", "origin", "rotateAroundDegrees", "rotateAroundRadians", "rotateAroundMatrix", "rotateAroundQuat", "rotateAroundWorld", "rotateAroundWorldDegrees", "rotateAroundWorldRadians", "rotateAroundWorldMatrix", "rotateAroundWorldQuat", "rotateAroundLocal", "rotateAroundLocalDegrees", "rotateAroundLocalRadians", "rotateAroundLocalMatrix", "rotateAroundLocalQuat", "rotateAroundObject", "rotateAroundObjectDegrees", "rotateAroundObjectRadians", "rotateAroundObjectMatrix", "rotateAroundObjectQuat", "rotateAroundAxis", "rotateAroundAxisDegrees", "rotateAroundAxisRadians", "rotateAroundAxisWorld", "rotateAroundAxisWorldDegrees", "rotateAroundAxisWorldRadians", "transformToRotate", "transformToRotateConjugate", "defaultQuat", "rotateAroundAxisLocal", "rotateAroundAxisLocalDegrees", "rotateAroundAxisLocalRadians", "convertedPosition", "convertedAxis", "rotateAroundAxisObject", "rotateAroundAxisObjectDegrees", "rotateAroundAxisObjectRadians", "scaleObject", "lookAt", "lookAtWorld", "lookAtLocal", "lookTo", "lookToWorld", "internalUp", "lookToLocal", "setParent", "newParent", "keepTransformWorld", "getParent", "convertPositionObjectToWorld", "matrix", "resultPosition", "convertDirectionObjectToWorld", "resultDirection", "convertPositionWorldToObject", "convertDirectionWorldToObject", "convertPositionLocalToWorld", "convertDirectionLocalToWorld", "convertPositionWorldToLocal", "convertDirectionWorldToLocal", "convertPositionObjectToLocal", "convertDirectionObjectToLocal", "convertPositionLocalToObject", "convertDirectionLocalToObject", "convertTransformObjectToWorld", "resultTransform", "convertTransformObjectToWorldMatrix", "convertTransform", "convertTransformObjectToWorldQuat", "convertTransformWorldToObject", "convertTransformWorldToObjectMatrix", "convertTransformWorldToObjectQuat", "convertTransformLocalToWorld", "convertTransformLocalToWorldMatrix", "convertTransformLocalToWorldQuat", "convertTransformWorldToLocal", "convertTransformWorldToLocalMatrix", "convertTransformWorldToLocalQuat", "convertTransformObjectToLocal", "convertTransformObjectToLocalMatrix", "convertTransformObjectToLocalQuat", "convertTransformLocalToObject", "convertTransformLocalToObjectMatrix", "convertTransformLocalToObjectQuat", "addComponent", "typeOrClass", "paramsOrActive", "active", "params", "getComponent", "index", "getComponentSelf", "getComponentHierarchy", "getComponentHierarchyBreadth", "objects", "getComponentHierarchyDepth", "getComponentDescendants", "getComponentDescendantsBreadth", "getComponentDescendantsDepth", "getComponentChildren", "getComponents", "getComponentsSelf", "getComponentsHierarchy", "getComponentsHierarchyBreadth", "getComponentsHierarchyDepth", "getComponentsDescendants", "getComponentsDescendantsBreadth", "getComponentsDescendantsDepth", "getComponentsChildren", "setActive", "setActiveSelf", "setActiveHierarchy", "setActiveHierarchyBreadth", "setActiveHierarchyDepth", "setActiveDescendants", "setActiveDescendantsBreadth", "setActiveDescendantsDepth", "setActiveChildren", "hasUniformScale", "hasUniformScaleWorld", "hasUniformScaleLocal", "clone", "cloneParams", "clonedObject", "objectsToCloneData", "objectsToCloneComponentsData", "cloneData", "parent", "objectToClone", "currentClonedObject", "SceneUtils", "Globals", "child", "cloneChild", "childToInclude", "childToIgnore", "componentsToCloneData", "components", "component", "ComponentUtils", "cloneComponent", "componentsToPostProcessData", "componentToClone", "clonedComponent", "currentClonedComponent", "isCloneable", "cloneable", "objectsToClone", "toString", "toStringExtended", "tab", "newLine", "startObject", "endObject", "nameLabel", "idLabel", "componentsLabel", "typeLabel", "childrenLabel", "startComponents", "endComponents", "startChildren", "endChildren", "separator", "newLineTab", "objectString", "children", "name", "i", "childString", "toStringCompact", "emptyName", "getObjectByName", "regex", "getObjectByNameHierarchy", "getObjectByNameHierarchyBreadth", "getObjectByNameHierarchyDepth", "getObjectByNameDescendants", "getObjectByNameDescendantsBreadth", "getObjectByNameDescendantsDepth", "getObjectByNameChildren", "getObjectsByName", "getObjectsByNameHierarchy", "getObjectsByNameHierarchyBreadth", "getObjectsByNameHierarchyDepth", "getObjectsByNameDescendants", "getObjectsByNameDescendantsBreadth", "getObjectsByNameDescendantsDepth", "getObjectsByNameChildren", "getObjectByID", "id", "getObjectByIDHierarchy", "getObjectByIDHierarchyBreadth", "getObjectByIDHierarchyDepth", "getObjectByIDDescendants", "getObjectByIDDescendantsBreadth", "getObjectByIDDescendantsDepth", "getObjectByIDChildren", "getHierarchy", "getHierarchyBreadth", "hierarchy", "getHierarchyDepth", "getDescendants", "getDescendantsBreadth", "descendants", "descendantsQueue", "descendant", "getDescendantsDepth", "childDescendants", "getChildren", "getSelf", "addObject", "getName", "setName", "getEngine", "getID", "markDirty", "isTransformChanged", "equals", "otherObject", "destroy", "reserveObjects", "count", "reserveObjectsSelf", "componentsAmountMap", "_reserveObjects", "reserveObjectsHierarchy", "reserveObjectsDescendants", "reserveObjectsChildren", "getComponentsAmountMap", "amountMap", "getComponentsAmountMapSelf", "objectsAmount", "type", "typeAmount", "getComponentsAmountMapHierarchy", "hierarchyObject", "getComponentsAmountMapDescendants", "getComponentsAmountMapChildren", "getComponentObjects", "getComponentsObjects", "currentObject", "setActiveObjects", "getObjectByNameObjects", "objectFound", "currentIndex", "objectName", "getObjectsByNameObjects", "objectsFound", "getObjectByIDObjects", "getObjectsByIDObjects", "wrapObject", "engine", "scene", "objectsToReserve", "componentsToReserve", "componentName", "componentCount", "getRoot", "scene", "ObjectUtils", "addObject", "SceneUtils", "getObjects", "getObjectsBreadth", "getObjectsDepth", "getComponent", "typeOrClass", "index", "getComponentBreadth", "getComponentDepth", "getComponents", "getComponentsBreadth", "getComponentsDepth", "getObjectByName", "name", "getObjectByNameBreadth", "getObjectByNameDepth", "getObjectsByName", "getObjectsByNameBreadth", "getObjectsByNameDepth", "getObjectByID", "id", "getObjectByIDBreadth", "getObjectByIDDepth", "toString", "toStringCompact", "toStringExtended", "getComponentsAmountMap", "amountMap", "_myMainEngine", "_myEngines", "initEngine", "engine", "addEngine", "getMainEngine", "setMainEngine", "hasEngine", "removeMainEngine", "getEngines", "removeEngine", "index", "getScene", "scene", "getRoot", "root", "SceneUtils", "getPhysics", "physics", "getCanvas", "canvas", "getWASM", "wasm", "getXR", "xr", "debug_globals_exports", "__export", "getDebugManager", "getDebugVisualManager", "hasDebugEnabled", "hasDebugManager", "isDebugEnabled", "removeDebugEnabled", "removeDebugManager", "setDebugEnabled", "setDebugManager", "_myDebugManagers", "_myDebugEnableds", "getDebugManager", "engine", "Globals", "setDebugManager", "debugManager", "removeDebugManager", "hasDebugManager", "getDebugVisualManager", "isDebugEnabled", "setDebugEnabled", "debugEnabled", "removeDebugEnabled", "hasDebugEnabled", "character_collision_system_globals_exports", "__export", "getCharacterCollisionSystem", "hasCharacterCollisionSystem", "removeCharacterCollisionSystem", "setCharacterCollisionSystem", "_myCharacterCollisionSystems", "getCharacterCollisionSystem", "engine", "Globals", "setCharacterCollisionSystem", "characterCollisionSystem", "removeCharacterCollisionSystem", "hasCharacterCollisionSystem", "input_globals_exports", "__export", "getGamepad", "getGamepads", "getGamepadsManager", "getHandPose", "getHandPoses", "getHeadPose", "getInputManager", "getKeyboard", "getLeftGamepad", "getLeftHandPose", "getLeftTrackedHandPose", "getMouse", "getRightGamepad", "getRightHandPose", "getRightTrackedHandPose", "getTrackedHandPose", "getTrackedHandPoses", "hasInputManager", "hasPoseForwardFixed", "isPoseForwardFixed", "removeInputManager", "removePoseForwardFixed", "setInputManager", "setPoseForwardFixed", "_myInputManagers", "_myPoseForwardFixeds", "getInputManager", "engine", "Globals", "setInputManager", "inputManager", "removeInputManager", "hasInputManager", "getMouse", "getKeyboard", "getGamepadsManager", "getGamepad", "handedness", "getGamepads", "getLeftGamepad", "getRightGamepad", "getHeadPose", "getHandPose", "getHandPoses", "getLeftHandPose", "getRightHandPose", "getTrackedHandPose", "getTrackedHandPoses", "getLeftTrackedHandPose", "getRightTrackedHandPose", "isPoseForwardFixed", "setPoseForwardFixed", "toolEnabled", "removePoseForwardFixed", "hasPoseForwardFixed", "tool_globals_exports", "__export", "hasToolEnabled", "isToolEnabled", "removeToolEnabled", "setToolEnabled", "_myToolEnableds", "isToolEnabled", "engine", "Globals", "setToolEnabled", "toolEnabled", "removeToolEnabled", "hasToolEnabled", "console_vr_globals_exports", "__export", "getConsoleVR", "hasConsoleVR", "removeConsoleVR", "setConsoleVR", "_myConsoleVRs", "getConsoleVR", "engine", "Globals", "setConsoleVR", "consoleVR", "removeConsoleVR", "hasConsoleVR", "easy_tune_globals_exports", "__export", "getEasyTuneTarget", "getEasyTuneVariables", "hasEasyTuneTarget", "hasEasyTuneVariables", "removeEasyTuneTarget", "removeEasyTuneVariables", "setEasyTuneTarget", "setEasyTuneVariables", "_myEasyTuneVariablesList", "_myEasyTuneTargets", "getEasyTuneVariables", "engine", "Globals", "setEasyTuneVariables", "easyTuneVariables", "removeEasyTuneVariables", "hasEasyTuneVariables", "getEasyTuneTarget", "setEasyTuneTarget", "easyTuneTarget", "removeEasyTuneTarget", "hasEasyTuneTarget", "default_resources_globals_exports", "__export", "getDefaultMaterials", "getDefaultMeshes", "getDefaultResources", "hasDefaultResources", "removeDefaultResources", "setDefaultResources", "_myDefaultResourcesContainer", "getDefaultResources", "engine", "Globals", "setDefaultResources", "defaultResources", "removeDefaultResources", "hasDefaultResources", "getDefaultMeshes", "getDefaultMaterials", "scene_objects_globals_exports", "__export", "getPlayerObjects", "getSceneObjects", "hasSceneObjects", "removeSceneObjects", "setSceneObjects", "_mySceneObjectsContainer", "getSceneObjects", "engine", "Globals", "setSceneObjects", "sceneObjects", "removeSceneObjects", "hasSceneObjects", "getPlayerObjects", "Globals", "engine_globals_exports", "scene_objects_globals_exports", "default_resources_globals_exports", "audio_globals_exports", "visual_globals_exports", "debug_globals_exports", "window_globals_exports", "object_pool_globals_exports", "character_collision_system_globals_exports", "input_globals_exports", "tool_globals_exports", "console_vr_globals_exports", "easy_tune_globals_exports", "MeshComponent", "TextComponent", "Mesh", "MeshAttribute", "MeshIndexType", "gl_vec2", "create", "x", "y", "out", "set", "vector", "length", "normalize", "copy", "from", "to", "clone", "Vec2Utils", "zero", "isZero", "epsilon", "gl_vec4", "create", "x", "y", "z", "w", "out", "set", "vector", "copy", "from", "to", "clone", "Vec4Utils", "toString", "vector", "decimalPlaces", "_buildConsoleMessage", "log", "message", "error", "warn", "scale", "value", "out", "_prepareOut", "i", "round", "floor", "ceil", "clamp", "start", "end", "fixedStart", "fixedEnd", "min", "max", "MathUtils", "equals", "other", "epsilon", "VecUtils", "ArrayUtils", "getObjectPrototypes", "object", "prototypes", "objectProto", "ArrayUtils", "prototypesToCheck", "prototypeToCheck", "getObjectPropertyNames", "propertyNames", "JSUtils", "prototype", "ownPropertyNames", "ownPropertyName", "getObjectPropertyDescriptor", "propertyName", "propertyDescriptor", "propertyParent", "getObjectProperty", "property", "setObjectProperty", "valueToSet", "setUsed", "getObjectPropertyOwnParent", "parent", "parents", "getObjectPropertyOwnParents", "possibleParents", "possibleParent", "getObjectFromPath", "path", "pathStartObject", "Globals", "objectName", "getObjectNameFromPath", "pathSplit", "getObjectParentFromPath", "currentParent", "i", "overwriteObjectProperty", "newProperty", "overwriteOnOwnParent", "jsObjectFunctionsSpecialOverwrite", "logEnabled", "success", "propertyOwnParent", "originalPropertyDescriptor", "originalProperty", "overwriteTarget", "copyObjectProperties", "fromObject", "toObject", "cleanCopy", "jsObjectFunctionsSpecialCopy", "fromObjectPropertyNames", "fromObjectPropertyName", "fromObjectPropertyDescriptor", "_jsObjectFunctionsSpecialCopy", "cleanObjectProperties", "objectNames", "doesObjectPropertyUseAccessors", "propertyUseAccessors", "isFunctionByName", "functionParent", "functionName", "isFunctionResult", "functionProperty", "isClassByName", "classParent", "className", "isClassResult", "classProperty", "isObjectByName", "objectParent", "isObjectResult", "objectProperty", "isFunction", "isClass", "isObject", "functionsToOverwrite", "functionToOverwrite", "propertyDescriptorToOverwrite", "valueToReturn", "overwrittenFunction", "injectProperties", "fromReference", "toReference", "enumerable", "writable", "configurable", "keepOriginalDescriptorAttributes", "bindThisAsFirstParam", "prefix", "functionNamesToExclude", "ownPropertyNames", "ownPropertyName", "enumerableToUse", "writableToUse", "configurableToUse", "originalDescriptor", "adjustedPropertyName", "propertyDescriptor", "adjustedProperyValue", "JSUtils", "originalFunction", "PluginUtils", "initArrayExtension", "initArrayExtensionProtoype", "vec2_create", "x", "y", "Vec2Utils", "vec3_create", "z", "Vec3Utils", "vec4_create", "w", "Vec4Utils", "quat_create", "QuatUtils", "quat2_create", "x1", "y1", "z1", "w1", "x2", "y2", "z2", "w2", "Quat2Utils", "mat3_create", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "Mat3Utils", "mat4_create", "m03", "m13", "m23", "m30", "m31", "m32", "m33", "Mat4Utils", "arrayExtension", "ArrayUtils", "callback", "elementToFind", "elementsEqualCallback", "index", "indexes", "elementToRemove", "element", "array", "copyCallback", "cloneCallback", "vecExtension", "decimalPlaces", "VecUtils", "value", "out", "start", "end", "vector", "epsilon", "vec2Extension", "vec3Extension", "quat", "matrix", "positiveDirection", "referenceAxis", "MathUtils", "axis", "zeroSign", "projectAlongAxis", "planeNormal", "rotation", "angle", "origin", "parentTransform", "to", "pivotAxis", "interpolationFactor", "easingFunction", "EasingFunction", "vec4Extension", "quatExtension", "left", "up", "forward", "backward", "down", "right", "parentQuat", "leftAxis", "upAxis", "forwardAxis", "radiansRotation", "degreesRotation", "twist", "swing", "quat2Extension", "position", "parentTransformQuat", "mat3Extension", "mat4Extension", "scale", "parentTransformMatrix", "arrayPrototypesToExtend", "arrayPrototypeToExtend", "PluginUtils", "MeshCreationVertexParams", "MeshCreationTriangleParams", "MeshCreationParams", "engine", "Globals", "create", "meshCreationParams", "indexData", "triangle", "indexDataUnsignedInt", "vertexCount", "mesh", "Mesh", "MeshIndexType", "positionAttribute", "textureCoordinatesAttribute", "normalAttribute", "colorAttribute", "MeshAttribute", "i", "vertex", "clone", "position", "vec3_create", "textureCoordinates", "vec2_create", "normal", "color", "vec4_create", "clonedIndexData", "clonedMesh", "clonedPositionAttribute", "clonedTextureCoordinatesAttribute", "clonedNormalAttribute", "clonedColorAttribute", "invert", "invertedIndexData", "invertedMesh", "invertedPositionAttribute", "invertedTextureCoordinatesAttribute", "invertedNormalAttribute", "invertedColorAttribute", "makeDoubleSided", "doubleSidedIndexData", "doubleSidedMesh", "doubleSidedPositionAttribute", "doubleSidedTextureCoordinatesAttribute", "doubleSidedNormalAttribute", "doubleSidedColorAttribute", "invertedNormal", "createPlane", "vertexCreationParams", "firstTriangle", "secondTriangle", "MeshUtils", "cloneMesh", "componentToClone", "targetObject", "deepCloneParams", "DeepCloneParams", "customCloneParams", "clonedComponent", "ComponentUtils", "MeshComponent", "MeshUtils", "cloneCollision", "cloneText", "TextComponent", "clonePhysX", "DefaultWLComponentCloneCallbacks", "_myCloneCallbacks", "_myClonePostProcessCallbacks", "DeepCloneParams", "deepClone", "componentName", "variableName", "componentsVariablesMap", "deepCloneOverride", "CustomCloneParams", "name", "value", "isWLComponent", "typeOrClass", "ComponentUtils", "isWLNativeComponent", "wlNative", "type", "isWLJavascriptComponent", "wlJavascript", "getWLNativeComponentTypes", "_myWLNativeComponentTypes", "getWLJavascriptComponentTypes", "_myWLJavascriptComponentTypes", "getTypeFromTypeOrClass", "getClassFromType", "engine", "Globals", "classToReturn", "AnimationComponent", "CollisionComponent", "InputComponent", "LightComponent", "MeshComponent", "PhysXComponent", "TextComponent", "ViewComponent", "isRegistered", "getJavascriptComponentInstances", "getJavascriptComponentClass", "getJavascriptComponentClassesByIndex", "getJavascriptComponentTypeIndex", "getJavascriptComponentTypeIndexes", "getJavascriptComponentTypeFromIndex", "typeIndex", "componentClass", "isWLNativeComponentRegistered", "wasm", "isCloneable", "defaultCloneValid", "hasClonePostProcess", "clone", "componentToClone", "targetObject", "deeCloneParams", "customCloneParams", "useDefaultCloneAsFallback", "defaultCloneAutoStartIfNotActive", "clonedComponent", "cloneCallback", "ObjectUtils", "clonePostProcess", "clonePostProcessCallback", "cloneDefault", "autoStartIfNotActive", "setCloneCallback", "callback", "removeCloneCallback", "getCloneCallback", "hasCloneCallback", "hasCallback", "setClonePostProcessCallback", "removeClonePostProcessCallback", "getClonePostProcessCallback", "hasClonePostProcessCallback", "getDefaultWLComponentCloneCallback", "DefaultWLComponentCloneCallbacks", "hasDefaultWLComponentCloneCallback", "setDefaultWLComponentCloneCallbacks", "nativeType", "javascriptType", "removeDefaultWLComponentCloneCallbacks", "ARCamera8thwall", "Anchor", "Cursor", "CursorTarget", "DebugObject", "DeviceOrientationLook", "FingerCursor", "FixedFoveation", "HandTracking", "HitTestLocation", "HowlerAudioListener", "HowlerAudioSource", "ImageTexture", "MouseLookComponent", "PlaneDetection", "PlayerHeight", "TargetFramerate", "TeleportComponent", "Trail", "TwoJointIkSolver", "VideoTexture", "VrModeActiveSwitch", "Vrm", "WasdControlsComponent", "initMathExtension", "initMathExtensionStatic", "mathExtension", "MathUtils", "value", "start", "end", "zeroSign", "angle", "number", "decimalPlaces", "originRangeStart", "originRangeEnd", "newRangeStart", "newRangeEnd", "args", "from", "to", "interpolationFactor", "easingFunction", "EasingFunction", "usePositiveRange", "useShortestAngle", "PluginUtils", "initNumberExtension", "engine", "initNumberExtensionPrototype", "numberExtension", "PluginUtils", "initJSExtensions", "initMathExtension", "initArrayExtension", "initNumberExtension", "initJSPlugins", "engine", "initJSExtensions", "Object3D", "initObjectExtension", "initObjectExtensionProtoype", "objectExtension", "position", "ObjectUtils", "Vec3Utils", "rotation", "Mat3Utils", "QuatUtils", "scale", "transform", "Mat4Utils", "Quat2Utils", "axes", "forward", "backward", "up", "down", "left", "right", "translation", "amount", "direction", "angle", "axis", "origin", "newParent", "keepTransformWorld", "resultPosition", "resultDirection", "resultTransform", "typeOrClass", "paramsOrActive", "active", "index", "cloneParams", "CloneParams", "name", "regex", "id", "otherObject", "count", "amountMap", "PluginUtils", "Object3D", "Scene", "initSceneExtension", "engine", "initSceneExtensionPrototype", "sceneExtension", "SceneUtils", "typeOrClass", "index", "name", "id", "amountMap", "PluginUtils", "Scene", "initWLExtensions", "engine", "initObjectExtension", "initSceneExtension", "InputComponent", "ViewComponent", "Cursor", "CursorTarget", "HitTestLocation", "getSession", "engine", "Globals", "xr", "getSessionMode", "getReferenceSpace", "getReferenceSpaceType", "type", "getFrame", "isSessionActive", "XRUtils", "isReferenceSpaceFloorBased", "exitSession", "xrSession", "registerSessionStartEventListener", "id", "listener", "manuallyCallSessionStartIfSessionAlreadyActive", "addManualCallFlagToStartListener", "unregisterSessionStartEventListener", "registerSessionEndEventListener", "unregisterSessionEndEventListener", "registerSessionStartEndEventListeners", "startListener", "endListener", "unregisterSessionStartEndEventListeners", "isXRSupported", "isVRSupported", "isARSupported", "isDeviceEmulated", "Handedness", "HandednessIndex", "InputSourceType", "TrackedHandJointID", "TrackedHandJointIDIndex", "getHandednessByIndex", "index", "handedness", "HandednessIndex", "Handedness", "getInputSource", "inputSourceType", "engine", "Globals", "inputSource", "xrSession", "XRUtils", "i", "input", "InputSourceType", "getInputSourceTypeByHandedness", "InputUtils", "getInputSourceType", "getOppositeHandedness", "oppositeHandedness", "getJointIDByIndex", "jointID", "jointIDKey", "jointIDIndexKey", "TrackedHandJointIDIndex", "TrackedHandJointID", "initCursorComponentMod", "initCursorComponentModPrototype", "cursorComponentMod", "CursorTarget", "vec3_create", "quat2_create", "mat4_create", "inputComp", "InputComponent", "InputUtils", "ViewComponent", "XRUtils", "HitTestLocation", "dt", "axes", "hitObjectData", "Handedness", "Globals", "callback", "transformWorld", "session", "onSelect", "onSelectStart", "onSelectEnd", "e", "bounds", "hitPosition", "dist", "visible", "hitObject", "hitLocation", "hitTestResults", "originalEvent", "forceUnhover", "hoveringObjectChanged", "rayHit", "hitTestResultDistance", "xrFrame", "clientX", "clientY", "w", "h", "pointerID", "left", "top", "viewComponent", "onClick", "onPointerDown", "onPointerMove", "onPointerUp", "onPointerLeave", "onViewportResize", "hitLocationLocalToTarget", "moving", "firstInputSource", "PluginUtils", "Cursor", "Emitter", "CursorTarget", "initCursorTargetComponentMod", "initCursorTargetComponentModPrototype", "cursorTargetComponentMod", "Emitter", "dt", "PluginUtils", "CursorTarget", "MouseLookComponent", "Emitter", "Timer", "duration", "autoStart", "dt", "percentage", "durationPercentage", "listener", "id", "initMouseLookComponentMod", "initMouseLookComponentModPrototype", "mouseLookComponentMod", "Timer", "event", "Globals", "dt", "viewForward", "vec3_create", "viewUp", "referenceUp", "referenceUpNegate", "referenceRight", "newUp", "minAngle", "movementX", "movementY", "maxVerticalAngle", "angleWithUp", "fixAngle", "PluginUtils", "MouseLookComponent", "initComponentMods", "initCursorComponentMod", "initCursorTargetComponentMod", "initMouseLookComponentMod", "initWLMods", "initComponentMods", "initWLPlugins", "engine", "initWLExtensions", "initWLMods", "initPlugins", "engine", "initJSPlugins", "initWLPlugins", "registerPPComponents", "engine", "AddPPToWindowComponent", "AddWLToWindowComponent", "AdjustHierarchyPhysXScaleComponent", "AudioManagerComponent", "BenchmarkMaxPhysXComponent", "BenchmarkMaxVisibleTrianglesComponent", "CADisplayLeaderboardComponent", "CharacterCollisionSystemComponent", "ClearConsoleOnXRSessionStartComponent", "ConsoleVRToolComponent", "CopyHandTransformComponent", "CopyHeadTransformComponent", "CopyReferenceSpaceTransformComponent", "CopyPlayerTransformComponent", "DebugArrayFunctionsPerformanceAnalyzerComponent", "DebugFunctionsPerformanceAnalyzerComponent", "DebugManagerComponent", "DebugPPFunctionsPerformanceAnalyzerComponent", "DebugTransformComponent", "DebugWLComponentsFunctionsPerformanceAnalyzerComponent", "DebugWLFunctionsPerformanceAnalyzerComponent", "EasyLightAttenuationComponent", "EasyLightColorComponent", "EasyMeshAmbientFactorComponent", "EasyMeshColorComponent", "EasyScaleComponent", "EasySetTuneTargeetGrabComponent", "EasySetTuneTargetChildNumberComponent", "EasyTextColorComponent", "EasyTransformComponent", "EasyTuneImportVariablesComponent", "EasyTuneToolComponent", "EnableDebugComponent", "EnableToolComponent", "FingerCursorComponent", "GamepadControlSchemeComponent", "GamepadMeshAnimatorComponent", "GetDefaultResourcesComponent", "GetSceneObjectsComponent", "GrabbableComponent", "GrabberHandComponent", "InitConsoleVRComponent", "InitEasyTuneVariablesComponent", "InputManagerComponent", "MuteEverythingComponent", "ObjectPoolManagerComponent", "PPGatewayComponent", "PlayerLocomotionComponent", "SetActiveComponent", "SetHandLocalTransformComponent", "SetHeadLocalTransformComponent", "SetPlayerHeightComponent", "SetTrackedHandJointLocalTransformComponent", "ShowFPSComponent", "SpatialAudioListenerComponent", "SwitchHandObjectComponent", "ToolCursorComponent", "TrackedHandDrawAllJointsComponent", "TrackedHandDrawJointComponent", "TrackedHandDrawSkinComponent", "VirtualGamepadComponent", "VisualManagerComponent", "initPP", "engine", "Globals", "ComponentUtils", "registerWLComponents", "registerPPComponents", "initPlugins", "SceneObjects", "PlayerObjects", "DefaultResources", "DefaultResourcesMeshes", "DefaultResourcesMaterials", "Component", "Property", "Component", "Howler", "Emitter", "Howl", "AudioSetup", "audioFilePath", "audioSetup", "pitch", "rate", "AudioEvent", "AudioPlayer", "audioSetupOrAudioFilePath", "audioInstance", "AudioSetup", "Howl", "eventKey", "Emitter", "audioID", "checkOnlyLast", "playing", "fromVolume", "toVolume", "duration", "updateOnlyLast", "setValueOnPlayer", "fading", "lastSound", "sound", "position", "pitch", "rate", "volume", "spatial", "audioEvent", "id", "listener", "notifyOnce", "event", "AudioManager", "audioSetupID", "AudioPlayer", "id", "audioSetup", "preload", "volume", "Howler", "mute", "AudioManagerComponent", "Component", "Globals", "AudioManager", "__publicField", "Component", "ObjectPoolManager", "poolID", "pool", "poolToRemove", "poolIDOrObject", "object", "amount", "percentage", "ObjectPoolManagerComponent", "Component", "Globals", "ObjectPoolManager", "__publicField", "Component", "ObjectPoolParams", "ObjectPool", "poolObject", "objectPoolParams", "object", "amountToAdd", "released", "busyObject", "amount", "percentage", "size", "logEnabled", "i", "clone", "active", "first", "second", "equals", "MeshComponent", "VisualElementType", "MeshComponent", "VisualLineParams", "engine", "Globals", "vec3_create", "VisualElementType", "start", "end", "other", "VisualLine", "params", "visible", "autoRefresh", "dt", "MeshComponent", "clonedParams", "clone", "scaleLine", "translateLine", "forward", "VisualArrowParams", "engine", "Globals", "vec3_create", "VisualElementType", "start", "end", "other", "VisualArrow", "params", "VisualLine", "VisualLineParams", "visible", "autoRefresh", "dt", "MeshComponent", "clonedParams", "clone", "arrowPosition", "parentTranslate", "arrowScale", "forward", "arrowThickness", "arrowLength", "lineLength", "visualLineParams", "MeshComponent", "VisualMeshParams", "engine", "Globals", "mat4_create", "VisualElementType", "other", "VisualMesh", "params", "visible", "autoRefresh", "dt", "MeshComponent", "clonedParams", "clone", "MeshComponent", "VisualPointParams", "engine", "Globals", "vec3_create", "VisualElementType", "other", "VisualPoint", "params", "visible", "autoRefresh", "dt", "MeshComponent", "clonedParams", "clone", "rotation", "_myLayerFlagsNames", "setLayerFlagsNames", "layerFlagsNames", "getLayerFlagsNames", "raycast", "insideCheckSubVector", "vec3_create", "invertedRaycastDirection", "objectsEqualCallback", "first", "second", "raycastParams", "raycastResults", "RaycastResults", "internalRaycastResults", "RaycastParams", "currentValidHitIndex", "validHitsCount", "hitCount", "objects", "distances", "locations", "normals", "i", "hitInsideCollision", "hit", "RaycastHit", "hitsToRemove", "PhysicsUtils", "PhysicsLayerFlags", "indexOrName", "active", "index", "PhysicsUtils", "mask", "layerFlags", "layerMask", "RaycastParams", "physics", "Globals", "vec3_create", "PhysicsLayerFlags", "other", "RaycastResults", "ignoreHitsInsideCollision", "firstHit", "hit", "hits", "hitIndex", "removedHit", "RaycastHit", "copyHitCallback", "currentElement", "elementToCopy", "i", "length", "VisualRaycastParams", "engine", "Globals", "RaycastResults", "VisualElementType", "result", "other", "VisualRaycast", "params", "VisualArrow", "VisualArrowParams", "visible", "hitsToShow", "i", "visualRaycastHit", "autoRefresh", "hitsToRefresh", "dt", "raycastDistance", "visualRaycastParams", "visualRaycastHitParams", "clonedParams", "clone", "Alignment", "Justification", "TextComponent", "VisualTextParams", "engine", "Globals", "Alignment", "Justification", "mat4_create", "VisualElementType", "other", "VisualText", "params", "visible", "autoRefresh", "dt", "TextComponent", "clonedParams", "clone", "lookAtPosition", "vec3_create", "VisualTorusParams", "engine", "Globals", "mat4_create", "VisualElementType", "other", "VisualTorus", "params", "visible", "segmentToShow", "i", "visualSegment", "autoRefresh", "segmentToRefresh", "dt", "VisualLine", "VisualLineParams", "clonedParams", "clone", "segmentStart", "vec3_create", "segmentEnd", "segmentDirection", "fixedSegmentStart", "fixedSegmentEnd", "up", "sliceAngle", "extraLength", "visualSegmentParams", "VisualTransformParams", "engine", "Globals", "mat4_create", "VisualElementType", "other", "VisualTransform", "params", "VisualArrow", "VisualArrowParams", "visible", "autoRefresh", "dt", "clonedParams", "clone", "axes", "vec3_create", "scale", "position", "maxValue", "value", "visualArrowParams", "VisualManager", "engine", "Globals", "active", "dt", "visualElementParams", "lifetimeSeconds", "idToReuse", "visualElement", "idReused", "visualElements", "elementID", "Timer", "visualElementPair", "currentVisualElements", "currentElementID", "currentVisualElement", "visualElementType", "amount", "pool", "difference", "visuaElementPrototypeCreationCallback", "idsToRemove", "visualElementsEntry", "id", "params", "element", "type", "objectPoolParams", "ObjectPoolParams", "object", "visualElementPrototype", "ObjectPool", "VisualElementType", "VisualLine", "VisualLineParams", "VisualMesh", "VisualMeshParams", "VisualPoint", "VisualPointParams", "VisualArrow", "VisualArrowParams", "VisualText", "VisualTextParams", "VisualTransform", "VisualTransformParams", "VisualRaycast", "VisualRaycastParams", "VisualTorus", "VisualTorusParams", "typePoolID", "defaultElementsParent", "VisualResources", "VisualResourcesMaterials", "VisualManagerComponent", "Component", "Globals", "VisualManager", "VisualResources", "vec4_create", "dt", "__publicField", "WLAPI", "Component", "Property", "WLComponents", "AddWLToWindowComponent", "Component", "Globals", "WLAPI", "WLComponents", "object", "propertyNames", "propertyName", "__publicField", "Property", "Component", "Alignment", "Justification", "DebugVisualManager", "VisualManager", "engine", "vec4_create", "Alignment", "Justification", "vec3_create", "lifetimeSeconds", "start", "direction", "length", "color", "thickness", "visualParams", "VisualLineParams", "end", "VisualArrowParams", "position", "radius", "VisualPointParams", "text", "transform", "lookAtPlayer", "alignment", "justification", "VisualTextParams", "Globals", "raycastResult", "showOnlyFirstHit", "hitNormalLength", "VisualRaycastParams", "VisualTransformParams", "screenPosition", "scale", "textRotationQuat", "quat_create", "up", "lookToForward", "screenPositionNormalizedXR", "screenPositionNormalizedNonXR", "textPosition", "textRotation", "textScale", "scaleNormalized", "XRUtils", "DebugManager", "engine", "Globals", "DebugVisualManager", "dt", "DebugManagerComponent", "Component", "Globals", "DebugManager", "dt", "__publicField", "Component", "Property", "EnableDebugComponent", "Component", "Globals", "__publicField", "Property", "Component", "Property", "GamepadButtonID", "GamepadButtonEvent", "GamepadAxesID", "GamepadAxesEvent", "GamepadButtonInfo", "id", "handedness", "multiplePressCount", "multipleTouchCount", "value", "GamepadAxesInfo", "vec2_create", "GamepadPulseInfo", "GamepadCore", "handPose", "manageHandPose", "dt", "buttonID", "axesID", "vec2_create", "ClassicGamepadCore", "GamepadCore", "gamepadIndex", "handPose", "classicGamepad", "buttonID", "button", "Handedness", "GamepadButtonID", "axesID", "gamepads", "Globals", "gamepad", "KeyID", "Keyboard", "engine", "Globals", "key", "keyID", "pressed", "pressStart", "pressEnd", "dt", "keyInfo", "event", "KeyboardGamepadCore", "GamepadCore", "handPose", "buttonID", "keyboard", "Globals", "Handedness", "GamepadButtonID", "KeyID", "axesID", "XRGamepadCore", "GamepadCore", "handPose", "XRUtils", "dt", "buttonID", "gamepadButton", "GamepadButtonID", "touchButton", "axesID", "internalAxes", "pressed", "session", "event", "Emitter", "BaseGamepad", "handedness", "key", "GamepadButtonID", "GamepadButtonInfo", "GamepadAxesID", "GamepadAxesInfo", "eventKey", "GamepadButtonEvent", "Emitter", "GamepadAxesEvent", "GamepadPulseInfo", "buttonID", "buttonEvent", "id", "listener", "axesID", "axesEvent", "intensity", "duration", "maxDelay", "dt", "info", "buttonInfo", "buttonData", "buttonEventEmitters", "axesInfo", "axesData", "axesEventEmitters", "hapticActuators", "hapticActuator", "vec2_create", "UniversalGamepad", "BaseGamepad", "handedness", "id", "gamepadCore", "handPose", "core", "currentCoreHandPose", "dt", "buttonID", "coreButtonData", "axesID", "coreAxesData", "GamepadsManager", "Handedness", "UniversalGamepad", "key", "dt", "handedness", "Emitter", "BasePoseParams", "engine", "Globals", "BasePose", "basePoseParams", "vec3_create", "quat2_create", "quat_create", "Emitter", "referenceObject", "forwardFixed", "forceEmulatedVelocities", "updateOnViewReset", "XRUtils", "out", "referenceObjectOverride", "mat4_create", "id", "listener", "dt", "xrFrame", "updateVelocity", "xrPose", "manualCall", "session", "referenceSpace", "transform", "rotationQuat", "playerRotationQuat", "up", "transformQuat", "playerTransformQuat", "velocityRadians", "rotationRadians", "prevRotationRadians", "HandPoseParams", "BasePoseParams", "engine", "HandPose", "BasePose", "handedness", "handPoseParams", "InputUtils", "fixTrackedHandRotation", "referenceObjectOverride", "xrFrame", "manualCall", "session", "event", "item", "InputSourceType", "XRUtils", "playerRotationQuat", "quat_create", "up", "vec3_create", "right", "forward", "out", "referenceObject", "forwardRotation", "Handedness", "HeadPose", "BasePose", "xrFrame", "TrackedHandJointPose", "BasePose", "handedness", "trackedHandJointID", "basePoseParams", "BasePoseParams", "xrFrame", "dt", "updateVelocity", "xrPose", "manualCall", "session", "event", "item", "InputUtils", "InputSourceType", "XRUtils", "TrackedHandPoseParams", "BasePoseParams", "addAllJointIDs", "engine", "Globals", "key", "TrackedHandJointID", "TrackedHandPose", "handedness", "trackedHandPoseParams", "jointID", "trackedHandJointPose", "TrackedHandJointPose", "jointPoseKey", "dt", "jointIDIndex", "InputUtils", "element", "referenceObject", "forwardFixed", "forceEmulatedVelocities", "jointPose", "ViewComponent", "MouseButtonID", "Mouse", "engine", "Globals", "key", "vec2_create", "Timer", "mat4_create", "quat_create", "vec3_create", "dt", "buttonInfo", "buttonID", "pressed", "pressStart", "pressEnd", "raycastParams", "raycastResults", "RaycastResults", "PhysicsUtils", "out", "mousePosition", "distanceFromCamera", "originWorld", "directionWorld", "XRUtils", "right", "up", "directionLocal", "projectionMatrixInvert", "ViewComponent", "touchValid", "callbackID", "event", "targetOnlyRenderCanvas", "id", "callback", "pointerUpOnPointerLeave", "active", "delay", "actionCallback", "bounds", "valid", "InputManager", "engine", "Globals", "Mouse", "Keyboard", "HeadPose", "BasePoseParams", "Handedness", "HandPose", "HandPoseParams", "TrackedHandPose", "TrackedHandPoseParams", "GamepadsManager", "key", "dt", "handedness", "InputManagerComponent", "Component", "Globals", "InputManager", "dt", "leftHandPose", "rightHandPose", "leftXRGamepadCore", "XRGamepadCore", "rightXRGamepadCore", "leftKeyboardGamepadCore", "KeyboardGamepadCore", "rightKeyboardGamepadCore", "leftClassicGamepadCore", "ClassicGamepadCore", "rightClassicGamepadCore", "__publicField", "Property", "Component", "Property", "EnableToolComponent", "Component", "Globals", "__publicField", "Property", "Component", "Property", "EasyTuneVariables", "variable", "overwriteCurrentOne", "variableName", "value", "resetDefaultValue", "json", "objectJSON", "variableValueJSON", "callbackID", "callback", "InitEasyTuneVariablesComponent", "Component", "Globals", "EasyTuneVariables", "__publicField", "Property", "Component", "Property", "AddPPToWindowComponent", "Component", "Globals", "pp_exports", "object", "propertyNames", "propertyName", "__publicField", "Property", "Component", "Property", "GetDefaultResourcesComponent", "Component", "Globals", "DefaultResources", "MeshUtils", "__publicField", "Property", "Component", "Property", "GetSceneObjectsComponent", "Component", "Globals", "SceneObjects", "Handedness", "__publicField", "Property", "_myRegisteredEngines", "PPGatewayComponent", "Component", "engine", "initPP", "GetDefaultResourcesComponent", "GetSceneObjectsComponent", "EnableDebugComponent", "EnableToolComponent", "AddPPToWindowComponent", "AddWLToWindowComponent", "InitEasyTuneVariablesComponent", "ObjectPoolManagerComponent", "InputManagerComponent", "AudioManagerComponent", "VisualManagerComponent", "DebugManagerComponent", "propertiesToGet", "active", "properties", "propertyNames", "propertyName", "__publicField", "Property", "Howler", "isPlaybackBlocked", "blocked", "AudioUtils", "HowlerAudioPlayer", "AudioPlayer", "howl", "audioSetup", "Component", "Howler", "MuteEverythingComponent", "Component", "Howler", "__publicField", "Component", "Howler", "SpatialAudioListenerComponent", "Component", "vec3_create", "dt", "Howler", "__publicField", "Component", "PhysXComponent", "Property", "Shape", "CollisionEventType", "Emitter", "PhysXComponent", "PhysicsCollisionCollector", "physXComponent", "trigger", "Timer", "Emitter", "active", "dt", "enabled", "id", "listener", "type", "CollisionEventType", "objectFound", "object", "element", "collisionsToEnd", "physX", "PhysXComponent", "collision", "BenchmarkMaxPhysXComponent", "Component", "Globals", "Timer", "RaycastParams", "RaycastResults", "i", "vec3_create", "dt", "debugEnabled", "staticCollisions", "collector", "dynamicCollisions", "kinematicCollisions", "totalCollisions", "fpsString", "fps", "physX", "strength", "rotateStrength", "raycastCount", "distance", "origin", "direction", "raycastResults", "PhysicsUtils", "staticDome", "dynamicDome", "maxCount", "physXList", "cloves", "angleForClove", "minDistance", "maxDistance", "minExtraRotation", "maxExtraRotation", "upDirection", "horizontalDirection", "verticalDirection", "rotationAxis", "j", "extraAxisRotation", "extraUpRotation", "physXDirection", "position", "scale", "shape", "Shape", "physXComponent", "PhysXComponent", "PhysicsCollisionCollector", "__publicField", "Property", "Alignment", "Component", "Justification", "MeshComponent", "Property", "TextComponent", "BenchmarkMaxVisibleTrianglesComponent", "Component", "vec3_create", "Timer", "dt", "frameRate", "lagging", "reset", "count", "plane", "gridSize", "spaceBetween", "totalSpaceBetween", "planeSize", "currentCount", "i", "j", "position", "Globals", "vec4_create", "parent", "meshComponent", "MeshComponent", "MeshUtils", "poolParams", "ObjectPoolParams", "CloneParams", "ObjectPool", "TextComponent", "Alignment", "Justification", "XRUtils", "firstCompute", "elementToRemove", "averageDT", "trianglesAmount", "squaresAmount", "row", "column", "closestSqrt", "meshCreationParams", "MeshCreationParams", "x", "y", "vertexCreationParams", "MeshCreationVertexParams", "vec2_create", "firstTriangle", "MeshCreationTriangleParams", "secondTriangle", "__publicField", "Property", "Emitter", "save", "id", "value", "has", "SaveUtils", "remove", "clear", "load", "defaultValue", "loadString", "item", "loadNumber", "loadBool", "SaveManager", "engine", "Globals", "Timer", "XRUtils", "Emitter", "delay", "delayed", "cache", "enabled", "dt", "id", "value", "delaySavesCommitOverride", "cacheEnabledOverride", "sameValue", "failed", "commitSaveDelayed", "emitter", "result", "commitSavesDelayed", "SaveUtils", "defaultValue", "functionName", "loadFromCache", "saveResult", "session", "event", "listenerID", "listener", "valueID", "valueIDEmitter", "Component", "Property", "ClearConsoleOnXRSessionStartComponent", "Component", "XRUtils", "__publicField", "Property", "Component", "Property", "SetActiveComponent", "Component", "XRUtils", "dt", "__publicField", "Property", "Component", "PhysXComponent", "Property", "AdjustHierarchyPhysXScaleComponent", "Component", "dt", "scale", "physXComponents", "PhysXComponent", "physX", "__publicField", "Property", "Alignment", "Component", "Justification", "Property", "ShowFPSComponent", "Component", "vec4_create", "vec3_create", "Timer", "dt", "Globals", "Alignment", "Justification", "__publicField", "Property", "Emitter", "StateData", "stateID", "stateObject", "TransitionData", "transitionID", "fromStateData", "toStateData", "transitionObject", "skipStateFunction", "PerformMode", "PerformDelayedMode", "SkipStateFunction", "FSM", "performMode", "performDelayedMode", "state", "cloneObject", "stateData", "fromStateID", "toStateID", "transition", "transitionsFromState", "transitionData", "initStateID", "initTransition", "args", "initTransitionObject", "initStateData", "emitter", "dt", "i", "performDelayed", "_PendingPerform", "transitions", "transitionsToState", "toDelete", "fromTransitions", "hasTransition", "deepClone", "cloneFSM", "entry", "transitonEntry", "fromState", "toState", "deepCloneable", "active", "fsmName", "showDelayedInfo", "listenerID", "listener", "initStateIDEmitter", "internalTransitionIDEmitter", "value", "transitionIDEmitter", "element", "currentlyPerformedTransition", "consoleArguments", "transitionToPerform", "internalTransitionIDEmitters", "State", "dt", "fsm", "args", "state", "transition", "Transition", "fsm", "initState", "args", "transition", "TimerState", "State", "duration", "transitionToPerformOnEnd", "transitionArgs", "Timer", "callback", "id", "dt", "fsm", "transition", "state", "rgbToHSV", "rgb", "hsv", "r", "g", "b", "max", "min", "d", "s", "v", "hsvToRGB", "h", "i", "f", "p", "q", "t", "rgbCodeToHuman", "ColorUtils", "rgbHumanToCode", "hsvCodeToHuman", "hsvHumanToCode", "color255To1", "color", "result", "color1To255", "MeshComponent", "setAlpha", "color", "vec4_create", "material", "alpha", "setObjectAlpha", "object", "meshComponents", "MeshComponent", "meshComponent", "MaterialUtils", "setObjectMaterial", "cloneMaterial", "setObjectClonedMaterials", "setObjectSpecularColor", "setObjectFogColor", "TextComponent", "setClonedMaterials", "object", "textComponents", "textComponent", "TextUtils", "isMobile", "engine", "Globals", "isDesktop", "BrowserUtils", "openLink", "url", "newTab", "exitXRSession", "onSuccessCallback", "onFailureCallback", "XRUtils", "document", "element", "targetPage", "openLinkPersistent", "timeOutSeconds", "totalSeconds", "secondsTillNextAttempt", "onPersistentFailureCallback", "args", "Component", "Property", "DebugTransformComponent", "Component", "VisualTransformParams", "VisualTransform", "Globals", "dt", "__publicField", "Property", "DebugFunctionsOverwriterParams", "engine", "Globals", "DebugFunctionsOverwriter", "params", "classesAndParents", "objectsAndParents", "functionsAndParents", "referenceAndParent", "reference", "referenceParent", "referenceName", "referencePath", "referenceNameForFilter", "propertyName", "isClass", "isFunction", "JSUtils", "referenceParentForConstructor", "referenceNameForConstructor", "isConstructor", "includePathList", "excludePathList", "includeNameList", "excludeNameList", "validReferencePath", "validReferenceName", "propertyNames", "overwriteTargetReference", "fixedReference", "ownReferenceDescriptor", "validFunctionName", "validFunctionPath", "overwriteSuccess", "newFunction", "error", "referenceForConstructor", "newConstructor", "byReferenceList", "byPathList", "referenceAndParents", "equalCallback", "first", "second", "pathPair", "path", "referencePair", "objectsToVisit", "objectAndParent", "objectToVisit", "object", "objectLevel", "objectPath", "objectProperty", "currentPath", "currentName", "isObject", "name", "includeList", "excludeList", "validName", "includeName", "excludeName", "jsObjectFunctions", "DebugFunctionsPerformanceAnalyzerParams", "DebugFunctionsOverwriterParams", "DebugFunctionPerformanceAnalysisResults", "other", "DebugFunctionsPerformanceAnalyzerSortOrder", "DebugFunctionsPerformanceAnalyzer", "DebugFunctionsOverwriter", "params", "Globals", "originalPush", "originalPop", "property", "sortOrder", "results", "reference", "propertyName", "referencePath", "isClass", "isFunction", "referenceParentForConstructor", "referenceNameForConstructor", "isConstructor", "propertyID", "sortedResults", "first", "second", "sortResult", "id", "timeElapsedSinceLastReset", "beforeTime", "maxResults", "newFunction", "JSUtils", "analysisResults", "window", "functionPerformanceAnalysisResults", "executionTimes", "originalFunction", "functionCallOverhead", "overheadError", "executionTimeAnalysisEnabled", "startTime", "errorToThrow", "returnValue", "bindFunction", "startOriginalFunctionTime", "endOriginalFunctionTime", "originalFunctionOverheadExecutionTime", "executionTimeToAdjust", "executionTime", "beforeOverhead", "inBetweenOverhead", "error", "isPerformanceAnalyzer", "DebugFunctionsPerformanceAnalysisResultsLoggerParams", "DebugFunctionsPerformanceAnalyzerSortOrder", "DebugFunctionsPerformanceAnalysisResultsLogger", "params", "Timer", "dt", "timeSinceLastReset", "analysisResults", "analysisResultsClone", "keys", "i", "results", "counter", "analysisResultsToLog", "key", "currentResults", "resultsToLog", "resultsText", "entry", "name", "parametersToLog", "textOrdered", "callsCountText", "totalExecutionTimeText", "totalExecutionTimePercentageText", "averageExecutionTimeText", "nameIndented", "avoidFirst", "text", "Component", "Property", "DebugFunctionsPerformanceAnalyzerComponent", "Component", "Globals", "Timer", "dt", "GamepadButtonID", "functionsPerformanceAnalyzerParams", "DebugFunctionsPerformanceAnalyzerParams", "toIncludeList", "i", "toExcludeList", "DebugFunctionsPerformanceAnalyzer", "functionsPerformanceAnalysisResultsLoggerParams", "DebugFunctionsPerformanceAnalysisResultsLoggerParams", "DebugFunctionsPerformanceAnalysisResultsLogger", "__publicField", "Property", "Component", "Property", "DebugPPFunctionsPerformanceAnalyzerComponent", "Component", "DebugFunctionsPerformanceAnalyzerComponent", "__publicField", "Property", "Component", "Property", "DebugArrayFunctionsPerformanceAnalyzerComponent", "Component", "classesByPath", "DebugFunctionsPerformanceAnalyzerComponent", "__publicField", "Property", "Component", "Property", "DebugPPArrayCreationPerformanceAnalyzerComponent", "Component", "DebugFunctionsPerformanceAnalyzerComponent", "__publicField", "Property", "Component", "Property", "DebugWLFunctionsPerformanceAnalyzerComponent", "Component", "DebugFunctionsPerformanceAnalyzerComponent", "__publicField", "Property", "AnimationComponent", "CollisionComponent", "Component", "InputComponent", "LightComponent", "MeshComponent", "PhysXComponent", "Property", "TextComponent", "ViewComponent", "DebugWLComponentsFunctionsPerformanceAnalyzerComponent", "Component", "Timer", "dt", "objectsByReference", "classesByReference", "DebugFunctionsPerformanceAnalyzerComponent", "nativeComponentTypes", "AnimationComponent", "CollisionComponent", "InputComponent", "LightComponent", "MeshComponent", "PhysXComponent", "TextComponent", "ViewComponent", "nativeComponentType", "componentClass", "ComponentUtils", "componentInstance", "id", "__publicField", "Property", "Direction2DTo3DConverterParams", "Direction2DTo3DConverter", "params", "quat_create", "vec3_create", "direction2D", "conversionTransform", "direction3DUp", "outDirection3D", "conversionForward", "conversionTransformMatrix", "conversionTransformQuat", "conversionRotationQuat", "rotationQuat", "forward", "right", "up", "direction3DUpNegate", "forwardScaled", "rightScaled", "rotationToNewConvertPivoted", "upsideDown", "angleForwardWithDirectionUp", "angleRightWithDirectionUp", "NumberOverFactor", "fromNumberOverFactor", "toNumberOverFactor", "fromFactor", "toFactor", "easingFunction", "EasingFunction", "roundingFunction", "factor", "interpolationFactor", "numberOverFactor", "number", "clampedNumber", "clampedNumberOverFactor", "IntOverFactor", "numberToRound", "roundedNumber", "NumberRangeOverFactor", "fromRange", "toRange", "randomNumberOverFactor", "averageNumberOverFactor", "min", "max", "IntRangeOverFactor", "Component", "Emitter", "PhysXComponent", "Property", "GrabbableComponent", "Component", "Emitter", "PhysXComponent", "grabber", "linearVelocity", "angularVelocity", "vec3_create", "angularVelocityDegrees", "angularVelocityRadians", "id", "listener", "Globals", "targetObject", "ComponentUtils", "clonedComponent", "__publicField", "Property", "Component", "Emitter", "PhysXComponent", "Property", "GrabberHandComponent", "Component", "vec3_create", "Emitter", "HandednessIndex", "Globals", "PhysXComponent", "PhysicsCollisionCollector", "dt", "grabButton", "throwButton", "InputUtils", "id", "listener", "GamepadButtonID", "GamepadButtonEvent", "grabbablesToGrab", "collisions", "i", "grabbable", "GrabbableComponent", "grabberPosition", "first", "second", "firstPosition", "secondPosition", "firstDistance", "secondDistance", "grabbableToGrab", "grabbableData", "_GrabberHandComponentGrabbableData", "linearVelocity", "angularVelocity", "grabber", "element", "handPose", "linearVelocityHistory", "speed", "speedEaseMultiplier", "EasingFunction", "directionCurrentWeight", "lastDirectionIndex", "direction", "currentDirection", "angularVelocityHistory", "j", "color", "vec4_create", "__publicField", "Property", "useGrabbableAsVelocitySource", "linearVelocityHistorySize", "angularVelocityHistorySize", "_myDummyServer", "_myUseDummyServerOnSDKMissing", "_myUseDummyServerOnError", "CAError", "setUseDummyServerOnSDKMissing", "useDummyServer", "setUseDummyServerOnError", "setDummyServer", "dummyServer", "isUseDummyServerOnSDKMissing", "isUseDummyServerOnError", "getDummyServer", "isSDKAvailable", "engine", "Globals", "getSDK", "getLeaderboard", "leaderboardID", "ascending", "aroundPlayer", "scoresAmount", "onDoneCallback", "onErrorCallback", "useDummyServerOverride", "CAUtils", "casdk", "user", "userName", "result", "userValid", "value", "error", "getLeaderboardDummy", "submitScore", "scoreToSubmit", "submitScoreDummy", "getUser", "getUserDummy", "CADummyServer", "engine", "Globals", "leaderboardID", "ascending", "aroundPlayer", "scoresAmount", "onDoneCallback", "onErrorCallback", "leaderboard", "CAUtils", "scoreToSubmit", "user", "Component", "Property", "TextComponent", "CADisplayLeaderboardComponent", "Component", "CAUtils", "CADummyServer", "dt", "namesObject", "scoresObject", "TextComponent", "leaderboard", "namesText", "scoresText", "maxRankDigit", "value", "rank", "fixedRank", "newlines", "i", "convertedScore", "score", "displayHours", "displayMinutes", "displaySeconds", "time", "hours", "minutes", "seconds", "convertedTime", "targetObject", "ComponentUtils", "__publicField", "Property", "CollisionCheckParams", "vec3_create", "quat_create", "PhysicsLayerFlags", "other", "CollisionRuntimeParams", "RaycastHit", "generate360TeleportParamsFromMovementParams", "movementParams", "outTeleportParams", "CollisionCheckParams", "vec3_create", "CollisionCheckUtils", "CollisionCheck", "engine", "Globals", "RaycastParams", "RaycastResults", "RaycastHit", "CollisionRuntimeParams", "movement", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "position", "allowFix", "fixedMovement", "feetPosition", "up", "originalHorizontalMovement", "horizontalMovement", "verticalMovement", "feetPositionPlusOffset", "vec4_create", "origin", "direction", "distance", "ignoreHitsInsideCollision", "isHorizontal", "tempRaycastResult", "raycastResult", "PhysicsUtils", "CollisionCheck", "transformUp", "vec3_create", "transformForward", "feetPosition", "transformOffsetLocalQuat", "quat2_create", "offsetTransformQuat", "horizontalMovement", "verticalMovement", "movementStep", "currentMovementStep", "movementChecked", "fixedMovement", "newFeetPosition", "fixedMovementStep", "previousCollisionRuntimeParams", "CollisionRuntimeParams", "previousFixedMovement", "previousMovementChecked", "movement", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "height", "movementStepAmount", "equalStepLength", "maxLength", "stepsPerformed", "splitMovementStop", "i", "fixedHorizontalMovement", "fixedVerticalMovement", "horizontalDirection", "forwardForHorizontal", "forwardForVertical", "forwardForPerceivedAngle", "surfaceAdjustedVerticalMovement", "surfaceAdjustedHorizontalMovement", "zAxis", "xAxis", "allowSurfaceSteepFix", "outFixedMovement", "originalMovementSign", "moveStepFixed", "surfaceTooSteepResults", "newSurfaceTooSteepResults", "Globals", "previousFixedHorizontalMovement", "up", "angleWithPreviousThreshold", "angleSigned", "angleSignedThreshold", "CollisionCheck", "transformUp", "vec3_create", "transformForward", "feetPosition", "originalFeetPosition", "transformOffsetLocalQuat", "quat2_create", "offsetTransformQuat", "feetPositionOffsetToOriginal", "offsetTeleportPosition", "zero", "forwardForHorizontal", "forwardForVertical", "forwardForPerceivedAngle", "fixedHorizontalMovement", "fixedVerticalMovement", "newFeetPosition", "endPosition", "zAxis", "xAxis", "teleportPosition", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "isPositionCheck", "height", "downward", "minAngle", "Globals", "CollisionCheck", "feetPosition", "vec3_create", "allowAdjustments", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "CollisionCheck", "fixedFeetPosition", "vec3_create", "newFixedFeetPosition", "newFeetPosition", "horizontalDirection", "movement", "feetPosition", "height", "up", "forward", "allowSurfaceSteepFix", "collisionCheckParams", "collisionRuntimeParams", "previousCollisionRuntimeParams", "avoidSlidingExtraCheck", "outFixedMovement", "surfaceTooSteepResults", "fixedHeight", "canMove", "direction", "fixedHitPosition", "startPosition", "endPosition", "movementDirection", "ignoreHitsInsideCollision", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "fixHitOnCollision", "checkAllHits", "ignoreHitsInsideCollisionIfObjectToIgnore", "origin", "distance", "raycastResult", "isOk", "hitsToControl", "validHitIndex", "i", "hit", "hitPosition", "directionOffsetEpsilonValue", "swapRaycastResult", "objectsEqualCallback", "first", "second", "hitDirection", "hitMovement", "projectAlongAxis", "movementOrForward", "objectsToIgnore", "outIgnoredObjects", "isGround", "isMovementCheck", "isIgnorable", "surfaceIgnoreHeight", "groundIgnoreHeight", "ceilingIgnoreHeight", "surfaceIgnoreMaxMovementLeft", "surfaceAngle", "perceivedAngle", "surfaceHeightCheckOk", "maxMovementLeftCheckOk", "feetPositionUp", "hitHeight", "movementLength", "halfConeAngle", "hitMovementLength", "CollisionCheck", "previousHorizontalMovement", "vec3_create", "movement", "feetPosition", "height", "up", "forward", "allowSurfaceSteepFix", "collisionCheckParams", "collisionRuntimeParams", "previousCollisionRuntimeParams", "outSlideMovement", "isFlickering", "backupFlickerPrevented", "horizontalCollisionNormal", "oppositeSlideMovement", "hitNormal", "previousIsSliding", "preSlideCollisionRuntimeParams", "postSlideCollisionRuntimeParams", "angleNormalWithMovementThreshold", "isOppositeBetter", "angleEpsilon", "newFeetPosition", "fixedMovement", "flickerFixSlideMovement", "slideMovement", "shouldCheckFlicker", "flickerCollisionAngle", "flickerMovementAngle", "backupDebugEnabled", "invertedNormal", "slidingMovement", "movement90", "currentMovement", "slideMovementForward", "checkOppositeDirection", "slidingSign", "angleThreshold", "currentAngle", "maxAngle", "minAngle", "angleWithPrevious", "originalCurrentAngle", "i", "movementDirection", "hitDirection", "projectAlongAxis", "newFixedFeetPosition", "originalFeetPosition", "originalHeight", "hitPosition", "halfConeAngle", "Globals", "vec4_create", "flatNormal", "isValid", "CollisionCheck", "checkPositions", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "vec3_create", "_localGroundObjectsToIgnore", "_localCeilingObjectsToIgnore", "_localGroundCeilingObjectsToIgnore", "objectsEqualCallback", "first", "second", "movementDirection", "heightOffset", "heightStep", "currentHeightOffset", "leftRadialDirection", "rightRadialDirection", "movement", "originalFeetPosition", "originalHeight", "feetPosition", "height", "up", "collisionCheckParams", "collisionRuntimeParams", "halfConeAngle", "steplength", "tempCheckPosition", "i", "currentStep", "currentRadialPosition", "currentCheckPosition", "groundObjectsToIgnore", "ceilingObjectsToIgnore", "groundCeilingObjectsToIgnore", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "groundCeilingCheckIsFine", "object", "heightStepAmount", "movementStep", "firstPosition", "secondPosition", "firstMovementPosition", "secondMovementPosition", "firstHeightPosition", "secondHeightPosition", "firstHeightMovementPosition", "secondHeightMovementPosition", "isHorizontalCheckOk", "movementStepAmount", "m", "j", "secondIndex", "CollisionCheck", "checkPositions", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "vec3_create", "_localGroundObjectsToIgnore", "_localCeilingObjectsToIgnore", "_localGroundCeilingObjectsToIgnore", "objectsEqualCallback", "first", "second", "heightOffset", "heightStep", "currentHeightOffset", "hitHeightOffset", "hitHeightOffsetEpsilon", "downwardHeightOffset", "downwardHeightStep", "verticalDirection", "vertilCheckHit", "RaycastHit", "originalFeetPosition", "originalHeight", "feetPosition", "height", "up", "forward", "collisionCheckParams", "collisionRuntimeParams", "sliceAngle", "tempCheckPosition", "i", "currentAngle", "radialDirection", "groundObjectsToIgnore", "ceilingObjectsToIgnore", "groundCeilingObjectsToIgnore", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "groundCeilingCheckIsFine", "object", "heightStepAmount", "hitHeightOffsetEpsilonValue", "basePosition", "forwardNegate", "currentRadialPosition", "previousRadialPosition", "isHorizontalCheckOk", "halfRadialPositions", "j", "leftIndex", "rightIndex", "leftAndRightEqual", "r", "currentIndex", "previousIndex", "previousBasePosition", "previousCurrentRadialPosition", "previousPreviousRadialPosition", "previousCheckPositionIsEqual", "CollisionCheck", "newFeetPosition", "vec3_create", "additionalFixedMovement", "zero", "verticalMovement", "originalMovementSign", "feetPosition", "height", "up", "forward", "collisionCheckParams", "collisionRuntimeParams", "outFixedMovement", "movementSign", "isMovementDownward", "isOppositeMovementDownward", "startOffset", "endOffset", "tempVector", "furtherDirection", "furtherDirectionPosition", "upNegate", "origin", "direction", "popOutEnabled", "snapEnabled", "checkPositions", "furtherDirectionPositionSet", "i", "currentPosition", "distance", "raycastResult", "smallHeightFixOffset", "heightOffset", "startPosition", "endPosition", "checkUpward", "isVerticalPositionOk", "atLeastOneIsOk", "adjustmentEpsilon", "insideHitSet", "firstHitOutsideCollision", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "currentDirection", "tempCheckPosition", "radiusStep", "sliceAngle", "currentStepRotation", "currentRadius", "j", "sliceDirection", "CollisionCheck", "transformUp", "vec3_create", "transformForward", "feetPosition", "transformOffsetLocalQuat", "quat2_create", "offsetTransformQuat", "forwardForPerceivedAngle", "forwardForVertical", "zAxis", "xAxis", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "height", "horizontalDirection", "fixedHorizontalMovement", "originalVerticalMovement", "previousCollisionRuntimeParams", "isVerticalMovementZero", "isVerticalMovemenDownward", "horizontalMovementIsZero", "groundPerceivedAngle", "ceilingPerceivedAngle", "mustRemainOnGroundOk", "mustRemainOnCeilingOk", "mustStayBelowGroundAngleOk", "minAngle", "mustStayBelowCeilingAngleOk", "mustStayOnGroundHitAngleOk", "mustStayOnCeilingHitAngleOk", "isOnValidGroundAngleUphill", "isOnValidGroundAngleDownhill", "isOnValidCeilingAngleUphill", "isOnValidCeilingAngleDownhill", "surfaceSteepResults", "up", "direction", "groundTooSteep", "ceilingTooSteep", "extraVerticalMovement", "horizontalMovement", "verticalMovement", "outAdjustedVerticalMovement", "extraVerticalLength", "groundExtraVerticalLength", "ceilingExtraVerticalLength", "sameSignThanGround", "verticalMovementLength", "sameSignThanExtra", "extraHorizontalMovement", "groundHorizontalDirection", "ceilingHorizontalDirection", "scaledCeilingHorizontalDirection", "scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection", "scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection", "outAdjustedHorizontalMovement", "isMovementDownward", "groundExtraHorizontalLength", "ceilingExtraHorizontalLength", "sameDirectionAsGround", "tempVector", "outExtraSurfaceVerticalMovement", "verticalDirection", "startOffset", "endOffset", "heightOffset", "smallOffset", "smallStartPosition", "smallEndPosition", "surfaceNormal", "surfaceHitMaxNormal", "hitFromCurrentPosition", "startPosition", "endPosition", "isGround", "checkPositions", "distanceToBeOnSurface", "distanceToComputeSurfaceInfo", "distanceToFindSurfaceDistance", "verticalFixToBeOnSurface", "verticalFixToComputeSurfaceInfo", "verticalFixToFindSurfaceDistance", "isOnSurfaceIfInsideHit", "isBaseInsideCollisionCheckEnabled", "isOnSurface", "surfaceAngle", "surfacePerceivedAngle", "surfaceHitMaxAngle", "surfaceDistance", "isBaseInsideCollision", "i", "currentPosition", "baseHitIsInsideCollision", "origin", "distance", "raycastResult", "hitFromCurrentPositionLength", "currentSurfaceNormal", "surfaceHitAngle", "forwardOnSurface", "forward", "isFartherOnUp", "CharacterCollisionResults", "CharacterCollisionTransformResults", "CharacterCollisionMovementResults", "CharacterCollisionTeleportResults", "CharacterCollisionCheckTransformResults", "CharacterCollisionWallSlideResults", "CharacterCollisionSurfaceInfo", "CharacterCollisionSurfaceResults", "CharacterCollisionSplitMovementResults", "CharacterCollisionDebugResults", "CharacterCollisionInternalResults", "other", "CharacterCollisionCheckType", "vec3_create", "quat2_create", "RaycastHit", "_myCollisionChecks", "getCollisionCheck", "engine", "Globals", "setCollisionCheck", "collisionCheck", "initBridge", "CollisionCheckBridge", "CollisionCheck", "checkMovement", "collisionCheckParams", "CollisionCheckParams", "collisionRuntimeParams", "CollisionRuntimeParams", "movement", "currentTransformQuat", "characterColliderSetup", "prevCharacterCollisionResults", "outCharacterCollisionResults", "CharacterCollisionResults", "checkTeleportToTransform", "teleportPosition", "vec3_create", "teleportTransformQuat", "checkTransform", "checkTransformQuat", "updateGroundInfo", "updateCeilingInfo", "convertCharacterCollisionResultsToCollisionRuntimeParams", "characterCollisionResults", "outCollisionRuntimeParams", "CharacterCollisionCheckType", "convertCollisionRuntimeParamsToCharacterCollisionResults", "rotationQuat", "quat_create", "convertCharacterColliderSetupToCollisionCheckParams", "outCollisionCheckParams", "CharacterColliderSetup", "CharacterColliderHorizontalCheckParams", "CharacterColliderVerticalCheckParams", "CharacterColliderWallSlideParams", "CharacterColliderSurfaceParams", "CharacterColliderSplitMovementParams", "CharacterColliderAdditionalParams", "CharacterColliderDebugParams", "other", "CharacterColliderHorizontalPositionVerticalCheckDirection", "vec3_create", "PhysicsLayerFlags", "CharacterColliderSlideFlickerPreventionMode", "quat_create", "CharacterColliderSetupSimplifiedCreationAccuracyLevel", "CharacterColliderSetupSimplifiedCreationParams", "PhysicsLayerFlags", "createSimplified", "simplifiedCreationParams", "outCharacterColliderSetup", "CharacterColliderSetup", "CharacterColliderSlideFlickerPreventionMode", "createTeleportColliderSetupFromMovementColliderSetup", "movementColliderSetup", "outTeleportColliderSetup", "CharacterColliderSetupUtils", "CharacterCollisionSystem", "engine", "Globals", "CollisionCheckBridge", "dt", "movement", "currentTransformQuat", "characterColliderSetup", "prevCharacterCollisionResults", "outCharacterCollisionResults", "CharacterCollisionResults", "teleportPosition", "teleportTransformQuat", "checkTransformQuat", "currentFramePerformedRaycasts", "quat2_create", "Component", "CharacterCollisionSystemComponent", "Component", "Globals", "CharacterCollisionSystem", "dt", "__publicField", "PlayerHeadManagerParams", "engine", "Globals", "PlayerHeadManager", "params", "quat2_create", "Timer", "XRUtils", "active", "outTransformFeetQuat", "outPositionFeet", "vec3_create", "outPositionHead", "outRotationFeetQuat", "quat_create", "outRotationHeadQuat", "height", "setOnlyForActiveOne", "isFloor", "movement", "teleportPosition", "headTransformQuat", "rotationQuat", "keepUpOverride", "position", "up", "direction", "dt", "vec4_create", "headPosition", "feetPosition", "feetRotationQuat", "playerUp", "headForward", "angleWithUp", "mingAngle", "headHeight", "rotationAxis", "currentHeadPosition", "currentFeetRotation", "newFeetRotation", "fixedNewFeetRotation", "newFeetForward", "fixedRotation", "newHeadPosition", "headAdjustmentMovement", "newHeadRotation", "newHeadUp", "currentRotationQuat", "rotationQuatToRotate", "teleportMovementToPerform", "currentFeetPosition", "flatCurrentPlayerPosition", "flatNewPlayerPosition", "teleportMovement", "playerForward", "rotationToPerform", "feetRotation", "headRotation", "playerPosition", "heightVector", "manualCall", "session", "referenceSpace", "event", "previousHeadTransform", "recoverHeadPosition", "flatCurrentHeadPosition", "flatRecoverHeadPosition", "recoverMovement", "recoverHeadForward", "currentHeadForward", "resyncHeadPosition", "resyncHeadRotation", "flatResyncHeadPosition", "resyncMovement", "resyncHeadForward", "resyncHeadUp", "resyncHeadRight", "newPlayerPosition", "fixedHeadRight", "fixedHeadLeft", "fixedHeadUp", "fixedHeadForward", "fixedHeadRotation", "resyncHeadHeight", "currentHeadHeight", "floorHeight", "angleForwardUp", "negateAngle", "maxVerticalAngle", "fixAngle", "fixedResyncHeadRotation", "referenceSpacePosition", "offset", "amountToRemove", "transformLocal", "PlayerTransformManagerSyncFlag", "PlayerTransformManagerParams", "engine", "Globals", "PhysicsLayerFlags", "XRUtils", "PlayerTransformManager", "params", "CollisionRuntimeParams", "vec3_create", "quat_create", "active", "dt", "movement", "outCollisionRuntimeParams", "forceMove", "position", "forceTeleport", "transformQuat", "rotationQuat", "height", "forceSet", "outTransformQuat", "quat2_create", "outPosition", "outRotation", "syncFlagMap", "isBodyColliding", "isHeadColliding", "isFar", "isFloating", "resetPosition", "resetRotation", "resetHeight", "updateRealFlags", "validHeight", "realHeight", "CollisionCheckParams", "CollisionCheckUtils", "manualCall", "session", "vec4_create", "realPosition", "realUp", "validUp", "playerHeadManager", "collisionRuntimeParams", "transformUp", "horizontalDirection", "debugBackup", "CollisionCheckBridge", "movementToCheck", "positionReal", "newPosition", "newPositionHead", "movementStep", "currentMovementStep", "verticalMovement", "movementChecked", "newFeetPosition", "floatingTransformQuat", "resetRealEnabled", "isVertical", "movementStepAmount", "equalStepLength", "maxLength", "isOnValidGroundAngle", "atLeastOneNotOnGround", "isOneOnGroundBetweenNoGround", "isLastOnGround", "isOneOnSteepGround", "i", "isFloatingOnSteepGroundFail", "distance", "fixedMovement", "teleportTransformQuat", "teleportPosition", "currentPosition", "teleportPositionVec", "teleportRotation", "rotatedTransformQuat", "rotationToPerform", "fixedHeight", "previousHeight", "PlayerLocomotionRotateParams", "engine", "Globals", "Handedness", "PlayerLocomotionRotate", "params", "dt", "playerUp", "vec3_create", "headRotation", "quat_create", "axes", "GamepadAxesID", "XRUtils", "rotationIntensity", "speed", "angleToRotate", "headForward", "headUp", "referenceUp", "referenceUpNegate", "referenceRight", "newUp", "head", "minAngle", "angleWithUp", "snapStep", "snapAngle", "angleToAlign", "maxVerticalAngle", "fixAngle", "PlayerLocomotionMovementRuntimeParams", "PlayerLocomotionMovement", "locomotionRuntimeParams", "PhysXComponent", "PlayerObscureManagerParams", "engine", "Globals", "EasingFunction", "PlayerObscureManager", "params", "Timer", "FSM", "dt", "obscureLevel", "instantFade", "newObscureLevel", "isFadingIn", "percentage", "closestPercentage", "increment", "alpha", "MaterialUtils", "relativeDistance", "relativeDistancePercentage", "targetObscureLevel", "vec4_create", "obscureVisualParams", "VisualMeshParams", "vec3_create", "VisualMesh", "visible", "PlayerLocomotionTeleportDetectionVisualizerParams", "PlayerLocomotionTeleportDetectionVisualizer", "teleportParams", "teleportRuntimeParams", "detectionRuntimeParams", "quat2_create", "dt", "visualLine", "amount", "i", "visualParams", "VisualLineParams", "VisualLine", "visual", "innerTorusPosition", "vec3_create", "Globals", "vec4_create", "VisualPointParams", "VisualPoint", "VisualArrowParams", "VisualArrow", "VisualTorusParams", "VisualTorus", "visualTorusParams", "innerTorusCenter", "currentPosition", "nextPosition", "playerUp", "upDifference", "showParableDistance", "lastParableIndex", "lastParableIndexDistance", "visuaLine", "currentVisualLineParams", "stepLength", "visualPoint", "visualPointParams", "upDistance", "lineLength", "visualArrowParams", "feetTransformQuat", "feetRotationQuat", "quat_create", "parableFirstPosition", "parableSecondPosition", "parableDirection", "visualPosition", "visualForward", "visualRotationQuat", "currentVisualTeleportTransformQuat", "currentVisualTeleportPosition", "currentVisualTeleportRotationQuat", "differenceRotationQuat", "positionDistance", "rotationAngleDistance", "interpolationFactor", "PlayerLocomotionTeleportParable", "vec3_create", "startPosition", "forward", "up", "speed", "gravity", "stepLength", "positionIndex", "outPosition", "distance", "flatDistance", "maxParableDistance", "forwardPosition", "upPosition", "elapsedTime", "currentPosition", "prevPosition", "i", "currentDistance", "currentIndex", "prevToCurrent", "found", "lengthToRemove", "lengthToAdd", "flatCurrentPosition", "flatStartPosition", "startToCurrentFlat", "distanceOverFlatDistance", "currentFlatDistance", "flatDifference", "angleWithFlat", "cos", "positionByDistance", "flatPositionByDistance", "PlayerLocomotionTeleportState", "State", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "teleportPosition", "feetTransformQuat", "collisionRuntimeParams", "checkTeleportCollisionRuntimeParams", "CollisionCheckBridge", "checkTeleportMovementCollisionRuntimeParams", "CollisionRuntimeParams", "feetRotationQuat", "quat_create", "feetPosition", "vec3_create", "feetUp", "teleportFeetForward", "teleportFeetRotationQuat", "teleportFeetTransformQuat", "quat2_create", "currentFeetPosition", "fixedTeleportPosition", "teleportMovement", "extraVerticalMovement", "movementToTeleportPosition", "movementFeetTransformQuat", "teleportMovementValid", "i", "extraVerticalMovementValue", "playerUp", "newFeetTransformQuat", "newFeetRotationQuat", "teleportRotation", "rotationOnUp", "forceTeleport", "Globals", "InputUtils", "GamepadButtonID", "PlayerLocomotionTeleportDetectionParams", "PhysicsLayerFlags", "vec3_create", "PlayerLocomotionTeleportDetectionRuntimeParams", "PlayerLocomotionTeleportParable", "PlayerLocomotionTeleportDetectionState", "PlayerLocomotionTeleportState", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "PlayerLocomotionTeleportDetectionVisualizer", "dt", "fsm", "confirmTeleport", "XRUtils", "Globals", "GamepadAxesID", "MouseButtonID", "cancelTeleport", "GamepadButtonID", "mousePosition", "mouseDirection", "playerUp", "teleportStartTransformLocal", "quat2_create", "teleportStartTransformWorld", "teleportStartPosition", "teleportDirection", "playerUpNegate", "referenceObject", "parablePosition", "prevParablePosition", "parableFinalPosition", "raycastParams", "RaycastParams", "raycastResult", "RaycastResults", "parableHitPosition", "parableHitNormal", "verticalHitOrigin", "verticalHitDirection", "flatTeleportHorizontalHitNormal", "flatParableHitNormal", "flatParableDirectionNegate", "teleportCollisionRuntimeParams", "CollisionRuntimeParams", "objectsEqualCallback", "first", "second", "startPosition", "direction", "up", "currentPositionIndex", "positionFlatDistance", "positionParableDistance", "objectToIgnore", "maxParableDistance", "PhysicsUtils", "maxParableDistanceOverFlatDistance", "fixedPositionParableDistance", "hitCollisionValid", "bottomCheckMaxLength", "hit", "hitParableDistance", "backwardStep", "vec4_create", "axesVec3", "axesForward", "axesUp", "axes", "rotationOnUp", "checkTeleportCollisionRuntimeParams", "isValid", "distanceToCheck", "feetTransformQuat", "feetRotationQuat", "quat_create", "feetPosition", "differenceOnUpVector", "teleportCheckCollisionRuntimeParams", "teleportPosition", "teleportCheckValid", "groundAngleValid", "MeshComponent", "PlayerLocomotionTeleportTeleportBlinkState", "PlayerLocomotionTeleportState", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "Globals", "MeshComponent", "vec4_create", "FSM", "TimerState", "Timer", "NumberOverFactor", "fsm", "dt", "alpha", "teleport", "PlayerLocomotionTeleportTeleportShiftState", "PlayerLocomotionTeleportState", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "FSM", "Timer", "vec3_create", "fsm", "dt", "distance", "multiplier", "movementToTeleportFeet", "newFeetPosition", "interpolationFactor", "rotationOnUp", "newCurrentRotationOnUp", "PlayerLocomotionTeleportTeleportType", "PlayerLocomotionTeleportTeleportParams", "vec3_create", "EasingFunction", "angle", "PlayerLocomotionTeleportTeleportState", "PlayerLocomotionTeleportState", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "FSM", "PlayerLocomotionTeleportTeleportBlinkState", "PlayerLocomotionTeleportTeleportShiftState", "fsm", "dt", "PlayerLocomotionTeleportParams", "engine", "Globals", "PlayerLocomotionTeleportDetectionParams", "PlayerLocomotionTeleportDetectionVisualizerParams", "PlayerLocomotionTeleportTeleportParams", "Handedness", "PlayerLocomotionTeleportRuntimeParams", "vec3_create", "PlayerLocomotionTeleport", "PlayerLocomotionMovement", "teleportParams", "locomotionRuntimeParams", "PlayerLocomotionTeleportDetectionState", "PlayerLocomotionTeleportTeleportState", "FSM", "dt", "startDetecting", "XRUtils", "MouseButtonID", "axes", "GamepadAxesID", "playerUp", "gravityMovement", "feetTransformQuat", "quat2_create", "CollisionCheckBridge", "PlayerLocomotionDirectionReferenceType", "PlayerLocomotionType", "PlayerLocomotionParams", "engine", "Globals", "Handedness", "PlayerLocomotionTeleportTeleportType", "PhysicsLayerFlags", "PlayerLocomotion", "params", "CollisionCheckParams", "CollisionRuntimeParams", "PlayerLocomotionMovementRuntimeParams", "PlayerHeadManagerParams", "PlayerHeadManager", "PlayerTransformManagerParams", "objectsEqualCallback", "first", "second", "objectToIgnore", "PlayerTransformManagerSyncFlag", "PlayerTransformManager", "PlayerObscureManagerParams", "EasingFunction", "PlayerObscureManager", "PlayerLocomotionRotateParams", "PlayerLocomotionRotate", "InputUtils", "PlayerLocomotionSmoothParams", "PlayerLocomotionSmooth", "PlayerLocomotionTeleportParams", "PlayerLocomotionTeleport", "currentActive", "active", "canStop", "dt", "GamepadButtonID", "idle", "simplifiedParams", "CharacterColliderSetupSimplifiedCreationParams", "physXComponents", "PhysXComponent", "physXComponent", "colliderSetup", "CharacterColliderSetupUtils", "CollisionCheckBridge", "CollisionCheckUtils", "defaultUp", "vec3_create", "flatForward", "angleWithDefaultForward", "FSM", "PlayerLocomotionSmoothParams", "engine", "Globals", "PlayerLocomotionDirectionReferenceType", "Handedness", "PlayerLocomotionSmooth", "PlayerLocomotionMovement", "params", "locomotionRuntimeParams", "vec3_create", "Timer", "directionConverterNonVRParams", "Direction2DTo3DConverterParams", "directionConverterVRParams", "Direction2DTo3DConverter", "XRUtils", "dt", "playerUp", "headMovement", "direction", "directionOnUp", "verticalMovement", "feetTransformQuat", "quat2_create", "directionReferenceTransformQuat", "axes", "GamepadAxesID", "horizontalMovement", "maxSpeed", "GamepadButtonID", "movementIntensity", "slowPercentage", "slidStrength", "InputUtils", "session", "Component", "Property", "PlayerLocomotionComponent", "Component", "CollisionCheckBridge", "params", "PlayerLocomotionParams", "InputUtils", "PlayerLocomotion", "dt", "physicsFlags", "PhysicsLayerFlags", "flags", "i", "__publicField", "Property", "PlayerLocomotionTeleportDetectionState", "playerUp", "vec3_create", "offsetFeetTeleportPosition", "headTeleportPosition", "teleportPosition", "isVisible", "isHeadVisible", "isFeetVisible", "headheight", "standardUp", "standardForward", "referenceUp", "headPosition", "direction", "fixedRight", "fixedForward", "fixedUp", "raycastEndPosition", "raycastParams", "RaycastParams", "raycastResult", "RaycastResults", "objectsEqualCallback", "first", "second", "position", "checkPositions", "distance", "checkPosition", "Globals", "objectToIgnore", "PhysicsUtils", "hit", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "currentDirection", "up", "forward", "tempCheckPosition", "radiusStep", "sliceAngle", "currentStepRotation", "i", "currentRadius", "j", "sliceDirection", "Collider", "CollisionComponent", "Component", "Property", "CursorTarget", "FingerCursorComponent", "Component", "InputUtils", "CollisionComponent", "Collider", "vec3_create", "dt", "Globals", "overlaps", "overlapTarget", "i", "target", "CursorTarget", "InputSourceType", "tip", "XRUtils", "TrackedHandJointID", "__publicField", "Property", "Component", "Property", "SwitchHandObjectComponent", "Component", "InputUtils", "dt", "inputSourceType", "InputSourceType", "__publicField", "Property", "Component", "MeshComponent", "Property", "TrackedHandDrawJointComponent", "Component", "InputUtils", "dt", "mesh", "MeshComponent", "__publicField", "Property", "transformQuat", "quat2_create", "jointPose", "Globals", "Component", "Property", "TrackedHandDrawAllJointsComponent", "Component", "jointIDKey", "TrackedHandJointID", "jointID", "jointObject", "TrackedHandDrawJointComponent", "TrackedHandJointIDIndex", "__publicField", "Property", "Component", "Property", "TrackedHandDrawSkinComponent", "Component", "InputUtils", "dt", "skinJointIDs", "i", "ObjectUtils", "__publicField", "Property", "transformQuat", "quat2_create", "jointObject", "jointID", "jointPose", "Globals", "Component", "Property", "GamepadMeshAnimatorComponent", "Component", "gamepad", "HandednessIndex", "Globals", "GamepadButtonID", "GamepadButtonEvent", "GamepadAxesID", "GamepadAxesEvent", "buttonInfo", "translation", "rotation", "axesInfo", "leftRotation", "forwardRotation", "__publicField", "Property", "upTranslation", "vec3_create", "_mySimultaneousPressMaxDelay", "_mySimultaneousTouchMaxDelay", "setSimultaneousPressMaxDelay", "simultaneousPressMaxDelay", "setSimultaneousTouchMaxDelay", "simultaneousTouchMaxDelay", "getSimultaneousPressMaxDelay", "getSimultaneousTouchMaxDelay", "isAnyButtonPressStart", "gamepadButtonIDsList", "multiplePressCount", "realGamepadButtonIDsList", "gamepadButtonIDs", "key", "GamepadButtonID", "atLeastOneButtonPressStart", "gamepad", "i", "buttonID", "areButtonsPressStart", "areButtonPressedRecently", "button", "isAnyButtonPressEnd", "atLeastOneButtonPressEnd", "areButtonsPressEnd", "areButtonNotPressedRecently", "isAnyButtonTouchStart", "atLeastOneButtonTouchStart", "areButtonsTouchStart", "multipleTouchCount", "areButtonTouchedRecently", "isAnyButtonTouchEnd", "atLeastOneButtonTouchEnd", "areButtonsTouchEnd", "areButtonNotTouchedRecently", "GamepadUtils", "Alignment", "Component", "Justification", "MeshComponent", "Property", "TextComponent", "GamepadControlSchemeComponent", "Component", "Globals", "InputUtils", "Handedness", "dt", "visible", "text", "distanceFromButton", "lineLength", "referenceObject", "vec3_create", "thumbstickPositionLocal", "thumbstickUpLocal", "differenceOnUp", "buttonObject", "startOffset", "endOffset", "parentObject", "buttonPosition", "referenceForward", "referenceRight", "referenceUp", "lineStart", "lineEnd", "textOffset", "textPosition", "start", "end", "lineDirection", "length", "lineParentObject", "lineObject", "lineMesh", "MeshComponent", "thickness", "position", "forward", "up", "textObject", "textComponent", "TextComponent", "Alignment", "Justification", "__publicField", "Property", "VirtualGamepadGamepadCore", "GamepadCore", "virtualGamepad", "handPose", "buttonID", "axesID", "VirtualGamepadIconType", "VirtualGamepadIconParams", "VirtualGamepadIcon", "iconElementParent", "iconParams", "minSizeMultiplier", "scale", "engine", "Globals", "dt", "pressed", "enabled", "value", "VirtualGamepadButtonParams", "VirtualGamepadIconParams", "VirtualGamepadThumbstickParams", "VirtualGamepadParams", "engine", "Globals", "Handedness", "GamepadButtonID", "GamepadAxesID", "backgroundColor", "iconColor", "buttonHoveredBrightness", "thumbstickHoveredBrightness", "thumbstickIncludeBackgroundToDetection", "handedness", "gamepadButtonID", "buttonParams", "VirtualGamepadIconType", "gamepadAxesID", "thumbstickParams", "VirtualGamepadVirtualButton", "buttonElementParent", "virtualGamepadParams", "virtualButtonHandedness", "virtualButtonIndex", "gamepadButtonHandedness", "gamepadButtonID", "Globals", "active", "hoverActive", "dt", "stopPropagatingPointerDownEvents", "event", "buttonSize", "buttonsRingRadius", "thumbstickSize", "marginBottom", "marginLeft", "marginRight", "buttonRingStartAngle", "buttonRingEndAngle", "minSizeMultiplier", "buttonsAmount", "Handedness", "angleStep", "currentAngle", "counterAngle", "centerOnThumbstickBottom", "centerOnThumbstickLeft", "centerOnThumbstickRight", "VirtualGamepadIcon", "buttonElementStill", "buttonDetectionElementSVG", "buttonDetectionElement", "value", "VirtualGamepadVirtualThumbstick", "thumbstickElementParent", "virtualGamepadParams", "virtualThumbstickHandedness", "gamepadThumbstickHandedness", "gamepadAxesID", "vec2_create", "Globals", "active", "hoverActive", "dt", "stopPropagatingPointerDownEvents", "event", "mouseX", "mouseY", "maxDistanceFromCenter", "xDiff", "yDiff", "angle", "distanceFromDragStart", "translateThumbstickX", "translateThumbstickY", "thumbstickSize", "marginBottom", "marginLeft", "marginRight", "minSizeMultiplier", "Handedness", "thumbstickContainerSVG", "VirtualGamepadIcon", "thumbstickBackgroundDetectionElementSVG", "thumbstickBackgroundDetectionElement", "thumbstickElementStill", "thumbstickDetectionElementSVG", "thumbstickDetectionElement", "value", "VirtualGamepad", "params", "VirtualGamepadParams", "Handedness", "GamepadButtonID", "GamepadAxesID", "visible", "handedness", "gamepadButtonID", "button", "gamepadAxesID", "thumbstick", "outAxes", "vec2_create", "currentVisible", "dt", "XRUtils", "BrowserUtils", "Globals", "leftDiv", "rightDiv", "buttonsAmount", "i", "gamepadButtonHandedness", "thumbsticksAmount", "gamepadThumbstickHandedness", "buttonElementParent", "virtualButtonHandedness", "virtualButtonIndex", "virtualGamepadVirtualButton", "VirtualGamepadVirtualButton", "thumbstickElementParent", "virtualThumbstickHandedness", "virtualGamepadVirtualThumbstick", "VirtualGamepadVirtualThumbstick", "value", "minSizeMultiplier", "anyElementPressed", "hoverActive", "Component", "Property", "VirtualGamepadComponent", "Component", "params", "VirtualGamepadParams", "handedness", "gamepadButtonID", "buttonParams", "gamepadAxesID", "thumbstickParams", "VirtualGamepad", "dt", "VirtualGamepadGamepadCore", "Globals", "Handedness", "GamepadButtonID", "__publicField", "Property", "Component", "Property", "SetPlayerHeightComponent", "Component", "localPosition", "vec3_create", "XRUtils", "__publicField", "Property", "Component", "Property", "SetHandLocalTransformComponent", "Component", "InputUtils", "Globals", "__publicField", "Property", "handPoseTransform", "quat2_create", "pose", "XRUtils", "Component", "SetHeadLocalTransformComponent", "Component", "Globals", "dt", "__publicField", "cameraNonXRRotation", "quat_create", "cameraNonXRUp", "vec3_create", "cameraNonXRPosition", "XRUtils", "cameraNonXR", "headPoseTransform", "quat2_create", "pose", "Component", "Property", "SetTrackedHandJointLocalTransformComponent", "Component", "InputUtils", "Globals", "__publicField", "Property", "jointPoseTransform", "quat2_create", "pose", "XRUtils", "Component", "Property", "CopyHandTransformComponent", "Component", "InputUtils", "dt", "hand", "Globals", "__publicField", "Property", "Component", "CopyHeadTransformComponent", "Component", "dt", "head", "Globals", "__publicField", "Component", "CopyPlayerTransformComponent", "Component", "dt", "player", "Globals", "__publicField", "Component", "CopyReferenceSpaceTransformComponent", "Component", "dt", "referenceSpace", "Globals", "__publicField", "ToolHandedness", "ToolInputSourceType", "Component", "MeshComponent", "Property", "ViewComponent", "Cursor", "CursorTarget", "ToolCursorComponent", "Component", "InputUtils", "vec3_create", "vec4_create", "cursorMeshComponent", "MeshComponent", "Globals", "Cursor", "ViewComponent", "fingerCursorMeshObject", "fingerCollisionSize", "meshComponent", "FingerCursorComponent", "dt", "usingHand", "XRUtils", "i", "input", "object", "targetComponent", "CursorTarget", "__publicField", "Property", "transformQuat", "quat2_create", "Alignment", "Collider", "Justification", "ConsoleVRWidgetConsoleFunction", "ConsoleVRWidgetSender", "ConsoleVRWidgetPulseOnNewMessage", "ConsoleVRWidgetMessageType", "ConsoleVRWidgetConfig", "vec4_create", "Collider", "Alignment", "Justification", "ConsoleVRWidgetMessageType", "vec3_create", "xPaddingPercentage", "yPaddingPercentage", "xPosition", "yPosition", "numberOfButtons", "buttonsHorizontalSpace", "numberOfSpacesBetweenButtons", "spaceWidth", "halfButtonWidth", "initialPosition", "ToolHandedness", "spaceBetweenMessagesAndButtons", "pointerCollisionHalfHeight", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "ConsoleVRWidgetUI", "engine", "Globals", "parentObject", "config", "params", "XRUtils", "visible", "key", "ConsoleVRWidgetMessageType", "messagesBackgroundMeshComp", "MeshComponent", "textComp", "TextComponent", "CursorTarget", "CollisionComponent", "buttonBackgroundMeshComp", "buttonTextComp", "buttonCursorTargetComp", "buttonCollisionComp", "collisionComp", "textComponent", "ToolHandedness", "Emitter", "Alignment", "Collider", "Justification", "WidgetFrameConfig", "widgetLetterID", "buttonsColumnIndex", "vec4_create", "Collider", "Alignment", "Justification", "vec3_create", "distanceBetweenToolsVisibilityButtons", "buttonXOffset", "ToolHandedness", "distanceBetweenFlagButtons", "pinFlagIndex", "pinButtonYOffset", "ToolInputSourceType", "quat_create", "defaultObjectTransforms", "inputSourceTypeKey", "inputSourceType", "handednessKey", "handedness", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "WidgetFrameUI", "engine", "Globals", "parentObject", "config", "params", "XRUtils", "visible", "pinned", "dt", "forceRefreshObjectsTransforms", "inputSourceType", "InputUtils", "vec3_create", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "textComponent", "ToolInputSourceType", "ToolHandedness", "WidgetParams", "ToolHandedness", "WidgetFrame", "widgetLetterID", "buttonsColumnIndex", "engine", "Globals", "WidgetFrameConfig", "WidgetFrameUI", "Emitter", "visible", "id", "listener", "parentObject", "params", "dt", "ui", "isButton", "notify", "textMaterial", "backgroundMaterial", "material", "_myConsoleOriginalLog", "_myConsoleOriginalError", "_myConsoleOriginalWarn", "_myConsoleOriginalInfo", "_myConsoleOriginalDebug", "_myConsoleOriginalAssert", "_myConsoleOriginalClear", "log", "args", "ConsoleOriginalFunctions", "error", "warn", "info", "debug", "assert", "clear", "getLog", "getError", "getWarn", "getInfo", "getDebug", "getAssert", "getClear", "ConsoleVRWidgetParams", "WidgetParams", "ConsoleVRWidgetPulseOnNewMessage", "ConsoleVRWidgetMessage", "messageType", "messageLines", "message", "countString", "text", "ConsoleVRWidget", "engine", "Globals", "WidgetFrame", "ConsoleVRWidgetConfig", "ConsoleVRWidgetUI", "key", "ConsoleVRWidgetMessageType", "visible", "parentObject", "params", "dt", "ConsoleVRWidgetConsoleFunction", "ConsoleVRWidgetSender", "errorEvent", "consoleText", "linesCount", "i", "scrollLinesToSkip", "linesToSkip", "additionalEmptyLines", "emptyLinesToSkip", "emptyLinesToShow", "j", "linesToShow", "error", "consoleFunction", "sender", "args", "errorMessage", "ConsoleOriginalFunctions", "formattedText", "lines", "stringifiedArgs", "item", "stringifiedItem", "linesBetweenItems", "cache", "value", "messageText", "linesToSplit", "lineToSplit", "spacesAtStart", "spaceToAdd", "lineSplits", "firstSub", "secondSub", "spaces", "hasSameInfoAsPrev", "lastMessage", "maxScroll", "ui", "cursorTarget", "backgroundMaterial", "textMaterial", "filterTextMaterial", "codeDrivenClear", "active", "material", "GamepadButtonID", "axes", "ToolHandedness", "GamepadAxesID", "normalizedScrollAmount", "pulseType", "array", "builtInArray", "element", "arrayPrototypesToExtend", "enabled", "arrayCopy", "stringifiedArray", "ConsoleVR", "args", "ConsoleOriginalFunctions", "forwardToBrowserConsole", "Component", "Property", "Component", "Property", "InitConsoleVRComponent", "Component", "Globals", "ConsoleVR", "__publicField", "Property", "ConsoleVRToolComponent", "Component", "InitConsoleVRComponent", "ConsoleVRWidget", "Globals", "params", "ConsoleVRWidgetParams", "dt", "__publicField", "Property", "Emitter", "_mySetWidgetCurrentVariableCallbacks", "_myRefreshWidgetCallbacks", "setWidgetCurrentVariable", "variableName", "engine", "Globals", "callback", "refreshWidget", "importVariables", "fileURL", "resetVariablesDefaultValueOnImport", "onSuccessCallback", "onFailureCallback", "clipboard", "EasyTuneUtils", "reason", "replacedFileURL", "_importExportVariablesReplaceFileURLParams", "response", "text", "exportVariables", "jsonVariables", "addSetWidgetCurrentVariableCallback", "id", "removeSetWidgetCurrentVariableCallback", "addRefreshWidgetCallback", "removeRefreshWidgetCallback", "params", "i", "urlSearchParams", "param", "searchParamValue", "EasyTuneVariableType", "EasyTuneVariable", "name", "type", "onValueChangedEventListener", "showOnWidget", "engine", "Globals", "Emitter", "widgetCurrentVariable", "value", "resetDefaultValue", "valueChanged", "EasyTuneUtils", "valueJSON", "id", "listener", "EasyTuneVariableArray", "EasyTuneNumberArray", "decimalPlaces", "stepPerSecond", "min", "max", "editAllValuesTogether", "clampedValue", "clampedDefaultValue", "EasyTuneNumber", "EasyTuneInt", "EasyTuneIntArray", "roundedValue", "i", "EasyTuneBoolArray", "EasyTuneBool", "EasyTuneTransform", "scaleAsOne", "positionStepPerSecond", "rotationStepPerSecond", "scaleStepPerSecond", "decimalPlacesMultiplier", "mat4_create", "Component", "Property", "Emitter", "EasyTuneBaseWidgetParams", "EasyTuneBaseWidget", "params", "Emitter", "Timer", "visible", "variable", "appendToVariableName", "active", "scrollDirection", "otherEasyTuneWidget", "id", "listener", "parentObject", "easyTuneParams", "dt", "name", "ui", "skipForceScroll", "forceScroll", "oldScrollDirection", "amount", "material", "Emitter", "EasyTuneBaseArrayWidgetSelector", "params", "gamepad", "engine", "Globals", "Emitter", "variable", "appendToVariableName", "widget", "visible", "active", "scrollDirection", "id", "listener", "parentObject", "easyTuneParams", "dt", "amount", "arraySize", "Alignment", "Collider", "Justification", "EasyTuneBaseWidgetConfig", "vec4_create", "Collider", "Alignment", "Justification", "vec3_create", "ToolHandedness", "maxX", "minX", "maxY", "minY", "EasyTuneBoolArrayWidgetConfig", "EasyTuneBaseWidgetConfig", "arraySize", "valuePanelLastPosition", "vec3_create", "i", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "EasyTuneBaseWidgetUI", "engine", "Globals", "parentObject", "config", "params", "XRUtils", "visible", "MeshComponent", "TextComponent", "CursorTarget", "CollisionComponent", "textComponent", "ToolHandedness", "EasyTuneBoolArrayWidgetUI", "EasyTuneBaseWidgetUI", "engine", "visible", "i", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "EasyTuneBoolArrayWidget", "EasyTuneBaseWidget", "params", "arraySize", "gamepad", "engine", "Globals", "EasyTuneBoolArrayWidgetConfig", "EasyTuneBoolArrayWidgetUI", "i", "parentObject", "easyTuneParams", "dt", "stickVariableIntensity", "GamepadAxesID", "valueIntensity", "ui", "index", "value", "text", "enabled", "originalScale", "EasyTuneBoolArrayWidgetSelector", "EasyTuneBaseArrayWidgetSelector", "arraySize", "EasyTuneBoolArrayWidget", "EasyTuneWidgetConfig", "ToolHandedness", "EasyTuneNoneWidgetConfig", "EasyTuneBaseWidgetConfig", "vec3_create", "TextComponent", "EasyTuneNoneWidgetUI", "EasyTuneBaseWidgetUI", "engine", "TextComponent", "EasyTuneNoneWidget", "EasyTuneBaseWidget", "params", "engine", "Globals", "EasyTuneNoneWidgetConfig", "EasyTuneNoneWidgetUI", "EasyTuneNumberArrayWidgetConfig", "EasyTuneBaseWidgetConfig", "arraySize", "vec3_create", "i", "valuePanelLastPosition", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "EasyTuneNumberArrayWidgetUI", "EasyTuneBaseWidgetUI", "engine", "visible", "i", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "EasyTuneNumberArrayWidget", "EasyTuneBaseWidget", "params", "arraySize", "gamepad", "engine", "Globals", "EasyTuneNumberArrayWidgetConfig", "EasyTuneNumberArrayWidgetUI", "i", "parentObject", "easyTuneParams", "dt", "stickVariableIntensity", "y", "GamepadAxesID", "normalizedEditAmount", "valueIntensity", "amountToAdd", "decimalPlacesMultiplier", "difference", "stepIntensity", "ui", "index", "value", "text", "enabled", "step", "originalScale", "EasyTuneNumberArrayWidgetSelector", "EasyTuneBaseArrayWidgetSelector", "arraySize", "EasyTuneNumberArrayWidget", "EasyTuneTransformWidgetConfig", "EasyTuneBaseWidgetConfig", "vec3_create", "distanceBetweenComponents", "distanceFromVariableLabel", "i", "valuePanelLastPosition", "CollisionComponent", "MeshComponent", "TextComponent", "CursorTarget", "EasyTuneTransformWidgetUI", "EasyTuneBaseWidgetUI", "engine", "visible", "i", "TextComponent", "CursorTarget", "CollisionComponent", "MeshComponent", "EasyTuneTransformWidget", "EasyTuneBaseWidget", "params", "gamepad", "engine", "Globals", "EasyTuneTransformWidgetConfig", "EasyTuneTransformWidgetUI", "mat4_create", "vec3_create", "i", "parentObject", "easyTuneParams", "dt", "stickVariableIntensity", "y", "GamepadAxesID", "normalizedEditAmount", "valueIntensity", "amountToAdd", "decimalPlacesMultiplier", "difference", "stepIntensity", "stepValue", "ui", "componentIndex", "index", "value", "text", "enabled", "defaultValue", "step", "originalScale", "EasyTuneWidgetParams", "WidgetParams", "EasyTuneWidget", "engine", "Globals", "WidgetFrame", "EasyTuneWidgetConfig", "variableName", "visible", "parentObject", "params", "easyTuneVariables", "ToolHandedness", "dt", "widgetParams", "EasyTuneBaseWidgetParams", "EasyTuneVariableType", "EasyTuneNoneWidget", "EasyTuneNumberArrayWidgetSelector", "EasyTuneBoolArrayWidgetSelector", "EasyTuneTransformWidget", "widget", "prevWidget", "GamepadButtonID", "x", "GamepadAxesID", "y", "amount", "variableIndex", "newIndex", "indexString", "index", "length", "variable", "names", "validNames", "name", "EasyTuneToolComponent", "Component", "InitEasyTuneVariablesComponent", "EasyTuneWidget", "EasyTuneUtils", "variableName", "Globals", "params", "EasyTuneWidgetParams", "onSuccessCallback", "onFailureCallback", "dt", "__publicField", "Property", "Component", "Property", "EasyTuneImportVariablesComponent", "Component", "dt", "EasyTuneUtils", "__publicField", "Property", "EasyObjectTuner", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "Globals", "variableNamePrefix", "objectName", "easyTuneVariable", "EasyTuneUtils", "dt", "value", "LightComponent", "EasyLightAttenuation", "EasyObjectTuner", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "EasyTuneNumber", "value", "attenuation", "light", "LightComponent", "LightComponent", "EasyLightColor", "EasyObjectTuner", "colorModel", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "nameFirstPart", "EasyTuneIntArray", "color", "lightColor", "ColorUtils", "vec3_create", "value", "light", "LightComponent", "Globals", "GamepadButtonID", "hsvColor", "rgbColor", "MeshComponent", "EasyMeshColor", "EasyObjectTuner", "colorModel", "colorType", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "nameFirstPart", "EasyTuneNumberArray", "EasyTuneIntArray", "color", "meshMaterial", "ColorUtils", "vec4_create", "value", "Globals", "GamepadButtonID", "hsvColor", "rgbColor", "material", "mesh", "MeshComponent", "EasyScale", "EasyObjectTuner", "local", "scaleAsOne", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "EasyTuneNumberArray", "vec3_create", "value", "EasyTransform", "EasyObjectTuner", "local", "scaleAsOne", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "EasyTuneTransform", "mat4_create", "value", "MeshComponent", "EasyMeshAmbientFactor", "EasyObjectTuner", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "nameFirstPart", "EasyTuneNumber", "ambientFactor", "meshMaterial", "value", "material", "mesh", "MeshComponent", "TextComponent", "EasyTextColor", "EasyObjectTuner", "colorModel", "colorType", "object", "variableName", "setAsWidgetCurrentVariable", "useTuneTarget", "engine", "nameFirstPart", "EasyTuneIntArray", "color", "textMaterial", "ColorUtils", "vec4_create", "value", "Globals", "GamepadButtonID", "hsvColor", "rgbColor", "material", "text", "TextComponent", "Component", "Property", "EasyLightAttenuationComponent", "Component", "Globals", "EasyLightAttenuation", "dt", "__publicField", "Property", "Component", "Property", "EasyLightColorComponent", "Component", "Globals", "EasyLightColor", "dt", "__publicField", "Property", "Component", "Property", "EasyMeshAmbientFactorComponent", "Component", "Globals", "EasyMeshAmbientFactor", "dt", "targetObject", "ComponentUtils", "__publicField", "Property", "Component", "Property", "EasyMeshColorComponent", "Component", "Globals", "EasyMeshColor", "dt", "targetObject", "ComponentUtils", "__publicField", "Property", "Component", "Property", "EasyScaleComponent", "Component", "Globals", "EasyScale", "dt", "__publicField", "Property", "Component", "Property", "EasySetTuneTargetChildNumberComponent", "Component", "Globals", "childrenCount", "min", "max", "EasyTuneUtils", "dt", "easyTuneVariable", "childIndex", "__publicField", "Property", "Component", "EasySetTuneTargeetGrabComponent", "Component", "Globals", "GrabberHandComponent", "grabber", "grabbable", "__publicField", "Component", "Property", "EasyTextColorComponent", "Component", "Globals", "EasyTextColor", "dt", "__publicField", "Property", "Component", "Property", "EasyTransformComponent", "Component", "Globals", "EasyTransform", "dt", "targetObject", "ComponentUtils", "__publicField", "Property"]
}
